begin_compilation
  name " HotSpotCompilation-2540[java.util.regex.Pattern$GroupHead.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-2540[java.util.regex.Pattern$GroupHead.match(Matcher, int, CharSequence)]"
  date 1527005147991
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a2475 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a2475  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$GroupHead;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2556 ?62 ?12 v2559 ?2245 ?23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2606 ?87 ?12 v1502 ?2250 v2605 ?2245 ?23 ?190 ?62 ?641 v1493 ?46 v2555 v2562 v2586 v2604 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1146 ?12 v1502 i54 v39 v199 v2565 ?46 ?87 v195 v1183 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?12 v1502 v1493 v2563 ?641 ?46 ?87 v2613 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4658
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 - - 
=== Succesors ===
=== Usages ===
v2260 a2475 i2476 v2479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2475 a2552 a2519 a2538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2555 
=== Succesors ===
next: i2476 
=== Usages ===
a1119 v2557 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2555 #next: i2476  <|@  <|@
f <@~|@floating>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2475 
=== Succesors ===
=== Usages ===
i2476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2557 
=== Succesors ===
next: i2477 
=== Usages ===
v1139 
=== Predecessor ===
a2475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2557 #next: i2477  <|@  <|@
f <@~|@floating>@ <|@
tid v2556 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2477 i2554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2556 
=== Succesors ===
next: v1639 
=== Usages ===
v1139 v2558 
=== Predecessor ===
i2476 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2556 #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2477 
y: i2476 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2477 y: i2476  <|@  <|@
f <@~|@floating>@ <|@
tid a2257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2260 v2376 v2272 v2354 v2320 v2344 v2328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1139 
=== Succesors ===
trueSuccessor: v1636 
falseSuccessor: v1638 
=== Usages ===
=== Predecessor ===
i2477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1139 #trueSuccessor: v1636 #falseSuccessor: v1638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B133" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2478 
=== Usages ===
i2480 v1146 
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2478  <|@  <|@
f <@~|@floating>@ <|@
tid v2559 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2559 
=== Succesors ===
next: v2479 
=== Usages ===
a1149 v2612 v2566 v2581 v2582 
=== Predecessor ===
v1636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2559 #next: v2479  <|@  <|@
f <@~|@floating>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
v2479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2612 
=== Succesors ===
next: i2480 
=== Usages ===
v2610 v2448 
=== Predecessor ===
a2478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2612 #next: i2480  <|@  <|@
f <@~|@floating>@ <|@
tid a1119 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2475 
=== Succesors ===
=== Usages ===
v2558 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2475  <|@  <|@
f <@~|@floating>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1119 
index: i2477 
=== Succesors ===
=== Usages ===
v1146 i2480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1119 index: i2477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1636 
address: v2558 
=== Succesors ===
next: v1146 
=== Usages ===
?12 ?2245 v1166 ?62 ?23 
=== Predecessor ===
v2479 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1636 address: v2558 #next: v1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1636 
address: v2558 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
i2480 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1636 address: v2558 value: i3 stateAfter: - lastLocationAccess: - #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2448 v2453 v2455 v2457 v2459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2479 
y: v2447 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2479 y: v2447  <|@  <|@
f <@~|@floating>@ <|@
tid a1149 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2478 
=== Succesors ===
=== Usages ===
?762 v1502 ?46 ?308 ?859 ?87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2478  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.7364554760601777
=== Inputs ===
condition: v2448 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v1146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2448 #trueSuccessor: v29 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B131" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2481 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2481  <|@  <|@
f <@~|@floating>@ <|@
tid v2562 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2562 
=== Succesors ===
next: v1647 
=== Usages ===
v39 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2562 #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2481 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2481  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i2480 - 
=== Succesors ===
=== Usages ===
v2272 v2482 i2484 v2487 v2491 v2495 v2499 v2503 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i2480 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v1644 
falseSuccessor: v1646 
=== Usages ===
=== Predecessor ===
i2481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v1644 #falseSuccessor: v1646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B130" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2482 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2482  <|@  <|@
f <@~|@floating>@ <|@
tid v2613 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v2482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2613 
=== Succesors ===
next: v1655 
=== Usages ===
v2450 
=== Predecessor ===
v1644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2613 #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2482 
y: v2449 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2482 y: v2449  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2450 
=== Succesors ===
trueSuccessor: v1652 
falseSuccessor: v1654 
=== Usages ===
=== Predecessor ===
v2482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2450 #trueSuccessor: v1652 #falseSuccessor: v1654  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 ?859 v195 v77 v672 v169 v191 v298 ?591 v371 ?322 v436 ?399 ?464 v563 ?46 ?190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i47 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v1658 
falseSuccessor: v1656 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v1658 #falseSuccessor: v1656  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2275 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2275  <|@  <|@
f <@~|@floating>@ <|@
tid i2276 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -300051
stableDimension: 0
stamp: i32 [-300051] â‡Š00000000fffb6bed â‡ˆ00000000fffb6bed
stampKind: i32
value: int[-300051|0xfffffffffffb6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B129" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2483 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2483  <|@  <|@
f <@~|@floating>@ <|@
tid v2563 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a2483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2563 
=== Succesors ===
next: i2484 
=== Usages ===
a1175 v2564 
=== Predecessor ===
v1656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2563 #next: i2484  <|@  <|@
f <@~|@floating>@ <|@
tid v2564 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2483 
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2564 
=== Succesors ===
next: v1667 
=== Usages ===
v199 v1183 
=== Predecessor ===
a2483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2564 #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2484 
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v1664 
falseSuccessor: v1666 
=== Usages ===
=== Predecessor ===
i2484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v1664 #falseSuccessor: v1666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B128" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1671 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2484 
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i2484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1183 
=== Succesors ===
trueSuccessor: v1668 
falseSuccessor: v1670 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1183 #trueSuccessor: v1668 #falseSuccessor: v1670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B127" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2485 
=== Usages ===
i2485 
=== Predecessor ===
v1671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2485  <|@  <|@
f <@~|@floating>@ <|@
tid a1175 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2483 
=== Succesors ===
=== Usages ===
v2565 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2483  <|@  <|@
f <@~|@floating>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1175 
index: i3 
=== Succesors ===
=== Usages ===
i2485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1175 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1668 
address: v2565 
=== Succesors ===
next: v1675 
=== Usages ===
i1191 j1514 v1625 v1627 j2473 v2474 
=== Predecessor ===
v1668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1668 address: v2565 #next: v1675  <|@  <|@
f <@~|@floating>@ <|@
tid i1624 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2485 
y: i1624 
=== Succesors ===
=== Usages ===
v1675 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2485 y: i1624  <|@  <|@
f <@*|@fixed>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1625 
=== Succesors ===
trueSuccessor: v1672 
falseSuccessor: v1674 
=== Usages ===
=== Predecessor ===
i2485 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1625 #trueSuccessor: v1672 #falseSuccessor: v1674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2486 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2486  <|@  <|@
f <@~|@floating>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
a2486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2566 
=== Succesors ===
next: v2487 
=== Usages ===
?322 v2614 v2567 v2568 ?381 v2635 
=== Predecessor ===
v1672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2566 #next: v2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
v2487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2614 
=== Succesors ===
next: v148 
=== Usages ===
v2453 v2452 
=== Predecessor ===
a2486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2614 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2452 v2454 v2456 v2458 v2460 v2461 v2467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2487 
y: v2451 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2487 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
i2488 a2490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2480 - 
=== Succesors ===
=== Usages ===
?194 ?46 ?87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2480 -  <|@  <|@
f <@~|@floating>@ <|@
tid i1191 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2485 
=== Succesors ===
=== Usages ===
v1379 v578 v491 v487 ?308 ?762 v234 ?46 ?87 ?859 v238 ?573 ?381 v614 v351 ?322 ?464 v455 v347 v390 v451 ?446 v1264 v386 ?399 v618 v1257 ?591 v582 v1284 v1243 ?2246 v1250 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2485  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: a1149 a2 i3 a4 i1191 
=== Succesors ===
=== Usages ===
?308 ?859 ?762 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: a1149 a2 i3 a4 i1191  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: - - - - - 
=== Succesors ===
=== Usages ===
?2250 ?641 ?190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2582 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
a2517 a2536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2469 v2471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 43]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 i680 i54 i765 i184 i25 i765 v247 i765 i765 i765 i765 i765 i765 i765 i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i3 
y: i60 
=== Succesors ===
=== Usages ===
v1493 v1492 v1365 v1456 ?641 v1467 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v2586 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2523 a2542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2465 v2470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1626 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] â‡Š0000000000000100 â‡ˆ0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1627 v2474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2463 v2466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2452 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v2487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2452 #trueSuccessor: v141 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600305160439790685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2488 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2567 
=== Succesors ===
next: v237 
=== Usages ===
v234 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2567 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2488 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2488  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
i2488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B62" 
    xhandlers
    flags 
    probability 4576291274224412830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2489 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2489  <|@  <|@
f <@~|@floating>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
i2489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2568 
=== Succesors ===
next: v1683 
=== Usages ===
v238 
=== Predecessor ===
v236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2568 #next: v1683  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2489 
y: i1191 
=== Succesors ===
=== Usages ===
v1683 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2489 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v1682 
falseSuccessor: v1680 
=== Usages ===
=== Predecessor ===
i2489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v1682 #falseSuccessor: v1680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2291 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2291  <|@  <|@
f <@~|@floating>@ <|@
tid i2292 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -307731
stableDimension: 0
stamp: i32 [-307731] â‡Š00000000fffb4ded â‡ˆ00000000fffb4ded
stampKind: i32
value: int[-307731|0xfffffffffffb4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B126" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1687 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1687  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2487 
y: v2447 
=== Succesors ===
=== Usages ===
v1687 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2487 y: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2453 
=== Succesors ===
trueSuccessor: v1684 
falseSuccessor: v1686 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2453 #trueSuccessor: v1684 #falseSuccessor: v1686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2490 
=== Usages ===
=== Predecessor ===
v1687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2567 
=== Succesors ===
next: v2491 
=== Usages ===
?399 v2615 v2569 v2570 ?446 v2634 
=== Predecessor ===
v1684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2567 #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2490 
=== Succesors ===
=== Usages ===
v2491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2615 
=== Succesors ===
next: v335 
=== Usages ===
v2455 v2454 
=== Predecessor ===
a2490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2615 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2491 
y: v2451 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2491 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2569 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2490 
=== Succesors ===
=== Usages ===
i2492 a2494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2490  <|@  <|@
tid ?308 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: a1149 i1191 
=== Succesors ===
=== Usages ===
?381 ?322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1149 i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2454 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2454 #trueSuccessor: v328 #falseSuccessor: v334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595801421502729024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2492 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2569 
=== Succesors ===
next: v389 
=== Usages ===
v386 
=== Predecessor ===
v328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2569 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2492 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2492  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
i2492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571787566702205055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2493 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2493  <|@  <|@
f <@~|@floating>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2490 
=== Succesors ===
=== Usages ===
i2493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2570 
=== Succesors ===
next: v1695 
=== Usages ===
v390 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2570 #next: v1695  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2493 
y: i1191 
=== Succesors ===
=== Usages ===
v1695 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2493 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v1694 
falseSuccessor: v1692 
=== Usages ===
=== Predecessor ===
i2493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v1694 #falseSuccessor: v1692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2297 
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2297  <|@  <|@
f <@~|@floating>@ <|@
tid i2298 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310291
stableDimension: 0
stamp: i32 [-310291] â‡Š00000000fffb43ed â‡ˆ00000000fffb43ed
stampKind: i32
value: int[-310291|0xfffffffffffb43ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B100" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B125" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1699 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1699  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2491 
y: v2447 
=== Succesors ===
=== Usages ===
v1699 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2491 y: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2455 
=== Succesors ===
trueSuccessor: v1696 
falseSuccessor: v1698 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2455 #trueSuccessor: v1696 #falseSuccessor: v1698  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2494 
=== Usages ===
=== Predecessor ===
v1699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2569 
=== Succesors ===
next: v2495 
=== Usages ===
?464 v2616 v2571 v2572 ?573 v2633 
=== Predecessor ===
v1696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2569 #next: v2495  <|@  <|@
f <@~|@floating>@ <|@
tid v2616 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2494 
=== Succesors ===
=== Usages ===
v2495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2616 
=== Succesors ===
next: v412 
=== Usages ===
v2457 v2456 
=== Predecessor ===
a2494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2616 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2495 
y: v2451 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2495 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2571 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2494 
=== Succesors ===
=== Usages ===
i2496 a2498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2494  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?308 
values: a2486 i1191 
=== Succesors ===
=== Usages ===
?446 ?2249 ?399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?308 values: a2486 i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2456 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
v2495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2456 #trueSuccessor: v405 #falseSuccessor: v411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591297682568592980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2496 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2571 
=== Succesors ===
next: v454 
=== Usages ===
v451 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2571 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2496 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2496  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
i2496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v452 #falseSuccessor: v453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4567283859182263158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2497 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2497  <|@  <|@
f <@~|@floating>@ <|@
tid v2572 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2494 
=== Succesors ===
=== Usages ===
i2497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2572 
=== Succesors ===
next: v1707 
=== Usages ===
v455 
=== Predecessor ===
v453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2572 #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2497 
y: i1191 
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2497 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v1706 
falseSuccessor: v1704 
=== Usages ===
=== Predecessor ===
i2497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v1706 #falseSuccessor: v1704  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2303 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2303  <|@  <|@
f <@~|@floating>@ <|@
tid i2304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -312851
stableDimension: 0
stamp: i32 [-312851] â‡Š00000000fffb39ed â‡ˆ00000000fffb39ed
stampKind: i32
value: int[-312851|0xfffffffffffb39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B100" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B124" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1711 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1711  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2495 
y: v2447 
=== Succesors ===
=== Usages ===
v1711 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2495 y: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2457 
=== Succesors ===
trueSuccessor: v1708 
falseSuccessor: v1710 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2457 #trueSuccessor: v1708 #falseSuccessor: v1710  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2498 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2571 
=== Succesors ===
next: v2499 
=== Usages ===
?591 v2617 v2573 v2574 ?2246 v2632 
=== Predecessor ===
v1708 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2571 #next: v2499  <|@  <|@
f <@~|@floating>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2498 
=== Succesors ===
=== Usages ===
v2499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2617 
=== Succesors ===
next: v477 
=== Usages ===
v2459 v2458 
=== Predecessor ===
a2498 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2617 #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2499 
y: v2451 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2499 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2573 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2498 
=== Succesors ===
=== Usages ===
i2500 a2502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2498  <|@  <|@
tid ?446 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?381 
values: a2490 i1191 
=== Succesors ===
=== Usages ===
?573 ?2248 ?464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: a2490 i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2458 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v2499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2458 #trueSuccessor: v470 #falseSuccessor: v476  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586793943637382491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2500 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2573 
=== Succesors ===
next: v490 
=== Usages ===
v487 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2573 #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2500 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2500  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v488 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i2500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v488 #falseSuccessor: v489  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4562780151664587093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v908  <|@  <|@
f <@*|@fixed>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2501 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2501  <|@  <|@
f <@~|@floating>@ <|@
tid v2574 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2498 
=== Succesors ===
=== Usages ===
i2501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2574 
=== Succesors ===
next: v1719 
=== Usages ===
v491 
=== Predecessor ===
v489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2574 #next: v1719  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2501 
y: i1191 
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2501 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v1718 
falseSuccessor: v1716 
=== Usages ===
=== Predecessor ===
i2501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v1718 #falseSuccessor: v1716  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2309 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2309  <|@  <|@
f <@~|@floating>@ <|@
tid i2310 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315411
stableDimension: 0
stamp: i32 [-315411] â‡Š00000000fffb2fed â‡ˆ00000000fffb2fed
stampKind: i32
value: int[-315411|0xfffffffffffb2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1718 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B100" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B123" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1723  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2499 
y: v2447 
=== Succesors ===
=== Usages ===
v1723 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2499 y: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2459 
=== Succesors ===
trueSuccessor: v1720 
falseSuccessor: v1722 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2459 #trueSuccessor: v1720 #falseSuccessor: v1722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2502 
=== Usages ===
=== Predecessor ===
v1723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2573 
=== Succesors ===
next: v2503 
=== Usages ===
a1236 v2618 v2575 v2576 
=== Predecessor ===
v1720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2573 #next: v2503  <|@  <|@
f <@~|@floating>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2502 
=== Succesors ===
=== Usages ===
v2503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2618 
=== Succesors ===
next: v604 
=== Usages ===
v2460 
=== Predecessor ===
a2502 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2618 #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2503 
y: v2451 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2503 y: v2451  <|@  <|@
tid ?573 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: a2494 i1191 
=== Succesors ===
=== Usages ===
?2247 ?2246 ?591 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a2494 i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2460 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v2503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2460 #trueSuccessor: v597 #falseSuccessor: v603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582290204709097494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2504 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2504  <|@  <|@
f <@~|@floating>@ <|@
tid v2575 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2502 
=== Succesors ===
=== Usages ===
i2504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2575 
=== Succesors ===
next: v617 
=== Usages ===
v614 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2575 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2504 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2504  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v614 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
i2504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v614 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558276444149176811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2505 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2505  <|@  <|@
f <@~|@floating>@ <|@
tid v2576 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2502 
=== Succesors ===
=== Usages ===
i2505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2505 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2576 
=== Succesors ===
next: v1731 
=== Usages ===
v618 
=== Predecessor ===
v616 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2576 #next: v1731  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2505 
y: i1191 
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2505 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v1730 
falseSuccessor: v1728 
=== Usages ===
=== Predecessor ===
i2505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v1730 #falseSuccessor: v1728  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2313 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2313  <|@  <|@
f <@~|@floating>@ <|@
tid i2314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317971
stableDimension: 0
stamp: i32 [-317971] â‡Š00000000fffb25ed â‡ˆ00000000fffb25ed
stampKind: i32
value: int[-317971|0xfffffffffffb25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1064 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1064  <|@  <|@
f <@*|@fixed>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B99" 
    xhandlers
    flags 
    probability 4582289926118969972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i561 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i561  <|@  <|@
f <@~|@floating>@ <|@
tid a1236 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2502 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2502  <|@  <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@44b67f44
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1236 i1191 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1236 i1191  <|@  <|@
tid ?2246 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: a2498 i1191 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a2498 i1191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i561 <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1243 
stateDuring: ?2246 
=== Succesors ===
next: v566 
=== Usages ===
v563 
=== Predecessor ===
v603 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1243 stateDuring: ?2246 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i561 
y: i47 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i561 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v565 
=== Usages ===
=== Predecessor ===
i561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v564 #falseSuccessor: v565  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4553834388563918620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v923 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v923  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B98" 
    xhandlers
    flags 
    probability 4560875826609035641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v923 v924 
=== Succesors ===
next: a2506 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v923 v924 #next: a2506  <|@  <|@
f <@~|@floating>@ <|@
tid v2632 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2498 
=== Succesors ===
=== Usages ===
a2506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2632 
=== Succesors ===
next: v2627 
=== Usages ===
a1246 v2627 
=== Predecessor ===
v922 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2632 #next: v2627  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?573 
values: a2498 i1191 i47 
=== Succesors ===
=== Usages ===
v2627 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a2498 i1191 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?591 
object: a2506 
=== Succesors ===
next: i569 
=== Usages ===
=== Predecessor ===
a2506 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?591 object: a2506 #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid a1246 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2506 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2506  <|@  <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2328caa8
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1246 i1191 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1246 i1191  <|@  <|@
tid ?2247 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: - - 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1250 
stateDuring: ?2247 
=== Succesors ===
next: v439 
=== Usages ===
v436 
=== Predecessor ===
v2627 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1250 stateDuring: ?2247 #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i569 
y: i47 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i569 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v436 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
i569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v436 #trueSuccessor: v437 #falseSuccessor: v438  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4532181634653515973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B97" 
    xhandlers
    flags 
    probability 4562827526736041527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v907 v908 
=== Succesors ===
next: a2507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v907 v908 #next: a2507  <|@  <|@
f <@~|@floating>@ <|@
tid v2633 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2494 
=== Succesors ===
=== Usages ===
a2507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2633 
=== Succesors ===
next: v2628 
=== Usages ===
a1253 v2628 
=== Predecessor ===
v906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2633 #next: v2628  <|@  <|@
tid ?464 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?446 
values: a2494 i1191 i47 
=== Succesors ===
=== Usages ===
v2628 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a2494 i1191 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?464 
object: a2507 
=== Succesors ===
next: i442 
=== Usages ===
=== Predecessor ===
a2507 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?464 object: a2507 #next: i442  <|@  <|@
f <@~|@floating>@ <|@
tid a1253 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2507 
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2507  <|@  <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5b38bb6a
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1253 i1191 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1253 i1191  <|@  <|@
tid ?2248 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: - - 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1257 
stateDuring: ?2248 
=== Succesors ===
next: v374 
=== Usages ===
v371 
=== Predecessor ===
v2628 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1257 stateDuring: ?2248 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i442 
y: i47 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i442 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v371 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
i442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v371 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4534245246923867060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B96" 
    xhandlers
    flags 
    probability 4567315607703421434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v891 v892 
=== Succesors ===
next: a2508 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v891 v892 #next: a2508  <|@  <|@
f <@~|@floating>@ <|@
tid v2634 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2490 
=== Succesors ===
=== Usages ===
a2508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2634 
=== Succesors ===
next: v2629 
=== Usages ===
a1260 v2629 
=== Predecessor ===
v890 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2634 #next: v2629  <|@  <|@
tid ?399 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?381 
values: a2490 i1191 i47 
=== Succesors ===
=== Usages ===
v2629 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: a2490 i1191 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?399 
object: a2508 
=== Succesors ===
next: i377 
=== Usages ===
=== Predecessor ===
a2508 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?399 object: a2508 #next: i377  <|@  <|@
f <@~|@floating>@ <|@
tid a1260 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2508 
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2508  <|@  <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@46e2f02c
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1260 i1191 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1260 i1191  <|@  <|@
tid ?2249 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?381 
values: - - 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1264 
stateDuring: ?2249 
=== Succesors ===
next: v301 
=== Usages ===
v298 
=== Predecessor ===
v2629 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1264 stateDuring: ?2249 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i47 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
i377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v299 #falseSuccessor: v300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4538724519261336704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4571819220194887156
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v876 
=== Succesors ===
next: a2509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v876 #next: a2509  <|@  <|@
f <@~|@floating>@ <|@
tid v2635 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
a2509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2635 
=== Succesors ===
next: v2510 
=== Usages ===
v2619 v2578 v2577 
=== Predecessor ===
v874 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2635 #next: v2510  <|@  <|@
tid ?322 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?308 
values: a2486 i1191 i47 
=== Succesors ===
=== Usages ===
v2328 v2510 i2514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?308 values: a2486 i1191 i47  <|@  <|@
f <@~|@floating>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2509 
=== Succesors ===
=== Usages ===
v2510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?322 
guard: - 
address: v2619 
=== Succesors ===
next: v520 
=== Usages ===
v2463 v2461 
=== Predecessor ===
a2509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?322 guard: - address: v2619 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2510 
y: v2451 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2510 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2577 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2509 
=== Succesors ===
=== Usages ===
i2511 a2513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2509  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2461 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v2510 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2461 #trueSuccessor: v513 #falseSuccessor: v519  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2511 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2577 
=== Succesors ===
next: v581 
=== Usages ===
v578 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2577 #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2511 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2511  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
i2511 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v579 #falseSuccessor: v580  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 4543131874047153820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v971  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2512 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2512  <|@  <|@
f <@~|@floating>@ <|@
tid v2578 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2509 
=== Succesors ===
=== Usages ===
i2512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2578 
=== Succesors ===
next: v1751 
=== Usages ===
v582 
=== Predecessor ===
v580 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2578 #next: v1751  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2512 
y: i1191 
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2512 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v1750 
falseSuccessor: v1748 
=== Usages ===
=== Predecessor ===
i2512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v1750 #falseSuccessor: v1748  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2331 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2331  <|@  <|@
f <@~|@floating>@ <|@
tid i2332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -325907
stableDimension: 0
stamp: i32 [-325907] â‡Š00000000fffb06ed â‡ˆ00000000fffb06ed
stampKind: i32
value: int[-325907|0xfffffffffffb06ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
v1750 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B94" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1755 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1755  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2510 
y: v2462 
=== Succesors ===
=== Usages ===
v1755 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2510 y: v2462  <|@  <|@
f <@*|@fixed>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2463 
=== Succesors ===
trueSuccessor: v1752 
falseSuccessor: v1754 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2463 #trueSuccessor: v1752 #falseSuccessor: v1754  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B93" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1759 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1759  <|@  <|@
f <@~|@floating>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2485 
y: i1626 
=== Succesors ===
=== Usages ===
v1759 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2485 y: i1626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2474 
=== Succesors ===
trueSuccessor: v1756 
falseSuccessor: v1758 
=== Usages ===
=== Predecessor ===
v1752 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2474 #trueSuccessor: v1756 #falseSuccessor: v1758  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B92" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2513 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2577 
=== Succesors ===
next: i2514 
=== Usages ===
v2580 v2579 
=== Predecessor ===
v1756 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2577 #next: i2514  <|@  <|@
f <@~|@floating>@ <|@
tid v2579 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2513 
=== Succesors ===
=== Usages ===
i2514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?322 
guard: - 
address: v2579 
=== Succesors ===
next: v1767 
=== Usages ===
v1284 
=== Predecessor ===
a2513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?322 guard: - address: v2579 #next: v1767  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2514 
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1191 y: i2514  <|@  <|@
f <@*|@fixed>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1284 
=== Succesors ===
trueSuccessor: v1764 
falseSuccessor: v1766 
=== Usages ===
=== Predecessor ===
i2514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1284 #trueSuccessor: v1764 #falseSuccessor: v1766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2515 
=== Usages ===
i2515 
=== Predecessor ===
v1767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2515  <|@  <|@
f <@~|@floating>@ <|@
tid j1514 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2485 
=== Succesors ===
=== Usages ===
v2580 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2485  <|@  <|@
f <@~|@floating>@ <|@
tid v2580 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1514 
index: a2513 
=== Succesors ===
=== Usages ===
i2515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1514 index: a2513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1764 
address: v2580 
=== Succesors ===
next: v80 
=== Usages ===
i1515 
=== Predecessor ===
v1764 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1764 address: v2580 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i1515 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2515 
=== Succesors ===
=== Usages ===
i765 v77 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2515  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1515 
y: i47 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1515 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i2515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4538724539427290083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B11" "B53" 
    successors "B63" "B89" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v858 v860 v971 
=== Succesors ===
next: a2516 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v858 v860 v971 #next: a2516  <|@  <|@
f <@~|@floating>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
a2516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2581 
=== Succesors ===
next: v2630 
=== Usages ===
v2621 v2630 v2592 v2595 
=== Predecessor ===
v857 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2581 #next: v2630  <|@  <|@
tid ?859 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?87 
values: a1149 i1191 i47 
=== Succesors ===
=== Usages ===
v2376 v2630 v2518 i2520 i2524 v2631 i2529 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1149 i1191 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
object: a2516 
=== Succesors ===
next: a2517 
=== Usages ===
=== Predecessor ===
a2516 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?859 object: a2516 #next: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2582 
=== Succesors ===
next: v2518 
=== Usages ===
a1299 v2620 v2583 v2587 v2591 
=== Predecessor ===
v2630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2582 #next: v2518  <|@  <|@
f <@~|@floating>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2517 
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2620 
=== Succesors ===
next: v1779 
=== Usages ===
v2465 
=== Predecessor ===
a2517 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2620 #next: v1779  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2518 
y: v2464 
=== Succesors ===
=== Usages ===
v1779 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2518 y: v2464  <|@  <|@
f <@*|@fixed>@ <|@
tid v1779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2465 
=== Succesors ===
trueSuccessor: v1776 
falseSuccessor: v1778 
=== Usages ===
=== Predecessor ===
v2518 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2465 #trueSuccessor: v1776 #falseSuccessor: v1778  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B88" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2519 
=== Usages ===
=== Predecessor ===
v1779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2555 
=== Succesors ===
next: i2520 
=== Usages ===
a1303 v2584 
=== Predecessor ===
v1776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2555 #next: i2520  <|@  <|@
f <@~|@floating>@ <|@
tid v2584 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2519 
=== Succesors ===
=== Usages ===
i2520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2584 
=== Succesors ===
next: i2521 
=== Usages ===
v1311 
=== Predecessor ===
a2519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2584 #next: i2521  <|@  <|@
f <@~|@floating>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2517 
=== Succesors ===
=== Usages ===
i2521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2583 
=== Succesors ===
next: v1787 
=== Usages ===
v2585 v1311 
=== Predecessor ===
i2520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2583 #next: v1787  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2521 
y: i2520 
=== Succesors ===
=== Usages ===
v1787 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2521 y: i2520  <|@  <|@
f <@*|@fixed>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1311 
=== Succesors ===
trueSuccessor: v1784 
falseSuccessor: v1786 
=== Usages ===
=== Predecessor ===
i2521 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1311 #trueSuccessor: v1784 #falseSuccessor: v1786  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2522 
=== Usages ===
i2522 
=== Predecessor ===
v1787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2522  <|@  <|@
f <@~|@floating>@ <|@
tid a1303 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2519 
=== Succesors ===
=== Usages ===
v2585 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2519  <|@  <|@
f <@~|@floating>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1303 
index: i2521 
=== Succesors ===
=== Usages ===
i2522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1303 index: i2521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1784 
address: v2585 
=== Succesors ===
next: v1791 
=== Usages ===
v169 v1356 i2252 
=== Predecessor ===
v1784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1784 address: v2585 #next: v1791  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2522 
y: i47 
=== Succesors ===
=== Usages ===
v1791 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2522 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v1790 
falseSuccessor: v1788 
=== Usages ===
=== Predecessor ===
i2522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v1790 #falseSuccessor: v1788  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2383 
=== Usages ===
=== Predecessor ===
v1791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2383  <|@  <|@
f <@~|@floating>@ <|@
tid i2384 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -337683
stableDimension: 0
stamp: i32 [-337683] â‡Š00000000fffad8ed â‡ˆ00000000fffad8ed
stampKind: i32
value: int[-337683|0xfffffffffffad8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1790 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B87" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2523 
=== Usages ===
=== Predecessor ===
v1791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2523 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2586 
=== Succesors ===
next: i2524 
=== Usages ===
a1323 v2588 
=== Predecessor ===
v1788 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2586 #next: i2524  <|@  <|@
f <@~|@floating>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2523 
=== Succesors ===
=== Usages ===
i2524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2588 
=== Succesors ===
next: i2525 
=== Usages ===
v1358 v1349 
=== Predecessor ===
a2523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2588 #next: i2525  <|@  <|@
f <@~|@floating>@ <|@
tid v2587 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2517 
=== Succesors ===
=== Usages ===
i2525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2587 
=== Succesors ===
next: v1799 
=== Usages ===
v1349 i184 v2589 
=== Predecessor ===
i2524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2587 #next: v1799  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2525 
y: i2524 
=== Succesors ===
=== Usages ===
v1799 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2525 y: i2524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1349 
=== Succesors ===
trueSuccessor: v1796 
falseSuccessor: v1798 
=== Usages ===
=== Predecessor ===
i2525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1349 #trueSuccessor: v1796 #falseSuccessor: v1798  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B86" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1803 
=== Usages ===
i2534 v1356 
=== Predecessor ===
v1799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1803  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i2525 
y: i60 
=== Succesors ===
=== Usages ===
v2590 v1358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2525 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i2524 
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i184 y: i2524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1358 
=== Succesors ===
trueSuccessor: v1800 
falseSuccessor: v1802 
=== Usages ===
=== Predecessor ===
v1796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1358 #trueSuccessor: v1800 #falseSuccessor: v1802  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B76" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2526 
=== Usages ===
i2533 v1365 
=== Predecessor ===
v1803 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2526  <|@  <|@
f <@~|@floating>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2517 
=== Succesors ===
=== Usages ===
a2526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2591 
=== Succesors ===
next: v2631 
=== Usages ===
a1368 v2631 v2622 
=== Predecessor ===
v1800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2591 #next: v2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
object: a2526 
=== Succesors ===
next: v2527 
=== Usages ===
=== Predecessor ===
a2526 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?859 object: a2526 #next: v2527  <|@  <|@
f <@~|@floating>@ <|@
tid v2621 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2516 
=== Succesors ===
=== Usages ===
v2527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2621 
=== Succesors ===
next: v164 
=== Usages ===
v2467 v2466 
=== Predecessor ===
v2631 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2621 #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2527 
y: v2462 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2527 y: v2462  <|@  <|@
f <@~|@floating>@ <|@
tid v2592 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2516 
=== Succesors ===
=== Usages ===
a2528 i2531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2516  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2466 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
v2527 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2466 #trueSuccessor: v157 #falseSuccessor: v163  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B75" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2528 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2592 
=== Succesors ===
next: i2529 
=== Usages ===
v2594 v2593 
=== Predecessor ===
v157 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2592 #next: i2529  <|@  <|@
f <@~|@floating>@ <|@
tid v2593 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2528 
=== Succesors ===
=== Usages ===
i2529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2593 
=== Succesors ===
next: v1815 
=== Usages ===
v1379 
=== Predecessor ===
a2528 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2593 #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2529 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1191 y: i2529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1379 
=== Succesors ===
trueSuccessor: v1812 
falseSuccessor: v1814 
=== Usages ===
=== Predecessor ===
i2529 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1379 #trueSuccessor: v1812 #falseSuccessor: v1814  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1819 
=== Usages ===
i2530 
=== Predecessor ===
v1815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2485 
y: i1626 
=== Succesors ===
=== Usages ===
v1819 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2485 y: i1626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1627 
=== Succesors ===
trueSuccessor: v1816 
falseSuccessor: v1818 
=== Usages ===
=== Predecessor ===
v1812 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1627 #trueSuccessor: v1816 #falseSuccessor: v1818  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2530 
=== Usages ===
=== Predecessor ===
v1819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2530  <|@  <|@
f <@~|@floating>@ <|@
tid j2473 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2485 
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2485  <|@  <|@
f <@~|@floating>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j2473 
index: a2528 
=== Succesors ===
=== Usages ===
i2530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2473 index: a2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1812 
address: v2594 
=== Succesors ===
next: v1835 
=== Usages ===
i1524 
=== Predecessor ===
v1816 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1812 address: v2594 #next: v1835  <|@  <|@
f <@~|@floating>@ <|@
tid i1524 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2530 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2530  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1524 
y: i47 
=== Succesors ===
=== Usages ===
v1835 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1524 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v1834 
falseSuccessor: v1832 
=== Usages ===
=== Predecessor ===
i2530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v1834 #falseSuccessor: v1832  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1833 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1833  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: ?62 
values: a1149 a2 i3 a4 i1191 i47 
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: a1149 a2 i3 a4 i1191 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1296
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2626 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2626  <|@  <|@
f <@*|@fixed>@ <|@
tid v2626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2625 
=== Predecessor ===
v1832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
v1819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2405  <|@  <|@
f <@~|@floating>@ <|@
tid i2406 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -350739
stableDimension: 0
stamp: i32 [-350739] â‡Š00000000fffaa5ed â‡ˆ00000000fffaa5ed
stampKind: i32
value: int[-350739|0xfffffffffffaa5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1818 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2403 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2403  <|@  <|@
f <@~|@floating>@ <|@
tid i2404 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -353307
stableDimension: 0
stamp: i32 [-353307] â‡Š00000000fffa9be5 â‡ˆ00000000fffa9be5
stampKind: i32
value: int[-353307|0xfffffffffffa9be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B85" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1823  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2527 
y: v2451 
=== Succesors ===
=== Usages ===
v1823 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2527 y: v2451  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2467 
=== Succesors ===
trueSuccessor: v1820 
falseSuccessor: v1822 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2467 #trueSuccessor: v1820 #falseSuccessor: v1822  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2531 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2592 
=== Succesors ===
next: v1827 
=== Usages ===
v347 
=== Predecessor ===
v1820 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2592 #next: v1827  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2531 
=== Succesors ===
=== Usages ===
v1827 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1826 
falseSuccessor: v1824 
=== Usages ===
=== Predecessor ===
i2531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1826 #falseSuccessor: v1824  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2397 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2397  <|@  <|@
f <@~|@floating>@ <|@
tid i2398 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355603
stableDimension: 0
stamp: i32 [-355603] â‡Š00000000fffa92ed â‡ˆ00000000fffa92ed
stampKind: i32
value: int[-355603|0xfffffffffffa92ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1826 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2532 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2532  <|@  <|@
f <@~|@floating>@ <|@
tid v2595 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2516 
=== Succesors ===
=== Usages ===
i2532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2595 
=== Succesors ===
next: v1831 
=== Usages ===
v351 
=== Predecessor ===
v1824 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2595 #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2532 
y: i1191 
=== Succesors ===
=== Usages ===
v1831 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2532 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v1830 
falseSuccessor: v1828 
=== Usages ===
=== Predecessor ===
i2532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v1830 #falseSuccessor: v1828  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2401 
=== Usages ===
=== Predecessor ===
v1831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2401  <|@  <|@
f <@~|@floating>@ <|@
tid i2402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355859
stableDimension: 0
stamp: i32 [-355859] â‡Š00000000fffa91ed â‡ˆ00000000fffa91ed
stampKind: i32
value: int[-355859|0xfffffffffffa91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1830 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v1831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2625 
=== Predecessor ===
v1828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B73" "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2626 v89 
=== Succesors ===
next: i2533 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2626 v89 #next: i2533  <|@  <|@
f <@~|@floating>@ <|@
tid a1323 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2523 
=== Succesors ===
=== Usages ===
v2589 a652 v2590 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2523  <|@  <|@
f <@~|@floating>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1323 
index: i184 
=== Succesors ===
=== Usages ===
v1365 i2533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1323 index: i184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1800 
address: v2590 
=== Succesors ===
next: i2534 
=== Usages ===
i658 i656 
=== Predecessor ===
v2625 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1800 address: v2590 #next: i2534  <|@  <|@
f <@~|@floating>@ <|@
tid v2589 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1323 
index: i2525 
=== Succesors ===
=== Usages ===
v1356 i2534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1323 index: i2525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2534 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1796 
address: v2589 
=== Succesors ===
next: v1356 
=== Usages ===
i655 i653 
=== Predecessor ===
i2533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1796 address: v2589 #next: v1356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1796 
address: v2589 
value: i2522 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
i2534 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1796 address: v2589 value: i2522 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1800 
address: v2590 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2535 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1800 address: v2590 value: i54 stateAfter: - lastLocationAccess: - #next: v2535  <|@  <|@
f <@~|@floating>@ <|@
tid v2622 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2526 
=== Succesors ===
=== Usages ===
v2535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2622 
=== Succesors ===
next: v232 
=== Usages ===
v2469 
=== Predecessor ===
v1365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2622 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2535 
y: v2468 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2535 y: v2468  <|@  <|@
f <@~|@floating>@ <|@
tid a1299 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2517 
=== Succesors ===
=== Usages ===
a647 a648 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2517  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.8249645592753172
=== Inputs ===
condition: v2469 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v2535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2469 #trueSuccessor: v225 #falseSuccessor: v231  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575204503313447612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B115" 
    xhandlers
    flags 
    probability 4564902952382738090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid a1368 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2526 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2526  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2399 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2399  <|@  <|@
f <@~|@floating>@ <|@
tid i2400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -354355
stableDimension: 0
stamp: i32 [-354355] â‡Š00000000fffa97cd â‡ˆ00000000fffa97cd
stampKind: i32
value: int[-354355|0xfffffffffffa97cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1822 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2393 
=== Usages ===
=== Predecessor ===
v1803 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2393  <|@  <|@
f <@~|@floating>@ <|@
tid i2394 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -347931
stableDimension: 0
stamp: i32 [-347931] â‡Š00000000fffab0e5 â‡ˆ00000000fffab0e5
stampKind: i32
value: int[-347931|0xfffffffffffab0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1802 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2391 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2391  <|@  <|@
f <@~|@floating>@ <|@
tid i2392 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -345627
stableDimension: 0
stamp: i32 [-345627] â‡Š00000000fffab9e5 â‡ˆ00000000fffab9e5
stampKind: i32
value: int[-345627|0xfffffffffffab9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2385 
=== Usages ===
=== Predecessor ===
v1787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2385  <|@  <|@
f <@~|@floating>@ <|@
tid i2386 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -335899
stableDimension: 0
stamp: i32 [-335899] â‡Š00000000fffadfe5 â‡ˆ00000000fffadfe5
stampKind: i32
value: int[-335899|0xfffffffffffadfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1786 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2381 
=== Usages ===
=== Predecessor ===
v1779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid i2382 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333107
stableDimension: 0
stamp: i32 [-333107] â‡Š00000000fffaeacd â‡ˆ00000000fffaeacd
stampKind: i32
value: int[-333107|0xfffffffffffaeacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B65" "B88" "B87" "B86" "B78" "B85" "B80" "B75" "B74" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2374 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-355859 - -331531] â‡Š00000000fffa80c5 â‡ˆ00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2371 
values: i2382 i2384 i2386 i2392 i2394 i2398 i2400 i2402 i2404 i2406 
=== Succesors ===
=== Usages ===
v2376 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2371 values: i2382 i2384 i2386 i2392 i2394 i2398 i2400 i2402 i2404 i2406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2381 v2383 v2385 v2391 v2393 v2397 v2399 v2401 v2403 v2405 
=== Succesors ===
next: v2376 
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2381 v2383 v2385 v2391 v2393 v2397 v2399 v2401 v2403 v2405 #next: v2376  <|@  <|@
f <@*|@fixed>@ <|@
tid v2376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
actionAndReason: i2374 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2371 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?859 actionAndReason: i2374 speculation: a2257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567252313424605948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2337 
=== Usages ===
=== Predecessor ===
v1767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2337  <|@  <|@
f <@~|@floating>@ <|@
tid i2338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328987
stableDimension: 0
stamp: i32 [-328987] â‡Š00000000fffafae5 â‡ˆ00000000fffafae5
stampKind: i32
value: int[-328987|0xfffffffffffafae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
v1766 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2335 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2335  <|@  <|@
f <@~|@floating>@ <|@
tid i2336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326419
stableDimension: 0
stamp: i32 [-326419] â‡Š00000000fffb04ed â‡ˆ00000000fffb04ed
stampKind: i32
value: int[-326419|0xfffffffffffb04ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
v1758 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2333 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2333  <|@  <|@
f <@~|@floating>@ <|@
tid i2334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326195
stableDimension: 0
stamp: i32 [-326195] â‡Š00000000fffb05cd â‡ˆ00000000fffb05cd
stampKind: i32
value: int[-326195|0xfffffffffffb05cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
v1754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B55" "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2326 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-328987 - -324619] â‡Š00000000fffa00c5 â‡ˆ00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2323 
values: i2332 i2334 i2336 i2338 
=== Succesors ===
=== Usages ===
v2328 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2323 values: i2332 i2334 i2336 i2338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2331 v2333 v2335 v2337 
=== Succesors ===
next: v2328 
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2331 v2333 v2335 v2337 #next: v2328  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?322 
actionAndReason: i2326 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2323 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?322 actionAndReason: i2326 speculation: a2257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567252300718057233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B100" 
    xhandlers
    flags 
    probability 4562764029693724976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B100" 
    xhandlers
    flags 
    probability 4560781076466126774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582208695417099384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B91" "B96" "B14" "B21" "B56" "B28" "B35" "B99" "B42" "B97" "B98" 
    successors "B101" "B121" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v760 
values: i1515 i60 i60 i60 i60 i60 i60 i60 i60 i60 i60 
=== Succesors ===
=== Usages ===
?762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v760 values: i1515 i60 i60 i60 i60 i60 i60 i60 i60 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v763 v787 v821 v954 v1010 v1028 v1046 v1064 v1082 v1099 
=== Succesors ===
next: a2536 
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v763 v787 v821 v954 v1010 v1028 v1046 v1064 v1082 v1099 #next: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2582 
=== Succesors ===
next: v2537 
=== Usages ===
a1392 v2623 v2596 v2599 v2603 
=== Predecessor ===
v760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2582 #next: v2537  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?87 
values: a1149 i1191 i765 
=== Succesors ===
=== Usages ===
v2354 v2537 i2539 i2543 v2546 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1149 i1191 i765  <|@  <|@
f <@~|@floating>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2536 
=== Succesors ===
=== Usages ===
v2537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2623 
=== Succesors ===
next: v1843 
=== Usages ===
v2470 
=== Predecessor ===
a2536 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2623 #next: v1843  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2537 
y: v2464 
=== Succesors ===
=== Usages ===
v1843 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2537 y: v2464  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2470 
=== Succesors ===
trueSuccessor: v1840 
falseSuccessor: v1842 
=== Usages ===
=== Predecessor ===
v2537 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2470 #trueSuccessor: v1840 #falseSuccessor: v1842  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B120" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2538 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2555 
=== Succesors ===
next: i2539 
=== Usages ===
a1396 v2597 
=== Predecessor ===
v1840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2555 #next: i2539  <|@  <|@
f <@~|@floating>@ <|@
tid v2597 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2538 
=== Succesors ===
=== Usages ===
i2539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2597 
=== Succesors ===
next: i2540 
=== Usages ===
v1404 
=== Predecessor ===
a2538 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2597 #next: i2540  <|@  <|@
f <@~|@floating>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2536 
=== Succesors ===
=== Usages ===
i2540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2540 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2596 
=== Succesors ===
next: v1851 
=== Usages ===
v2598 v1404 
=== Predecessor ===
i2539 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2596 #next: v1851  <|@  <|@
f <@~|@floating>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2540 
y: i2539 
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2540 y: i2539  <|@  <|@
f <@*|@fixed>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1404 
=== Succesors ===
trueSuccessor: v1848 
falseSuccessor: v1850 
=== Usages ===
=== Predecessor ===
i2540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1404 #trueSuccessor: v1848 #falseSuccessor: v1850  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2541 
=== Usages ===
i2541 
=== Predecessor ===
v1851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2541  <|@  <|@
f <@~|@floating>@ <|@
tid a1396 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2538 
=== Succesors ===
=== Usages ===
v2598 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2538  <|@  <|@
f <@~|@floating>@ <|@
tid v2598 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1396 
index: i2540 
=== Succesors ===
=== Usages ===
i2541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1396 index: i2540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1848 
address: v2598 
=== Succesors ===
next: v1855 
=== Usages ===
v672 v1447 i2252 
=== Predecessor ===
v1848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1848 address: v2598 #next: v1855  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2541 
y: i47 
=== Succesors ===
=== Usages ===
v1855 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2541 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v672 
=== Succesors ===
trueSuccessor: v1854 
falseSuccessor: v1852 
=== Usages ===
=== Predecessor ===
i2541 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v672 #trueSuccessor: v1854 #falseSuccessor: v1852  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2359 
=== Usages ===
=== Predecessor ===
v1855 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2359  <|@  <|@
f <@~|@floating>@ <|@
tid i2360 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -361491
stableDimension: 0
stamp: i32 [-361491] â‡Š00000000fffa7bed â‡ˆ00000000fffa7bed
stampKind: i32
value: int[-361491|0xfffffffffffa7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1854 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B119" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2542 
=== Usages ===
=== Predecessor ===
v1855 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2586 
=== Succesors ===
next: i2543 
=== Usages ===
a1414 v2600 
=== Predecessor ===
v1852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2586 #next: i2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2600 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2542 
=== Succesors ===
=== Usages ===
i2543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2543 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2600 
=== Succesors ===
next: i2544 
=== Usages ===
v1449 v1440 
=== Predecessor ===
a2542 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2600 #next: i2544  <|@  <|@
f <@~|@floating>@ <|@
tid v2599 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2536 
=== Succesors ===
=== Usages ===
i2544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2599 
=== Succesors ===
next: v1863 
=== Usages ===
v1440 v2601 i680 
=== Predecessor ===
i2543 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2599 #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2544 
y: i2543 
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2544 y: i2543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1440 
=== Succesors ===
trueSuccessor: v1860 
falseSuccessor: v1862 
=== Usages ===
=== Predecessor ===
i2544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1440 #trueSuccessor: v1860 #falseSuccessor: v1862  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B118" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1867 
=== Usages ===
i2548 v1447 
=== Predecessor ===
v1863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1867  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i2544 
y: i60 
=== Succesors ===
=== Usages ===
v1449 v2602 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2544 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i680 
y: i2543 
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i680 y: i2543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1449 
=== Succesors ===
trueSuccessor: v1864 
falseSuccessor: v1866 
=== Usages ===
=== Predecessor ===
v1860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1449 #trueSuccessor: v1864 #falseSuccessor: v1866  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B114" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2545 
=== Usages ===
i2547 v1456 
=== Predecessor ===
v1867 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2545  <|@  <|@
f <@~|@floating>@ <|@
tid v2603 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2536 
=== Succesors ===
=== Usages ===
a2545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2603 
=== Succesors ===
next: v2546 
=== Usages ===
a1459 v2624 
=== Predecessor ===
v1864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2603 #next: v2546  <|@  <|@
f <@~|@floating>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2545 
=== Succesors ===
=== Usages ===
v2546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2624 
=== Succesors ===
next: i2547 
=== Usages ===
v2471 
=== Predecessor ===
a2545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2624 #next: i2547  <|@  <|@
f <@~|@floating>@ <|@
tid a1414 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2542 
=== Succesors ===
=== Usages ===
v2601 a652 v2602 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2542  <|@  <|@
f <@~|@floating>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1414 
index: i680 
=== Succesors ===
=== Usages ===
v1456 i2547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1414 index: i680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1864 
address: v2602 
=== Succesors ===
next: i2548 
=== Usages ===
i656 i658 
=== Predecessor ===
v2546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1864 address: v2602 #next: i2548  <|@  <|@
f <@~|@floating>@ <|@
tid v2601 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1414 
index: i2544 
=== Succesors ===
=== Usages ===
v1447 i2548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1414 index: i2544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1860 
address: v2601 
=== Succesors ===
next: v1447 
=== Usages ===
i653 i655 
=== Predecessor ===
i2547 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1860 address: v2601 #next: v1447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1860 
address: v2601 
value: i2541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1456 
=== Usages ===
=== Predecessor ===
i2548 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1860 address: v2601 value: i2541 stateAfter: - lastLocationAccess: - #next: v1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1864 
address: v2602 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v1447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1864 address: v2602 value: i54 stateAfter: - lastLocationAccess: - #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2546 
y: v2468 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2546 y: v2468  <|@  <|@
f <@~|@floating>@ <|@
tid a1392 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2536 
=== Succesors ===
=== Usages ===
a647 a648 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2536  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.8249645592753172
=== Inputs ===
condition: v2471 
=== Succesors ===
trueSuccessor: v684 
falseSuccessor: v689 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2471 #trueSuccessor: v684 #falseSuccessor: v689  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 4603580708571142882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B83" "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a648 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v639 
values: a1299 a1392 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: a1299 a1392  <|@  <|@
f <@~|@floating>@ <|@
tid i2252 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2522 i2541 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2522 i2541  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v639 
values: a1323 a1414 
=== Succesors ===
=== Usages ===
v2609 v2608 v2607 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: a1323 a1414  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2534 i2548 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2534 i2548  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2533 i2547 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2533 i2547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v640 v642 
=== Succesors ===
next: i2549 
=== Usages ===
a648 i2252 a652 i655 i658 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v640 v642 #next: i2549  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2549 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2604 
=== Succesors ===
next: v1875 
=== Usages ===
v247 
=== Predecessor ===
v639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2604 #next: v1875  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2549 
y: i60 
=== Succesors ===
=== Usages ===
v1875 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2549 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1874 
falseSuccessor: v1872 
=== Usages ===
=== Predecessor ===
i2549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1874 #falseSuccessor: v1872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v1875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2340  <|@  <|@
f <@~|@floating>@ <|@
tid i2341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -374803
stableDimension: 0
stamp: i32 [-374803] â‡Š00000000fffa47ed â‡ˆ00000000fffa47ed
stampKind: i32
value: int[-374803|0xfffffffffffa47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
v1874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B113" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2550 
=== Usages ===
=== Predecessor ===
v1875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2550  <|@  <|@
f <@~|@floating>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
i2550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2607 
=== Succesors ===
next: v1883 
=== Usages ===
v1623 
=== Predecessor ===
v1872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2607 #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid i1133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2550 
y: i1133 
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2550 y: i1133  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1623 
=== Succesors ===
trueSuccessor: v1882 
falseSuccessor: v1880 
=== Usages ===
=== Predecessor ===
i2550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1623 #trueSuccessor: v1882 #falseSuccessor: v1880  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2347 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2347  <|@  <|@
f <@~|@floating>@ <|@
tid i2348 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -392219
stableDimension: 0
stamp: i32 [-392219] â‡Š00000000fffa03e5 â‡ˆ00000000fffa03e5
stampKind: i32
value: int[-392219|0xfffffffffffa03e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
v1882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B109" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2342 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-392219 - -374803] â‡Š00000000fffa03e5 â‡ˆ00000000fffa47ed
valueDescription: i32
=== Inputs ===
merge: v2339 
values: i2341 i2348 
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2339 values: i2341 i2348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2340 v2347 
=== Succesors ===
next: v2344 
=== Usages ===
i2342 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2340 v2347 #next: v2344  <|@  <|@
tid ?641 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: a648 a2 i54 a4 i2252 i655 i658 
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a648 a2 i54 a4 i2252 i655 i658  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?641 
actionAndReason: i2342 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?641 actionAndReason: i2342 speculation: a2257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B134" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1467 
=== Usages ===
v1483 v1492 
=== Predecessor ===
v1883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1467  <|@  <|@
f <@~|@floating>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2605 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2551 
=== Usages ===
=== Predecessor ===
v1880 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2605 value: i54 stateAfter: - lastLocationAccess: - #next: i2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2606 
=== Succesors ===
next: v1483 
=== Usages ===
v1483 
=== Predecessor ===
v1467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2606 #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1880 
address: v2608 
value: i2551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1492 
=== Usages ===
=== Predecessor ===
i2551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1880 address: v2608 value: i2551 stateAfter: - lastLocationAccess: - #next: v1492  <|@  <|@
f <@~|@floating>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1880 
address: v2609 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1880 address: v2609 value: i54 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v1492 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B115" 
    xhandlers
    flags 
    probability 4593755621749711378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid a1459 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2545 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2545  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B84" "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a647 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v643 
values: a1299 a1392 
=== Succesors ===
=== Usages ===
?190 ?2250 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: a1299 a1392  <|@  <|@
f <@~|@floating>@ <|@
tid a659 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v643 
values: a1368 a1459 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: a1368 a1459  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i2534 i2548 
=== Succesors ===
=== Usages ===
?190 ?2250 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i2534 i2548  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i2533 i2547 
=== Succesors ===
=== Usages ===
?190 ?2250 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i2533 i2547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v644 v646 
=== Succesors ===
next: i189 
=== Usages ===
a647 a659 i653 i656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v644 v646 #next: i189  <|@  <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@31d9ebeb
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a659 a2 i54 a4 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a659 a2 i54 a4  <|@  <|@
tid ?2250 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: a647 a2 - - - i653 i656 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a647 a2 - - - i653 i656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
bci: 70
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1493 
stateDuring: ?2250 
=== Succesors ===
next: v1887 
=== Usages ===
v191 
=== Predecessor ===
v643 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1493 stateDuring: ?2250 #next: v1887  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i47 
=== Succesors ===
=== Usages ===
v1887 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i189 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v1886 
falseSuccessor: v1884 
=== Usages ===
=== Predecessor ===
i189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v1886 #falseSuccessor: v1884  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1885 
=== Usages ===
=== Predecessor ===
v1887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1885  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 1
=== Inputs ===
outerFrameState: ?194 
values: a647 a2 - - - i653 i656 i47 
=== Succesors ===
=== Usages ===
v1885 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a647 a2 - - - i653 i656 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1494
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1886 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v1887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v1884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2369 
=== Usages ===
=== Predecessor ===
v1867 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2369  <|@  <|@
f <@~|@floating>@ <|@
tid i2370 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -371227
stableDimension: 0
stamp: i32 [-371227] â‡Š00000000fffa55e5 â‡ˆ00000000fffa55e5
stampKind: i32
value: int[-371227|0xfffffffffffa55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2367 
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2367  <|@  <|@
f <@~|@floating>@ <|@
tid i2368 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -368923
stableDimension: 0
stamp: i32 [-368923] â‡Š00000000fffa5ee5 â‡ˆ00000000fffa5ee5
stampKind: i32
value: int[-368923|0xfffffffffffa5ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2361 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2361  <|@  <|@
f <@~|@floating>@ <|@
tid i2362 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359707
stableDimension: 0
stamp: i32 [-359707] â‡Š00000000fffa82e5 â‡ˆ00000000fffa82e5
stampKind: i32
value: int[-359707|0xfffffffffffa82e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1850 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid i2358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -356915
stableDimension: 0
stamp: i32 [-356915] â‡Š00000000fffa8dcd â‡ˆ00000000fffa8dcd
stampKind: i32
value: int[-356915|0xfffffffffffa8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B103" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2352 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-373771 - -356619] â‡Š00000000fffa00c5 â‡ˆ00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2349 
values: i2358 i2360 i2362 i2368 i2370 
=== Succesors ===
=== Usages ===
v2354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2349 values: i2358 i2360 i2362 i2368 i2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2357 v2359 v2361 v2367 v2369 
=== Succesors ===
next: v2354 
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2357 v2359 v2361 v2367 v2369 #next: v2354  <|@  <|@
f <@*|@fixed>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?762 
actionAndReason: i2352 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2349 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?762 actionAndReason: i2352 speculation: a2257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2311 
=== Usages ===
=== Predecessor ===
v1723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2311  <|@  <|@
f <@~|@floating>@ <|@
tid i2312 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315699
stableDimension: 0
stamp: i32 [-315699] â‡Š00000000fffb2ecd â‡ˆ00000000fffb2ecd
stampKind: i32
value: int[-315699|0xfffffffffffb2ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2305 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2305  <|@  <|@
f <@~|@floating>@ <|@
tid i2306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -313139
stableDimension: 0
stamp: i32 [-313139] â‡Š00000000fffb38cd â‡ˆ00000000fffb38cd
stampKind: i32
value: int[-313139|0xfffffffffffb38cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1710 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2299 
=== Usages ===
=== Predecessor ===
v1699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2299  <|@  <|@
f <@~|@floating>@ <|@
tid i2300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310579
stableDimension: 0
stamp: i32 [-310579] â‡Š00000000fffb42cd â‡ˆ00000000fffb42cd
stampKind: i32
value: int[-310579|0xfffffffffffb42cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2293 
=== Usages ===
=== Predecessor ===
v1687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2293  <|@  <|@
f <@~|@floating>@ <|@
tid i2294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308019
stableDimension: 0
stamp: i32 [-308019] â‡Š00000000fffb4ccd â‡ˆ00000000fffb4ccd
stampKind: i32
value: int[-308019|0xfffffffffffb4ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1686 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2287 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2287  <|@  <|@
f <@~|@floating>@ <|@
tid i2288 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305171
stableDimension: 0
stamp: i32 [-305171] â‡Š00000000fffb57ed â‡ˆ00000000fffb57ed
stampKind: i32
value: int[-305171|0xfffffffffffb57ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2285 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2285  <|@  <|@
f <@~|@floating>@ <|@
tid i2286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303131
stableDimension: 0
stamp: i32 [-303131] â‡Š00000000fffb5fe5 â‡ˆ00000000fffb5fe5
stampKind: i32
value: int[-303131|0xfffffffffffb5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2283 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2283  <|@  <|@
f <@~|@floating>@ <|@
tid i2284 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302355
stableDimension: 0
stamp: i32 [-302355] â‡Š00000000fffb62ed â‡ˆ00000000fffb62ed
stampKind: i32
value: int[-302355|0xfffffffffffb62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1666 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2277 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2277  <|@  <|@
f <@~|@floating>@ <|@
tid i2278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299827
stableDimension: 0
stamp: i32 [-299827] â‡Š00000000fffb6ccd â‡ˆ00000000fffb6ccd
stampKind: i32
value: int[-299827|0xfffffffffffb6ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2273 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2273  <|@  <|@
f <@~|@floating>@ <|@
tid i2274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299283
stableDimension: 0
stamp: i32 [-299283] â‡Š00000000fffb6eed â‡ˆ00000000fffb6eed
stampKind: i32
value: int[-299283|0xfffffffffffb6eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B5" "B130" "B129" "B128" "B127" "B13" "B126" "B20" "B125" "B27" "B124" "B34" "B123" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2270 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317971 - -299283] â‡Š00000000fffb00c5 â‡ˆ00000000fffb7ffd
valueDescription: i32
=== Inputs ===
merge: v2267 
values: i2274 i2276 i2278 i2284 i2286 i2288 i2292 i2294 i2298 i2300 i2304 i2306 i2310 i2312 i2314 
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2267 values: i2274 i2276 i2278 i2284 i2286 i2288 i2292 i2294 i2298 i2300 i2304 i2306 i2310 i2312 i2314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2273 v2275 v2277 v2283 v2285 v2287 v2291 v2293 v2297 v2299 v2303 v2305 v2309 v2311 v2313 
=== Succesors ===
next: v2272 
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2273 v2275 v2277 v2283 v2285 v2287 v2291 v2293 v2297 v2299 v2303 v2305 v2309 v2311 v2313 #next: v2272  <|@  <|@
f <@*|@fixed>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i2270 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2267 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i2270 speculation: a2257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B134" 
    xhandlers
    flags 
    probability 4598419215997149594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1498 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1498  <|@  <|@
f <@~|@floating>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
displacement: 480
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2479 
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2610 
=== Succesors ===
next: j1501 
=== Usages ===
v2611 v1502 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2610 #next: j1501  <|@  <|@
f <@~|@floating>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v1498 
index: - 
=== Succesors ===
=== Usages ===
j1501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1498 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2611 
=== Succesors ===
next: i15 
=== Usages ===
v1502 
=== Predecessor ===
v1498 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2611 #next: i15  <|@  <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@54411af2
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j1501 
metaspaceMethod: v1498 
arguments: a1149 a2 i3 a4 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j1501 metaspaceMethod: v1498 arguments: a1149 a2 i3 a4  <|@  <|@
tid ?2245 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2480 - 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2480 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: true
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Indirect#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1502 
stateDuring: ?2245 
=== Succesors ===
next: v24 
=== Usages ===
i25 
=== Predecessor ===
j1501 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1502 stateDuring: ?2245 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
i15 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B117" "B113" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v22 
values: i15 i60 i60 
=== Succesors ===
=== Usages ===
?23 v21 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v22 values: i15 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v24 v30 v703 
=== Succesors ===
next: a2552 
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v24 v30 v703 #next: a2552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2555 
=== Succesors ===
next: i2553 
=== Usages ===
a1152 v2560 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2555 #next: i2553  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2480 - i25 
=== Succesors ===
=== Usages ===
v2320 i2553 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2480 - i25  <|@  <|@
f <@~|@floating>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2552 
=== Succesors ===
=== Usages ===
i2553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v2560 
=== Succesors ===
next: i2554 
=== Usages ===
v1159 
=== Predecessor ===
a2552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v2560 #next: i2554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2556 
=== Succesors ===
next: v1895 
=== Usages ===
v2561 v1159 
=== Predecessor ===
i2553 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2556 #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2554 
y: i2553 
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2554 y: i2553  <|@  <|@
f <@*|@fixed>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1159 
=== Succesors ===
trueSuccessor: v1892 
falseSuccessor: v1894 
=== Usages ===
=== Predecessor ===
i2554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1159 #trueSuccessor: v1892 #falseSuccessor: v1894  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1166 
=== Usages ===
v1166 
=== Predecessor ===
v1895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid a1152 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2552 
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2552  <|@  <|@
f <@~|@floating>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1152 
index: i2554 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1152 index: i2554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1892 
address: v2561 
value: i2480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1892 address: v2561 value: i2480 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 46]
stamp: void
=== Inputs ===
result: i25 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i25 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2320 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2320  <|@  <|@
f <@~|@floating>@ <|@
tid i2322 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296987
stableDimension: 0
stamp: i32 [-296987] â‡Š00000000fffb77e5 â‡ˆ00000000fffb77e5
stampKind: i32
value: int[-296987|0xfffffffffffb77e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i2322 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1894 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i2322 speculation: a2257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2260 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2260  <|@  <|@
f <@~|@floating>@ <|@
tid i2266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291867
stableDimension: 0
stamp: i32 [-291867] â‡Š00000000fffb8be5 â‡ˆ00000000fffb8be5
stampKind: i32
value: int[-291867|0xfffffffffffb8be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i2266 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i2266 speculation: a2257  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a2475 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a2475  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$GroupHead;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2556 ?62 ?12 v2559 ?2245 ?23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2606 ?87 ?12 v1502 ?2250 v2605 ?2245 ?23 ?190 ?62 ?641 v1493 ?46 v2555 v2562 v2586 v2604 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1146 ?12 v1502 i54 v39 v199 v2565 ?46 ?87 v195 v1183 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?12 v1502 v1493 v2563 ?641 ?46 ?87 v2613 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4658
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 - - 
=== Succesors ===
=== Usages ===
v2260 a2475 i2476 v2479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2555 <|@
result [v1|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2475 a2552 a2519 a2538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2475 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2555 
=== Succesors ===
next: i2476 
=== Usages ===
a1119 v2557 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2555 #next: i2476  <|@  <|@
f <@~|@floating>@ <|@
tid v2557 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2475 
=== Succesors ===
=== Usages ===
i2476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2476 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2557 
=== Succesors ===
next: i2477 
=== Usages ===
v1139 
=== Predecessor ===
a2475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2557 #next: i2477  <|@  <|@
f <@~|@floating>@ <|@
tid v2556 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2477 i2554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2477 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2556 
=== Succesors ===
next: v1639 
=== Usages ===
v1139 v2558 
=== Predecessor ===
i2476 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2556 #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2477 
y: i2476 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2477 y: i2476  <|@  <|@
f <@~|@floating>@ <|@
tid a2257 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2260 v2376 v2272 v2354 v2320 v2344 v2328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1139 
=== Succesors ===
trueSuccessor: v1636 
falseSuccessor: v1638 
=== Usages ===
=== Predecessor ===
i2477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1139 #trueSuccessor: v1636 #falseSuccessor: v1638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4abc08fb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B133" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2478 
=== Usages ===
i2480 v1146 
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2478  <|@  <|@
f <@~|@floating>@ <|@
tid v2559 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2478 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2559 
=== Succesors ===
next: v2479 
=== Usages ===
a1149 v2612 v2566 v2581 v2582 
=== Predecessor ===
v1636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2559 #next: v2479  <|@  <|@
f <@~|@floating>@ <|@
tid v2612 <|@
result [v7|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
v2479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2479 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2612 
=== Succesors ===
next: i2480 
=== Usages ===
v2610 v2448 
=== Predecessor ===
a2478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2612 #next: i2480  <|@  <|@
f <@~|@floating>@ <|@
tid a1119 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2475 
=== Succesors ===
=== Usages ===
v2558 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2475  <|@  <|@
f <@~|@floating>@ <|@
tid v2558 <|@
result [v9|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1119 
index: i2477 
=== Succesors ===
=== Usages ===
v1146 i2480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1119 index: i2477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2480 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1636 
address: v2558 
=== Succesors ===
next: v1146 
=== Usages ===
?12 ?2245 v1166 ?62 ?23 
=== Predecessor ===
v2479 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1636 address: v2558 #next: v1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1636 
address: v2558 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
i2480 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1636 address: v2558 value: i3 stateAfter: - lastLocationAccess: - #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2448 v2453 v2455 v2457 v2459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2479 
y: v2447 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2479 y: v2447  <|@  <|@
f <@~|@floating>@ <|@
tid a1149 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2478 
=== Succesors ===
=== Usages ===
?762 v1502 ?46 ?308 ?859 ?87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2478  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.7364554760601777
=== Inputs ===
condition: v2448 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v1146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2448 #trueSuccessor: v29 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v9|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[.] + v6|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7364554760601777 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B131" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2481 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2481  <|@  <|@
f <@~|@floating>@ <|@
tid v2562 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2481 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2562 
=== Succesors ===
next: v1647 
=== Usages ===
v39 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2562 #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2481 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2481  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i2480 - 
=== Succesors ===
=== Usages ===
v2272 v2482 i2484 v2487 v2491 v2495 v2499 v2503 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i2480 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v1644 
falseSuccessor: v1646 
=== Usages ===
=== Predecessor ===
i2481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v1644 #falseSuccessor: v1646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B130" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2482 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2482  <|@  <|@
f <@~|@floating>@ <|@
tid v2613 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v2482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2482 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2613 
=== Succesors ===
next: v1655 
=== Usages ===
v2450 
=== Predecessor ===
v1644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2613 #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2482 
y: v2449 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2482 y: v2449  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2450 
=== Succesors ===
trueSuccessor: v1652 
falseSuccessor: v1654 
=== Usages ===
=== Predecessor ===
v2482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2450 #trueSuccessor: v1652 #falseSuccessor: v1654  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 ?859 v195 v77 v672 v169 v191 v298 ?591 v371 ?322 v436 ?399 ?464 v563 ?46 ?190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i47 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v1658 
falseSuccessor: v1656 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v1658 #falseSuccessor: v1656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2275 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2275  <|@  <|@
f <@~|@floating>@ <|@
tid i2276 <|@
result int[-300051|0xfffffffffffb6bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -300051
stableDimension: 0
stamp: i32 [-300051] â‡Š00000000fffb6bed â‡ˆ00000000fffb6bed
stampKind: i32
value: int[-300051|0xfffffffffffb6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-300051|0xfffffffffffb6bed]] destination: B5 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B129" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2483 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2483  <|@  <|@
f <@~|@floating>@ <|@
tid v2563 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a2483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2483 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2563 
=== Succesors ===
next: i2484 
=== Usages ===
a1175 v2564 
=== Predecessor ===
v1656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2563 #next: i2484  <|@  <|@
f <@~|@floating>@ <|@
tid v2564 <|@
result [v13|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2483 
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2484 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2564 
=== Succesors ===
next: v1667 
=== Usages ===
v199 v1183 
=== Predecessor ===
a2483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2564 #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2484 
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v1664 
falseSuccessor: v1666 
=== Usages ===
=== Predecessor ===
i2484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v1664 #falseSuccessor: v1666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[.] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B128" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1671 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2484 
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i2484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1183 
=== Succesors ===
trueSuccessor: v1668 
falseSuccessor: v1670 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1183 #trueSuccessor: v1668 #falseSuccessor: v1670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B127" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2485 
=== Usages ===
i2485 
=== Predecessor ===
v1671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2485  <|@  <|@
f <@~|@floating>@ <|@
tid a1175 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2483 
=== Succesors ===
=== Usages ===
v2565 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2483  <|@  <|@
f <@~|@floating>@ <|@
tid v2565 <|@
result [v15|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1175 
index: i3 
=== Succesors ===
=== Usages ===
i2485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1175 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2485 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1668 
address: v2565 
=== Succesors ===
next: v1675 
=== Usages ===
i1191 j1514 v1625 v1627 j2473 v2474 
=== Predecessor ===
v1668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1668 address: v2565 #next: v1675  <|@  <|@
f <@~|@floating>@ <|@
tid i1624 <|@
result short[-10240|0xffffffffffffd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2485 
y: i1624 
=== Succesors ===
=== Usages ===
v1675 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2485 y: i1624  <|@  <|@
f <@*|@fixed>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1625 
=== Succesors ===
trueSuccessor: v1672 
falseSuccessor: v1674 
=== Usages ===
=== Predecessor ===
i2485 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1625 #trueSuccessor: v1672 #falseSuccessor: v1674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSX [v15|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2486 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2486  <|@  <|@
f <@~|@floating>@ <|@
tid v2566 <|@
result [v7|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
a2486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2486 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2566 
=== Succesors ===
next: v2487 
=== Usages ===
?322 v2614 v2567 v2568 ?381 v2635 
=== Predecessor ===
v1672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2566 #next: v2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2614 <|@
result [v17|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
v2487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2487 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2614 
=== Succesors ===
next: v148 
=== Usages ===
v2453 v2452 
=== Predecessor ===
a2486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2614 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2452 v2454 v2456 v2458 v2460 v2461 v2467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2487 
y: v2451 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2487 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2567 <|@
result [v17|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
i2488 a2490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2480 - 
=== Succesors ===
=== Usages ===
?194 ?46 ?87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2480 -  <|@  <|@
f <@~|@floating>@ <|@
tid i1191 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2485 
=== Succesors ===
=== Usages ===
v1379 v578 v491 v487 ?308 ?762 v234 ?46 ?87 ?859 v238 ?573 ?381 v614 v351 ?322 ?464 v455 v347 v390 v451 ?446 v1264 v386 ?399 v618 v1257 ?591 v582 v1284 v1243 ?2246 v1250 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2485  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: a1149 a2 i3 a4 i1191 
=== Succesors ===
=== Usages ===
?308 ?859 ?762 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: a1149 a2 i3 a4 i1191  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: - - - - - 
=== Succesors ===
=== Usages ===
?2250 ?641 ?190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2582 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
a2517 a2536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2469 v2471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 43]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 i680 i54 i765 i184 i25 i765 v247 i765 i765 i765 i765 i765 i765 i765 i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i3 
y: i60 
=== Succesors ===
=== Usages ===
v1493 v1492 v1365 v1456 ?641 v1467 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v2586 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2523 a2542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2465 v2470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1626 <|@
result short[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] â‡Š0000000000000100 â‡ˆ0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1627 v2474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2463 v2466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2452 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v2487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2452 #trueSuccessor: v141 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v18|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600305160439790685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2488 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2488 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2567 
=== Succesors ===
next: v237 
=== Usages ===
v234 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2567 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2488 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2488  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
i2488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v17|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B62" 
    xhandlers
    flags 
    probability 4576291274224412830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2489 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2489  <|@  <|@
f <@~|@floating>@ <|@
tid v2568 <|@
result [v17|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
i2489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2489 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2568 
=== Succesors ===
next: v1683 
=== Usages ===
v238 
=== Predecessor ===
v236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2568 #next: v1683  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2489 
y: i1191 
=== Succesors ===
=== Usages ===
v1683 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2489 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1683 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v1682 
falseSuccessor: v1680 
=== Usages ===
=== Predecessor ===
i2489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v1682 #falseSuccessor: v1680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v17|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2291 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2291  <|@  <|@
f <@~|@floating>@ <|@
tid i2292 <|@
result int[-307731|0xfffffffffffb4ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -307731
stableDimension: 0
stamp: i32 [-307731] â‡Š00000000fffb4ded â‡ˆ00000000fffb4ded
stampKind: i32
value: int[-307731|0xfffffffffffb4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-307731|0xfffffffffffb4ded]] destination: B13 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B14 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B126" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1687 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1687  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2487 
y: v2447 
=== Succesors ===
=== Usages ===
v1687 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2487 y: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2453 
=== Succesors ===
trueSuccessor: v1684 
falseSuccessor: v1686 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2453 #trueSuccessor: v1684 #falseSuccessor: v1686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2490 
=== Usages ===
=== Predecessor ===
v1687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2490 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2567 
=== Succesors ===
next: v2491 
=== Usages ===
?399 v2615 v2569 v2570 ?446 v2634 
=== Predecessor ===
v1684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2567 #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid v2615 <|@
result [v21|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2490 
=== Succesors ===
=== Usages ===
v2491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2491 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2615 
=== Succesors ===
next: v335 
=== Usages ===
v2455 v2454 
=== Predecessor ===
a2490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2615 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2491 
y: v2451 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2491 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2569 <|@
result [v21|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2490 
=== Succesors ===
=== Usages ===
i2492 a2494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2490  <|@  <|@
tid ?308 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: a1149 i1191 
=== Succesors ===
=== Usages ===
?381 ?322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1149 i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2454 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2454 #trueSuccessor: v328 #falseSuccessor: v334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v17|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595801421502729024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2492 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2492 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2569 
=== Succesors ===
next: v389 
=== Usages ===
v386 
=== Predecessor ===
v328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2569 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2492 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2492  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
i2492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v21|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571787566702205055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2493 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2493  <|@  <|@
f <@~|@floating>@ <|@
tid v2570 <|@
result [v21|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2490 
=== Succesors ===
=== Usages ===
i2493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2493 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2570 
=== Succesors ===
next: v1695 
=== Usages ===
v390 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2570 #next: v1695  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2493 
y: i1191 
=== Succesors ===
=== Usages ===
v1695 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2493 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1695 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v1694 
falseSuccessor: v1692 
=== Usages ===
=== Predecessor ===
i2493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v1694 #falseSuccessor: v1692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v21|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2297 
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2297  <|@  <|@
f <@~|@floating>@ <|@
tid i2298 <|@
result int[-310291|0xfffffffffffb43ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310291
stableDimension: 0
stamp: i32 [-310291] â‡Š00000000fffb43ed â‡ˆ00000000fffb43ed
stampKind: i32
value: int[-310291|0xfffffffffffb43ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310291|0xfffffffffffb43ed]] destination: B20 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B100" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B21 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B125" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1699 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1699  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2491 
y: v2447 
=== Succesors ===
=== Usages ===
v1699 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2491 y: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2455 
=== Succesors ===
trueSuccessor: v1696 
falseSuccessor: v1698 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2455 #trueSuccessor: v1696 #falseSuccessor: v1698  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2494 
=== Usages ===
=== Predecessor ===
v1699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2494 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2569 
=== Succesors ===
next: v2495 
=== Usages ===
?464 v2616 v2571 v2572 ?573 v2633 
=== Predecessor ===
v1696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2569 #next: v2495  <|@  <|@
f <@~|@floating>@ <|@
tid v2616 <|@
result [v23|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2494 
=== Succesors ===
=== Usages ===
v2495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2495 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2616 
=== Succesors ===
next: v412 
=== Usages ===
v2457 v2456 
=== Predecessor ===
a2494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2616 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2495 
y: v2451 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2495 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2571 <|@
result [v23|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2494 
=== Succesors ===
=== Usages ===
i2496 a2498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2494  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?308 
values: a2486 i1191 
=== Succesors ===
=== Usages ===
?446 ?2249 ?399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?308 values: a2486 i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2456 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
v2495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2456 #trueSuccessor: v405 #falseSuccessor: v411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591297682568592980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2496 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2496 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2571 
=== Succesors ===
next: v454 
=== Usages ===
v451 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2571 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2496 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2496  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
i2496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v452 #falseSuccessor: v453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v23|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4567283859182263158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2497 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2497  <|@  <|@
f <@~|@floating>@ <|@
tid v2572 <|@
result [v23|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2494 
=== Succesors ===
=== Usages ===
i2497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2497 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2572 
=== Succesors ===
next: v1707 
=== Usages ===
v455 
=== Predecessor ===
v453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2572 #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2497 
y: i1191 
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2497 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v1706 
falseSuccessor: v1704 
=== Usages ===
=== Predecessor ===
i2497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v1706 #falseSuccessor: v1704  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v23|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2303 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2303  <|@  <|@
f <@~|@floating>@ <|@
tid i2304 <|@
result int[-312851|0xfffffffffffb39ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -312851
stableDimension: 0
stamp: i32 [-312851] â‡Š00000000fffb39ed â‡ˆ00000000fffb39ed
stampKind: i32
value: int[-312851|0xfffffffffffb39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-312851|0xfffffffffffb39ed]] destination: B27 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B100" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B28 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B124" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1711 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1711  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2495 
y: v2447 
=== Succesors ===
=== Usages ===
v1711 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2495 y: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2457 
=== Succesors ===
trueSuccessor: v1708 
falseSuccessor: v1710 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2457 #trueSuccessor: v1708 #falseSuccessor: v1710  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2498 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2498 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2571 
=== Succesors ===
next: v2499 
=== Usages ===
?591 v2617 v2573 v2574 ?2246 v2632 
=== Predecessor ===
v1708 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2571 #next: v2499  <|@  <|@
f <@~|@floating>@ <|@
tid v2617 <|@
result [v25|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2498 
=== Succesors ===
=== Usages ===
v2499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2499 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2617 
=== Succesors ===
next: v477 
=== Usages ===
v2459 v2458 
=== Predecessor ===
a2498 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2617 #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2499 
y: v2451 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2499 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2573 <|@
result [v25|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2498 
=== Succesors ===
=== Usages ===
i2500 a2502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2498  <|@  <|@
tid ?446 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?381 
values: a2490 i1191 
=== Succesors ===
=== Usages ===
?573 ?2248 ?464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: a2490 i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2458 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v2499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2458 #trueSuccessor: v470 #falseSuccessor: v476  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v23|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586793943637382491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2500 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2500 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2573 
=== Succesors ===
next: v490 
=== Usages ===
v487 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2573 #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2500 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2500  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v488 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i2500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v488 #falseSuccessor: v489  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v25|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4562780151664587093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v908  <|@  <|@
f <@*|@fixed>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2501 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2501  <|@  <|@
f <@~|@floating>@ <|@
tid v2574 <|@
result [v25|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2498 
=== Succesors ===
=== Usages ===
i2501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2501 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2574 
=== Succesors ===
next: v1719 
=== Usages ===
v491 
=== Predecessor ===
v489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2574 #next: v1719  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2501 
y: i1191 
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2501 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v1718 
falseSuccessor: v1716 
=== Usages ===
=== Predecessor ===
i2501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v1718 #falseSuccessor: v1716  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v25|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2309 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2309  <|@  <|@
f <@~|@floating>@ <|@
tid i2310 <|@
result int[-315411|0xfffffffffffb2fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315411
stableDimension: 0
stamp: i32 [-315411] â‡Š00000000fffb2fed â‡ˆ00000000fffb2fed
stampKind: i32
value: int[-315411|0xfffffffffffb2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1718 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315411|0xfffffffffffb2fed]] destination: B34 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B100" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B35 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B123" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1723  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2499 
y: v2447 
=== Succesors ===
=== Usages ===
v1723 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2499 y: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2459 
=== Succesors ===
trueSuccessor: v1720 
falseSuccessor: v1722 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2459 #trueSuccessor: v1720 #falseSuccessor: v1722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2502 
=== Usages ===
=== Predecessor ===
v1723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2502 <|@
result v27|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2573 
=== Succesors ===
next: v2503 
=== Usages ===
a1236 v2618 v2575 v2576 
=== Predecessor ===
v1720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2573 #next: v2503  <|@  <|@
f <@~|@floating>@ <|@
tid v2618 <|@
result [v27|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2502 
=== Succesors ===
=== Usages ===
v2503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2503 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2618 
=== Succesors ===
next: v604 
=== Usages ===
v2460 
=== Predecessor ===
a2502 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2618 #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2503 
y: v2451 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2503 y: v2451  <|@  <|@
tid ?573 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: a2494 i1191 
=== Succesors ===
=== Usages ===
?2247 ?2246 ?591 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a2494 i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v2460 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v2503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2460 #trueSuccessor: v597 #falseSuccessor: v603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v25|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582290204709097494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2504 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2504  <|@  <|@
f <@~|@floating>@ <|@
tid v2575 <|@
result [v27|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2502 
=== Succesors ===
=== Usages ===
i2504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2504 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2575 
=== Succesors ===
next: v617 
=== Usages ===
v614 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2575 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2504 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2504  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v614 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
i2504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v614 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v27|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558276444149176811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2505 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2505  <|@  <|@
f <@~|@floating>@ <|@
tid v2576 <|@
result [v27|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2502 
=== Succesors ===
=== Usages ===
i2505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2505 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2576 
=== Succesors ===
next: v1731 
=== Usages ===
v618 
=== Predecessor ===
v616 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2576 #next: v1731  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2505 
y: i1191 
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2505 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1731 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v1730 
falseSuccessor: v1728 
=== Usages ===
=== Predecessor ===
i2505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v1730 #falseSuccessor: v1728  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v27|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2313 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2313  <|@  <|@
f <@~|@floating>@ <|@
tid i2314 <|@
result int[-317971|0xfffffffffffb25ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317971
stableDimension: 0
stamp: i32 [-317971] â‡Š00000000fffb25ed â‡ˆ00000000fffb25ed
stampKind: i32
value: int[-317971|0xfffffffffffb25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317971|0xfffffffffffb25ed]] destination: B41 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1064 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1064  <|@  <|@
f <@*|@fixed>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B42 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B99" 
    xhandlers
    flags 
    probability 4582289926118969972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i561 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i561  <|@  <|@
f <@~|@floating>@ <|@
tid a1236 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2502 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2502  <|@  <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@44b67f44
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1236 i1191 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1236 i1191  <|@  <|@
tid ?2246 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: a2498 i1191 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a2498 i1191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i561 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1243 
stateDuring: ?2246 
=== Succesors ===
next: v566 
=== Usages ===
v563 
=== Predecessor ===
v603 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1243 stateDuring: ?2246 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i561 
y: i47 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i561 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v565 
=== Usages ===
=== Predecessor ===
i561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v564 #falseSuccessor: v565  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v25|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4553834388563918620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v923 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v923  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B98" 
    xhandlers
    flags 
    probability 4560875826609035641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v923 v924 
=== Succesors ===
next: a2506 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v923 v924 #next: a2506  <|@  <|@
f <@~|@floating>@ <|@
tid v2632 <|@
result [v25|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2498 
=== Succesors ===
=== Usages ===
a2506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2506 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2632 
=== Succesors ===
next: v2627 
=== Usages ===
a1246 v2627 
=== Predecessor ===
v922 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2632 #next: v2627  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?573 
values: a2498 i1191 i47 
=== Succesors ===
=== Usages ===
v2627 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a2498 i1191 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?591 
object: a2506 
=== Succesors ===
next: i569 
=== Usages ===
=== Predecessor ===
a2506 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?591 object: a2506 #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid a1246 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2506 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2506  <|@  <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2328caa8
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1246 i1191 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1246 i1191  <|@  <|@
tid ?2247 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: - - 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1250 
stateDuring: ?2247 
=== Succesors ===
next: v439 
=== Usages ===
v436 
=== Predecessor ===
v2627 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1250 stateDuring: ?2247 #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i569 
y: i47 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i569 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v436 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
i569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v436 #trueSuccessor: v437 #falseSuccessor: v438  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v25|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v25|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4532181634653515973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B97" 
    xhandlers
    flags 
    probability 4562827526736041527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v907 v908 
=== Succesors ===
next: a2507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v907 v908 #next: a2507  <|@  <|@
f <@~|@floating>@ <|@
tid v2633 <|@
result [v23|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2494 
=== Succesors ===
=== Usages ===
a2507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2507 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2633 
=== Succesors ===
next: v2628 
=== Usages ===
a1253 v2628 
=== Predecessor ===
v906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2633 #next: v2628  <|@  <|@
tid ?464 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?446 
values: a2494 i1191 i47 
=== Succesors ===
=== Usages ===
v2628 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a2494 i1191 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?464 
object: a2507 
=== Succesors ===
next: i442 
=== Usages ===
=== Predecessor ===
a2507 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?464 object: a2507 #next: i442  <|@  <|@
f <@~|@floating>@ <|@
tid a1253 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2507 
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2507  <|@  <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5b38bb6a
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1253 i1191 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1253 i1191  <|@  <|@
tid ?2248 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: - - 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i442 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1257 
stateDuring: ?2248 
=== Succesors ===
next: v374 
=== Usages ===
v371 
=== Predecessor ===
v2628 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1257 stateDuring: ?2248 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i442 
y: i47 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i442 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v371 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
i442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v371 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v23|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v34|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4534245246923867060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B96" 
    xhandlers
    flags 
    probability 4567315607703421434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v891 v892 
=== Succesors ===
next: a2508 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v891 v892 #next: a2508  <|@  <|@
f <@~|@floating>@ <|@
tid v2634 <|@
result [v21|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2490 
=== Succesors ===
=== Usages ===
a2508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2508 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2634 
=== Succesors ===
next: v2629 
=== Usages ===
a1260 v2629 
=== Predecessor ===
v890 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2634 #next: v2629  <|@  <|@
tid ?399 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?381 
values: a2490 i1191 i47 
=== Succesors ===
=== Usages ===
v2629 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: a2490 i1191 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?399 
object: a2508 
=== Succesors ===
next: i377 
=== Usages ===
=== Predecessor ===
a2508 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?399 object: a2508 #next: i377  <|@  <|@
f <@~|@floating>@ <|@
tid a1260 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2508 
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2508  <|@  <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@46e2f02c
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1260 i1191 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1260 i1191  <|@  <|@
tid ?2249 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?381 
values: - - 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i377 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1264 
stateDuring: ?2249 
=== Succesors ===
next: v301 
=== Usages ===
v298 
=== Predecessor ===
v2629 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1264 stateDuring: ?2249 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i47 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
i377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v299 #falseSuccessor: v300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v21|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4538724519261336704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4571819220194887156
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v876 
=== Succesors ===
next: a2509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v876 #next: a2509  <|@  <|@
f <@~|@floating>@ <|@
tid v2635 <|@
result [v17|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
a2509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2509 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2635 
=== Succesors ===
next: v2510 
=== Usages ===
v2619 v2578 v2577 
=== Predecessor ===
v874 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2635 #next: v2510  <|@  <|@
tid ?322 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?308 
values: a2486 i1191 i47 
=== Succesors ===
=== Usages ===
v2328 v2510 i2514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?308 values: a2486 i1191 i47  <|@  <|@
f <@~|@floating>@ <|@
tid v2619 <|@
result [v40|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2509 
=== Succesors ===
=== Usages ===
v2510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2510 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?322 
guard: - 
address: v2619 
=== Succesors ===
next: v520 
=== Usages ===
v2463 v2461 
=== Predecessor ===
a2509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?322 guard: - address: v2619 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2510 
y: v2451 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2510 y: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v2577 <|@
result [v40|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2509 
=== Succesors ===
=== Usages ===
i2511 a2513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2509  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2461 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v2510 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2461 #trueSuccessor: v513 #falseSuccessor: v519  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2511 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2511 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2577 
=== Succesors ===
next: v581 
=== Usages ===
v578 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2577 #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2511 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2511  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
i2511 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v579 #falseSuccessor: v580  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v40|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 4543131874047153820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v971  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2512 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2512  <|@  <|@
f <@~|@floating>@ <|@
tid v2578 <|@
result [v40|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2509 
=== Succesors ===
=== Usages ===
i2512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2512 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2578 
=== Succesors ===
next: v1751 
=== Usages ===
v582 
=== Predecessor ===
v580 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2578 #next: v1751  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2512 
y: i1191 
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2512 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1751 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v1750 
falseSuccessor: v1748 
=== Usages ===
=== Predecessor ===
i2512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v1750 #falseSuccessor: v1748  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v40|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2331 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2331  <|@  <|@
f <@~|@floating>@ <|@
tid i2332 <|@
result int[-325907|0xfffffffffffb06ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -325907
stableDimension: 0
stamp: i32 [-325907] â‡Š00000000fffb06ed â‡ˆ00000000fffb06ed
stampKind: i32
value: int[-325907|0xfffffffffffb06ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
v1750 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-325907|0xfffffffffffb06ed]] destination: B55 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B56 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B94" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1755 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1755  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2510 
y: v2462 
=== Succesors ===
=== Usages ===
v1755 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2510 y: v2462  <|@  <|@
f <@*|@fixed>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2463 
=== Succesors ===
trueSuccessor: v1752 
falseSuccessor: v1754 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2463 #trueSuccessor: v1752 #falseSuccessor: v1754  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B93" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1759 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1759  <|@  <|@
f <@~|@floating>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2485 
y: i1626 
=== Succesors ===
=== Usages ===
v1759 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2485 y: i1626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2474 
=== Succesors ===
trueSuccessor: v1756 
falseSuccessor: v1758 
=== Usages ===
=== Predecessor ===
v1752 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2474 #trueSuccessor: v1756 #falseSuccessor: v1758  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B92" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2513 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2513 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2577 
=== Succesors ===
next: i2514 
=== Usages ===
v2580 v2579 
=== Predecessor ===
v1756 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2577 #next: i2514  <|@  <|@
f <@~|@floating>@ <|@
tid v2579 <|@
result [v42|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2513 
=== Succesors ===
=== Usages ===
i2514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2514 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?322 
guard: - 
address: v2579 
=== Succesors ===
next: v1767 
=== Usages ===
v1284 
=== Predecessor ===
a2513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?322 guard: - address: v2579 #next: v1767  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2514 
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1191 y: i2514  <|@  <|@
f <@*|@fixed>@ <|@
tid v1767 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1284 
=== Succesors ===
trueSuccessor: v1764 
falseSuccessor: v1766 
=== Usages ===
=== Predecessor ===
i2514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1284 #trueSuccessor: v1764 #falseSuccessor: v1766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v40|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP (x: v19|DWORD, y: [v42|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2515 
=== Usages ===
i2515 
=== Predecessor ===
v1767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2515  <|@  <|@
f <@~|@floating>@ <|@
tid j1514 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2485 
=== Succesors ===
=== Usages ===
v2580 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2485  <|@  <|@
f <@~|@floating>@ <|@
tid v2580 <|@
result [v43|QWORD + v42|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1514 
index: a2513 
=== Succesors ===
=== Usages ===
i2515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1514 index: a2513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2515 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1764 
address: v2580 
=== Succesors ===
next: v80 
=== Usages ===
i1515 
=== Predecessor ===
v1764 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1764 address: v2580 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i1515 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2515 
=== Succesors ===
=== Usages ===
i765 v77 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2515  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1515 
y: i47 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1515 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i2515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v43|QWORD + v42|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4538724539427290083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B11" "B53" 
    successors "B63" "B89" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v858 v860 v971 
=== Succesors ===
next: a2516 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v858 v860 v971 #next: a2516  <|@  <|@
f <@~|@floating>@ <|@
tid v2581 <|@
result [v7|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
a2516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2516 <|@
result v45|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2581 
=== Succesors ===
next: v2630 
=== Usages ===
v2621 v2630 v2592 v2595 
=== Predecessor ===
v857 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2581 #next: v2630  <|@  <|@
tid ?859 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?87 
values: a1149 i1191 i47 
=== Succesors ===
=== Usages ===
v2376 v2630 v2518 i2520 i2524 v2631 i2529 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1149 i1191 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
object: a2516 
=== Succesors ===
next: a2517 
=== Usages ===
=== Predecessor ===
a2516 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?859 object: a2516 #next: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2517 <|@
result v46|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2582 
=== Succesors ===
next: v2518 
=== Usages ===
a1299 v2620 v2583 v2587 v2591 
=== Predecessor ===
v2630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2582 #next: v2518  <|@  <|@
f <@~|@floating>@ <|@
tid v2620 <|@
result [v46|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2517 
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2518 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2620 
=== Succesors ===
next: v1779 
=== Usages ===
v2465 
=== Predecessor ===
a2517 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2620 #next: v1779  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2518 
y: v2464 
=== Succesors ===
=== Usages ===
v1779 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2518 y: v2464  <|@  <|@
f <@*|@fixed>@ <|@
tid v1779 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2465 
=== Succesors ===
trueSuccessor: v1776 
falseSuccessor: v1778 
=== Usages ===
=== Predecessor ===
v2518 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2465 #trueSuccessor: v1776 #falseSuccessor: v1778  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v7|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v45|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP [v46|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B88" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2519 
=== Usages ===
=== Predecessor ===
v1779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2519 <|@
result v47|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2555 
=== Succesors ===
next: i2520 
=== Usages ===
a1303 v2584 
=== Predecessor ===
v1776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2555 #next: i2520  <|@  <|@
f <@~|@floating>@ <|@
tid v2584 <|@
result [v47|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2519 
=== Succesors ===
=== Usages ===
i2520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2520 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2584 
=== Succesors ===
next: i2521 
=== Usages ===
v1311 
=== Predecessor ===
a2519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2584 #next: i2521  <|@  <|@
f <@~|@floating>@ <|@
tid v2583 <|@
result [v46|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2517 
=== Succesors ===
=== Usages ===
i2521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2521 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2583 
=== Succesors ===
next: v1787 
=== Usages ===
v2585 v1311 
=== Predecessor ===
i2520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2583 #next: v1787  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2521 
y: i2520 
=== Succesors ===
=== Usages ===
v1787 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2521 y: i2520  <|@  <|@
f <@*|@fixed>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1311 
=== Succesors ===
trueSuccessor: v1784 
falseSuccessor: v1786 
=== Usages ===
=== Predecessor ===
i2521 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1311 #trueSuccessor: v1784 #falseSuccessor: v1786  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v48|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV [v46|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2522 
=== Usages ===
i2522 
=== Predecessor ===
v1787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2522  <|@  <|@
f <@~|@floating>@ <|@
tid a1303 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2519 
=== Succesors ===
=== Usages ===
v2585 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2519  <|@  <|@
f <@~|@floating>@ <|@
tid v2585 <|@
result [v50|QWORD[.] + v49|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1303 
index: i2521 
=== Succesors ===
=== Usages ===
i2522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1303 index: i2521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2522 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1784 
address: v2585 
=== Succesors ===
next: v1791 
=== Usages ===
v169 v1356 i2252 
=== Predecessor ===
v1784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1784 address: v2585 #next: v1791  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2522 
y: i47 
=== Succesors ===
=== Usages ===
v1791 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2522 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v1790 
falseSuccessor: v1788 
=== Usages ===
=== Predecessor ===
i2522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v1790 #falseSuccessor: v1788  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v50|QWORD[.] + v49|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2383 
=== Usages ===
=== Predecessor ===
v1791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2383  <|@  <|@
f <@~|@floating>@ <|@
tid i2384 <|@
result int[-337683|0xfffffffffffad8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -337683
stableDimension: 0
stamp: i32 [-337683] â‡Š00000000fffad8ed â‡ˆ00000000fffad8ed
stampKind: i32
value: int[-337683|0xfffffffffffad8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1790 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-337683|0xfffffffffffad8ed]] destination: B65 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B87" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2523 
=== Usages ===
=== Predecessor ===
v1791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2523 <|@
result v52|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2586 
=== Succesors ===
next: i2524 
=== Usages ===
a1323 v2588 
=== Predecessor ===
v1788 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2586 #next: i2524  <|@  <|@
f <@~|@floating>@ <|@
tid v2588 <|@
result [v52|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2523 
=== Succesors ===
=== Usages ===
i2524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2524 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2588 
=== Succesors ===
next: i2525 
=== Usages ===
v1358 v1349 
=== Predecessor ===
a2523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2588 #next: i2525  <|@  <|@
f <@~|@floating>@ <|@
tid v2587 <|@
result [v46|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2517 
=== Succesors ===
=== Usages ===
i2525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2525 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2587 
=== Succesors ===
next: v1799 
=== Usages ===
v1349 i184 v2589 
=== Predecessor ===
i2524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2587 #next: v1799  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2525 
y: i2524 
=== Succesors ===
=== Usages ===
v1799 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2525 y: i2524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1349 
=== Succesors ===
trueSuccessor: v1796 
falseSuccessor: v1798 
=== Usages ===
=== Predecessor ===
i2525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1349 #trueSuccessor: v1796 #falseSuccessor: v1798  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v53|DWORD = MOV [v52|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV [v46|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B86" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1803 
=== Usages ===
i2534 v1356 
=== Predecessor ===
v1799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1803  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i2525 
y: i60 
=== Succesors ===
=== Usages ===
v2590 v1358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2525 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i2524 
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i184 y: i2524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1358 
=== Succesors ===
trueSuccessor: v1800 
falseSuccessor: v1802 
=== Usages ===
=== Predecessor ===
v1796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1358 #trueSuccessor: v1800 #falseSuccessor: v1802  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B76" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2526 
=== Usages ===
i2533 v1365 
=== Predecessor ===
v1803 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2526  <|@  <|@
f <@~|@floating>@ <|@
tid v2591 <|@
result [v46|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2517 
=== Succesors ===
=== Usages ===
a2526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2526 <|@
result v56|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2591 
=== Succesors ===
next: v2631 
=== Usages ===
a1368 v2631 v2622 
=== Predecessor ===
v1800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2591 #next: v2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
object: a2526 
=== Succesors ===
next: v2527 
=== Usages ===
=== Predecessor ===
a2526 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?859 object: a2526 #next: v2527  <|@  <|@
f <@~|@floating>@ <|@
tid v2621 <|@
result [v45|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2516 
=== Succesors ===
=== Usages ===
v2527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2527 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2621 
=== Succesors ===
next: v164 
=== Usages ===
v2467 v2466 
=== Predecessor ===
v2631 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2621 #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2527 
y: v2462 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2527 y: v2462  <|@  <|@
f <@~|@floating>@ <|@
tid v2592 <|@
result [v45|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2516 
=== Succesors ===
=== Usages ===
a2528 i2531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2516  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2466 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
v2527 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2466 #trueSuccessor: v157 #falseSuccessor: v163  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v46|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v56|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV [v45|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B75" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2528 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2528 <|@
result v58|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2592 
=== Succesors ===
next: i2529 
=== Usages ===
v2594 v2593 
=== Predecessor ===
v157 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2592 #next: i2529  <|@  <|@
f <@~|@floating>@ <|@
tid v2593 <|@
result [v58|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2528 
=== Succesors ===
=== Usages ===
i2529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2529 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2593 
=== Succesors ===
next: v1815 
=== Usages ===
v1379 
=== Predecessor ===
a2528 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2593 #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid v1379 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2529 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1191 y: i2529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1379 
=== Succesors ===
trueSuccessor: v1812 
falseSuccessor: v1814 
=== Usages ===
=== Predecessor ===
i2529 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1379 #trueSuccessor: v1812 #falseSuccessor: v1814  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v45|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP (x: v19|DWORD, y: [v58|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1819 
=== Usages ===
i2530 
=== Predecessor ===
v1815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2485 
y: i1626 
=== Succesors ===
=== Usages ===
v1819 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2485 y: i1626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1627 
=== Succesors ===
trueSuccessor: v1816 
falseSuccessor: v1818 
=== Usages ===
=== Predecessor ===
v1812 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1627 #trueSuccessor: v1816 #falseSuccessor: v1818  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2530 
=== Usages ===
=== Predecessor ===
v1819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2530  <|@  <|@
f <@~|@floating>@ <|@
tid j2473 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2485 
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2485  <|@  <|@
f <@~|@floating>@ <|@
tid v2594 <|@
result [v59|QWORD + v58|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j2473 
index: a2528 
=== Succesors ===
=== Usages ===
i2530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2473 index: a2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2530 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1812 
address: v2594 
=== Succesors ===
next: v1835 
=== Usages ===
i1524 
=== Predecessor ===
v1816 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1812 address: v2594 #next: v1835  <|@  <|@
f <@~|@floating>@ <|@
tid i1524 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2530 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2530  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1524 
y: i47 
=== Succesors ===
=== Usages ===
v1835 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1524 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v1834 
falseSuccessor: v1832 
=== Usages ===
=== Predecessor ===
i2530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v1834 #falseSuccessor: v1832  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVZXB [v59|QWORD + v58|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1833 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1833  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: ?62 
values: a1149 a2 i3 a4 i1191 i47 
=== Succesors ===
=== Usages ===
v1833 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: a1149 a2 i3 a4 i1191 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1296
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -331795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:21, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2626 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2626  <|@  <|@
f <@*|@fixed>@ <|@
tid v2626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2625 
=== Predecessor ===
v1832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
v1819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2405  <|@  <|@
f <@~|@floating>@ <|@
tid i2406 <|@
result int[-350739|0xfffffffffffaa5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -350739
stableDimension: 0
stamp: i32 [-350739] â‡Š00000000fffaa5ed â‡ˆ00000000fffaa5ed
stampKind: i32
value: int[-350739|0xfffffffffffaa5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1818 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-350739|0xfffffffffffaa5ed]] destination: B74 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2403 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2403  <|@  <|@
f <@~|@floating>@ <|@
tid i2404 <|@
result int[-353307|0xfffffffffffa9be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -353307
stableDimension: 0
stamp: i32 [-353307] â‡Š00000000fffa9be5 â‡ˆ00000000fffa9be5
stampKind: i32
value: int[-353307|0xfffffffffffa9be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-353307|0xfffffffffffa9be5]] destination: B75 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B85" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1823  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2527 
y: v2451 
=== Succesors ===
=== Usages ===
v1823 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2527 y: v2451  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2467 
=== Succesors ===
trueSuccessor: v1820 
falseSuccessor: v1822 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2467 #trueSuccessor: v1820 #falseSuccessor: v1822  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2531 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2531 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2592 
=== Succesors ===
next: v1827 
=== Usages ===
v347 
=== Predecessor ===
v1820 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2592 #next: v1827  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1191 
y: i2531 
=== Succesors ===
=== Usages ===
v1827 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1191 y: i2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v1827 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1826 
falseSuccessor: v1824 
=== Usages ===
=== Predecessor ===
i2531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1826 #falseSuccessor: v1824  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v45|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2397 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2397  <|@  <|@
f <@~|@floating>@ <|@
tid i2398 <|@
result int[-355603|0xfffffffffffa92ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355603
stableDimension: 0
stamp: i32 [-355603] â‡Š00000000fffa92ed â‡ˆ00000000fffa92ed
stampKind: i32
value: int[-355603|0xfffffffffffa92ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1826 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355603|0xfffffffffffa92ed]] destination: B78 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2532 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2532  <|@  <|@
f <@~|@floating>@ <|@
tid v2595 <|@
result [v45|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2516 
=== Succesors ===
=== Usages ===
i2532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2532 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2595 
=== Succesors ===
next: v1831 
=== Usages ===
v351 
=== Predecessor ===
v1824 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2595 #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2532 
y: i1191 
=== Succesors ===
=== Usages ===
v1831 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2532 y: i1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v1830 
falseSuccessor: v1828 
=== Usages ===
=== Predecessor ===
i2532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v1830 #falseSuccessor: v1828  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v45|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2401 
=== Usages ===
=== Predecessor ===
v1831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2401  <|@  <|@
f <@~|@floating>@ <|@
tid i2402 <|@
result int[-355859|0xfffffffffffa91ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355859
stableDimension: 0
stamp: i32 [-355859] â‡Š00000000fffa91ed â‡ˆ00000000fffa91ed
stampKind: i32
value: int[-355859|0xfffffffffffa91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1830 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355859|0xfffffffffffa91ed]] destination: B80 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v1831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2625 
=== Predecessor ===
v1828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B73" "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2626 v89 
=== Succesors ===
next: i2533 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2626 v89 #next: i2533  <|@  <|@
f <@~|@floating>@ <|@
tid a1323 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2523 
=== Succesors ===
=== Usages ===
v2589 a652 v2590 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2523  <|@  <|@
f <@~|@floating>@ <|@
tid v2590 <|@
result [v61|QWORD[.] + v55|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1323 
index: i184 
=== Succesors ===
=== Usages ===
v1365 i2533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1323 index: i184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2533 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1800 
address: v2590 
=== Succesors ===
next: i2534 
=== Usages ===
i658 i656 
=== Predecessor ===
v2625 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1800 address: v2590 #next: i2534  <|@  <|@
f <@~|@floating>@ <|@
tid v2589 <|@
result [v61|QWORD[.] + v54|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1323 
index: i2525 
=== Succesors ===
=== Usages ===
v1356 i2534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1323 index: i2525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2534 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1796 
address: v2589 
=== Succesors ===
next: v1356 
=== Usages ===
i655 i653 
=== Predecessor ===
i2533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1796 address: v2589 #next: v1356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1796 
address: v2589 
value: i2522 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
i2534 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1796 address: v2589 value: i2522 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1800 
address: v2590 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2535 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1800 address: v2590 value: i54 stateAfter: - lastLocationAccess: - #next: v2535  <|@  <|@
f <@~|@floating>@ <|@
tid v2622 <|@
result [v56|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2526 
=== Succesors ===
=== Usages ===
v2535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2535 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2622 
=== Succesors ===
next: v232 
=== Usages ===
v2469 
=== Predecessor ===
v1365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2622 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2535 
y: v2468 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2535 y: v2468  <|@  <|@
f <@~|@floating>@ <|@
tid a1299 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2517 
=== Succesors ===
=== Usages ===
a647 a648 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2517  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.8249645592753172
=== Inputs ===
condition: v2469 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v2535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2469 #trueSuccessor: v225 #falseSuccessor: v231  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v61|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v61|QWORD[.] + v54|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v54|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v55|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v56|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575204503313447612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.], v51|DWORD, v61|QWORD[.], v63|DWORD, v62|DWORD] destination: B83 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B115" 
    xhandlers
    flags 
    probability 4564902952382738090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid a1368 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2526 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2526  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.], v65|QWORD[.], v63|DWORD, v62|DWORD] destination: B84 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2399 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2399  <|@  <|@
f <@~|@floating>@ <|@
tid i2400 <|@
result int[-354355|0xfffffffffffa97cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -354355
stableDimension: 0
stamp: i32 [-354355] â‡Š00000000fffa97cd â‡ˆ00000000fffa97cd
stampKind: i32
value: int[-354355|0xfffffffffffa97cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1822 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-354355|0xfffffffffffa97cd]] destination: B85 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2393 
=== Usages ===
=== Predecessor ===
v1803 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2393  <|@  <|@
f <@~|@floating>@ <|@
tid i2394 <|@
result int[-347931|0xfffffffffffab0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -347931
stableDimension: 0
stamp: i32 [-347931] â‡Š00000000fffab0e5 â‡ˆ00000000fffab0e5
stampKind: i32
value: int[-347931|0xfffffffffffab0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1802 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-347931|0xfffffffffffab0e5]] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2391 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2391  <|@  <|@
f <@~|@floating>@ <|@
tid i2392 <|@
result int[-345627|0xfffffffffffab9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -345627
stableDimension: 0
stamp: i32 [-345627] â‡Š00000000fffab9e5 â‡ˆ00000000fffab9e5
stampKind: i32
value: int[-345627|0xfffffffffffab9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-345627|0xfffffffffffab9e5]] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2385 
=== Usages ===
=== Predecessor ===
v1787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2385  <|@  <|@
f <@~|@floating>@ <|@
tid i2386 <|@
result int[-335899|0xfffffffffffadfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -335899
stableDimension: 0
stamp: i32 [-335899] â‡Š00000000fffadfe5 â‡ˆ00000000fffadfe5
stampKind: i32
value: int[-335899|0xfffffffffffadfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1786 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-335899|0xfffffffffffadfe5]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2381 
=== Usages ===
=== Predecessor ===
v1779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid i2382 <|@
result int[-333107|0xfffffffffffaeacd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333107
stableDimension: 0
stamp: i32 [-333107] â‡Š00000000fffaeacd â‡ˆ00000000fffaeacd
stampKind: i32
value: int[-333107|0xfffffffffffaeacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v1778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333107|0xfffffffffffaeacd]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B65" "B88" "B87" "B86" "B78" "B85" "B80" "B75" "B74" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2374 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-355859 - -331531] â‡Š00000000fffa80c5 â‡ˆ00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2371 
values: i2382 i2384 i2386 i2392 i2394 i2398 i2400 i2402 i2404 i2406 
=== Succesors ===
=== Usages ===
v2376 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2371 values: i2382 i2384 i2386 i2392 i2394 i2398 i2400 i2402 i2404 i2406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2381 v2383 v2385 v2391 v2393 v2397 v2399 v2401 v2403 v2405 
=== Succesors ===
next: v2376 
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2381 v2383 v2385 v2391 v2393 v2397 v2399 v2401 v2403 v2405 #next: v2376  <|@  <|@
f <@*|@fixed>@ <|@
tid v2376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
actionAndReason: i2374 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2371 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?859 actionAndReason: i2374 speculation: a2257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567252313424605948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B91 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2337 
=== Usages ===
=== Predecessor ===
v1767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2337  <|@  <|@
f <@~|@floating>@ <|@
tid i2338 <|@
result int[-328987|0xfffffffffffafae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328987
stableDimension: 0
stamp: i32 [-328987] â‡Š00000000fffafae5 â‡ˆ00000000fffafae5
stampKind: i32
value: int[-328987|0xfffffffffffafae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
v1766 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328987|0xfffffffffffafae5]] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2335 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2335  <|@  <|@
f <@~|@floating>@ <|@
tid i2336 <|@
result int[-326419|0xfffffffffffb04ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326419
stableDimension: 0
stamp: i32 [-326419] â‡Š00000000fffb04ed â‡ˆ00000000fffb04ed
stampKind: i32
value: int[-326419|0xfffffffffffb04ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
v1758 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326419|0xfffffffffffb04ed]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2333 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2333  <|@  <|@
f <@~|@floating>@ <|@
tid i2334 <|@
result int[-326195|0xfffffffffffb05cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326195
stableDimension: 0
stamp: i32 [-326195] â‡Š00000000fffb05cd â‡ˆ00000000fffb05cd
stampKind: i32
value: int[-326195|0xfffffffffffb05cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
v1754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326195|0xfffffffffffb05cd]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B55" "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2326 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-328987 - -324619] â‡Š00000000fffa00c5 â‡ˆ00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2323 
values: i2332 i2334 i2336 i2338 
=== Succesors ===
=== Usages ===
v2328 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2323 values: i2332 i2334 i2336 i2338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2331 v2333 v2335 v2337 
=== Succesors ===
next: v2328 
=== Usages ===
i2326 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2331 v2333 v2335 v2337 #next: v2328  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?322 
actionAndReason: i2326 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2323 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?322 actionAndReason: i2326 speculation: a2257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567252300718057233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B100" 
    xhandlers
    flags 
    probability 4562764029693724976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B97 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B100" 
    xhandlers
    flags 
    probability 4560781076466126774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582208695417099384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B91" "B96" "B14" "B21" "B56" "B28" "B35" "B99" "B42" "B97" "B98" 
    successors "B101" "B121" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i765 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v760 
values: i1515 i60 i60 i60 i60 i60 i60 i60 i60 i60 i60 
=== Succesors ===
=== Usages ===
?762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v760 values: i1515 i60 i60 i60 i60 i60 i60 i60 i60 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v763 v787 v821 v954 v1010 v1028 v1046 v1064 v1082 v1099 
=== Succesors ===
next: a2536 
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v763 v787 v821 v954 v1010 v1028 v1046 v1064 v1082 v1099 #next: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2536 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2582 
=== Succesors ===
next: v2537 
=== Usages ===
a1392 v2623 v2596 v2599 v2603 
=== Predecessor ===
v760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2582 #next: v2537  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?87 
values: a1149 i1191 i765 
=== Succesors ===
=== Usages ===
v2354 v2537 i2539 i2543 v2546 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1149 i1191 i765  <|@  <|@
f <@~|@floating>@ <|@
tid v2623 <|@
result [v69|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2536 
=== Succesors ===
=== Usages ===
v2537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2537 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2623 
=== Succesors ===
next: v1843 
=== Usages ===
v2470 
=== Predecessor ===
a2536 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2623 #next: v1843  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2537 
y: v2464 
=== Succesors ===
=== Usages ===
v1843 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2537 y: v2464  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2470 
=== Succesors ===
trueSuccessor: v1840 
falseSuccessor: v1842 
=== Usages ===
=== Predecessor ===
v2537 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2470 #trueSuccessor: v1840 #falseSuccessor: v1842  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP [v69|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B120" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2538 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2538 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2555 
=== Succesors ===
next: i2539 
=== Usages ===
a1396 v2597 
=== Predecessor ===
v1840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2555 #next: i2539  <|@  <|@
f <@~|@floating>@ <|@
tid v2597 <|@
result [v70|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2538 
=== Succesors ===
=== Usages ===
i2539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2539 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2597 
=== Succesors ===
next: i2540 
=== Usages ===
v1404 
=== Predecessor ===
a2538 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2597 #next: i2540  <|@  <|@
f <@~|@floating>@ <|@
tid v2596 <|@
result [v69|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2536 
=== Succesors ===
=== Usages ===
i2540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2540 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2596 
=== Succesors ===
next: v1851 
=== Usages ===
v2598 v1404 
=== Predecessor ===
i2539 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2596 #next: v1851  <|@  <|@
f <@~|@floating>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2540 
y: i2539 
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2540 y: i2539  <|@  <|@
f <@*|@fixed>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1404 
=== Succesors ===
trueSuccessor: v1848 
falseSuccessor: v1850 
=== Usages ===
=== Predecessor ===
i2540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1404 #trueSuccessor: v1848 #falseSuccessor: v1850  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v71|DWORD = MOV [v70|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV [v69|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2541 
=== Usages ===
i2541 
=== Predecessor ===
v1851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2541  <|@  <|@
f <@~|@floating>@ <|@
tid a1396 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2538 
=== Succesors ===
=== Usages ===
v2598 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2538  <|@  <|@
f <@~|@floating>@ <|@
tid v2598 <|@
result [v73|QWORD[.] + v72|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1396 
index: i2540 
=== Succesors ===
=== Usages ===
i2541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1396 index: i2540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2541 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1848 
address: v2598 
=== Succesors ===
next: v1855 
=== Usages ===
v672 v1447 i2252 
=== Predecessor ===
v1848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1848 address: v2598 #next: v1855  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2541 
y: i47 
=== Succesors ===
=== Usages ===
v1855 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2541 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v672 
=== Succesors ===
trueSuccessor: v1854 
falseSuccessor: v1852 
=== Usages ===
=== Predecessor ===
i2541 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v672 #trueSuccessor: v1854 #falseSuccessor: v1852  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOV [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2359 
=== Usages ===
=== Predecessor ===
v1855 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2359  <|@  <|@
f <@~|@floating>@ <|@
tid i2360 <|@
result int[-361491|0xfffffffffffa7bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -361491
stableDimension: 0
stamp: i32 [-361491] â‡Š00000000fffa7bed â‡ˆ00000000fffa7bed
stampKind: i32
value: int[-361491|0xfffffffffffa7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1854 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-361491|0xfffffffffffa7bed]] destination: B103 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B119" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2542 
=== Usages ===
=== Predecessor ===
v1855 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2542 <|@
result v75|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2586 
=== Succesors ===
next: i2543 
=== Usages ===
a1414 v2600 
=== Predecessor ===
v1852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2586 #next: i2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2600 <|@
result [v75|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2542 
=== Succesors ===
=== Usages ===
i2543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2543 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2600 
=== Succesors ===
next: i2544 
=== Usages ===
v1449 v1440 
=== Predecessor ===
a2542 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2600 #next: i2544  <|@  <|@
f <@~|@floating>@ <|@
tid v2599 <|@
result [v69|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2536 
=== Succesors ===
=== Usages ===
i2544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2544 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2599 
=== Succesors ===
next: v1863 
=== Usages ===
v1440 v2601 i680 
=== Predecessor ===
i2543 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2599 #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2544 
y: i2543 
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2544 y: i2543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1440 
=== Succesors ===
trueSuccessor: v1860 
falseSuccessor: v1862 
=== Usages ===
=== Predecessor ===
i2544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1440 #trueSuccessor: v1860 #falseSuccessor: v1862  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v76|DWORD = MOV [v75|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOV [v69|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B118" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1867 
=== Usages ===
i2548 v1447 
=== Predecessor ===
v1863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1867  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i2544 
y: i60 
=== Succesors ===
=== Usages ===
v1449 v2602 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2544 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i680 
y: i2543 
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i680 y: i2543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1449 
=== Succesors ===
trueSuccessor: v1864 
falseSuccessor: v1866 
=== Usages ===
=== Predecessor ===
v1860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1449 #trueSuccessor: v1864 #falseSuccessor: v1866  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v77|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B114" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2545 
=== Usages ===
i2547 v1456 
=== Predecessor ===
v1867 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2545  <|@  <|@
f <@~|@floating>@ <|@
tid v2603 <|@
result [v69|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2536 
=== Succesors ===
=== Usages ===
a2545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2545 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2603 
=== Succesors ===
next: v2546 
=== Usages ===
a1459 v2624 
=== Predecessor ===
v1864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2603 #next: v2546  <|@  <|@
f <@~|@floating>@ <|@
tid v2624 <|@
result [v79|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2545 
=== Succesors ===
=== Usages ===
v2546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2546 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2624 
=== Succesors ===
next: i2547 
=== Usages ===
v2471 
=== Predecessor ===
a2545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2624 #next: i2547  <|@  <|@
f <@~|@floating>@ <|@
tid a1414 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2542 
=== Succesors ===
=== Usages ===
v2601 a652 v2602 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2542  <|@  <|@
f <@~|@floating>@ <|@
tid v2602 <|@
result [v81|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1414 
index: i680 
=== Succesors ===
=== Usages ===
v1456 i2547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1414 index: i680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2547 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1864 
address: v2602 
=== Succesors ===
next: i2548 
=== Usages ===
i656 i658 
=== Predecessor ===
v2546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1864 address: v2602 #next: i2548  <|@  <|@
f <@~|@floating>@ <|@
tid v2601 <|@
result [v81|QWORD[.] + v77|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1414 
index: i2544 
=== Succesors ===
=== Usages ===
v1447 i2548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1414 index: i2544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2548 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1860 
address: v2601 
=== Succesors ===
next: v1447 
=== Usages ===
i653 i655 
=== Predecessor ===
i2547 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1860 address: v2601 #next: v1447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1860 
address: v2601 
value: i2541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1456 
=== Usages ===
=== Predecessor ===
i2548 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1860 address: v2601 value: i2541 stateAfter: - lastLocationAccess: - #next: v1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1864 
address: v2602 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v1447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1864 address: v2602 value: i54 stateAfter: - lastLocationAccess: - #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2546 
y: v2468 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2546 y: v2468  <|@  <|@
f <@~|@floating>@ <|@
tid a1392 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2536 
=== Succesors ===
=== Usages ===
a647 a648 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2536  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.8249645592753172
=== Inputs ===
condition: v2471 
=== Succesors ===
trueSuccessor: v684 
falseSuccessor: v689 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2471 #trueSuccessor: v684 #falseSuccessor: v689  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v69|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v80|DWORD = MOV [v79|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v75|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOV [v81|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v81|QWORD[.] + v77|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v77|DWORD * 4 + 16], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v78|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v80|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 4603580708571142882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD[.], v74|DWORD, v81|QWORD[.], v83|DWORD, v82|DWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B83" "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a648 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v639 
values: a1299 a1392 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: a1299 a1392  <|@  <|@
f <@~|@floating>@ <|@
tid i2252 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2522 i2541 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2522 i2541  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v639 
values: a1323 a1414 
=== Succesors ===
=== Usages ===
v2609 v2608 v2607 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: a1323 a1414  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2534 i2548 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2534 i2548  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2533 i2547 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2533 i2547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v640 v642 
=== Succesors ===
next: i2549 
=== Usages ===
a648 i2252 a652 i655 i658 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v640 v642 #next: i2549  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2549 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2604 
=== Succesors ===
next: v1875 
=== Usages ===
v247 
=== Predecessor ===
v639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2604 #next: v1875  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2549 
y: i60 
=== Succesors ===
=== Usages ===
v1875 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2549 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v1875 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1874 
falseSuccessor: v1872 
=== Usages ===
=== Predecessor ===
i2549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1874 #falseSuccessor: v1872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD[.], v86|DWORD, v87|QWORD[.], v88|DWORD, v89|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v1875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2340  <|@  <|@
f <@~|@floating>@ <|@
tid i2341 <|@
result int[-374803|0xfffffffffffa47ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -374803
stableDimension: 0
stamp: i32 [-374803] â‡Š00000000fffa47ed â‡ˆ00000000fffa47ed
stampKind: i32
value: int[-374803|0xfffffffffffa47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
v1874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-374803|0xfffffffffffa47ed]] destination: B109 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B113" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2550 
=== Usages ===
=== Predecessor ===
v1875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2550  <|@  <|@
f <@~|@floating>@ <|@
tid v2607 <|@
result [v87|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
i2550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2550 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2607 
=== Succesors ===
next: v1883 
=== Usages ===
v1623 
=== Predecessor ===
v1872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2607 #next: v1883  <|@  <|@
f <@~|@floating>@ <|@
tid i1133 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2550 
y: i1133 
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2550 y: i1133  <|@  <|@
f <@*|@fixed>@ <|@
tid v1883 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1623 
=== Succesors ===
trueSuccessor: v1882 
falseSuccessor: v1880 
=== Usages ===
=== Predecessor ===
i2550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1623 #trueSuccessor: v1882 #falseSuccessor: v1880  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v87|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2347 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2347  <|@  <|@
f <@~|@floating>@ <|@
tid i2348 <|@
result int[-392219|0xfffffffffffa03e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -392219
stableDimension: 0
stamp: i32 [-392219] â‡Š00000000fffa03e5 â‡ˆ00000000fffa03e5
stampKind: i32
value: int[-392219|0xfffffffffffa03e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
v1882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-392219|0xfffffffffffa03e5]] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B109" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2342 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-392219 - -374803] â‡Š00000000fffa03e5 â‡ˆ00000000fffa47ed
valueDescription: i32
=== Inputs ===
merge: v2339 
values: i2341 i2348 
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2339 values: i2341 i2348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2340 v2347 
=== Succesors ===
next: v2344 
=== Usages ===
i2342 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2340 v2347 #next: v2344  <|@  <|@
tid ?641 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: a648 a2 i54 a4 i2252 i655 i658 
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a648 a2 i54 a4 i2252 i655 i658  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?641 
actionAndReason: i2342 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?641 actionAndReason: i2342 speculation: a2257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v85|QWORD[.] v1|QWORD[.] v20|DWORD v3|QWORD[.] v86|DWORD v88|DWORD v89|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B134" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1467 
=== Usages ===
v1483 v1492 
=== Predecessor ===
v1883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1467  <|@  <|@
f <@~|@floating>@ <|@
tid v2605 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2605 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2551 
=== Usages ===
=== Predecessor ===
v1880 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2605 value: i54 stateAfter: - lastLocationAccess: - #next: i2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2606 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2551 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2606 
=== Succesors ===
next: v1483 
=== Usages ===
v1483 
=== Predecessor ===
v1467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2606 #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid v2608 <|@
result [v87|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1880 
address: v2608 
value: i2551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1492 
=== Usages ===
=== Predecessor ===
i2551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1880 address: v2608 value: i2551 stateAfter: - lastLocationAccess: - #next: v1492  <|@  <|@
f <@~|@floating>@ <|@
tid v2609 <|@
result [v87|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1880 
address: v2609 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1880 address: v2609 value: i54 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v1492 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + 20], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B113 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B115" 
    xhandlers
    flags 
    probability 4593755621749711378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid a1459 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2545 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2545  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD[.], v92|QWORD[.], v83|DWORD, v82|DWORD] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B84" "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a647 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v643 
values: a1299 a1392 
=== Succesors ===
=== Usages ===
?190 ?2250 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: a1299 a1392  <|@  <|@
f <@~|@floating>@ <|@
tid a659 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v643 
values: a1368 a1459 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: a1368 a1459  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i2534 i2548 
=== Succesors ===
=== Usages ===
?190 ?2250 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i2534 i2548  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i2533 i2547 
=== Succesors ===
=== Usages ===
?190 ?2250 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i2533 i2547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v644 v646 
=== Succesors ===
next: i189 
=== Usages ===
a647 a659 i653 i656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v644 v646 #next: i189  <|@  <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@31d9ebeb
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a659 a2 i54 a4 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a659 a2 i54 a4  <|@  <|@
tid ?2250 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: a647 a2 - - - i653 i656 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a647 a2 - - - i653 i656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i189 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 70
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1493 
stateDuring: ?2250 
=== Succesors ===
next: v1887 
=== Usages ===
v191 
=== Predecessor ===
v643 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1493 stateDuring: ?2250 #next: v1887  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i47 
=== Succesors ===
=== Usages ===
v1887 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i189 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v1886 
falseSuccessor: v1884 
=== Usages ===
=== Predecessor ===
i189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v1886 #falseSuccessor: v1884  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD[.], v94|QWORD[.], v95|DWORD, v96|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v93|QWORD[.] v1|QWORD[.] - - - v95|DWORD v96|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28] <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v97|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1885 
=== Usages ===
=== Predecessor ===
v1887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1885  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 1
=== Inputs ===
outerFrameState: ?194 
values: a647 a2 - - - i653 i656 i47 
=== Succesors ===
=== Usages ===
v1885 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a647 a2 - - - i653 i656 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1494
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1886 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -382483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: v93|QWORD[.] v1|QWORD[.] - - - v95|DWORD v96|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v1887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v1884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B117 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2369 
=== Usages ===
=== Predecessor ===
v1867 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2369  <|@  <|@
f <@~|@floating>@ <|@
tid i2370 <|@
result int[-371227|0xfffffffffffa55e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -371227
stableDimension: 0
stamp: i32 [-371227] â‡Š00000000fffa55e5 â‡ˆ00000000fffa55e5
stampKind: i32
value: int[-371227|0xfffffffffffa55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-371227|0xfffffffffffa55e5]] destination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2367 
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2367  <|@  <|@
f <@~|@floating>@ <|@
tid i2368 <|@
result int[-368923|0xfffffffffffa5ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -368923
stableDimension: 0
stamp: i32 [-368923] â‡Š00000000fffa5ee5 â‡ˆ00000000fffa5ee5
stampKind: i32
value: int[-368923|0xfffffffffffa5ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-368923|0xfffffffffffa5ee5]] destination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2361 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2361  <|@  <|@
f <@~|@floating>@ <|@
tid i2362 <|@
result int[-359707|0xfffffffffffa82e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359707
stableDimension: 0
stamp: i32 [-359707] â‡Š00000000fffa82e5 â‡ˆ00000000fffa82e5
stampKind: i32
value: int[-359707|0xfffffffffffa82e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1850 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359707|0xfffffffffffa82e5]] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid i2358 <|@
result int[-356915|0xfffffffffffa8dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -356915
stableDimension: 0
stamp: i32 [-356915] â‡Š00000000fffa8dcd â‡ˆ00000000fffa8dcd
stampKind: i32
value: int[-356915|0xfffffffffffa8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
v1842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-356915|0xfffffffffffa8dcd]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B103" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2352 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-373771 - -356619] â‡Š00000000fffa00c5 â‡ˆ00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2349 
values: i2358 i2360 i2362 i2368 i2370 
=== Succesors ===
=== Usages ===
v2354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2349 values: i2358 i2360 i2362 i2368 i2370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2357 v2359 v2361 v2367 v2369 
=== Succesors ===
next: v2354 
=== Usages ===
i2352 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2357 v2359 v2361 v2367 v2369 #next: v2354  <|@  <|@
f <@*|@fixed>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?762 
actionAndReason: i2352 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2349 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?762 actionAndReason: i2352 speculation: a2257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2311 
=== Usages ===
=== Predecessor ===
v1723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2311  <|@  <|@
f <@~|@floating>@ <|@
tid i2312 <|@
result int[-315699|0xfffffffffffb2ecd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315699
stableDimension: 0
stamp: i32 [-315699] â‡Š00000000fffb2ecd â‡ˆ00000000fffb2ecd
stampKind: i32
value: int[-315699|0xfffffffffffb2ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315699|0xfffffffffffb2ecd]] destination: B123 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2305 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2305  <|@  <|@
f <@~|@floating>@ <|@
tid i2306 <|@
result int[-313139|0xfffffffffffb38cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -313139
stableDimension: 0
stamp: i32 [-313139] â‡Š00000000fffb38cd â‡ˆ00000000fffb38cd
stampKind: i32
value: int[-313139|0xfffffffffffb38cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1710 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-313139|0xfffffffffffb38cd]] destination: B124 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2299 
=== Usages ===
=== Predecessor ===
v1699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2299  <|@  <|@
f <@~|@floating>@ <|@
tid i2300 <|@
result int[-310579|0xfffffffffffb42cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310579
stableDimension: 0
stamp: i32 [-310579] â‡Š00000000fffb42cd â‡ˆ00000000fffb42cd
stampKind: i32
value: int[-310579|0xfffffffffffb42cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310579|0xfffffffffffb42cd]] destination: B125 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2293 
=== Usages ===
=== Predecessor ===
v1687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2293  <|@  <|@
f <@~|@floating>@ <|@
tid i2294 <|@
result int[-308019|0xfffffffffffb4ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308019
stableDimension: 0
stamp: i32 [-308019] â‡Š00000000fffb4ccd â‡ˆ00000000fffb4ccd
stampKind: i32
value: int[-308019|0xfffffffffffb4ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1686 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308019|0xfffffffffffb4ccd]] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2287 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2287  <|@  <|@
f <@~|@floating>@ <|@
tid i2288 <|@
result int[-305171|0xfffffffffffb57ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305171
stableDimension: 0
stamp: i32 [-305171] â‡Š00000000fffb57ed â‡ˆ00000000fffb57ed
stampKind: i32
value: int[-305171|0xfffffffffffb57ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305171|0xfffffffffffb57ed]] destination: B127 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2285 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2285  <|@  <|@
f <@~|@floating>@ <|@
tid i2286 <|@
result int[-303131|0xfffffffffffb5fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303131
stableDimension: 0
stamp: i32 [-303131] â‡Š00000000fffb5fe5 â‡ˆ00000000fffb5fe5
stampKind: i32
value: int[-303131|0xfffffffffffb5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303131|0xfffffffffffb5fe5]] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2283 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2283  <|@  <|@
f <@~|@floating>@ <|@
tid i2284 <|@
result int[-302355|0xfffffffffffb62ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302355
stableDimension: 0
stamp: i32 [-302355] â‡Š00000000fffb62ed â‡ˆ00000000fffb62ed
stampKind: i32
value: int[-302355|0xfffffffffffb62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1666 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302355|0xfffffffffffb62ed]] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2277 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2277  <|@  <|@
f <@~|@floating>@ <|@
tid i2278 <|@
result int[-299827|0xfffffffffffb6ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299827
stableDimension: 0
stamp: i32 [-299827] â‡Š00000000fffb6ccd â‡ˆ00000000fffb6ccd
stampKind: i32
value: int[-299827|0xfffffffffffb6ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299827|0xfffffffffffb6ccd]] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2273 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2273  <|@  <|@
f <@~|@floating>@ <|@
tid i2274 <|@
result int[-299283|0xfffffffffffb6eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299283
stableDimension: 0
stamp: i32 [-299283] â‡Š00000000fffb6eed â‡ˆ00000000fffb6eed
stampKind: i32
value: int[-299283|0xfffffffffffb6eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299283|0xfffffffffffb6eed]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B5" "B130" "B129" "B128" "B127" "B13" "B126" "B20" "B125" "B27" "B124" "B34" "B123" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2270 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317971 - -299283] â‡Š00000000fffb00c5 â‡ˆ00000000fffb7ffd
valueDescription: i32
=== Inputs ===
merge: v2267 
values: i2274 i2276 i2278 i2284 i2286 i2288 i2292 i2294 i2298 i2300 i2304 i2306 i2310 i2312 i2314 
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2267 values: i2274 i2276 i2278 i2284 i2286 i2288 i2292 i2294 i2298 i2300 i2304 i2306 i2310 i2312 i2314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2273 v2275 v2277 v2283 v2285 v2287 v2291 v2293 v2297 v2299 v2303 v2305 v2309 v2311 v2313 
=== Succesors ===
next: v2272 
=== Usages ===
i2270 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2273 v2275 v2277 v2283 v2285 v2287 v2291 v2293 v2297 v2299 v2303 v2305 v2309 v2311 v2313 #next: v2272  <|@  <|@
f <@*|@fixed>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i2270 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2267 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i2270 speculation: a2257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B134" 
    xhandlers
    flags 
    probability 4598419215997149594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1498 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1498  <|@  <|@
f <@~|@floating>@ <|@
tid v2610 <|@
result [v8|DWORD * 8 + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2479 
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1498 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2610 
=== Succesors ===
next: j1501 
=== Usages ===
v2611 v1502 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2610 #next: j1501  <|@  <|@
f <@~|@floating>@ <|@
tid v2611 <|@
result [v100|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v1498 
index: - 
=== Succesors ===
=== Usages ===
j1501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1498 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1501 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2611 
=== Succesors ===
next: i15 
=== Usages ===
v1502 
=== Predecessor ===
v1498 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2611 #next: i15  <|@  <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@54411af2
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j1501 
metaspaceMethod: v1498 
arguments: a1149 a2 i3 a4 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j1501 metaspaceMethod: v1498 arguments: a1149 a2 i3 a4  <|@  <|@
tid ?2245 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2480 - 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2480 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i15 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: true
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Indirect#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1502 
stateDuring: ?2245 
=== Succesors ===
next: v24 
=== Usages ===
i25 
=== Predecessor ===
j1501 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1502 stateDuring: ?2245 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
i15 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [v8|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v100|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v100|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v101|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|DWORD] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B117" "B113" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i25 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v22 
values: i15 i60 i60 
=== Succesors ===
=== Usages ===
?23 v21 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v22 values: i15 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v24 v30 v703 
=== Succesors ===
next: a2552 
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v24 v30 v703 #next: a2552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2552 <|@
result v104|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2555 
=== Succesors ===
next: i2553 
=== Usages ===
a1152 v2560 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2555 #next: i2553  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2480 - i25 
=== Succesors ===
=== Usages ===
v2320 i2553 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2480 - i25  <|@  <|@
f <@~|@floating>@ <|@
tid v2560 <|@
result [v104|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2552 
=== Succesors ===
=== Usages ===
i2553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2553 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v2560 
=== Succesors ===
next: i2554 
=== Usages ===
v1159 
=== Predecessor ===
a2552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v2560 #next: i2554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2554 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2556 
=== Succesors ===
next: v1895 
=== Usages ===
v2561 v1159 
=== Predecessor ===
i2553 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2556 #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2554 
y: i2553 
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2554 y: i2553  <|@  <|@
f <@*|@fixed>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1159 
=== Succesors ===
trueSuccessor: v1892 
falseSuccessor: v1894 
=== Usages ===
=== Predecessor ===
i2554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1159 #trueSuccessor: v1892 #falseSuccessor: v1894  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v103|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v105|DWORD = MOV [v104|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1166 
=== Usages ===
v1166 
=== Predecessor ===
v1895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid a1152 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2552 
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2552  <|@  <|@
f <@~|@floating>@ <|@
tid v2561 <|@
result [v107|QWORD[.] + v106|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1152 
index: i2554 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1152 index: i2554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1892 
address: v2561 
value: i2480 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1892 address: v2561 value: i2480 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 46]
stamp: void
=== Inputs ===
result: i25 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i25 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[.] + v106|DWORD * 4 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v103|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2320 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2320  <|@  <|@
f <@~|@floating>@ <|@
tid i2322 <|@
result int[-296987|0xfffffffffffb77e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296987
stableDimension: 0
stamp: i32 [-296987] â‡Š00000000fffb77e5 â‡ˆ00000000fffb77e5
stampKind: i32
value: int[-296987|0xfffffffffffb77e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i2322 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1894 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i2322 speculation: a2257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -296987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v103|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2260 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2260  <|@  <|@
f <@~|@floating>@ <|@
tid i2266 <|@
result int[-291867|0xfffffffffffb8be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291867
stableDimension: 0
stamp: i32 [-291867] â‡Š00000000fffb8be5 â‡ˆ00000000fffb8be5
stampKind: i32
value: int[-291867|0xfffffffffffb8be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i2266 
speculation: a2257 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i2266 speculation: a2257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -291867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4abc08fb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B133" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v9|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[.] + v6|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7364554760601777 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B131" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B130" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B129" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[.] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B128" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B127" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSX [v15|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v18|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600305160439790685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v17|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v17|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B14 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B91" "B96" "B14" "B21" "B56" "B28" "B35" "B99" "B42" "B97" "B98" 
    successors "B101" "B121" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP [v69|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B120" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v71|DWORD = MOV [v70|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV [v69|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOV [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B119" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v76|DWORD = MOV [v75|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOV [v69|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B118" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v77|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B114" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v69|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v80|DWORD = MOV [v79|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v75|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOV [v81|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v81|QWORD[.] + v77|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v77|DWORD * 4 + 16], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD[.] + v78|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v80|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 4603580708571142882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD[.], v74|DWORD, v81|QWORD[.], v83|DWORD, v82|DWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B83" "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD[.], v86|DWORD, v87|QWORD[.], v88|DWORD, v89|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B113" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v87|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B134" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + 16], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|QWORD[.] + 20], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B113 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B117" "B113" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v103|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v105|DWORD = MOV [v104|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD[.] + v106|DWORD * 4 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v103|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B126" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v17|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595801421502729024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v21|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v21|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B100" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B21 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B134" 
    xhandlers
    flags 
    probability 4598419215997149594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [v8|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v100|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v100|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v101|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|DWORD] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B125" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591297682568592980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v23|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v23|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B100" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B28 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B115" 
    xhandlers
    flags 
    probability 4593755621749711378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD[.], v92|QWORD[.], v83|DWORD, v82|DWORD] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B84" "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD[.], v94|QWORD[.], v95|DWORD, v96|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v93|QWORD[.] v1|QWORD[.] - - - v95|DWORD v96|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28] <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v97|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B117 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B124" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v23|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586793943637382491
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v25|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v25|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B100" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B35 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B123" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v25|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582290204709097494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v27|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v27|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B42 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B99" 
    xhandlers
    flags 
    probability 4582289926118969972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v25|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582208695417099384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B62" 
    xhandlers
    flags 
    probability 4576291274224412830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B11" "B53" 
    successors "B63" "B89" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v7|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v45|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP [v46|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B88" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v48|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV [v46|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v50|QWORD[.] + v49|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B87" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v53|DWORD = MOV [v52|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV [v46|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B86" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B76" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v46|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v56|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV [v45|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B85" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v45|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v45|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B73" "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v61|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v61|QWORD[.] + v54|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v54|DWORD * 4 + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v55|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v56|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575204503313447612
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.], v51|DWORD, v61|QWORD[.], v63|DWORD, v62|DWORD] destination: B83 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B75" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v45|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP (x: v19|DWORD, y: [v58|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVZXB [v59|QWORD + v58|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571787566702205055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4571819220194887156
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B94" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B93" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B92" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v40|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP (x: v19|DWORD, y: [v42|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v43|QWORD + v42|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567252313424605948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B91 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v40|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v40|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B56 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4567283859182263158
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B96" 
    xhandlers
    flags 
    probability 4567315607703421434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v21|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567252300718057233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B115" 
    xhandlers
    flags 
    probability 4564902952382738090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.], v65|QWORD[.], v63|DWORD, v62|DWORD] destination: B84 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4562780151664587093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B97" 
    xhandlers
    flags 
    probability 4562827526736041527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v23|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v34|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B100" 
    xhandlers
    flags 
    probability 4562764029693724976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B97 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558276444149176811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B98" 
    xhandlers
    flags 
    probability 4560875826609035641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v25|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v25|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B100" 
    xhandlers
    flags 
    probability 4560781076466126774
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4553834388563918620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 4543131874047153820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4538724539427290083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4538724519261336704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4534245246923867060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4532181634653515973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333107|0xfffffffffffaeacd]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B65" "B88" "B87" "B86" "B78" "B85" "B80" "B75" "B74" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308019|0xfffffffffffb4ccd]] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B5" "B130" "B129" "B128" "B127" "B13" "B126" "B20" "B125" "B27" "B124" "B34" "B123" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-325907|0xfffffffffffb06ed]] destination: B55 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B55" "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-368923|0xfffffffffffa5ee5]] destination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B103" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v68|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-350739|0xfffffffffffaa5ed]] destination: B74 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-353307|0xfffffffffffa9be5]] destination: B75 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355859|0xfffffffffffa91ed]] destination: B80 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355603|0xfffffffffffa92ed]] destination: B78 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-354355|0xfffffffffffa97cd]] destination: B85 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-374803|0xfffffffffffa47ed]] destination: B109 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B109" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v85|QWORD[.] v1|QWORD[.] v20|DWORD v3|QWORD[.] v86|DWORD v88|DWORD v89|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-347931|0xfffffffffffab0e5]] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-345627|0xfffffffffffab9e5]] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-337683|0xfffffffffffad8ed]] destination: B65 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317971|0xfffffffffffb25ed]] destination: B41 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-335899|0xfffffffffffadfe5]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-361491|0xfffffffffffa7bed]] destination: B103 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315699|0xfffffffffffb2ecd]] destination: B123 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -331795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:21, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359707|0xfffffffffffa82e5]] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-313139|0xfffffffffffb38cd]] destination: B124 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-356915|0xfffffffffffa8dcd]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310291|0xfffffffffffb43ed]] destination: B20 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310579|0xfffffffffffb42cd]] destination: B125 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-312851|0xfffffffffffb39ed]] destination: B27 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-300051|0xfffffffffffb6bed]] destination: B5 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -296987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v103|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-392219|0xfffffffffffa03e5]] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305171|0xfffffffffffb57ed]] destination: B127 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303131|0xfffffffffffb5fe5]] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-371227|0xfffffffffffa55e5]] destination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315411|0xfffffffffffb2fed]] destination: B34 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302355|0xfffffffffffb62ed]] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326195|0xfffffffffffb05cd]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -382483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: v93|QWORD[.] v1|QWORD[.] - - - v95|DWORD v96|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299827|0xfffffffffffb6ccd]] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299283|0xfffffffffffb6eed]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -291867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326419|0xfffffffffffb04ed]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328987|0xfffffffffffafae5]] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-307731|0xfffffffffffb4ded]] destination: B13 -> B132 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #2          // java.util.regex.Matcher.locals:int[]
     4: aload_0       
     5: getfield      #1          // localIndex:int
     8: iaload        
     9: istore        4
    11: aload_1       
    12: getfield      #2          // java.util.regex.Matcher.locals:int[]
    15: aload_0       
    16: getfield      #1          // localIndex:int
    19: iload_2       
    20: iastore       
    21: aload_0       
    22: getfield      #3          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    25: aload_1       
    26: iload_2       
    27: aload_3       
    28: invokevirtual #4          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    31: istore        5
    33: aload_1       
    34: getfield      #2          // java.util.regex.Matcher.locals:int[]
    37: aload_0       
    38: getfield      #1          // localIndex:int
    41: iload         4
    43: iastore       
    44: iload         5
    46: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4abc08fb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B133" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [rbx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.7364554760601777 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B131" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B130" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21] <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B129" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   74  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B128" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B127" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction CMP rbx|DWORD y: -10240 size: WORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:36|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  102  <|@ instruction rbp|DWORD = MOVZX rbx|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600305160439790685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B91" "B96" "B14" "B21" "B56" "B28" "B35" "B99" "B42" "B97" "B98" 
    successors "B101" "B121" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B120" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1024  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1036  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B119" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1054  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1056  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1058  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B118" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1066  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1068  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B114" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction r11|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1078  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1086  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1090  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 4603580708571142882
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B83" "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction CMP [r10|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr 1102  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B113" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction CMP [r8|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B134" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1148  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1150  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~[] destination: B113 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B117" "B113" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1412  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r8|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr 1414  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1416  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1418  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B126" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:20, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction r14|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  184  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595801421502729024
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B100" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B21 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B134" 
    xhandlers
    flags 
    probability 4598419215997149594
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr 1392  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1394  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ st <@st|@reference-map: [stack:24, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr 1402  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B125" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction stack:96|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0, r10:0, r11:0, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  264  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591297682568592980
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B100" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B28 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B115" 
    xhandlers
    flags 
    probability 4593755621749711378
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1158  <|@ instruction stack:48|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B84" "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ st <@st|@reference-map: [stack:0, stack:24, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:112|QWORD[.] stack:32|QWORD[.] - - - stack:92|DWORD stack:48|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28] <|@ <|@
      nr 1178  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1180  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction JUMP ~[] destination: B117 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B124" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction stack:100|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [r8:0, r9:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  332  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586793943637382491
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B100" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B35 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B123" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  398  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582290204709097494
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  444  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B42 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B99" 
    xhandlers
    flags 
    probability 4582289926118969972
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction stack:104|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  470  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582208695417099384
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1004  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B62" 
    xhandlers
    flags 
    probability 4576291274224412830
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B11" "B53" 
    successors "B63" "B89" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr  640  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B88" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  652  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  654  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  666  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B87" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  684  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  688  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B86" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  696  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B76" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr  706  <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  708  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B85" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  804  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B73" "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rdi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  828  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  830  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  836  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575204503313447612
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B83 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B75" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction CMP stack:48|DWORD y: 256 size: WORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rdi|QWORD = MOVZX stack:48|DWORD size: DWORD <|@ <|@
      nr  732  <|@ instruction rsi|DWORD = MOVZXB [rdi|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction JUMP ~[] destination: B73 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571787566702205055
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B18 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4571819220194887156
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr  562  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B94" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B93" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction CMP stack:48|DWORD y: 256 size: WORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B92" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rdx|QWORD = MOVZX stack:48|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  626  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567252313424605948
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B91 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4567283859182263158
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B25 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B96" 
    xhandlers
    flags 
    probability 4567315607703421434
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  530  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rax|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28] <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  534  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28] <|@ <|@
      nr  538  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567252300718057233
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  980  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~[] destination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B115" 
    xhandlers
    flags 
    probability 4564902952382738090
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  854  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B84 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4562780151664587093
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B97" 
    xhandlers
    flags 
    probability 4562827526736041527
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28] <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28] <|@ <|@
      nr  514  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B100" 
    xhandlers
    flags 
    probability 4562764029693724976
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  988  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B97 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558276444149176811
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B98" 
    xhandlers
    flags 
    probability 4560875826609035641
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  492  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B100" 
    xhandlers
    flags 
    probability 4560781076466126774
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  996  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4553834388563918620
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r14|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 4543131874047153820
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4538724539427290083
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4538724519261336704
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4534245246923867060
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rax|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4532181634653515973
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction r11|DWORD = MOVE input: int[-333107|0xfffffffffffaeacd] <|@ <|@
      nr  912  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B65" "B88" "B87" "B86" "B78" "B85" "B80" "B75" "B74" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  922  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  926  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction r11|DWORD = MOVE input: int[-308019|0xfffffffffffb4ccd] <|@ <|@
      nr 1308  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B5" "B130" "B129" "B128" "B127" "B13" "B126" "B20" "B125" "B27" "B124" "B34" "B123" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1380  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1382  <|@ st <@st|@reference-map: [rbx:0, r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r8|QWORD[.] r10|QWORD[.] rcx|DWORD rbx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: int[-325907|0xfffffffffffb06ed] <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B55 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B55" "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  970  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  972  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  974  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rcx|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rcx|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r11|DWORD = MOVE input: int[-368923|0xfffffffffffa5ee5] <|@ <|@
      nr 1226  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~[] destination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B103" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: int[-350739|0xfffffffffffaa5ed] <|@ <|@
      nr  760  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B74 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r11|DWORD = MOVE input: int[-353307|0xfffffffffffa9be5] <|@ <|@
      nr  770  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B75 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-355859|0xfffffffffffa91ed] <|@ <|@
      nr  810  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B80 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction r11|DWORD = MOVE input: int[-355603|0xfffffffffffa92ed] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B78 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: int[-354355|0xfffffffffffa97cd] <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B85 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1106  <|@ instruction r11|DWORD = MOVE input: int[-374803|0xfffffffffffa47ed] <|@ <|@
      nr 1108  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1110  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B109 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B109" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1136  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rdx|QWORD[.] r10|QWORD[.] r13|DWORD stack:72|QWORD[.] rcx|DWORD rax|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-347931|0xfffffffffffab0e5] <|@ <|@
      nr  882  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r11|DWORD = MOVE input: int[-345627|0xfffffffffffab9e5] <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction r11|DWORD = MOVE input: int[-337683|0xfffffffffffad8ed] <|@ <|@
      nr  674  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B65 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r11|DWORD = MOVE input: int[-317971|0xfffffffffffb25ed] <|@ <|@
      nr  430  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B41 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r11|DWORD = MOVE input: int[-335899|0xfffffffffffadfe5] <|@ <|@
      nr  902  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction r11|DWORD = MOVE input: int[-361491|0xfffffffffffa7bed] <|@ <|@
      nr 1044  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B103 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction r11|DWORD = MOVE input: int[-315699|0xfffffffffffb2ecd] <|@ <|@
      nr 1266  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B123 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 668] y: -331795 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:21, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction r11|DWORD = MOVE input: int[-359707|0xfffffffffffa82e5] <|@ <|@
      nr 1236  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction r11|DWORD = MOVE input: int[-313139|0xfffffffffffb38cd] <|@ <|@
      nr 1280  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1282  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1288  <|@ instruction JUMP ~[] destination: B124 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction r11|DWORD = MOVE input: int[-356915|0xfffffffffffa8dcd] <|@ <|@
      nr 1246  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r11|DWORD = MOVE input: int[-310291|0xfffffffffffb43ed] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B20 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1292  <|@ instruction r11|DWORD = MOVE input: int[-310579|0xfffffffffffb42cd] <|@ <|@
      nr 1294  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1302  <|@ instruction JUMP ~[] destination: B125 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r11|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed] <|@ <|@
      nr  296  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B27 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-300051|0xfffffffffffb6bed] <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV [r15|QWORD + 668] y: -296987 size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction r11|DWORD = MOVE input: int[-392219|0xfffffffffffa03e5] <|@ <|@
      nr 1124  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction r11|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed] <|@ <|@
      nr 1320  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction JUMP ~[] destination: B127 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5] <|@ <|@
      nr 1332  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction r11|DWORD = MOVE input: int[-371227|0xfffffffffffa55e5] <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~[] destination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r11|DWORD = MOVE input: int[-315411|0xfffffffffffb2fed] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B34 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ instruction r11|DWORD = MOVE input: int[-302355|0xfffffffffffb62ed] <|@ <|@
      nr 1344  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ instruction JUMP ~[] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ instruction r11|DWORD = MOVE input: int[-326195|0xfffffffffffb05cd] <|@ <|@
      nr  960  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1194  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1196  <|@ instruction MOV [r15|QWORD + 668] y: -382483 size: DWORD <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1200  <|@ st <@st|@reference-map: [rbx:0, r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: rbx|QWORD[.] r10|QWORD[.] - - - r11|DWORD rcx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction r11|DWORD = MOVE input: int[-299827|0xfffffffffffb6ccd] <|@ <|@
      nr 1356  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1358  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction r11|DWORD = MOVE input: int[-299283|0xfffffffffffb6eed] <|@ <|@
      nr 1368  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1442  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1444  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1448  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1450  <|@ instruction MOV [r15|QWORD + 668] y: -291867 size: DWORD <|@ <|@
      nr 1452  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1454  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: r8|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r11|DWORD = MOVE input: int[-326419|0xfffffffffffb04ed] <|@ <|@
      nr  948  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r11|DWORD = MOVE input: int[-328987|0xfffffffffffafae5] <|@ <|@
      nr  936  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOVE input: int[-307731|0xfffffffffffb4ded] <|@ <|@
      nr  146  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B13 -> B132 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #2          // java.util.regex.Matcher.locals:int[]
     4: aload_0       
     5: getfield      #1          // localIndex:int
     8: iaload        
     9: istore        4
    11: aload_1       
    12: getfield      #2          // java.util.regex.Matcher.locals:int[]
    15: aload_0       
    16: getfield      #1          // localIndex:int
    19: iload_2       
    20: iastore       
    21: aload_0       
    22: getfield      #3          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    25: aload_1       
    26: iload_2       
    27: aload_3       
    28: invokevirtual #4          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    31: istore        5
    33: aload_1       
    34: getfield      #2          // java.util.regex.Matcher.locals:int[]
    37: aload_0       
    38: getfield      #1          // localIndex:int
    41: iload         4
    43: iastore       
    44: iload         5
    46: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4abc08fb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B133" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [rbx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.7364554760601777 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B131" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B130" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21] <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B129" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   74  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B128" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B127" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction CMP rbx|DWORD y: -10240 size: WORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604808620760395571
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:36|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  102  <|@ instruction rbp|DWORD = MOVZX rbx|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600305160439790685
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600144608800935704
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B60" "B96" "B14" "B21" "B56" "B28" "B35" "B99" "B42" "B97" "B98" 
    successors "B101" "B121" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B120" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1024  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1028  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1036  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B105" "B119" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1054  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1056  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1058  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B118" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1066  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1068  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B114" 
    xhandlers
    flags 
    probability 4604727608935936871
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction r11|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1078  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1080  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1086  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1090  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B106 -> B108 falseDestination: B106 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B83" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction CMP [r10|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr 1102  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B113" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction CMP [r8|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B134" 
    xhandlers
    flags 
    probability 4603647540455203543
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1148  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1152  <|@ instruction JUMP ~[] destination: B113 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B117" "B113" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1410  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1412  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r8|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr 1414  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1416  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1418  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1424  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1426  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B126" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600304881826259465
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:20, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction r14|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  184  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595801421502729024
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B100" 
    xhandlers
    flags 
    probability 4595640873235587708
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B21 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B134" 
    xhandlers
    flags 
    probability 4598419215997149594
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr 1392  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1394  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1396  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ st <@st|@reference-map: [stack:24, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28] <|@ <|@
      nr 1402  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B125" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595801142895048914
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction stack:96|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0, r10:0, r11:0, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  264  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591297682568592980
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B100" 
    xhandlers
    flags 
    probability 4591137137673094521
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B28 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B115" 
    xhandlers
    flags 
    probability 4593755621749711378
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr 1158  <|@ instruction stack:48|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B84" "B114" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1174  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ st <@st|@reference-map: [stack:0, stack:24, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:112|QWORD[.] stack:32|QWORD[.] - - - stack:92|DWORD stack:48|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28] <|@ <|@
      nr 1178  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1180  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593812341511303535
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1206  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction JUMP ~[] destination: B117 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B124" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591297403966763856
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction stack:100|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [r8:0, r9:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  332  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586793943637382491
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B100" 
    xhandlers
    flags 
    probability 4586633402113456081
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B35 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B123" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586793665041404229
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  398  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582290204709097494
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582129666556672327
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  444  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B42 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B99" 
    xhandlers
    flags 
    probability 4582289926118969972
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction stack:104|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  470  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B100" 
    xhandlers
    flags 
    probability 4582208695417099384
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1004  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B62" 
    xhandlers
    flags 
    probability 4576291274224412830
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" "B11" "B52" 
    successors "B63" "B89" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr  640  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B88" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  652  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  654  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  666  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B87" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  684  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  688  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B86" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  696  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B76" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr  706  <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  708  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B85" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  804  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B71" "B79" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4576338378546410291
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rdi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  828  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  830  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  836  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575204503313447612
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B83 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B75" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B74" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction CMP stack:48|DWORD y: 256 size: WORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B82" 
    xhandlers
    flags 
    probability 4571834778919039795
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rdi|QWORD = MOVZX stack:48|DWORD size: DWORD <|@ <|@
      nr  732  <|@ instruction rsi|DWORD = MOVZXB [rdi|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571787566702205055
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B18 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4571819220194887156
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr  562  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B94" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B93" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction CMP stack:48|DWORD y: 256 size: WORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B92" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B100" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rdx|QWORD = MOVZX stack:48|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  626  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B60 -> B62 falseDestination: B60 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" "B54" 
    xhandlers
    flags 
    probability 4567315620567516660
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B52 -> B62 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567190510422437530
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4567283859182263158
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B25 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B96" 
    xhandlers
    flags 
    probability 4567315607703421434
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  530  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rax|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28] <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  534  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28] <|@ <|@
      nr  538  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B100" 
    xhandlers
    flags 
    probability 4567252300718057233
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  980  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~[] destination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B115" 
    xhandlers
    flags 
    probability 4564902952382738090
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  854  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B84 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4562780151664587093
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B97" 
    xhandlers
    flags 
    probability 4562827526736041527
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28] <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28] <|@ <|@
      nr  514  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B100" 
    xhandlers
    flags 
    probability 4562764029693724976
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  988  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B97 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558276444149176811
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B98" 
    xhandlers
    flags 
    probability 4560875826609035641
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  492  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B100" 
    xhandlers
    flags 
    probability 4560781076466126774
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  996  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4553834388563918620
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r14|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4538724519261336704
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4534245246923867060
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rax|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4532181634653515973
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction r11|DWORD = MOVE input: int[-333107|0xfffffffffffaeacd] <|@ <|@
      nr  912  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B65" "B88" "B87" "B86" "B78" "B85" "B80" "B75" "B74" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  916  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  926  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction r11|DWORD = MOVE input: int[-308019|0xfffffffffffb4ccd] <|@ <|@
      nr 1308  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B5" "B130" "B129" "B128" "B127" "B13" "B126" "B20" "B125" "B27" "B124" "B34" "B123" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1380  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1382  <|@ st <@st|@reference-map: [rbx:0, r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r8|QWORD[.] r10|QWORD[.] rcx|DWORD rbx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction r11|DWORD = MOVE input: int[-325907|0xfffffffffffb06ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B55 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B55" "B94" "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  972  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  974  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rcx|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rcx|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r11|DWORD = MOVE input: int[-368923|0xfffffffffffa5ee5] <|@ <|@
      nr 1226  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~[] destination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B103" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: int[-350739|0xfffffffffffaa5ed] <|@ <|@
      nr  760  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B74 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r11|DWORD = MOVE input: int[-353307|0xfffffffffffa9be5] <|@ <|@
      nr  770  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B75 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-355859|0xfffffffffffa91ed] <|@ <|@
      nr  810  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B80 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction r11|DWORD = MOVE input: int[-355603|0xfffffffffffa92ed] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B78 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: int[-354355|0xfffffffffffa97cd] <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B85 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1106  <|@ instruction r11|DWORD = MOVE input: int[-374803|0xfffffffffffa47ed] <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B109 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B109" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1110  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1136  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rdx|QWORD[.] r10|QWORD[.] r13|DWORD stack:72|QWORD[.] rcx|DWORD rax|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-347931|0xfffffffffffab0e5] <|@ <|@
      nr  882  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r11|DWORD = MOVE input: int[-345627|0xfffffffffffab9e5] <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction r11|DWORD = MOVE input: int[-337683|0xfffffffffffad8ed] <|@ <|@
      nr  674  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B65 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r11|DWORD = MOVE input: int[-317971|0xfffffffffffb25ed] <|@ <|@
      nr  430  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B41 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r11|DWORD = MOVE input: int[-335899|0xfffffffffffadfe5] <|@ <|@
      nr  902  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction r11|DWORD = MOVE input: int[-361491|0xfffffffffffa7bed] <|@ <|@
      nr 1044  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B103 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction r11|DWORD = MOVE input: int[-315699|0xfffffffffffb2ecd] <|@ <|@
      nr 1266  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B123 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction MOV [r15|QWORD + 668] y: -331795 size: DWORD <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:21, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction r11|DWORD = MOVE input: int[-359707|0xfffffffffffa82e5] <|@ <|@
      nr 1236  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction r11|DWORD = MOVE input: int[-313139|0xfffffffffffb38cd] <|@ <|@
      nr 1280  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1282  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1288  <|@ instruction JUMP ~[] destination: B124 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction r11|DWORD = MOVE input: int[-356915|0xfffffffffffa8dcd] <|@ <|@
      nr 1246  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r11|DWORD = MOVE input: int[-310291|0xfffffffffffb43ed] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B20 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1292  <|@ instruction r11|DWORD = MOVE input: int[-310579|0xfffffffffffb42cd] <|@ <|@
      nr 1296  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1302  <|@ instruction JUMP ~[] destination: B125 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r11|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed] <|@ <|@
      nr  296  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B27 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-300051|0xfffffffffffb6bed] <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction MOV [r15|QWORD + 668] y: -296987 size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction r11|DWORD = MOVE input: int[-392219|0xfffffffffffa03e5] <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction r11|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed] <|@ <|@
      nr 1320  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction JUMP ~[] destination: B127 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5] <|@ <|@
      nr 1332  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction r11|DWORD = MOVE input: int[-371227|0xfffffffffffa55e5] <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~[] destination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r11|DWORD = MOVE input: int[-315411|0xfffffffffffb2fed] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B34 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ instruction r11|DWORD = MOVE input: int[-302355|0xfffffffffffb62ed] <|@ <|@
      nr 1344  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ instruction JUMP ~[] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ instruction r11|DWORD = MOVE input: int[-326195|0xfffffffffffb05cd] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1194  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1196  <|@ instruction MOV [r15|QWORD + 668] y: -382483 size: DWORD <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1200  <|@ st <@st|@reference-map: [rbx:0, r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: rbx|QWORD[.] r10|QWORD[.] - - - r11|DWORD rcx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction r11|DWORD = MOVE input: int[-299827|0xfffffffffffb6ccd] <|@ <|@
      nr 1356  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1358  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction r11|DWORD = MOVE input: int[-299283|0xfffffffffffb6eed] <|@ <|@
      nr 1368  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1374  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1442  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1444  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1448  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1450  <|@ instruction MOV [r15|QWORD + 668] y: -291867 size: DWORD <|@ <|@
      nr 1452  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1454  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: r8|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r11|DWORD = MOVE input: int[-326419|0xfffffffffffb04ed] <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r11|DWORD = MOVE input: int[-328987|0xfffffffffffafae5] <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B92 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOVE input: int[-307731|0xfffffffffffb4ded] <|@ <|@
      nr  146  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B13 -> B132 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #2          // java.util.regex.Matcher.locals:int[]
     4: aload_0       
     5: getfield      #1          // localIndex:int
     8: iaload        
     9: istore        4
    11: aload_1       
    12: getfield      #2          // java.util.regex.Matcher.locals:int[]
    15: aload_0       
    16: getfield      #1          // localIndex:int
    19: iload_2       
    20: iastore       
    21: aload_0       
    22: getfield      #3          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    25: aload_1       
    26: iload_2       
    27: aload_3       
    28: invokevirtual #4          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    31: istore        5
    33: aload_1       
    34: getfield      #2          // java.util.regex.Matcher.locals:int[]
    37: aload_0       
    38: getfield      #1          // localIndex:int
    41: iload         4
    43: iastore       
    44: iload         5
    46: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048895424508b5a3c8b04dd0c000000448b5610413bc20f86cd0a0000448b5e0c428b04dd0800000048c1e303468b4c931042894c9310458bd349c1e20381f8addeadde0f853f0200008b5a103bd90f8e810a000041817808addeadde0f855f0a000085c90f8c78090000418b580c8b04dd0c0000003bc10f8ef10900003bc10f86a809000048c1e3030fbf5c4b106681fb00d80f838009000044895c244c428b3cdd100000008b04fd080000000fb7eb896c2448448be941ffc544896c244481f8addeadde0f85550100003b2cfd100000000f8c8c0300003b2cfd140000000f8f410a00004c8954243844894c24344c89442428894c24244889742418be01000000428b14dd0c000000813cd508000000addeadde0f85690800004c8b542450418b4a3c448b04cd0c000000448b1cd510000000453bc30f861a08000048c1e103428b4c991085c90f8cba070000458b4234468b1cc50c000000448b0cd514000000453bd90f86a8060000418bd9ffc3443bdb0f86c8080000448b6c2444448b1cd50c000000428b3cdd0800000049c1e003418b749810438b44881043894c881045896c981048c1e20381ffaddeadde0f856601000041837a18010f84c60600004183780c020f824208000045896a20418b721c4189701045896814b8010000004c8b442418458b5a3c468b0cdd0c000000418b4810443bc9448b4c24340f86f207000049c1e30345894c8b10488b6c24604883c468850500000000c5f877c381f8addeadde0f859b050000897c24148b04fd10000000448b34c5080000004181feaddeadde0f85650000003b2cc5100000000f8c5c0300003b2cc5140000000f8f330700004c8954243844894c24344c89442428894c24244889742418be01000000e97afeffff44894c24344889742418488b1cc5e0010000488b4340498bf24c8bd2ffd0904c8b542450e930ffffff44894c243448897424184181feaddeadde0f85e506000089442410448b0cc510000000428b34cd0800000081feaddeadde0f857c000000423b2ccd100000000f8c60030000423b2ccd140000000f8fc1060000be010000004c895424384c89442428894c2424e9e6fdffff49c1e303897424408944241448891424498bf3498bd2418bcd4c8b44242848b8ffffffffffffffff666690e8000000009085c00f8438070000b8010000004c8b542450e97dfeffff81feaddeadde0f85f705000044894c240c468b34cd10000000428b34f50800000081feaddeadde0f8534000000423b2cf5100000000f8c22030000423b2cf5140000000f8fa4060000be010000004c895424384c89442428894c2424e93dfdffff81feaddeadde0f8547050000428b34f5100000008b14f50800000081faaddeadde0f85320000003b2cf5100000000f8c1b0300003b2cf5140000000f8fd5040000be010000004c895424384c89442428894c2424e9e4fcffff4489742408895c24404c895424384c89442428894c242448c1e6038bd548b8ffffffffffffffff6690e8000000009085c00f840f030000be01000000448b5c244ce99efcffff895c24404c8954243844894c24344c89442428894c24244889742418428b34dd14000000418504f4428b14dd0c000000813cd508000000addeadde0f85f90200004c8b542450458b5a3c468b04dd0c000000448b0cd510000000453bc10f863104000049c1e303478b5c8b104585db0f8cf2030000458b4234468b0cc50c0000008b0cd514000000443bc90f86c60300008bd9ffc3443bcb0f86a9030000448b0cd50c000000438504cc8b3cf50800000081ffaddeadde0f846000000081ffaddeadde0f854a0300003b2cf5100000000f8c2d0300003b2cf5140000000f8f1003000049c1e003418b7c9810418b74881045895c881045896c981048c1e20342813ccd08000000addeadde0f852f0100008bc6418bcb8bf7e935fcffff8b34f5100000003b2cf50c0000000f83b202000066817c244000010f83950200000fb77c24400fb674f71085f67597e980030000895c24404c8954243844894c24344c89442428894c24244c8bd248897424188b34fd140000008b14f50800000081faaddeadde0f844400000081faaddeadde0f858804000066817c244000010f83090500008b34f5100000003b2cf50c0000000f83000500000fb75424400fb674f21085f60f85d5faffffe94efeffff3b2cf5100000000f8c41feffff3b2cf5140000000f8f9e010000be01000000e9acfaffff895c24404c895424384c89442428894c24248b34c514000000418504f448c1e6038bd548b8ffffffffffffffff0f1f4000e8000000009085c00f84d6000000be01000000448b5c244ce95efaffff49c1e103897c2440897424144d8bd9488914244c8b542450e96bfcffff895c24404c895424384c89442428894c2424428b34cd14000000418504f448c1e6038b54244848b8ffffffffffffffff660f1f440000e8000000009085c00f8482000000be01000000448b5c244ce9eef9ffff895c24404c895424384c89442428894c2424428b34f514000000418504f448c1e6038b54244848b8ffffffffffffffff666690e8000000009085c00f843f000000be01000000448b5c244ce99ef9ffff448b742408ebbb448b6c24448b6c24488b7c2414448b5c244c4c8b542450e94dfeffff8b4424108b6c2448e9d4feffff448b4c240ce935ffffff41bbcdeafaff448b4c24344c8b5424504c8b44241845899f9c0200004d89a7a8020000e8000000009041bbcd4cfbff498bd84c8bd24c8bc645899f9c0200004d89a7a8020000e8000000009041bbed06fbff488b4c2438448b4c24344c8b44241845899f9c0200004d89a7a8020000e8000000009041bbe55efaff448b4c24344c8b44241845899f9c0200004d89a7a8020000e8000000009041bbeda5faff448b4c2434e967ffffff41bbe59bfaff448b4c2434e957ffffff41bbed91faff448b4c2434e947ffffff41bbed92faff448b4c2434e937ffffff41bbcd97faff448b4c2434e927ffffff41bbed47faff448b4c24344c8b44241845899f9c0200004d89a7a8020000e8000000009041bbe5b0faff448b4c2434e9f3feffff41bbe5b9faff448b4c2434e9e3feffff41bbedd8faff448b4c2434e9d3feffff41bbed25fbff448b4c2434498bd84c8b5424504c8b442418e9defeffff41bbe5dffaff448b4c2434e9a6feffff41bbed7bfaff448b4c2434e906ffffff41bbcd2efbff448b4c2434498bd84c8b5424504c8b442418e9a1feffff448b4c24344c8b44241841c7879c020000edeffaff4d89a7a8020000e8000000009041bbe582faff448b4c2434e9b7feffff41bbcd38fbff448b4c2434498bd84c8b5424504c8b442418e952feffff41bbcd8dfaff448b4c24344c8b542450e985feffff41bbed43fbff498bd84c8bd24c8bc6e929feffff41bbcd42fbff498bd84c8b5424504c8b442418e911feffff41bbed39fbff448b4c2434498bd84c8b5424504c8b442418e9f4fdffff41bbed6bfbff498bd84c8bd24c8bc6e9e0fdffff41c7879c020000e577fbff4d89a7a8020000e8000000009041bbe503faffe974feffff41bbed57fbff498bd84c8bd24c8bc6e9a9fdffff41bbe55ffbff498bd84c8bd24c8bc6e995fdffff41bbe555faff448b4c2434e9cdfdffff41bbed2ffbff448b4c2434498bd84c8b5424504c8b442418e968fdffff41bbed62fbff498bd84c8bd24c8bc6e954fdffff41bbcd05fbffe963fdffff8b4c2440448b5c2414488b1c24448b4c24344c8b5424504c8b44241841c7879c020000ed29faff4d89a7a8020000e8000000009041bbcd6cfbff498bd84c8bd24c8bc6e901fdffff41bbed6efbff498bd84c8bd24c8bc6e9edfcffff4c89442428894c24244c8bd24c8bc641c7879c020000e58bfbff4d89a7a8020000e8000000009041bbed04fbffe9d5fcffff41bbe5fafaffe9cafcffff41bbed4dfbff498bd84c8bd24c8bc6e99cfcffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4abc08fb slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, r8:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 56 [rdx:0, rbx:0, rsi:0, r8:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 67 14 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 70 16 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B137  <||@
  Comment 76 block B1 null  <||@
  Comment 76 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 20 r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 22 rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 80 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 24 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 92 26 r9|DWORD = MOV [rbx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 28 MOV (x: [rbx|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 102 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 109 32 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 109 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 115 34 BRANCH trueDestinationProbability: 0.7364554760601777 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B133  <||@
  Comment 121 block B2 null  <||@
  Comment 121 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 38 rbx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 124 40 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 126 42 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B131  <||@
  Comment 132 block B3 null  <||@
  Comment 132 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 46 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21]  <||@
  Comment 132 [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 132 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 132 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 140 48 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B130  <||@
  Comment 146 block B4 null  <||@
  Comment 146 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 52 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 148 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 154 block B6 null  <||@
  Comment 154 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 70 rbx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 158 72 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:21]  <||@
  Comment 158 [rdx:0, rbx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 158 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 165 74 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 167 76 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B129  <||@
  Comment 173 block B7 null  <||@
  Comment 173 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 80 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 175 82 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B128  <||@
  Comment 181 block B8 null  <||@
  Comment 181 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 86 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 185 88 rbx|DWORD = MOVSX [rbx|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 190 90 CMP rbx|DWORD y: -10240 size: WORD  <||@
  Comment 195 92 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B127  <||@
  Comment 201 block B9 null  <||@
  Comment 201 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 96 stack:36|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 206 98 rdi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 214 100 rax|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 214 [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 214 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 221 102 rbp|DWORD = MOVZX rbx|DWORD size: DWORD  <||@
  Comment 224 104 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 228 106 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 234 108 stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 239 110 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 239 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 245 112 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15  <||@
  Comment 251 block B10 null  <||@
  Comment 251 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 116 CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 258 118 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 264 block B12 null  <||@
  Comment 264 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 138 CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 271 140 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 277 block B14 null  <||@
  Comment 277 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 156 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 282 158 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 287 160 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 292 162 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 296 164 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 301 166 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 306 168 JUMP ~[] destination: B14 -> B100  <||@
  Comment 306 block B100 null  <||@
  Comment 306 1008 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 306 1010 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 314 1012 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28]  <||@
  Comment 314 [rdx:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 314 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 314 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 325 1014 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B121  <||@
  Comment 331 block B101 null  <||@
  Comment 331 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 331 1018 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 336 1020 rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 340 1022 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 340 [rcx:0, rdx:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 340 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 348 1024 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 356 1026 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 359 1028 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B120  <||@
  Comment 365 block B102 null  <||@
  Comment 365 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 365 1032 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 369 1034 rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 374 1036 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 376 1038 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 382 block B104 null  <||@
  Comment 382 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 1052 r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 386 1054 r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 386 [rdx:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 386 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 394 1056 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 402 1058 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 405 1060 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B119  <||@
  Comment 411 block B105 null  <||@
  Comment 411 1062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 1064 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 416 1066 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 419 1068 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B118  <||@
  Comment 425 block B106 null  <||@
  Comment 425 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 1072 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 430 1074 r11|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 438 1076 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 438 [rdx:0, r8:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 438 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 446 1078 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 450 1080 rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 455 1082 rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 460 1084 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 465 1086 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 470 1088 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 474 1090 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 474 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 480 1092 BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B106 -> B108 falseDestination: B106 -> B114  <||@
  Comment 486 block B108 null  <||@
  Comment 486 1098 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 486 1100 CMP [r10|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 491 1102 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110  <||@
  Comment 497 block B110 null  <||@
  Comment 497 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 1116 CMP [r8|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 502 1118 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B113  <||@
  Comment 508 block B113 null  <||@
  Comment 508 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 1140 MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD  <||@
  Comment 512 1142 rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 516 1144 MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 520 1146 MOV (x: [r8|QWORD[.] + 20], y: r13|DWORD) size: DWORD  <||@
  Comment 524 1148 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 529 1152 JUMP ~[] destination: B113 -> B134  <||@
  Comment 529 block B134 null  <||@
  Comment 529 1408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 529 1404 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 534 1410 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 538 1412 r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:31]  <||@
  Comment 538 [r8:0, r10:0, r11:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |                |    <||@
  Comment 538 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 546 1414 rcx|DWORD = MOV [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 550 1416 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 553 1422 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 558 1418 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136  <||@
  Comment 564 block B135 null  <||@
  Comment 564 1420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 1424 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 568 1426 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 573 1428 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 582 12  <||@
  Comment 592 block B15 null  <||@
  Comment 592 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 592 172 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 592 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 598 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B126  <||@
  Comment 604 block B16 null  <||@
  Comment 604 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 178 stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 608 180 rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 615 182 r14|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 615 [rax:0, rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:20, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 615 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 623 184 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 623 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 630 186 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22  <||@
  Comment 636 block B17 null  <||@
  Comment 636 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 636 190 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 643 192 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 649 block B19 null  <||@
  Comment 649 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 214 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 656 216 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 662 block B21 null  <||@
  Comment 662 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 232 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 667 234 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 672 236 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 677 238 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 681 240 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 686 242 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 691 244 JUMP ~[] destination: B21 -> B100  <||@
  Comment 696 block B133 null  <||@
  Comment 696 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 1386 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 701 1388 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 706 1390 rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD  <||@
  Comment 714 1392 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 718 1394 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 721 1396 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 724 1400 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28]  <||@
  Comment 724 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 724 10  <||@
  Comment 726 [stack:24, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 727 1402 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 732 1406 JUMP ~[] destination: B133 -> B134  <||@
  Comment 737 block B22 null  <||@
  Comment 737 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 248 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 742 250 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 747 252 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 747 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 754 254 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B125  <||@
  Comment 760 block B23 null  <||@
  Comment 760 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 258 stack:96|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 764 260 r9|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 772 262 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 772 [rax:0, r8:0, r9:0, r10:0, r11:0, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 772 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 780 264 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 780 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 786 266 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29  <||@
  Comment 792 block B24 null  <||@
  Comment 792 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 270 CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 800 272 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 806 block B26 null  <||@
  Comment 806 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 288 CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 814 290 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 820 block B28 null  <||@
  Comment 820 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 308 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 825 310 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 830 312 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 835 314 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 839 316 JUMP ~[] destination: B28 -> B100  <||@
  Comment 844 block B114 null  <||@
  Comment 844 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 844 1156 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 848 1158 stack:48|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 852 1160 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 856 1162 stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 860 1164 JUMP ~[] destination: B114 -> B115  <||@
  Comment 860 block B115 null  <||@
  Comment 860 1166 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 860 1168 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 863 1170 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 866 1172 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 869 1174 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 874 1176 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28]  <||@
  Comment 874 7  <||@
  Comment 887 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 892 [stack:0, stack:24, stack:80]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                   |1                  |2  |3  |4  |5               |6              
     locals:  |stack:112|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:92|DWORD  |stack:48|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 893 1178 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 895 1180 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 901 block B117 null  <||@
  Comment 901 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 1204 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 906 1206 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 911 1210 JUMP ~[] destination: B117 -> B134  <||@
  Comment 916 block B29 null  <||@
  Comment 916 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 320 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 916 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 922 322 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B124  <||@
  Comment 928 block B30 null  <||@
  Comment 928 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 326 stack:100|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 933 328 r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 941 330 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 941 [r8:0, r9:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 941 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 949 332 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 949 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 955 334 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36  <||@
  Comment 961 block B31 null  <||@
  Comment 961 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 338 CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 969 340 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 975 block B33 null  <||@
  Comment 975 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 975 356 CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 983 358 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 989 block B35 null  <||@
  Comment 989 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 989 376 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 994 378 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 999 380 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1004 382 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1008 384 JUMP ~[] destination: B35 -> B100  <||@
  Comment 1013 block B36 null  <||@
  Comment 1013 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1013 388 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 1013 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 1019 390 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B123  <||@
  Comment 1025 block B37 null  <||@
  Comment 1025 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 394 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1033 396 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 1033 [rsi:0, r8:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 1033 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1040 398 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1040 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1046 400 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43  <||@
  Comment 1052 block B38 null  <||@
  Comment 1052 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1052 404 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1059 406 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1065 block B40 null  <||@
  Comment 1065 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1065 422 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1072 424 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1078 block B42 null  <||@
  Comment 1078 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 442 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1083 444 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1088 446 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1093 448 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1097 450 JUMP ~[] destination: B42 -> B100  <||@
  Comment 1102 block B43 null  <||@
  Comment 1102 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 454 stack:104|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1107 456 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1111 458 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 460 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1121 462 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1125 464 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1129 466 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1131 468 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1131 7  <||@
  Comment 1143 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1148 [stack:8, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1149 470 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1151 472 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B99  <||@
  Comment 1157 block B99 null  <||@
  Comment 1157 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1157 1002 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1162 1004 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1167 1006 JUMP ~[] destination: B99 -> B100  <||@
  Comment 1172 block B11 null  <||@
  Comment 1172 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 122 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1176 124 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 126 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1186 128 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 130 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1195 132 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 134 JUMP ~[] destination: B11 -> B62  <||@
  Comment 1200 block B62 null  <||@
  Comment 1200 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1200 636 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1208 638 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 18, 28]  <||@
  Comment 1208 [rsi:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1208 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1212 640 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1220 642 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28]  <||@
  Comment 1220 [rdx:0, rsi:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1220 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1220 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1231 644 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B89  <||@
  Comment 1237 block B63 null  <||@
  Comment 1237 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 648 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 650 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 1246 652 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1246 [rdx:0, rsi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1246 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1254 654 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1262 656 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1265 658 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B88  <||@
  Comment 1271 block B64 null  <||@
  Comment 1271 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1271 662 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1275 664 r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1280 666 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1283 668 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 1289 block B66 null  <||@
  Comment 1289 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1289 682 r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 1293 684 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1293 [rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1293 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1301 686 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1308 688 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1311 690 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B87  <||@
  Comment 1317 block B67 null  <||@
  Comment 1317 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1317 694 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1321 696 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1324 698 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B86  <||@
  Comment 1330 block B68 null  <||@
  Comment 1330 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 702 r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1338 704 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18, 28]  <||@
  Comment 1338 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1338 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1342 706 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1349 708 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1349 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1355 710 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B76  <||@
  Comment 1361 block B76 null  <||@
  Comment 1361 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1361 778 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1361 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1367 780 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B85  <||@
  Comment 1373 block B77 null  <||@
  Comment 1373 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1373 786 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1380 788 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 1386 block B79 null  <||@
  Comment 1386 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1386 802 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1393 804 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B82  <||@
  Comment 1399 block B82 null  <||@
  Comment 1399 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1399 824 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1403 826 rdi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1408 828 rsi|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1413 830 MOV (x: [r8|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 1418 832 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1423 834 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1427 836 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1427 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1439 838 BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 1445 block B83 null  <||@
  Comment 1445 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1445 842 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1447 844 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1450 846 rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1452 848 JUMP ~[] destination: B83 -> B108  <||@
  Comment 1457 block B69 null  <||@
  Comment 1457 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1457 716 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1464 718 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1464 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1464 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1471 720 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B75  <||@
  Comment 1477 block B70 null  <||@
  Comment 1477 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1477 724 CMP stack:48|DWORD y: 256 size: WORD  <||@
  Comment 1484 726 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B74  <||@
  Comment 1490 block B71 null  <||@
  Comment 1490 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1490 730 rdi|QWORD = MOVZX stack:48|DWORD size: DWORD  <||@
  Comment 1495 732 rsi|DWORD = MOVZXB [rdi|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1500 734 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1502 736 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B82  <||@
  Comment 1509 block B18 null  <||@
  Comment 1509 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 196 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1513 198 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1518 200 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1523 202 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1528 204 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1532 206 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1535 208 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1540 210 JUMP ~[] destination: B18 -> B51  <||@
  Comment 1540 block B51 null  <||@
  Comment 1540 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1540 558 rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1547 560 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28]  <||@
  Comment 1547 [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1547 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1554 562 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1554 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1560 564 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57  <||@
  Comment 1566 block B57 null  <||@
  Comment 1566 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 602 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1566 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1572 604 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B94  <||@
  Comment 1578 block B58 null  <||@
  Comment 1578 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1578 608 CMP stack:48|DWORD y: 256 size: WORD  <||@
  Comment 1585 610 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B93  <||@
  Comment 1591 block B59 null  <||@
  Comment 1591 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1591 614 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1598 616 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28]  <||@
  Comment 1598 [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1598 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1605 618 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B92  <||@
  Comment 1611 block B60 null  <||@
  Comment 1611 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1611 622 rdx|QWORD = MOVZX stack:48|DWORD size: DWORD  <||@
  Comment 1616 624 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1621 626 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1623 628 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B60 -> B62 falseDestination: B60 -> B100  <||@
  Comment 1634 block B52 null  <||@
  Comment 1634 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1634 568 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1641 570 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B52 -> B62 falseDestination: B52 -> B54  <||@
  Comment 1647 block B54 null  <||@
  Comment 1647 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 578 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1654 580 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 1660 block B56 null  <||@
  Comment 1660 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 596 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1665 598 JUMP ~[] destination: B56 -> B100  <||@
  Comment 1670 block B25 null  <||@
  Comment 1670 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1670 276 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1674 278 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1679 280 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1684 282 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1688 284 JUMP ~[] destination: B25 -> B49  <||@
  Comment 1688 block B49 null  <||@
  Comment 1688 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1688 528 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1695 530 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28]  <||@
  Comment 1695 [rax:0, rsi:0, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rax|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:92|DWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1695 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1699 532 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1703 534 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1705 536 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28]  <||@
  Comment 1705 7  <||@
  Comment 1719 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1724 [stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1725 538 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1727 540 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B96  <||@
  Comment 1733 block B96 null  <||@
  Comment 1733 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1733 978 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1738 980 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1743 982 JUMP ~[] destination: B96 -> B100  <||@
  Comment 1748 block B84 null  <||@
  Comment 1748 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1748 852 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1752 854 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1756 856 stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1760 858 r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1763 860 stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1767 864 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1772 866 JUMP ~[] destination: B84 -> B115  <||@
  Comment 1777 block B32 null  <||@
  Comment 1777 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1777 344 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1781 346 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1786 348 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1791 350 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1795 352 JUMP ~[] destination: B32 -> B47  <||@
  Comment 1795 block B47 null  <||@
  Comment 1795 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1795 504 rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1803 506 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28]  <||@
  Comment 1803 [rsi:0, r9:0, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1              
     locals:  |r9|DWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]   |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1803 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1807 508 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1811 510 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1815 512 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28]  <||@
  Comment 1815 7  <||@
  Comment 1831 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1836 [stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1837 514 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1839 516 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B97  <||@
  Comment 1845 block B97 null  <||@
  Comment 1845 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1845 986 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1850 988 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1855 990 JUMP ~[] destination: B97 -> B100  <||@
  Comment 1860 block B39 null  <||@
  Comment 1860 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1860 410 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1864 412 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1869 414 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1874 416 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1878 418 JUMP ~[] destination: B39 -> B45  <||@
  Comment 1878 block B45 null  <||@
  Comment 1878 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1878 482 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1886 484 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1886 [rsi:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1886 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1890 486 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1894 488 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1898 490 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1898 7  <||@
  Comment 1911 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1916 [stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1917 492 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1919 494 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B98  <||@
  Comment 1925 block B98 null  <||@
  Comment 1925 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 994 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1930 996 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1935 998 JUMP ~[] destination: B98 -> B100  <||@
  Comment 1940 block B44 null  <||@
  Comment 1940 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1940 476 r14|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD  <||@
  Comment 1945 478 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1947 block B50 null  <||@
  Comment 1947 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1947 544 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1952 546 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1956 548 rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1960 550 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1965 552 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1970 554 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1975 block B48 null  <||@
  Comment 1975 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 520 rax|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 1979 522 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1983 524 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1988 block B46 null  <||@
  Comment 1988 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1988 498 r9|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 1993 500 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1998 block B89 null  <||@
  Comment 1998 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1998 910 r11|DWORD = MOVE input: int[-333107|0xfffffffffffaeacd]  <||@
  Comment 2004 912 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2009 914 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2014 918 JUMP ~[] destination: B89 -> B90  <||@
  Comment 2014 block B90 null  <||@
  Comment 2014 920 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2014 916 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2019 922 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2026 924 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2033 926 DEOPT info [bci:8, 18, 28]  <||@
  Comment 2033 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2038 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2039 block B126 null  <||@
  Comment 2039 1304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2039 1306 r11|DWORD = MOVE input: int[-308019|0xfffffffffffb4ccd]  <||@
  Comment 2045 1308 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2048 1310 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2051 1312 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2054 1314 JUMP ~[] destination: B126 -> B132  <||@
  Comment 2054 block B132 null  <||@
  Comment 2054 1376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2054 1378 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2061 1380 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2068 1382 DEOPT info [bci:21]  <||@
  Comment 2068 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2073 [rbx:0, r8:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3             |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |rbx|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 2074 block B55 null  <||@
  Comment 2074 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2074 584 r11|DWORD = MOVE input: int[-325907|0xfffffffffffb06ed]  <||@
  Comment 2080 592 JUMP ~[] destination: B55 -> B95  <||@
  Comment 2080 block B95 null  <||@
  Comment 2080 968 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2080 586 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2085 588 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2090 590 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2095 970 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2102 972 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2109 974 DEOPT info [bci:8, 5, 18, 28]  <||@
  Comment 2109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2114 [rcx:0, rdi:0, r8:0, r10:0, stack:40]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rcx|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2115 block B119 null  <||@
  Comment 2115 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2115 1224 r11|DWORD = MOVE input: int[-368923|0xfffffffffffa5ee5]  <||@
  Comment 2121 1226 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2126 1230 JUMP ~[] destination: B119 -> B122  <||@
  Comment 2126 block B122 null  <||@
  Comment 2126 1254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2126 1250 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2131 1256 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2138 1258 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2145 1260 DEOPT info [bci:8, 18, 28]  <||@
  Comment 2145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2150 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2151 block B74 null  <||@
  Comment 2151 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2151 758 r11|DWORD = MOVE input: int[-350739|0xfffffffffffaa5ed]  <||@
  Comment 2157 760 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2162 764 JUMP ~[] destination: B74 -> B90  <||@
  Comment 2167 block B75 null  <||@
  Comment 2167 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2167 768 r11|DWORD = MOVE input: int[-353307|0xfffffffffffa9be5]  <||@
  Comment 2173 770 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2178 774 JUMP ~[] destination: B75 -> B90  <||@
  Comment 2183 block B80 null  <||@
  Comment 2183 806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2183 808 r11|DWORD = MOVE input: int[-355859|0xfffffffffffa91ed]  <||@
  Comment 2189 810 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2194 814 JUMP ~[] destination: B80 -> B90  <||@
  Comment 2199 block B78 null  <||@
  Comment 2199 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2199 792 r11|DWORD = MOVE input: int[-355603|0xfffffffffffa92ed]  <||@
  Comment 2205 794 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2210 798 JUMP ~[] destination: B78 -> B90  <||@
  Comment 2215 block B85 null  <||@
  Comment 2215 868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2215 870 r11|DWORD = MOVE input: int[-354355|0xfffffffffffa97cd]  <||@
  Comment 2221 872 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2226 876 JUMP ~[] destination: B85 -> B90  <||@
  Comment 2231 block B109 null  <||@
  Comment 2231 1104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2231 1106 r11|DWORD = MOVE input: int[-374803|0xfffffffffffa47ed]  <||@
  Comment 2237 1112 JUMP ~[] destination: B109 -> B112  <||@
  Comment 2237 block B112 null  <||@
  Comment 2237 1130 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2237 1108 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2242 1110 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2247 1132 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2254 1134 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2261 1136 DEOPT info [bci:63, 37, 28]  <||@
  Comment 2261 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2266 [rdx:0, r8:0, r10:0, stack:40]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r13|DWORD  |stack:72|QWORD[.]  |rcx|DWORD  |rax|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2267 block B86 null  <||@
  Comment 2267 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2267 880 r11|DWORD = MOVE input: int[-347931|0xfffffffffffab0e5]  <||@
  Comment 2273 882 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2278 886 JUMP ~[] destination: B86 -> B90  <||@
  Comment 2283 block B87 null  <||@
  Comment 2283 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2283 890 r11|DWORD = MOVE input: int[-345627|0xfffffffffffab9e5]  <||@
  Comment 2289 892 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2294 896 JUMP ~[] destination: B87 -> B90  <||@
  Comment 2299 block B65 null  <||@
  Comment 2299 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2299 672 r11|DWORD = MOVE input: int[-337683|0xfffffffffffad8ed]  <||@
  Comment 2305 674 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2310 678 JUMP ~[] destination: B65 -> B90  <||@
  Comment 2315 block B41 null  <||@
  Comment 2315 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2315 428 r11|DWORD = MOVE input: int[-317971|0xfffffffffffb25ed]  <||@
  Comment 2321 430 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2326 432 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2329 434 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2334 436 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2339 438 JUMP ~[] destination: B41 -> B132  <||@
  Comment 2344 block B88 null  <||@
  Comment 2344 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2344 900 r11|DWORD = MOVE input: int[-335899|0xfffffffffffadfe5]  <||@
  Comment 2350 902 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2355 906 JUMP ~[] destination: B88 -> B90  <||@
  Comment 2360 block B103 null  <||@
  Comment 2360 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2360 1042 r11|DWORD = MOVE input: int[-361491|0xfffffffffffa7bed]  <||@
  Comment 2366 1044 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2371 1048 JUMP ~[] destination: B103 -> B122  <||@
  Comment 2376 block B123 null  <||@
  Comment 2376 1262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2376 1264 r11|DWORD = MOVE input: int[-315699|0xfffffffffffb2ecd]  <||@
  Comment 2382 1266 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2387 1268 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2390 1270 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2395 1272 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2400 1274 JUMP ~[] destination: B123 -> B132  <||@
  Comment 2405 block B72 null  <||@
  Comment 2405 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2405 740 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2410 742 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2415 744 MOV [r15|QWORD + 668] y: -331795 size: DWORD  <||@
  Comment 2426 746 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2433 748 DEOPT info [bci:21, 28]  <||@
  Comment 2433 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2438 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |               
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2439 block B120 null  <||@
  Comment 2439 1232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2439 1234 r11|DWORD = MOVE input: int[-359707|0xfffffffffffa82e5]  <||@
  Comment 2445 1236 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2450 1240 JUMP ~[] destination: B120 -> B122  <||@
  Comment 2455 block B124 null  <||@
  Comment 2455 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2455 1278 r11|DWORD = MOVE input: int[-313139|0xfffffffffffb38cd]  <||@
  Comment 2461 1280 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2466 1282 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2469 1284 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2474 1286 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2479 1288 JUMP ~[] destination: B124 -> B132  <||@
  Comment 2484 block B121 null  <||@
  Comment 2484 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2484 1244 r11|DWORD = MOVE input: int[-356915|0xfffffffffffa8dcd]  <||@
  Comment 2490 1246 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2495 1248 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2500 1252 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2505 block B20 null  <||@
  Comment 2505 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2505 220 r11|DWORD = MOVE input: int[-310291|0xfffffffffffb43ed]  <||@
  Comment 2511 222 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2514 224 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2517 226 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2520 228 JUMP ~[] destination: B20 -> B132  <||@
  Comment 2525 block B125 null  <||@
  Comment 2525 1290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2525 1292 r11|DWORD = MOVE input: int[-310579|0xfffffffffffb42cd]  <||@
  Comment 2531 1296 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2534 1298 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2539 1300 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2544 1302 JUMP ~[] destination: B125 -> B132  <||@
  Comment 2549 block B27 null  <||@
  Comment 2549 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2549 294 r11|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed]  <||@
  Comment 2555 296 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2560 298 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2563 300 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2568 302 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2573 304 JUMP ~[] destination: B27 -> B132  <||@
  Comment 2578 block B5 null  <||@
  Comment 2578 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2578 58 r11|DWORD = MOVE input: int[-300051|0xfffffffffffb6bed]  <||@
  Comment 2584 60 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2587 62 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2590 64 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2593 66 JUMP ~[] destination: B5 -> B132  <||@
  Comment 2598 block B136 null  <||@
  Comment 2598 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2598 1434 MOV [r15|QWORD + 668] y: -296987 size: DWORD  <||@
  Comment 2609 1436 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2616 1438 DEOPT info [bci:31]  <||@
  Comment 2616 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2621 [r8:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |          |    <||@
  Comment 2622 block B111 null  <||@
  Comment 2622 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2622 1122 r11|DWORD = MOVE input: int[-392219|0xfffffffffffa03e5]  <||@
  Comment 2628 1128 JUMP ~[] destination: B111 -> B112  <||@
  Comment 2633 block B127 null  <||@
  Comment 2633 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2633 1318 r11|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed]  <||@
  Comment 2639 1320 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2642 1322 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2645 1324 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2648 1326 JUMP ~[] destination: B127 -> B132  <||@
  Comment 2653 block B128 null  <||@
  Comment 2653 1328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2653 1330 r11|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5]  <||@
  Comment 2659 1332 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2662 1334 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2665 1336 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2668 1338 JUMP ~[] destination: B128 -> B132  <||@
  Comment 2673 block B118 null  <||@
  Comment 2673 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2673 1214 r11|DWORD = MOVE input: int[-371227|0xfffffffffffa55e5]  <||@
  Comment 2679 1216 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2684 1220 JUMP ~[] destination: B118 -> B122  <||@
  Comment 2689 block B34 null  <||@
  Comment 2689 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2689 362 r11|DWORD = MOVE input: int[-315411|0xfffffffffffb2fed]  <||@
  Comment 2695 364 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2700 366 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2703 368 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2708 370 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2713 372 JUMP ~[] destination: B34 -> B132  <||@
  Comment 2718 block B129 null  <||@
  Comment 2718 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2718 1342 r11|DWORD = MOVE input: int[-302355|0xfffffffffffb62ed]  <||@
  Comment 2724 1344 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2727 1346 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2730 1348 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2733 1350 JUMP ~[] destination: B129 -> B132  <||@
  Comment 2738 block B94 null  <||@
  Comment 2738 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2738 958 r11|DWORD = MOVE input: int[-326195|0xfffffffffffb05cd]  <||@
  Comment 2744 966 JUMP ~[] destination: B94 -> B95  <||@
  Comment 2749 block B116 null  <||@
  Comment 2749 1182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2749 1184 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2753 1186 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2758 1188 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2762 1190 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2767 1192 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2772 1194 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2777 1196 MOV [r15|QWORD + 668] y: -382483 size: DWORD  <||@
  Comment 2788 1198 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2795 1200 DEOPT info [bci:73, 37, 28]  <||@
  Comment 2795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2800 [rbx:0, r8:0, r10:0]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5          |6         
     locals:  |rbx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |r11|DWORD  |rcx|DWORD 
     stack:   |int[0|0x0]    |              |   |   |   |           |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2801 block B130 null  <||@
  Comment 2801 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2801 1354 r11|DWORD = MOVE input: int[-299827|0xfffffffffffb6ccd]  <||@
  Comment 2807 1356 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2810 1358 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2813 1360 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2816 1362 JUMP ~[] destination: B130 -> B132  <||@
  Comment 2821 block B131 null  <||@
  Comment 2821 1364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2821 1366 r11|DWORD = MOVE input: int[-299283|0xfffffffffffb6eed]  <||@
  Comment 2827 1368 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2830 1370 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2833 1372 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2836 1374 JUMP ~[] destination: B131 -> B132  <||@
  Comment 2841 block B137 null  <||@
  Comment 2841 1440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2841 1442 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2846 1444 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2850 1446 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2853 1448 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2856 1450 MOV [r15|QWORD + 668] y: -291867 size: DWORD  <||@
  Comment 2867 1452 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2874 1454 DEOPT info [bci:0]  <||@
  Comment 2874 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2879 [r8:0, r10:0, stack:40]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0            |1             |2               |3                  |4  |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 2880 block B93 null  <||@
  Comment 2880 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2880 946 r11|DWORD = MOVE input: int[-326419|0xfffffffffffb04ed]  <||@
  Comment 2886 954 JUMP ~[] destination: B93 -> B95  <||@
  Comment 2891 block B92 null  <||@
  Comment 2891 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2891 934 r11|DWORD = MOVE input: int[-328987|0xfffffffffffafae5]  <||@
  Comment 2897 942 JUMP ~[] destination: B92 -> B95  <||@
  Comment 2902 block B13 null  <||@
  Comment 2902 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2902 144 r11|DWORD = MOVE input: int[-307731|0xfffffffffffb4ded]  <||@
  Comment 2908 146 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2911 148 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2914 150 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2917 152 JUMP ~[] destination: B13 -> B132  <||@
  Comment 2922 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2922 4  <||@
  Comment 2928 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2928 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2540[java.util.regex.Pattern$GroupHead.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-2540[java.util.regex.Pattern$GroupHead.match(Matcher, int, CharSequence)]"
  date 1527005148729
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078c5ae0 448b560849c1e203493bc20f856f03f4fe900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048895424508b5a3c8b04dd0c000000448b5610413bc20f86cd0a0000448b5e0c428b04dd0800000048c1e303468b4c931042894c9310458bd349c1e20381f89d2101f80f853f0200008b5a103bd90f8e810a000041817808da0200f80f855f0a000085c90f8c78090000418b580c8b04dd0c0000003bc10f8ef10900003bc10f86a809000048c1e3030fbf5c4b106681fb00d80f838009000044895c244c428b3cdd100000008b04fd080000000fb7eb896c2448448be941ffc544896c244481f8582101f80f85550100003b2cfd100000000f8c8c0300003b2cfd140000000f8f410a00004c8954243844894c24344c89442428894c24244889742418be01000000428b14dd0c000000813cd508000000072001f80f85690800004c8b542450418b4a3c448b04cd0c000000448b1cd510000000453bc30f861a08000048c1e103428b4c991085c90f8cba070000458b4234468b1cc50c000000448b0cd514000000453bd90f86a8060000418bd9ffc3443bdb0f86c8080000448b6c2444448b1cd50c000000428b3cdd0800000049c1e003418b749810438b44881043894c881045896c981048c1e20381ffab9f00f80f856601000041837a18010f84c60600004183780c020f824208000045896a20418b721c4189701045896814b8010000004c8b442418458b5a3c468b0cdd0c000000418b4810443bc9448b4c24340f86f207000049c1e30345894c8b10488b6c24604883c4688505da92fcfcc5f877c381f89d2101f80f859b050000897c24148b04fd10000000448b34c5080000004181fe582101f80f85650000003b2cc5100000000f8c5c0300003b2cc5140000000f8f330700004c8954243844894c24344c89442428894c24244889742418be01000000e97afeffff44894c24344889742418488b1cc5e0010000488b4340498bf24c8bd2ffd0904c8b542450e930ffffff44894c243448897424184181fe9d2101f80f85e506000089442410448b0cc510000000428b34cd0800000081fe582101f80f857c000000423b2ccd100000000f8c60030000423b2ccd140000000f8fc1060000be010000004c895424384c89442428894c2424e9e6fdffff49c1e303897424408944241448891424498bf3498bd2418bcd4c8b44242848b8ffffffffffffffff666690e88404f4fe9085c00f8438070000b8010000004c8b542450e97dfeffff81fe9d2101f80f85f705000044894c240c468b34cd10000000428b34f50800000081fe582101f80f8534000000423b2cf5100000000f8c22030000423b2cf5140000000f8fa4060000be010000004c895424384c89442428894c2424e93dfdffff81fe9d2101f80f8547050000428b34f5100000008b14f50800000081fa582101f80f85320000003b2cf5100000000f8c1b0300003b2cf5140000000f8fd5040000be010000004c895424384c89442428894c2424e9e4fcffff4489742408895c24404c895424384c89442428894c242448c1e6038bd548b8ffffffffffffffff6690e88403f4fe9085c00f840f030000be01000000448b5c244ce99efcffff895c24404c8954243844894c24344c89442428894c24244889742418428b34dd14000000418504f4428b14dd0c000000813cd508000000072001f80f85f90200004c8b542450458b5a3c468b04dd0c000000448b0cd510000000453bc10f863104000049c1e303478b5c8b104585db0f8cf2030000458b4234468b0cc50c0000008b0cd514000000443bc90f86c60300008bd9ffc3443bcb0f86a9030000448b0cd50c000000438504cc8b3cf50800000081ff122101f80f846000000081ff582101f80f854a0300003b2cf5100000000f8c2d0300003b2cf5140000000f8f1003000049c1e003418b7c9810418b74881045895c881045896c981048c1e20342813ccd08000000ab9f00f80f852f0100008bc6418bcb8bf7e935fcffff8b34f5100000003b2cf50c0000000f83b202000066817c244000010f83950200000fb77c24400fb674f71085f67597e980030000895c24404c8954243844894c24344c89442428894c24244c8bd248897424188b34fd140000008b14f50800000081fa582101f80f844400000081fa122101f80f858804000066817c244000010f83090500008b34f5100000003b2cf50c0000000f83000500000fb75424400fb674f21085f60f85d5faffffe94efeffff3b2cf5100000000f8c41feffff3b2cf5140000000f8f9e010000be01000000e9acfaffff895c24404c895424384c89442428894c24248b34c514000000418504f448c1e6038bd548b8ffffffffffffffff0f1f4000e84401f4fe9085c00f84d6000000be01000000448b5c244ce95efaffff49c1e103897c2440897424144d8bd9488914244c8b542450e96bfcffff895c24404c895424384c89442428894c2424428b34cd14000000418504f448c1e6038b54244848b8ffffffffffffffff660f1f440000e8d400f4fe9085c00f8482000000be01000000448b5c244ce9eef9ffff895c24404c895424384c89442428894c2424428b34f514000000418504f448c1e6038b54244848b8ffffffffffffffff666690e88400f4fe9085c00f843f000000be01000000448b5c244ce99ef9ffff448b742408ebbb448b6c24448b6c24488b7c2414448b5c244c4c8b542450e94dfeffff8b4424108b6c2448e9d4feffff448b4c240ce935ffffff41bbcdeafaff448b4c24344c8b5424504c8b44241845899f9c0200004d89a7a8020000e82813f4fe9041bbcd4cfbff498bd84c8bd24c8bc645899f9c0200004d89a7a8020000e80513f4fe9041bbed06fbff488b4c2438448b4c24344c8b44241845899f9c0200004d89a7a8020000e8dc12f4fe9041bbe55efaff448b4c24344c8b44241845899f9c0200004d89a7a8020000e8b812f4fe9041bbeda5faff448b4c2434e967ffffff41bbe59bfaff448b4c2434e957ffffff41bbed91faff448b4c2434e947ffffff41bbed92faff448b4c2434e937ffffff41bbcd97faff448b4c2434e927ffffff41bbed47faff448b4c24344c8b44241845899f9c0200004d89a7a8020000e84412f4fe9041bbe5b0faff448b4c2434e9f3feffff41bbe5b9faff448b4c2434e9e3feffff41bbedd8faff448b4c2434e9d3feffff41bbed25fbff448b4c2434498bd84c8b5424504c8b442418e9defeffff41bbe5dffaff448b4c2434e9a6feffff41bbed7bfaff448b4c2434e906ffffff41bbcd2efbff448b4c2434498bd84c8b5424504c8b442418e9a1feffff448b4c24344c8b44241841c7879c020000edeffaff4d89a7a8020000e89811f4fe9041bbe582faff448b4c2434e9b7feffff41bbcd38fbff448b4c2434498bd84c8b5424504c8b442418e952feffff41bbcd8dfaff448b4c24344c8b542450e985feffff41bbed43fbff498bd84c8bd24c8bc6e929feffff41bbcd42fbff498bd84c8b5424504c8b442418e911feffff41bbed39fbff448b4c2434498bd84c8b5424504c8b442418e9f4fdffff41bbed6bfbff498bd84c8bd24c8bc6e9e0fdffff41c7879c020000e577fbff4d89a7a8020000e8e110f4fe9041bbe503faffe974feffff41bbed57fbff498bd84c8bd24c8bc6e9a9fdffff41bbe55ffbff498bd84c8bd24c8bc6e995fdffff41bbe555faff448b4c2434e9cdfdffff41bbed2ffbff448b4c2434498bd84c8b5424504c8b442418e968fdffff41bbed62fbff498bd84c8bd24c8bc6e954fdffff41bbcd05fbffe963fdffff8b4c2440448b5c2414488b1c24448b4c24344c8b5424504c8b44241841c7879c020000ed29faff4d89a7a8020000e82e10f4fe9041bbcd6cfbff498bd84c8bd24c8bc6e901fdffff41bbed6efbff498bd84c8bd24c8bc6e9edfcffff4c89442428894c24244c8bd24c8bc641c7879c020000e58bfbff4d89a7a8020000e8df0ff4fe9041bbed04fbffe9d5fcffff41bbe5fafaffe9cafcffff41bbed4dfbff498bd84c8bd24c8bc6e99cfcffffe8d13f38ff90e8ab0ef4fe90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4abc08fb slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, r8:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 56 [rdx:0, rbx:0, rsi:0, r8:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 67 14 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 70 16 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B137  <||@
  Comment 76 block B1 null  <||@
  Comment 76 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 20 r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 22 rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 80 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 24 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 92 26 r9|DWORD = MOV [rbx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 28 MOV (x: [rbx|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 102 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 109 32 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 109 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 115 34 BRANCH trueDestinationProbability: 0.7364554760601777 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B133  <||@
  Comment 121 block B2 null  <||@
  Comment 121 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 38 rbx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 124 40 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 126 42 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B131  <||@
  Comment 132 block B3 null  <||@
  Comment 132 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 46 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21]  <||@
  Comment 132 [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 132 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 132 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 140 48 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B130  <||@
  Comment 146 block B4 null  <||@
  Comment 146 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 52 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 148 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 154 block B6 null  <||@
  Comment 154 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 70 rbx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 158 72 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:21]  <||@
  Comment 158 [rdx:0, rbx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 158 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 165 74 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 167 76 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B129  <||@
  Comment 173 block B7 null  <||@
  Comment 173 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 80 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 175 82 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B128  <||@
  Comment 181 block B8 null  <||@
  Comment 181 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 86 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 185 88 rbx|DWORD = MOVSX [rbx|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 190 90 CMP rbx|DWORD y: -10240 size: WORD  <||@
  Comment 195 92 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B127  <||@
  Comment 201 block B9 null  <||@
  Comment 201 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 96 stack:36|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 206 98 rdi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 214 100 rax|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 214 [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 214 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 221 102 rbp|DWORD = MOVZX rbx|DWORD size: DWORD  <||@
  Comment 224 104 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 228 106 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 234 108 stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 239 110 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 239 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 245 112 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15  <||@
  Comment 251 block B10 null  <||@
  Comment 251 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 116 CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 258 118 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 264 block B12 null  <||@
  Comment 264 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 138 CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 271 140 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 277 block B14 null  <||@
  Comment 277 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 156 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 282 158 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 287 160 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 292 162 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 296 164 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 301 166 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 306 168 JUMP ~[] destination: B14 -> B100  <||@
  Comment 306 block B100 null  <||@
  Comment 306 1008 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 306 1010 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 314 1012 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28]  <||@
  Comment 314 [rdx:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 314 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 314 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 325 1014 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B121  <||@
  Comment 331 block B101 null  <||@
  Comment 331 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 331 1018 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 336 1020 rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 340 1022 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 340 [rcx:0, rdx:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 340 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 348 1024 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 356 1026 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 359 1028 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B101 -> B102 falseDestination: B101 -> B120  <||@
  Comment 365 block B102 null  <||@
  Comment 365 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 365 1032 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 369 1034 rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 374 1036 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 376 1038 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 382 block B104 null  <||@
  Comment 382 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 1052 r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 386 1054 r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 386 [rdx:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 386 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 394 1056 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 402 1058 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 405 1060 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B119  <||@
  Comment 411 block B105 null  <||@
  Comment 411 1062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 1064 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 416 1066 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 419 1068 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B118  <||@
  Comment 425 block B106 null  <||@
  Comment 425 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 1072 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 430 1074 r11|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 438 1076 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 438 [rdx:0, r8:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 438 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 446 1078 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 450 1080 rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 455 1082 rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 460 1084 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 465 1086 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 470 1088 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 474 1090 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 474 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 480 1092 BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B106 -> B108 falseDestination: B106 -> B114  <||@
  Comment 486 block B108 null  <||@
  Comment 486 1098 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 486 1100 CMP [r10|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 491 1102 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110  <||@
  Comment 497 block B110 null  <||@
  Comment 497 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 1116 CMP [r8|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 502 1118 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B113  <||@
  Comment 508 block B113 null  <||@
  Comment 508 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 1140 MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD  <||@
  Comment 512 1142 rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 516 1144 MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 520 1146 MOV (x: [r8|QWORD[.] + 20], y: r13|DWORD) size: DWORD  <||@
  Comment 524 1148 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 529 1152 JUMP ~[] destination: B113 -> B134  <||@
  Comment 529 block B134 null  <||@
  Comment 529 1408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 529 1404 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 534 1410 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 538 1412 r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:31]  <||@
  Comment 538 [r8:0, r10:0, r11:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |                |    <||@
  Comment 538 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 546 1414 rcx|DWORD = MOV [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 550 1416 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 553 1422 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 558 1418 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136  <||@
  Comment 564 block B135 null  <||@
  Comment 564 1420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 1424 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 568 1426 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 573 1428 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 582 12  <||@
  Comment 592 block B15 null  <||@
  Comment 592 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 592 172 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 592 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 598 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B126  <||@
  Comment 604 block B16 null  <||@
  Comment 604 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 178 stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 608 180 rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 615 182 r14|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 615 [rax:0, rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:20, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 615 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 623 184 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 623 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 630 186 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22  <||@
  Comment 636 block B17 null  <||@
  Comment 636 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 636 190 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 643 192 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 649 block B19 null  <||@
  Comment 649 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 214 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 656 216 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 662 block B21 null  <||@
  Comment 662 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 232 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 667 234 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 672 236 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 677 238 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 681 240 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 686 242 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 691 244 JUMP ~[] destination: B21 -> B100  <||@
  Comment 696 block B133 null  <||@
  Comment 696 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 1386 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 701 1388 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 706 1390 rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD  <||@
  Comment 714 1392 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 718 1394 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 721 1396 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 724 1400 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28]  <||@
  Comment 724 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 724 10  <||@
  Comment 726 [stack:24, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 727 1402 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 732 1406 JUMP ~[] destination: B133 -> B134  <||@
  Comment 737 block B22 null  <||@
  Comment 737 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 248 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 742 250 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 747 252 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 747 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 754 254 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B125  <||@
  Comment 760 block B23 null  <||@
  Comment 760 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 258 stack:96|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 764 260 r9|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 772 262 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 772 [rax:0, r8:0, r9:0, r10:0, r11:0, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 772 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 780 264 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 780 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 786 266 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29  <||@
  Comment 792 block B24 null  <||@
  Comment 792 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 270 CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 800 272 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 806 block B26 null  <||@
  Comment 806 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 288 CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 814 290 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 820 block B28 null  <||@
  Comment 820 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 308 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 825 310 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 830 312 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 835 314 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 839 316 JUMP ~[] destination: B28 -> B100  <||@
  Comment 844 block B114 null  <||@
  Comment 844 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 844 1156 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 848 1158 stack:48|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 852 1160 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 856 1162 stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 860 1164 JUMP ~[] destination: B114 -> B115  <||@
  Comment 860 block B115 null  <||@
  Comment 860 1166 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 860 1168 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 863 1170 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 866 1172 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 869 1174 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 874 1176 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28]  <||@
  Comment 874 7  <||@
  Comment 887 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 892 [stack:0, stack:24, stack:80]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                   |1                  |2  |3  |4  |5               |6              
     locals:  |stack:112|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:92|DWORD  |stack:48|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 893 1178 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 895 1180 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 901 block B117 null  <||@
  Comment 901 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 1204 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 906 1206 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 911 1210 JUMP ~[] destination: B117 -> B134  <||@
  Comment 916 block B29 null  <||@
  Comment 916 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 320 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 916 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 922 322 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B124  <||@
  Comment 928 block B30 null  <||@
  Comment 928 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 326 stack:100|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 933 328 r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 941 330 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 941 [r8:0, r9:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 941 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 949 332 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 949 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 955 334 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36  <||@
  Comment 961 block B31 null  <||@
  Comment 961 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 338 CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 969 340 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 975 block B33 null  <||@
  Comment 975 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 975 356 CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 983 358 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 989 block B35 null  <||@
  Comment 989 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 989 376 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 994 378 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 999 380 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1004 382 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1008 384 JUMP ~[] destination: B35 -> B100  <||@
  Comment 1013 block B36 null  <||@
  Comment 1013 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1013 388 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 1013 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 1019 390 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B123  <||@
  Comment 1025 block B37 null  <||@
  Comment 1025 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 394 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1033 396 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 1033 [rsi:0, r8:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 1033 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1040 398 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1040 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1046 400 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43  <||@
  Comment 1052 block B38 null  <||@
  Comment 1052 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1052 404 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1059 406 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1065 block B40 null  <||@
  Comment 1065 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1065 422 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1072 424 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1078 block B42 null  <||@
  Comment 1078 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 442 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1083 444 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1088 446 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1093 448 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1097 450 JUMP ~[] destination: B42 -> B100  <||@
  Comment 1102 block B43 null  <||@
  Comment 1102 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 454 stack:104|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1107 456 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1111 458 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 460 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1121 462 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1125 464 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1129 466 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1131 468 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1131 7  <||@
  Comment 1143 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1148 [stack:8, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1149 470 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1151 472 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B99  <||@
  Comment 1157 block B99 null  <||@
  Comment 1157 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1157 1002 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1162 1004 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1167 1006 JUMP ~[] destination: B99 -> B100  <||@
  Comment 1172 block B11 null  <||@
  Comment 1172 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 122 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1176 124 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 126 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1186 128 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 130 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1195 132 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 134 JUMP ~[] destination: B11 -> B62  <||@
  Comment 1200 block B62 null  <||@
  Comment 1200 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1200 636 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1208 638 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 18, 28]  <||@
  Comment 1208 [rsi:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1208 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1212 640 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1220 642 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28]  <||@
  Comment 1220 [rdx:0, rsi:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1220 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1220 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1231 644 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B89  <||@
  Comment 1237 block B63 null  <||@
  Comment 1237 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 648 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 650 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 1246 652 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1246 [rdx:0, rsi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1246 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1254 654 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1262 656 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1265 658 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B88  <||@
  Comment 1271 block B64 null  <||@
  Comment 1271 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1271 662 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1275 664 r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1280 666 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1283 668 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 1289 block B66 null  <||@
  Comment 1289 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1289 682 r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 1293 684 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1293 [rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1293 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1301 686 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1308 688 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1311 690 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B87  <||@
  Comment 1317 block B67 null  <||@
  Comment 1317 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1317 694 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1321 696 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1324 698 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B86  <||@
  Comment 1330 block B68 null  <||@
  Comment 1330 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1330 702 r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1338 704 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18, 28]  <||@
  Comment 1338 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1338 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1342 706 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1349 708 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1349 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1355 710 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B76  <||@
  Comment 1361 block B76 null  <||@
  Comment 1361 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1361 778 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1361 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1367 780 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B85  <||@
  Comment 1373 block B77 null  <||@
  Comment 1373 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1373 786 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1380 788 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 1386 block B79 null  <||@
  Comment 1386 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1386 802 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1393 804 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B82  <||@
  Comment 1399 block B82 null  <||@
  Comment 1399 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1399 824 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1403 826 rdi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1408 828 rsi|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1413 830 MOV (x: [r8|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 1418 832 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1423 834 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1427 836 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1427 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1439 838 BRANCH trueDestinationProbability: 0.8249645592753172 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 1445 block B83 null  <||@
  Comment 1445 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1445 842 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1447 844 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1450 846 rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1452 848 JUMP ~[] destination: B83 -> B108  <||@
  Comment 1457 block B69 null  <||@
  Comment 1457 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1457 716 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1464 718 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1464 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1464 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1471 720 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B75  <||@
  Comment 1477 block B70 null  <||@
  Comment 1477 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1477 724 CMP stack:48|DWORD y: 256 size: WORD  <||@
  Comment 1484 726 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B74  <||@
  Comment 1490 block B71 null  <||@
  Comment 1490 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1490 730 rdi|QWORD = MOVZX stack:48|DWORD size: DWORD  <||@
  Comment 1495 732 rsi|DWORD = MOVZXB [rdi|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1500 734 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1502 736 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B82  <||@
  Comment 1509 block B18 null  <||@
  Comment 1509 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 196 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1513 198 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1518 200 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1523 202 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1528 204 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1532 206 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1535 208 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1540 210 JUMP ~[] destination: B18 -> B51  <||@
  Comment 1540 block B51 null  <||@
  Comment 1540 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1540 558 rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1547 560 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28]  <||@
  Comment 1547 [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1547 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1554 562 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1554 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1560 564 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57  <||@
  Comment 1566 block B57 null  <||@
  Comment 1566 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 602 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1566 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1572 604 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B94  <||@
  Comment 1578 block B58 null  <||@
  Comment 1578 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1578 608 CMP stack:48|DWORD y: 256 size: WORD  <||@
  Comment 1585 610 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B93  <||@
  Comment 1591 block B59 null  <||@
  Comment 1591 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1591 614 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1598 616 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28]  <||@
  Comment 1598 [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1598 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1605 618 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B92  <||@
  Comment 1611 block B60 null  <||@
  Comment 1611 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1611 622 rdx|QWORD = MOVZX stack:48|DWORD size: DWORD  <||@
  Comment 1616 624 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1621 626 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1623 628 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B60 -> B62 falseDestination: B60 -> B100  <||@
  Comment 1634 block B52 null  <||@
  Comment 1634 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1634 568 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1641 570 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B52 -> B62 falseDestination: B52 -> B54  <||@
  Comment 1647 block B54 null  <||@
  Comment 1647 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 578 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1654 580 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 1660 block B56 null  <||@
  Comment 1660 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 596 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1665 598 JUMP ~[] destination: B56 -> B100  <||@
  Comment 1670 block B25 null  <||@
  Comment 1670 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1670 276 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1674 278 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1679 280 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1684 282 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1688 284 JUMP ~[] destination: B25 -> B49  <||@
  Comment 1688 block B49 null  <||@
  Comment 1688 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1688 528 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1695 530 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28]  <||@
  Comment 1695 [rax:0, rsi:0, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rax|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:92|DWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1695 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1699 532 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1703 534 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1705 536 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28]  <||@
  Comment 1705 7  <||@
  Comment 1719 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1724 [stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1725 538 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1727 540 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B96  <||@
  Comment 1733 block B96 null  <||@
  Comment 1733 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1733 978 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1738 980 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1743 982 JUMP ~[] destination: B96 -> B100  <||@
  Comment 1748 block B84 null  <||@
  Comment 1748 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1748 852 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1752 854 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1756 856 stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1760 858 r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1763 860 stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1767 864 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1772 866 JUMP ~[] destination: B84 -> B115  <||@
  Comment 1777 block B32 null  <||@
  Comment 1777 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1777 344 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1781 346 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1786 348 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1791 350 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1795 352 JUMP ~[] destination: B32 -> B47  <||@
  Comment 1795 block B47 null  <||@
  Comment 1795 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1795 504 rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1803 506 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28]  <||@
  Comment 1803 [rsi:0, r9:0, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1              
     locals:  |r9|DWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]   |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1803 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1807 508 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1811 510 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1815 512 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28]  <||@
  Comment 1815 7  <||@
  Comment 1831 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1836 [stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1837 514 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1839 516 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B97  <||@
  Comment 1845 block B97 null  <||@
  Comment 1845 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1845 986 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1850 988 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1855 990 JUMP ~[] destination: B97 -> B100  <||@
  Comment 1860 block B39 null  <||@
  Comment 1860 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1860 410 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1864 412 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1869 414 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1874 416 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1878 418 JUMP ~[] destination: B39 -> B45  <||@
  Comment 1878 block B45 null  <||@
  Comment 1878 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1878 482 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1886 484 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1886 [rsi:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1886 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1890 486 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b8ee210 encoding: base: 0 shift: 3  <||@
  Comment 1894 488 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1898 490 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1898 7  <||@
  Comment 1911 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1916 [stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1917 492 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1919 494 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B98  <||@
  Comment 1925 block B98 null  <||@
  Comment 1925 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 994 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1930 996 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1935 998 JUMP ~[] destination: B98 -> B100  <||@
  Comment 1940 block B44 null  <||@
  Comment 1940 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1940 476 r14|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD  <||@
  Comment 1945 478 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1947 block B50 null  <||@
  Comment 1947 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1947 544 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1952 546 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1956 548 rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1960 550 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1965 552 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1970 554 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1975 block B48 null  <||@
  Comment 1975 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 520 rax|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 1979 522 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1983 524 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1988 block B46 null  <||@
  Comment 1988 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1988 498 r9|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 1993 500 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1998 block B89 null  <||@
  Comment 1998 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1998 910 r11|DWORD = MOVE input: int[-333107|0xfffffffffffaeacd]  <||@
  Comment 2004 912 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2009 914 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2014 918 JUMP ~[] destination: B89 -> B90  <||@
  Comment 2014 block B90 null  <||@
  Comment 2014 920 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2014 916 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2019 922 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2026 924 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2033 926 DEOPT info [bci:8, 18, 28]  <||@
  Comment 2033 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2038 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2039 block B126 null  <||@
  Comment 2039 1304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2039 1306 r11|DWORD = MOVE input: int[-308019|0xfffffffffffb4ccd]  <||@
  Comment 2045 1308 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2048 1310 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2051 1312 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2054 1314 JUMP ~[] destination: B126 -> B132  <||@
  Comment 2054 block B132 null  <||@
  Comment 2054 1376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2054 1378 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2061 1380 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2068 1382 DEOPT info [bci:21]  <||@
  Comment 2068 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2073 [rbx:0, r8:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3             |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |rbx|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 2074 block B55 null  <||@
  Comment 2074 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2074 584 r11|DWORD = MOVE input: int[-325907|0xfffffffffffb06ed]  <||@
  Comment 2080 592 JUMP ~[] destination: B55 -> B95  <||@
  Comment 2080 block B95 null  <||@
  Comment 2080 968 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2080 586 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2085 588 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2090 590 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2095 970 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2102 972 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2109 974 DEOPT info [bci:8, 5, 18, 28]  <||@
  Comment 2109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2114 [rcx:0, rdi:0, r8:0, r10:0, stack:40]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rcx|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2115 block B119 null  <||@
  Comment 2115 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2115 1224 r11|DWORD = MOVE input: int[-368923|0xfffffffffffa5ee5]  <||@
  Comment 2121 1226 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2126 1230 JUMP ~[] destination: B119 -> B122  <||@
  Comment 2126 block B122 null  <||@
  Comment 2126 1254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2126 1250 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2131 1256 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2138 1258 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2145 1260 DEOPT info [bci:8, 18, 28]  <||@
  Comment 2145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2150 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2151 block B74 null  <||@
  Comment 2151 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2151 758 r11|DWORD = MOVE input: int[-350739|0xfffffffffffaa5ed]  <||@
  Comment 2157 760 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2162 764 JUMP ~[] destination: B74 -> B90  <||@
  Comment 2167 block B75 null  <||@
  Comment 2167 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2167 768 r11|DWORD = MOVE input: int[-353307|0xfffffffffffa9be5]  <||@
  Comment 2173 770 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2178 774 JUMP ~[] destination: B75 -> B90  <||@
  Comment 2183 block B80 null  <||@
  Comment 2183 806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2183 808 r11|DWORD = MOVE input: int[-355859|0xfffffffffffa91ed]  <||@
  Comment 2189 810 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2194 814 JUMP ~[] destination: B80 -> B90  <||@
  Comment 2199 block B78 null  <||@
  Comment 2199 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2199 792 r11|DWORD = MOVE input: int[-355603|0xfffffffffffa92ed]  <||@
  Comment 2205 794 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2210 798 JUMP ~[] destination: B78 -> B90  <||@
  Comment 2215 block B85 null  <||@
  Comment 2215 868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2215 870 r11|DWORD = MOVE input: int[-354355|0xfffffffffffa97cd]  <||@
  Comment 2221 872 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2226 876 JUMP ~[] destination: B85 -> B90  <||@
  Comment 2231 block B109 null  <||@
  Comment 2231 1104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2231 1106 r11|DWORD = MOVE input: int[-374803|0xfffffffffffa47ed]  <||@
  Comment 2237 1112 JUMP ~[] destination: B109 -> B112  <||@
  Comment 2237 block B112 null  <||@
  Comment 2237 1130 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2237 1108 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2242 1110 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2247 1132 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2254 1134 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2261 1136 DEOPT info [bci:63, 37, 28]  <||@
  Comment 2261 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2266 [rdx:0, r8:0, r10:0, stack:40]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r13|DWORD  |stack:72|QWORD[.]  |rcx|DWORD  |rax|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2267 block B86 null  <||@
  Comment 2267 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2267 880 r11|DWORD = MOVE input: int[-347931|0xfffffffffffab0e5]  <||@
  Comment 2273 882 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2278 886 JUMP ~[] destination: B86 -> B90  <||@
  Comment 2283 block B87 null  <||@
  Comment 2283 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2283 890 r11|DWORD = MOVE input: int[-345627|0xfffffffffffab9e5]  <||@
  Comment 2289 892 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2294 896 JUMP ~[] destination: B87 -> B90  <||@
  Comment 2299 block B65 null  <||@
  Comment 2299 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2299 672 r11|DWORD = MOVE input: int[-337683|0xfffffffffffad8ed]  <||@
  Comment 2305 674 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2310 678 JUMP ~[] destination: B65 -> B90  <||@
  Comment 2315 block B41 null  <||@
  Comment 2315 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2315 428 r11|DWORD = MOVE input: int[-317971|0xfffffffffffb25ed]  <||@
  Comment 2321 430 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2326 432 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2329 434 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2334 436 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2339 438 JUMP ~[] destination: B41 -> B132  <||@
  Comment 2344 block B88 null  <||@
  Comment 2344 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2344 900 r11|DWORD = MOVE input: int[-335899|0xfffffffffffadfe5]  <||@
  Comment 2350 902 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2355 906 JUMP ~[] destination: B88 -> B90  <||@
  Comment 2360 block B103 null  <||@
  Comment 2360 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2360 1042 r11|DWORD = MOVE input: int[-361491|0xfffffffffffa7bed]  <||@
  Comment 2366 1044 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2371 1048 JUMP ~[] destination: B103 -> B122  <||@
  Comment 2376 block B123 null  <||@
  Comment 2376 1262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2376 1264 r11|DWORD = MOVE input: int[-315699|0xfffffffffffb2ecd]  <||@
  Comment 2382 1266 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2387 1268 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2390 1270 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2395 1272 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2400 1274 JUMP ~[] destination: B123 -> B132  <||@
  Comment 2405 block B72 null  <||@
  Comment 2405 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2405 740 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2410 742 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2415 744 MOV [r15|QWORD + 668] y: -331795 size: DWORD  <||@
  Comment 2426 746 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2433 748 DEOPT info [bci:21, 28]  <||@
  Comment 2433 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2438 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |               
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2439 block B120 null  <||@
  Comment 2439 1232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2439 1234 r11|DWORD = MOVE input: int[-359707|0xfffffffffffa82e5]  <||@
  Comment 2445 1236 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2450 1240 JUMP ~[] destination: B120 -> B122  <||@
  Comment 2455 block B124 null  <||@
  Comment 2455 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2455 1278 r11|DWORD = MOVE input: int[-313139|0xfffffffffffb38cd]  <||@
  Comment 2461 1280 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2466 1282 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2469 1284 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2474 1286 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2479 1288 JUMP ~[] destination: B124 -> B132  <||@
  Comment 2484 block B121 null  <||@
  Comment 2484 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2484 1244 r11|DWORD = MOVE input: int[-356915|0xfffffffffffa8dcd]  <||@
  Comment 2490 1246 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2495 1248 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2500 1252 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2505 block B20 null  <||@
  Comment 2505 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2505 220 r11|DWORD = MOVE input: int[-310291|0xfffffffffffb43ed]  <||@
  Comment 2511 222 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2514 224 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2517 226 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2520 228 JUMP ~[] destination: B20 -> B132  <||@
  Comment 2525 block B125 null  <||@
  Comment 2525 1290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2525 1292 r11|DWORD = MOVE input: int[-310579|0xfffffffffffb42cd]  <||@
  Comment 2531 1296 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2534 1298 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2539 1300 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2544 1302 JUMP ~[] destination: B125 -> B132  <||@
  Comment 2549 block B27 null  <||@
  Comment 2549 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2549 294 r11|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed]  <||@
  Comment 2555 296 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2560 298 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2563 300 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2568 302 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2573 304 JUMP ~[] destination: B27 -> B132  <||@
  Comment 2578 block B5 null  <||@
  Comment 2578 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2578 58 r11|DWORD = MOVE input: int[-300051|0xfffffffffffb6bed]  <||@
  Comment 2584 60 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2587 62 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2590 64 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2593 66 JUMP ~[] destination: B5 -> B132  <||@
  Comment 2598 block B136 null  <||@
  Comment 2598 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2598 1434 MOV [r15|QWORD + 668] y: -296987 size: DWORD  <||@
  Comment 2609 1436 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2616 1438 DEOPT info [bci:31]  <||@
  Comment 2616 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2621 [r8:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |          |    <||@
  Comment 2622 block B111 null  <||@
  Comment 2622 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2622 1122 r11|DWORD = MOVE input: int[-392219|0xfffffffffffa03e5]  <||@
  Comment 2628 1128 JUMP ~[] destination: B111 -> B112  <||@
  Comment 2633 block B127 null  <||@
  Comment 2633 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2633 1318 r11|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed]  <||@
  Comment 2639 1320 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2642 1322 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2645 1324 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2648 1326 JUMP ~[] destination: B127 -> B132  <||@
  Comment 2653 block B128 null  <||@
  Comment 2653 1328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2653 1330 r11|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5]  <||@
  Comment 2659 1332 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2662 1334 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2665 1336 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2668 1338 JUMP ~[] destination: B128 -> B132  <||@
  Comment 2673 block B118 null  <||@
  Comment 2673 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2673 1214 r11|DWORD = MOVE input: int[-371227|0xfffffffffffa55e5]  <||@
  Comment 2679 1216 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2684 1220 JUMP ~[] destination: B118 -> B122  <||@
  Comment 2689 block B34 null  <||@
  Comment 2689 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2689 362 r11|DWORD = MOVE input: int[-315411|0xfffffffffffb2fed]  <||@
  Comment 2695 364 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2700 366 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2703 368 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2708 370 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2713 372 JUMP ~[] destination: B34 -> B132  <||@
  Comment 2718 block B129 null  <||@
  Comment 2718 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2718 1342 r11|DWORD = MOVE input: int[-302355|0xfffffffffffb62ed]  <||@
  Comment 2724 1344 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2727 1346 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2730 1348 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2733 1350 JUMP ~[] destination: B129 -> B132  <||@
  Comment 2738 block B94 null  <||@
  Comment 2738 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2738 958 r11|DWORD = MOVE input: int[-326195|0xfffffffffffb05cd]  <||@
  Comment 2744 966 JUMP ~[] destination: B94 -> B95  <||@
  Comment 2749 block B116 null  <||@
  Comment 2749 1182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2749 1184 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2753 1186 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2758 1188 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2762 1190 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2767 1192 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2772 1194 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2777 1196 MOV [r15|QWORD + 668] y: -382483 size: DWORD  <||@
  Comment 2788 1198 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2795 1200 DEOPT info [bci:73, 37, 28]  <||@
  Comment 2795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2800 [rbx:0, r8:0, r10:0]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5          |6         
     locals:  |rbx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |r11|DWORD  |rcx|DWORD 
     stack:   |int[0|0x0]    |              |   |   |   |           |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2801 block B130 null  <||@
  Comment 2801 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2801 1354 r11|DWORD = MOVE input: int[-299827|0xfffffffffffb6ccd]  <||@
  Comment 2807 1356 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2810 1358 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2813 1360 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2816 1362 JUMP ~[] destination: B130 -> B132  <||@
  Comment 2821 block B131 null  <||@
  Comment 2821 1364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2821 1366 r11|DWORD = MOVE input: int[-299283|0xfffffffffffb6eed]  <||@
  Comment 2827 1368 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2830 1370 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2833 1372 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2836 1374 JUMP ~[] destination: B131 -> B132  <||@
  Comment 2841 block B137 null  <||@
  Comment 2841 1440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2841 1442 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2846 1444 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2850 1446 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2853 1448 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2856 1450 MOV [r15|QWORD + 668] y: -291867 size: DWORD  <||@
  Comment 2867 1452 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2874 1454 DEOPT info [bci:0]  <||@
  Comment 2874 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2879 [r8:0, r10:0, stack:40]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0            |1             |2               |3                  |4  |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 2880 block B93 null  <||@
  Comment 2880 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2880 946 r11|DWORD = MOVE input: int[-326419|0xfffffffffffb04ed]  <||@
  Comment 2886 954 JUMP ~[] destination: B93 -> B95  <||@
  Comment 2891 block B92 null  <||@
  Comment 2891 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2891 934 r11|DWORD = MOVE input: int[-328987|0xfffffffffffafae5]  <||@
  Comment 2897 942 JUMP ~[] destination: B92 -> B95  <||@
  Comment 2902 block B13 null  <||@
  Comment 2902 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2902 144 r11|DWORD = MOVE input: int[-307731|0xfffffffffffb4ded]  <||@
  Comment 2908 146 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2911 148 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2914 150 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2917 152 JUMP ~[] destination: B13 -> B132  <||@
  Comment 2922 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2922 4  <||@
  Comment 2928 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2928 5  <||@
  HexCodeFile>>> <|@
end_nmethod
