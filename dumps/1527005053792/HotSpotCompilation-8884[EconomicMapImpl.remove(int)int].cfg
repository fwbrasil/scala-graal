begin_compilation
  name " HotSpotCompilation-8884[org.graalvm.collections.EconomicMapImpl.remove(int)]"
  method "HotSpotCompilation-8884[org.graalvm.collections.EconomicMapImpl.remove(int)]"
  date 1527005177534
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a546 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a546  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?60 v563 v297 v564 ?30 ?71 ?70 v565 v574 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
=== Succesors ===
next: i547 
=== Usages ===
v575 a254 v569 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 #next: i547  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i547 v278 v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
=== Succesors ===
next: v15 
=== Usages ===
i5 i154 i151 i79 
=== Predecessor ===
a546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v563 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 i106 i110 i93 i79 i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 100]
stamp: i32
=== Inputs ===
x: i547 
y: i7 
=== Succesors ===
=== Usages ===
v278 i172 v74 v33 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i547 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i58 i5 i9 i59 i29 i58 i544 i545 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 7]
stamp: i32
=== Inputs ===
x: i547 
y: i2 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i547 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
stamp: i32
=== Inputs ===
x: i5 
y: i7 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 j510 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid a254 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a546 
=== Succesors ===
=== Usages ===
v573 v570 v571 v566 v572 v568 v567 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a546  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a546 
=== Succesors ===
=== Usages ===
i550 i553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a546  <|@  <|@
f <@~|@floating>@ <|@
tid a61 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 74]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?71 a499 a471 a471 a471 a471 v489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 i40 i42 i45 i63 i68 v87 i95 i115 i151 i139 i134 v352 i347 i544 i545 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
stamp: void
trueSuccessorProbability: 0.8553382850790764
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4605879421909192111
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a548 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a548  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
=== Succesors ===
next: v26 
=== Usages ===
v298 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
stamp: void
=== Inputs ===
value: a548 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a548  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 26]
stamp: void
trueSuccessorProbability: 0.6756341639197061
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
a548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v21 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603380441868088820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607805759262708570
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i2 i40 
=== Succesors ===
=== Usages ===
?30 v33 i58 i40 i45 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i2 i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.969921656407387
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: v39 
=== Usages ===
i29 v36 v55 v439 v434 v419 v424 v429 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i79 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
stamp: void
trueSuccessorProbability: 0.49236559903415955
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i545 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
stamp: i32
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i6  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i29 - i545 
=== Succesors ===
=== Usages ===
v472 v549 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i29 - i545  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a546 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?30 
guard: - 
address: v575 
=== Succesors ===
next: v420 
=== Usages ===
v526 
=== Predecessor ===
v34 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?30 guard: - address: v575 #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v549 
y: v525 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v549 y: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v526 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v526 #trueSuccessor: v416 #falseSuccessor: v419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i550 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
=== Succesors ===
next: v425 
=== Usages ===
v208 v222 v232 v244 
=== Predecessor ===
v416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v569 #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 44]
stamp: i32
=== Inputs ===
x: i29 
y: i6 
=== Succesors ===
=== Usages ===
i42 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i40 
y: i6 
=== Succesors ===
=== Usages ===
v566 i134 v208 j558 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i40 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i550 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v208 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
i550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v208 #trueSuccessor: v421 #falseSuccessor: v424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
a551 
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i29 
y: i6 
=== Succesors ===
=== Usages ===
v567 i139 v222 j561 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i29 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i550 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i45 y: i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v426 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
v230 
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i42 
y: i6 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i134 
y: i550 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i134 y: i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v232 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v232 #trueSuccessor: v431 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
a552 
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i45 
y: i6 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i45 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i550 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i139 y: i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v439 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v436 #falseSuccessor: v439  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a551 
=== Usages ===
v252 
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a551  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i42 
=== Succesors ===
=== Usages ===
a551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v421 
address: v566 
=== Succesors ===
next: v230 
=== Usages ===
v230 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v421 address: v566 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i45 
=== Succesors ===
=== Usages ===
v230 j509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v426 
address: v567 
value: a551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j509 
=== Usages ===
=== Predecessor ===
a551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v426 address: v567 value: a551 stateAfter: - lastLocationAccess: - #next: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v567 
=== Succesors ===
next: v514 
=== Usages ===
j510 
=== Predecessor ===
v230 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v567 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j509 
y: i11 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j509 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v576 v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j510 
index: j513 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j510 index: j513  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 v522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
value: i515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a552 
=== Usages ===
=== Predecessor ===
j509 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v576 value: i515 stateAfter: - lastLocationAccess: - #next: a552  <|@  <|@
f <@~|@floating>@ <|@
tid j558 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i42 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: j558 
=== Succesors ===
=== Usages ===
a552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: j558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v431 
address: v568 
=== Succesors ===
next: v252 
=== Usages ===
v252 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v431 address: v568 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i45 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: j561 
=== Succesors ===
=== Usages ===
v252 j518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: j561  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v436 
address: v570 
value: a552 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j518 
=== Usages ===
=== Predecessor ===
a552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v436 address: v570 value: a552 stateAfter: - lastLocationAccess: - #next: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v570 
=== Succesors ===
next: v522 
=== Usages ===
j519 
=== Predecessor ===
v252 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v570 #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j518 
y: i11 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j518 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j519 
index: j513 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j519 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
value: i515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
j518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 value: i515 stateAfter: - lastLocationAccess: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -62747
stableDimension: 0
stamp: i32 [-62747] ⇊00000000ffff0ae5 ⇈00000000ffff0ae5
stampKind: i32
value: int[-62747|0xffffffffffff0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -59675
stableDimension: 0
stamp: i32 [-59675] ⇊00000000ffff16e5 ⇈00000000ffff16e5
stampKind: i32
value: int[-59675|0xffffffffffff16e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57115
stableDimension: 0
stamp: i32 [-57115] ⇊00000000ffff20e5 ⇈00000000ffff20e5
stampKind: i32
value: int[-57115|0xffffffffffff20e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53531
stableDimension: 0
stamp: i32 [-53531] ⇊00000000ffff2ee5 ⇈00000000ffff2ee5
stampKind: i32
value: int[-53531|0xffffffffffff2ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid a475 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@376158750
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@376158750]
=== Inputs ===
=== Succesors ===
=== Usages ===
a471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56124
stableDimension: 0
stamp: i32 [-56124] ⇊00000000ffff24c4 ⇈00000000ffff24c4
stampKind: i32
value: int[-56124|0xffffffffffff24c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-62747 - -53531] ⇊00000000ffff00c4 ⇈00000000ffff3ff5
valueDescription: i32
=== Inputs ===
merge: v467 
values: i474 i477 i479 i481 i483 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v467 values: i474 i477 i479 i481 i483  <|@  <|@
f <@~|@floating>@ <|@
tid a471 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v467 
values: a475 a61 a61 a61 a61 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v467 values: a475 a61 a61 a61 a61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v473 v476 v478 v480 v482 
=== Succesors ===
next: v472 
=== Usages ===
i470 a471 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v473 v476 v478 v480 v482 #next: v472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?30 
actionAndReason: i470 
speculation: a471 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?30 actionAndReason: i470 speculation: a471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 4603380441868088820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:643) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v36 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598669580000112502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
stamp: i32
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 4594380007853836612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
stamp: i32
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" "B16" 
    successors "B20" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v23 
values: i2 i2 i29 
=== Succesors ===
=== Usages ===
?60 i63 i336 v352 ?70 ?71 v74 i85 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i2 i2 i29  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v23 
values: i9 i544 i2 
=== Succesors ===
=== Usages ===
?60 v125 ?70 v171 v126 v297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i9 i544 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v22 v24 v57 
=== Succesors ===
next: i553 
=== Usages ===
i58 i59 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v22 v24 v57 #next: i553  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 646
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i58 - i59 
=== Succesors ===
=== Usages ===
v489 i553 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i58 - i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?60 
guard: - 
address: v569 
=== Succesors ===
next: v448 
=== Usages ===
v260 v270 v349 v147 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?60 guard: - address: v569 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i58 
y: i6 
=== Succesors ===
=== Usages ===
v571 i68 v260 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i58 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i553 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i63 y: i553  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
i553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v445 #falseSuccessor: v447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
v268 
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i63 
y: i6 
=== Succesors ===
=== Usages ===
v572 v270 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i63 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i553 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i68 y: i553  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v449 #falseSuccessor: v451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v268 
=== Usages ===
v277 
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i63 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i63  <|@  <|@
f <@~|@floating>@ <|@
tid a304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 v277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v445 
address: v571 
value: a304 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v445 address: v571 value: a304 stateAfter: - lastLocationAccess: - #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i68 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v449 
address: v572 
value: a304 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v449 address: v572 value: a304 stateAfter: - lastLocationAccess: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i79 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i554 v292 i556 v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
stamp: void
trueSuccessorProbability: 0.639788586500662
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i6 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i58 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v531 #falseSuccessor: v534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i58 
y: i7 
=== Succesors ===
=== Usages ===
i347 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i336 
y: i6 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i336 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i347 
y: i553 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i347 y: i553  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v532 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v532 #falseSuccessor: v540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v529 v530 
=== Succesors ===
next: v278 
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v529 v530 #next: v278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i554 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v563 value: i79 stateAfter: - lastLocationAccess: - #next: i554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 130]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
=== Succesors ===
next: v83 
=== Usages ===
i527 
=== Predecessor ===
v278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
i554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604462773116378192
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v84 
values: i58 i93 
=== Succesors ===
=== Usages ===
i93 v87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v84 values: i58 i93  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v84 
values: i79 i106 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v84 values: i79 i106  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v84 
values: i554 i110 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v84 values: i554 i110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0910770980429323
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v83 
=== Succesors ===
next: v92 
=== Usages ===
i85 v89 v102 v113 i172 i527 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v83 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i6 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
stamp: void
trueSuccessorProbability: 0.12732537097357943
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v89 #falseSuccessor: v91  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4591068941390819230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v84 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v84 #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662208025421404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
next: a555 
=== Usages ===
v354 
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a555  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v528 v91 
=== Succesors ===
=== Usages ===
a555 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v528 v91  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 111]
stamp: i32
=== Inputs ===
x: i85 
y: i7 
=== Succesors ===
=== Usages ===
i95 i85 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i85 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i93 
y: i6 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i93 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i95 
=== Succesors ===
=== Usages ===
a555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v354 
address: v573 
=== Succesors ===
next: v104 
=== Usages ===
v307 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v354 address: v573 #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
stamp: void
=== Inputs ===
value: a555 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a555  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
stamp: void
trueSuccessorProbability: 0.09565361645653614
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
a555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v98 #falseSuccessor: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588558425701093965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 124]
stamp: i32
=== Inputs ===
x: i172 
y: i7 
=== Succesors ===
=== Usages ===
v289 i172 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i172 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 125]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
value: i106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v563 value: i106 stateAfter: - lastLocationAccess: - #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 134]
stamp: i32
=== Inputs ===
x: i527 
y: i7 
=== Succesors ===
=== Usages ===
v292 i527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i527 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 135]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
value: i110 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 value: i110 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
stamp: void
=== Inputs ===
loopBegin: v84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v84  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4603137357733840183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v84 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v84 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid a497 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1754109288
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1754109288]
=== Inputs ===
=== Succesors ===
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71963
stableDimension: 0
stamp: i32 [-71963] ⇊00000000fffee6e5 ⇈00000000fffee6e5
stampKind: i32
value: int[-71963|0xfffffffffffee6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i146 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i553 y: i146  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v460 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v460 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75795
stableDimension: 0
stamp: i32 [-75795] ⇊00000000fffed7ed ⇈00000000fffed7ed
stampKind: i32
value: int[-75795|0xfffffffffffed7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i498 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-75795 - -71963] ⇊00000000fffec6e5 ⇈00000000fffef7ed
valueDescription: i32
=== Inputs ===
merge: v494 
values: i496 i502 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: i496 i502  <|@  <|@
f <@~|@floating>@ <|@
tid a499 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v494 
values: a497 a61 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: a497 a61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v495 v501 
=== Succesors ===
next: v500 
=== Usages ===
i498 a499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v495 v501 #next: v500  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 81
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 647
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i58 - i59 
=== Succesors ===
=== Usages ===
?71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i58 - i59  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: a1 i58 a61 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 i58 a61  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i498 
speculation: a499 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i498 speculation: a499  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: i556 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 146]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
=== Succesors ===
next: v294 
=== Usages ===
i115 
=== Predecessor ===
v458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 150]
stamp: i32
=== Inputs ===
x: i556 
y: i6 
=== Succesors ===
=== Usages ===
v294 v156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i556 y: i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 151]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
value: i115 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
i556 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 value: i115 stateAfter: - lastLocationAccess: - #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i547 
y: i6 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i547 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i547 
y: i153 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i547 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: i32 [-1610612736 - 1610612734]
=== Inputs ===
x: i151 
y: i154 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i151 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i155 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i115 y: i155  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
trueSuccessorProbability: 0.9807546640482536
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v157 #falseSuccessor: v158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4600035729038272381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:478) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4574642523278445351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: i161 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i161  <|@  <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@60f64035
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.compressLarge(int)>
=== Inputs ===
arguments: a1 i59 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i59  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 658
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
?463 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
tid ?463 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.maybeCompress(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: ?165 
values: - - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.compressLarge
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v297 
stateDuring: ?463 
=== Succesors ===
next: v170 
=== Usages ===
v170 
=== Predecessor ===
v158 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v297 stateDuring: ?463 #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i161 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i161 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i161 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69403
stableDimension: 0
stamp: i32 [-69403] ⇊00000000fffef0e5 ⇈00000000fffef0e5
stampKind: i32
value: int[-69403|0xfffffffffffef0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66843
stableDimension: 0
stamp: i32 [-66843] ⇊00000000fffefae5 ⇈00000000fffefae5
stampKind: i32
value: int[-66843|0xfffffffffffefae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i487 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-69403 - -65547] ⇊00000000fffef0e5 ⇈00000000fffefff5
valueDescription: i32
=== Inputs ===
merge: v484 
values: i491 i493 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v484 values: i491 i493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v490 v492 
=== Succesors ===
next: v489 
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v490 v492 #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
actionAndReason: i487 
speculation: a61 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?60 actionAndReason: i487 speculation: a61  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a546 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a546  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?60 v563 v297 v564 ?30 ?71 ?70 v565 v574 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a546 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
=== Succesors ===
next: i547 
=== Usages ===
v575 a254 v569 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 #next: i547  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i547 v278 v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i547 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
=== Succesors ===
next: v15 
=== Usages ===
i5 i154 i151 i79 
=== Predecessor ===
a546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v563 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 i106 i110 i93 i79 i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 100]
stamp: i32
=== Inputs ===
x: i547 
y: i7 
=== Succesors ===
=== Usages ===
v278 i172 v74 v33 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i547 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i58 i5 i9 i59 i29 i58 i544 i545 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 7]
stamp: i32
=== Inputs ===
x: i547 
y: i2 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i547 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
stamp: i32
=== Inputs ===
x: i5 
y: i7 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 j510 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid a254 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a546 
=== Succesors ===
=== Usages ===
v573 v570 v571 v566 v572 v568 v567 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a546  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a546 
=== Succesors ===
=== Usages ===
i550 i553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a546  <|@  <|@
f <@~|@floating>@ <|@
tid a61 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 74]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?71 a499 a471 a471 a471 a471 v489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 i40 i42 i45 i63 i68 v87 i95 i115 i151 i139 i134 v352 i347 i544 i545 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
stamp: void
trueSuccessorProbability: 0.8553382850790764
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b06ad7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v3|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@31f54a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8553382850790764 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4605879421909192111
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a548 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a548  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a548 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
=== Succesors ===
next: v26 
=== Usages ===
v298 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
stamp: void
=== Inputs ===
value: a548 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a548  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 26]
stamp: void
trueSuccessorProbability: 0.6756341639197061
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
a548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v21 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6756341639197061 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603380441868088820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607805759262708570
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i29 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i2 i40 
=== Succesors ===
=== Usages ===
?30 v33 i58 i40 i45 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i2 i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.969921656407387
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: v39 
=== Usages ===
i29 v36 v55 v439 v434 v419 v424 v429 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i79 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
stamp: void
trueSuccessorProbability: 0.49236559903415955
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49236559903415955 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i545 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
stamp: i32
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i6  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i29 - i545 
=== Succesors ===
=== Usages ===
v472 v549 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i29 - i545  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v2|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a546 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?30 
guard: - 
address: v575 
=== Succesors ===
next: v420 
=== Usages ===
v526 
=== Predecessor ===
v34 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?30 guard: - address: v575 #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v549 
y: v525 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v549 y: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v526 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v526 #trueSuccessor: v416 #falseSuccessor: v419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v0|QWORD[.] - v9|DWORD - v10|DWORD 
>@ <|@ instruction CMP [v2|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i550 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i550 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
=== Succesors ===
next: v425 
=== Usages ===
v208 v222 v232 v244 
=== Predecessor ===
v416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v569 #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 44]
stamp: i32
=== Inputs ===
x: i29 
y: i6 
=== Succesors ===
=== Usages ===
i42 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i40 
y: i6 
=== Succesors ===
=== Usages ===
v566 i134 v208 j558 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i40 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i550 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v208 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
i550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v208 #trueSuccessor: v421 #falseSuccessor: v424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
a551 
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i29 
y: i6 
=== Succesors ===
=== Usages ===
v567 i139 v222 j561 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i29 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i550 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i45 y: i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v426 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHL v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
v230 
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i42 
y: i6 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i134 
y: i550 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i134 y: i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v232 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v232 #trueSuccessor: v431 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
a552 
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i45 
y: i6 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i45 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i550 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i139 y: i550  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v439 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v436 #falseSuccessor: v439  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a551 
=== Usages ===
v252 
=== Predecessor ===
v440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a551  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v7|QWORD[.] + v13|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i42 
=== Succesors ===
=== Usages ===
a551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a551 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v421 
address: v566 
=== Succesors ===
next: v230 
=== Usages ===
v230 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v421 address: v566 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v7|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i45 
=== Succesors ===
=== Usages ===
v230 j509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v426 
address: v567 
value: a551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j509 
=== Usages ===
=== Predecessor ===
a551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v426 address: v567 value: a551 stateAfter: - lastLocationAccess: - #next: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j509 <|@
result [v7|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v567 
=== Succesors ===
next: v514 
=== Usages ===
j510 
=== Predecessor ===
v230 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v567 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
result v18|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j509 
y: i11 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j509 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v576 v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v18|QWORD[*] + v20|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j510 
index: j513 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j510 index: j513  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 v522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
value: i515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a552 
=== Usages ===
=== Predecessor ===
j509 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v576 value: i515 stateAfter: - lastLocationAccess: - #next: a552  <|@  <|@
f <@~|@floating>@ <|@
tid j558 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i42 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v7|QWORD[.] + v21|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: j558 
=== Succesors ===
=== Usages ===
a552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: j558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a552 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v431 
address: v568 
=== Succesors ===
next: v252 
=== Usages ===
v252 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v431 address: v568 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i45 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v7|QWORD[.] + v23|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: j561 
=== Succesors ===
=== Usages ===
v252 j518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: j561  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v436 
address: v570 
value: a552 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j518 
=== Usages ===
=== Predecessor ===
a552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v436 address: v570 value: a552 stateAfter: - lastLocationAccess: - #next: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j518 <|@
result [v7|QWORD[.] + v23|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v570 
=== Succesors ===
next: v522 
=== Usages ===
j519 
=== Predecessor ===
v252 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v570 #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j518 
y: i11 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j518 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v24|QWORD[*] + v20|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j519 
index: j513 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j519 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
value: i515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
j518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 value: i515 stateAfter: - lastLocationAccess: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v7|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v14|DWORD * 4 + 16], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v7|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = SHR v19|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v18|QWORD[*] + v20|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v7|QWORD[.] + v21|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v23|QWORD * 4 + 20], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = LEA [v7|QWORD[.] + v23|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[*] + v20|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B9 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
result int[-62747|0xffffffffffff0ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -62747
stableDimension: 0
stamp: i32 [-62747] ⇊00000000ffff0ae5 ⇈00000000ffff0ae5
stampKind: i32
value: int[-62747|0xffffffffffff0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62747|0xffffffffffff0ae5], Object[null]] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
result int[-59675|0xffffffffffff16e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -59675
stableDimension: 0
stamp: i32 [-59675] ⇊00000000ffff16e5 ⇈00000000ffff16e5
stampKind: i32
value: int[-59675|0xffffffffffff16e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-59675|0xffffffffffff16e5], Object[null]] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
result int[-57115|0xffffffffffff20e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57115
stableDimension: 0
stamp: i32 [-57115] ⇊00000000ffff20e5 ⇈00000000ffff20e5
stampKind: i32
value: int[-57115|0xffffffffffff20e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57115|0xffffffffffff20e5], Object[null]] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result int[-53531|0xffffffffffff2ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53531
stableDimension: 0
stamp: i32 [-53531] ⇊00000000ffff2ee5 ⇈00000000ffff2ee5
stampKind: i32
value: int[-53531|0xffffffffffff2ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53531|0xffffffffffff2ee5], Object[null]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid a475 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@376158750
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@376158750]
=== Inputs ===
=== Succesors ===
=== Usages ===
a471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
result int[-56124|0xffffffffffff24c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56124
stableDimension: 0
stamp: i32 [-56124] ⇊00000000ffff24c4 ⇈00000000ffff24c4
stampKind: i32
value: int[-56124|0xffffffffffff24c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376158750] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56124|0xffffffffffff24c4], v26|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i470 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-62747 - -53531] ⇊00000000ffff00c4 ⇈00000000ffff3ff5
valueDescription: i32
=== Inputs ===
merge: v467 
values: i474 i477 i479 i481 i483 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v467 values: i474 i477 i479 i481 i483  <|@  <|@
f <@~|@floating>@ <|@
tid a471 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v467 
values: a475 a61 a61 a61 a61 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v467 values: a475 a61 a61 a61 a61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v473 v476 v478 v480 v482 
=== Succesors ===
next: v472 
=== Usages ===
i470 a471 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v473 v476 v478 v480 v482 #next: v472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?30 
actionAndReason: i470 
speculation: a471 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?30 actionAndReason: i470 speculation: a471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v0|QWORD[.] - v9|DWORD - v10|DWORD 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 4603380441868088820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:643) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v36 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v1|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598669580000112502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
stamp: i32
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, v29|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 4594380007853836612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:634) [bci: 13]
stamp: i32
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, v30|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" "B16" 
    successors "B20" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i58 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v23 
values: i2 i2 i29 
=== Succesors ===
=== Usages ===
?60 i63 i336 v352 ?70 ?71 v74 i85 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i2 i2 i29  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v23 
values: i9 i544 i2 
=== Succesors ===
=== Usages ===
?60 v125 ?70 v171 v126 v297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v23 values: i9 i544 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v22 v24 v57 
=== Succesors ===
next: i553 
=== Usages ===
i58 i59 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v22 v24 v57 #next: i553  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 646
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i58 - i59 
=== Succesors ===
=== Usages ===
v489 i553 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i58 - i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i553 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?60 
guard: - 
address: v569 
=== Succesors ===
next: v448 
=== Usages ===
v260 v270 v349 v147 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?60 guard: - address: v569 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i58 
y: i6 
=== Succesors ===
=== Usages ===
v571 i68 v260 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i58 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i553 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i63 y: i553  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
i553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v445 #falseSuccessor: v447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v0|QWORD[.] - v31|DWORD - v32|DWORD 
>@ <|@ instruction v33|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:72] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
v268 
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i63 
y: i6 
=== Succesors ===
=== Usages ===
v572 v270 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i63 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i553 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i68 y: i553  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v449 #falseSuccessor: v451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v268 
=== Usages ===
v277 
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v7|QWORD[.] + v34|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i63 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i63  <|@  <|@
f <@~|@floating>@ <|@
tid a304 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 v277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v445 
address: v571 
value: a304 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v445 address: v571 value: a304 stateAfter: - lastLocationAccess: - #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v7|QWORD[.] + v35|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i68 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v449 
address: v572 
value: a304 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v449 address: v572 value: a304 stateAfter: - lastLocationAccess: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i79 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i58 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i554 v292 i556 v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
stamp: void
trueSuccessorProbability: 0.639788586500662
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v34|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v35|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.639788586500662 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i6 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i58 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v531 #falseSuccessor: v534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i58 
y: i7 
=== Succesors ===
=== Usages ===
i347 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i336 
y: i6 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i336 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i347 
y: i553 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i347 y: i553  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v532 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v532 #falseSuccessor: v540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHL v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v529 v530 
=== Succesors ===
next: v278 
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v529 v530 #next: v278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
value: i79 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i554 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v563 value: i79 stateAfter: - lastLocationAccess: - #next: i554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i554 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 130]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
=== Succesors ===
next: v83 
=== Usages ===
i527 
=== Predecessor ===
v278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
i554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD, v4|DWORD, v38|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604462773116378192
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i85 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v84 
values: i58 i93 
=== Succesors ===
=== Usages ===
i93 v87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v84 values: i58 i93  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v84 
values: i79 i106 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v84 values: i79 i106  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v84 
values: i554 i110 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v84 values: i554 i110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0910770980429323
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v83 
=== Succesors ===
next: v92 
=== Usages ===
i85 v89 v102 v113 i172 i527 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v83 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i6 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
stamp: void
trueSuccessorProbability: 0.12732537097357943
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v89 #falseSuccessor: v91  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|DWORD, v41|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12732537097357943 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4591068941390819230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v84 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v84 #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662208025421404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
next: a555 
=== Usages ===
v354 
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a555  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v528 v91 
=== Succesors ===
=== Usages ===
a555 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v528 v91  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 111]
stamp: i32
=== Inputs ===
x: i85 
y: i7 
=== Succesors ===
=== Usages ===
i95 i85 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i85 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i93 
y: i6 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i93 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v7|QWORD[.] + v43|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a254 
index: i95 
=== Succesors ===
=== Usages ===
a555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a555 <|@
result v44|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v354 
address: v573 
=== Succesors ===
next: v104 
=== Usages ===
v307 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v354 address: v573 #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
stamp: void
=== Inputs ===
value: a555 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a555  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
stamp: void
trueSuccessorProbability: 0.09565361645653614
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
a555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v98 #falseSuccessor: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v7|QWORD[.] + v43|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD[.], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09565361645653614 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588558425701093965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 118]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 124]
stamp: i32
=== Inputs ===
x: i172 
y: i7 
=== Succesors ===
=== Usages ===
v289 i172 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i172 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 125]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
value: i106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v563 value: i106 stateAfter: - lastLocationAccess: - #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 134]
stamp: i32
=== Inputs ===
x: i527 
y: i7 
=== Succesors ===
=== Usages ===
v292 i527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i527 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 135]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
value: i110 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 value: i110 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
stamp: void
=== Inputs ===
loopBegin: v84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v84  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = DEC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = DEC v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD, v45|DWORD, v46|DWORD] destination: B30 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4603137357733840183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v84 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v84 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid a497 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1754109288
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1754109288]
=== Inputs ===
=== Succesors ===
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
result int[-71963|0xfffffffffffee6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71963
stableDimension: 0
stamp: i32 [-71963] ⇊00000000fffee6e5 ⇈00000000fffee6e5
stampKind: i32
value: int[-71963|0xfffffffffffee6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1754109288] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71963|0xfffffffffffee6e5], v47|QWORD[.]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i146 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i553 y: i146  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v460 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v460 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v33|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
result int[-75795|0xfffffffffffed7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75795
stableDimension: 0
stamp: i32 [-75795] ⇊00000000fffed7ed ⇈00000000fffed7ed
stampKind: i32
value: int[-75795|0xfffffffffffed7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75795|0xfffffffffffed7ed], Object[null]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i498 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-75795 - -71963] ⇊00000000fffec6e5 ⇈00000000fffef7ed
valueDescription: i32
=== Inputs ===
merge: v494 
values: i496 i502 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: i496 i502  <|@  <|@
f <@~|@floating>@ <|@
tid a499 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v494 
values: a497 a61 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: a497 a61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v495 v501 
=== Succesors ===
next: v500 
=== Usages ===
i498 a499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v495 v501 #next: v500  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 81
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 647
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i58 - i59 
=== Succesors ===
=== Usages ===
?71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i58 - i59  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: a1 i58 a61 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 i58 a61  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i498 
speculation: a499 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i498 speculation: a499  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v49|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v31|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: v0|QWORD[.] - v31|DWORD - v32|DWORD 
>@ <|@ instruction DEOPT info [bci:11, 81] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: i556 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i556 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 146]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
=== Succesors ===
next: v294 
=== Usages ===
i115 
=== Predecessor ===
v458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 150]
stamp: i32
=== Inputs ===
x: i556 
y: i6 
=== Succesors ===
=== Usages ===
v294 v156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i556 y: i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 151]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
value: i115 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
i556 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 value: i115 stateAfter: - lastLocationAccess: - #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i547 
y: i6 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i547 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i547 
y: i153 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i547 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: i32 [-1610612736 - 1610612734]
=== Inputs ===
x: i151 
y: i154 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i151 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i155 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i115 y: i155  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
trueSuccessorProbability: 0.9807546640482536
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v157 #falseSuccessor: v158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SAR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SAR v3|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9807546640482536 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4600035729038272381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:478) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i59 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i59 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4574642523278445351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: i161 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i161  <|@  <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@60f64035
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.compressLarge(int)>
=== Inputs ===
arguments: a1 i59 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i59  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 658
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
?463 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
tid ?463 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.maybeCompress(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: ?165 
values: - - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.compressLarge
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v297 
stateDuring: ?463 
=== Succesors ===
next: v170 
=== Usages ===
v170 
=== Predecessor ===
v158 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v297 stateDuring: ?463 #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i161 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i161 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i161 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
result int[-69403|0xfffffffffffef0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69403
stableDimension: 0
stamp: i32 [-69403] ⇊00000000fffef0e5 ⇈00000000fffef0e5
stampKind: i32
value: int[-69403|0xfffffffffffef0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69403|0xfffffffffffef0e5]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid i491 <|@
result int[-66843|0xfffffffffffefae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66843
stableDimension: 0
stamp: i32 [-66843] ⇊00000000fffefae5 ⇈00000000fffefae5
stampKind: i32
value: int[-66843|0xfffffffffffefae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66843|0xfffffffffffefae5]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i487 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-69403 - -65547] ⇊00000000fffef0e5 ⇈00000000fffefff5
valueDescription: i32
=== Inputs ===
merge: v484 
values: i491 i493 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v484 values: i491 i493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v490 v492 
=== Succesors ===
next: v489 
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v490 v492 #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
actionAndReason: i487 
speculation: a61 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?60 actionAndReason: i487 speculation: a61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v0|QWORD[.] - v31|DWORD - v32|DWORD 
>@ <|@ instruction DEOPT info [bci:72] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b06ad7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v3|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@31f54a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8553382850790764 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4605879421909192111
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6756341639197061 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603380441868088820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v0|QWORD[.] - v9|DWORD - v10|DWORD 
>@ <|@ instruction CMP [v2|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHL v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v7|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v14|DWORD * 4 + 16], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = LEA [v7|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = SHR v19|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v18|QWORD[*] + v20|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v7|QWORD[.] + v21|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v23|QWORD * 4 + 20], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = LEA [v7|QWORD[.] + v23|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[*] + v20|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B9 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607805759262708570
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49236559903415955 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 4603380441868088820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v1|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" "B16" 
    successors "B20" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v0|QWORD[.] - v31|DWORD - v32|DWORD 
>@ <|@ instruction v33|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:72] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v34|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v35|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.639788586500662 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHL v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD, v4|DWORD, v38|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662208025421404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v7|QWORD[.] + v43|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD[.], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09565361645653614 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588558425701093965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = DEC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = DEC v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD, v45|DWORD, v46|DWORD] destination: B30 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604462773116378192
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|DWORD, v41|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v39|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12732537097357943 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4603137357733840183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v33|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SAR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SAR v3|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9807546640482536 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4600035729038272381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598669580000112502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, v29|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 4594380007853836612
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, v30|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4591068941390819230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4574642523278445351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v32|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1754109288] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71963|0xfffffffffffee6e5], v47|QWORD[.]] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v49|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v31|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: v0|QWORD[.] - v31|DWORD - v32|DWORD 
>@ <|@ instruction DEOPT info [bci:11, 81] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75795|0xfffffffffffed7ed], Object[null]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53531|0xffffffffffff2ee5], Object[null]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD, v28|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v0|QWORD[.] - v9|DWORD - v10|DWORD 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69403|0xfffffffffffef0e5]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v0|QWORD[.] - v31|DWORD - v32|DWORD 
>@ <|@ instruction DEOPT info [bci:72] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-59675|0xffffffffffff16e5], Object[null]] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66843|0xfffffffffffefae5]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62747|0xffffffffffff0ae5], Object[null]] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57115|0xffffffffffff20e5], Object[null]] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376158750] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56124|0xffffffffffff24c4], v26|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore_2      
     2: aload_0       
     3: getfield      #5          // totalEntries:int
     6: iload_2       
     7: isub          
     8: iconst_1      
     9: isub          
    10: istore_3      
    11: iload_2       
    12: iconst_1      
    13: iadd          
    14: istore        4
    16: iload_3       
    17: bipush        8
    19: if_icmpgt     72
    22: aload_0       
    23: invokespecial #4          // hasHashArray:()boolean
    26: ifne          72
    29: iload_2       
    30: aload_0       
    31: getfield      #5          // totalEntries:int
    34: iconst_1      
    35: isub          
    36: if_icmpge     69
    39: aload_0       
    40: iload_2       
    41: aload_0       
    42: iload_2       
    43: iconst_1      
    44: iadd          
    45: invokespecial #3          // getKey:(int)java.lang.Object
    48: invokespecial #54         // setKey:(int, java.lang.Object)void
    51: aload_0       
    52: iload_2       
    53: aload_0       
    54: iload_2       
    55: iconst_1      
    56: iadd          
    57: invokespecial #37         // getRawValue:(int)java.lang.Object
    60: invokespecial #44         // setRawValue:(int, java.lang.Object)void
    63: iinc          
    66: goto          29
    69: iinc          
    72: aload_0       
    73: iload_2       
    74: aconst_null   
    75: invokespecial #54         // setKey:(int, java.lang.Object)void
    78: aload_0       
    79: iload_2       
    80: aconst_null   
    81: invokespecial #44         // setRawValue:(int, java.lang.Object)void
    84: iload_2       
    85: aload_0       
    86: getfield      #5          // totalEntries:int
    89: iconst_1      
    90: isub          
    91: if_icmpne     144
    94: aload_0       
    95: dup           
    96: getfield      #5          // totalEntries:int
    99: iconst_1      
   100: isub          
   101: putfield      #5          // totalEntries:int
   104: iload_2       
   105: ifle          162
   108: aload_0       
   109: iload_2       
   110: iconst_1      
   111: isub          
   112: invokespecial #3          // getKey:(int)java.lang.Object
   115: ifnonnull     162
   118: aload_0       
   119: dup           
   120: getfield      #5          // totalEntries:int
   123: iconst_1      
   124: isub          
   125: putfield      #5          // totalEntries:int
   128: aload_0       
   129: dup           
   130: getfield      #21         // deletedEntries:int
   133: iconst_1      
   134: isub          
   135: putfield      #21         // deletedEntries:int
   138: iinc          
   141: goto          104
   144: aload_0       
   145: dup           
   146: getfield      #21         // deletedEntries:int
   149: iconst_1      
   150: iadd          
   151: putfield      #21         // deletedEntries:int
   154: aload_0       
   155: iload         4
   157: invokespecial #63         // maybeCompress:(int)int
   160: istore        4
   162: iload         4
   164: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b06ad7f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction r8|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@31f54a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction CMP r8|DWORD y: 9 size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.8553382850790764 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4605879421909192111
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.6756341639197061 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603380441868088820
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rax:0, rsi:0, r9:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rsi|QWORD[.] - r8|DWORD - rcx|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29] <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbp|DWORD = SHL rdi|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r13|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r14|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r14|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r8|DWORD[.] = MOV [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r9|QWORD[.] + r13|DWORD * 4 + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD[.] = LEA [r9|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   98  <|@ instruction MOVB (x: [r8|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  100  <|@ instruction r8|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction r8|DWORD[.] = MOV [r9|QWORD[.] + r8|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [r9|QWORD[.] + rbx|QWORD * 4 + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  108  <|@ instruction r8|QWORD[.] = LEA [r9|QWORD[.] + rbx|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  110  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOVB (x: [r8|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B9 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607805759262708570
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.49236559903415955 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" 
    xhandlers
    flags 
    probability 4603380441868088820
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" "B16" 
    successors "B20" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rsi:0, r9:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rsi|QWORD[.] - r8|DWORD - rdx|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:72] <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [r9|QWORD[.] + rcx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r9|QWORD[.] + rbx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.639788586500662 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B32" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r10|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662208025421404
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  276  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction r8|DWORD[.] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.09565361645653614 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588558425701093965
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B30 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604462773116378192
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  264  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.12732537097357943 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4603137357733840183
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  340  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r11|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = SAR r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  348  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.9807546640482536 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4600035729038272381
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598669580000112502
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction r8|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 4594380007853836612
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r8|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4591068941390819230
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4574642523278445351
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157] <|@ <|@
      nr  364  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1754109288] <|@ <|@
      nr  308  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[-71963|0xfffffffffffee6e5] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] r8|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: rsi|QWORD[.] - r8|DWORD - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:11, 81] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOVE input: int[-75795|0xfffffffffffed7ed] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE input: int[-53531|0xffffffffffff2ee5] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rsi|QWORD[.] - r8|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-69403|0xfffffffffffef0e5] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  384  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rsi|QWORD[.] - r8|DWORD - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:72] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction r10|DWORD = MOVE input: int[-59675|0xffffffffffff16e5] <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-66843|0xfffffffffffefae5] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  138  <|@ instruction r10|DWORD = MOVE input: int[-57115|0xffffffffffff20e5] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376158750] <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-56124|0xffffffffffff24c4] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore_2      
     2: aload_0       
     3: getfield      #5          // totalEntries:int
     6: iload_2       
     7: isub          
     8: iconst_1      
     9: isub          
    10: istore_3      
    11: iload_2       
    12: iconst_1      
    13: iadd          
    14: istore        4
    16: iload_3       
    17: bipush        8
    19: if_icmpgt     72
    22: aload_0       
    23: invokespecial #4          // hasHashArray:()boolean
    26: ifne          72
    29: iload_2       
    30: aload_0       
    31: getfield      #5          // totalEntries:int
    34: iconst_1      
    35: isub          
    36: if_icmpge     69
    39: aload_0       
    40: iload_2       
    41: aload_0       
    42: iload_2       
    43: iconst_1      
    44: iadd          
    45: invokespecial #3          // getKey:(int)java.lang.Object
    48: invokespecial #54         // setKey:(int, java.lang.Object)void
    51: aload_0       
    52: iload_2       
    53: aload_0       
    54: iload_2       
    55: iconst_1      
    56: iadd          
    57: invokespecial #37         // getRawValue:(int)java.lang.Object
    60: invokespecial #44         // setRawValue:(int, java.lang.Object)void
    63: iinc          
    66: goto          29
    69: iinc          
    72: aload_0       
    73: iload_2       
    74: aconst_null   
    75: invokespecial #54         // setKey:(int, java.lang.Object)void
    78: aload_0       
    79: iload_2       
    80: aconst_null   
    81: invokespecial #44         // setRawValue:(int, java.lang.Object)void
    84: iload_2       
    85: aload_0       
    86: getfield      #5          // totalEntries:int
    89: iconst_1      
    90: isub          
    91: if_icmpne     144
    94: aload_0       
    95: dup           
    96: getfield      #5          // totalEntries:int
    99: iconst_1      
   100: isub          
   101: putfield      #5          // totalEntries:int
   104: iload_2       
   105: ifle          162
   108: aload_0       
   109: iload_2       
   110: iconst_1      
   111: isub          
   112: invokespecial #3          // getKey:(int)java.lang.Object
   115: ifnonnull     162
   118: aload_0       
   119: dup           
   120: getfield      #5          // totalEntries:int
   123: iconst_1      
   124: isub          
   125: putfield      #5          // totalEntries:int
   128: aload_0       
   129: dup           
   130: getfield      #21         // deletedEntries:int
   133: iconst_1      
   134: isub          
   135: putfield      #21         // deletedEntries:int
   138: iinc          
   141: goto          104
   144: aload_0       
   145: dup           
   146: getfield      #21         // deletedEntries:int
   149: iconst_1      
   150: iadd          
   151: putfield      #21         // deletedEntries:int
   154: aload_0       
   155: iload         4
   157: invokespecial #63         // maybeCompress:(int)int
   160: istore        4
   162: iload         4
   164: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b06ad7f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction r8|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@31f54a6d encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction CMP r8|DWORD y: 9 size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.8553382850790764 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4605879421909192111
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.6756341639197061 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4603380441868088820
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rax:0, rsi:0, r9:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rsi|QWORD[.] - r8|DWORD - rcx|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29] <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbp|DWORD = SHL rdi|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r13|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: rbx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r14|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r14|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603223877402587328
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r8|DWORD[.] = MOV [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r9|QWORD[.] + r13|DWORD * 4 + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD[.] = LEA [r9|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   98  <|@ instruction MOVB (x: [r8|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  100  <|@ instruction r8|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction r8|DWORD[.] = MOV [r9|QWORD[.] + r8|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [r9|QWORD[.] + rbx|QWORD * 4 + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  108  <|@ instruction r8|QWORD[.] = LEA [r9|QWORD[.] + rbx|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  110  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOVB (x: [r8|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B9 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" 
    successors "B4" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607805759262708570
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.49236559903415955 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" "B3" 
    successors "B20" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rsi:0, r9:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rsi|QWORD[.] - r8|DWORD - rdx|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:72] <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [r9|QWORD[.] + rcx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r9|QWORD[.] + rbx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  220  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.639788586500662 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B24" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B26 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4599434323197426475
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r10|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B26 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4603937922824796971
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662208025421404
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  276  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction r8|DWORD[.] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  282  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.09565361645653614 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588558425701093965
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B30 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604462773116378192
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  264  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.12732537097357943 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4603137357733840183
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" "B36" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4600160611868346794
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  340  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r11|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = SAR r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  348  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.9807546640482536 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4600035729038272381
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598669580000112502
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction r8|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 4594380007853836612
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r8|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4591068941390819230
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4574642523278445351
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157] <|@ <|@
      nr  364  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1754109288] <|@ <|@
      nr  308  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE input: int[-71963|0xfffffffffffee6e5] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  330  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  334  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] r8|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: rsi|QWORD[.] - r8|DWORD - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:11, 81] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOVE input: int[-75795|0xfffffffffffed7ed] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE input: int[-53531|0xffffffffffff2ee5] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" "B12" "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rsi|QWORD[.] - r8|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-69403|0xfffffffffffef0e5] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  384  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rsi|QWORD[.] - r8|DWORD - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:72] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction r10|DWORD = MOVE input: int[-59675|0xffffffffffff16e5] <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-66843|0xfffffffffffefae5] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  138  <|@ instruction r10|DWORD = MOVE input: int[-57115|0xffffffffffff20e5] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376158750] <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-56124|0xffffffffffff24c4] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore_2      
     2: aload_0       
     3: getfield      #5          // totalEntries:int
     6: iload_2       
     7: isub          
     8: iconst_1      
     9: isub          
    10: istore_3      
    11: iload_2       
    12: iconst_1      
    13: iadd          
    14: istore        4
    16: iload_3       
    17: bipush        8
    19: if_icmpgt     72
    22: aload_0       
    23: invokespecial #4          // hasHashArray:()boolean
    26: ifne          72
    29: iload_2       
    30: aload_0       
    31: getfield      #5          // totalEntries:int
    34: iconst_1      
    35: isub          
    36: if_icmpge     69
    39: aload_0       
    40: iload_2       
    41: aload_0       
    42: iload_2       
    43: iconst_1      
    44: iadd          
    45: invokespecial #3          // getKey:(int)java.lang.Object
    48: invokespecial #54         // setKey:(int, java.lang.Object)void
    51: aload_0       
    52: iload_2       
    53: aload_0       
    54: iload_2       
    55: iconst_1      
    56: iadd          
    57: invokespecial #37         // getRawValue:(int)java.lang.Object
    60: invokespecial #44         // setRawValue:(int, java.lang.Object)void
    63: iinc          
    66: goto          29
    69: iinc          
    72: aload_0       
    73: iload_2       
    74: aconst_null   
    75: invokespecial #54         // setKey:(int, java.lang.Object)void
    78: aload_0       
    79: iload_2       
    80: aconst_null   
    81: invokespecial #44         // setRawValue:(int, java.lang.Object)void
    84: iload_2       
    85: aload_0       
    86: getfield      #5          // totalEntries:int
    89: iconst_1      
    90: isub          
    91: if_icmpne     144
    94: aload_0       
    95: dup           
    96: getfield      #5          // totalEntries:int
    99: iconst_1      
   100: isub          
   101: putfield      #5          // totalEntries:int
   104: iload_2       
   105: ifle          162
   108: aload_0       
   109: iload_2       
   110: iconst_1      
   111: isub          
   112: invokespecial #3          // getKey:(int)java.lang.Object
   115: ifnonnull     162
   118: aload_0       
   119: dup           
   120: getfield      #5          // totalEntries:int
   123: iconst_1      
   124: isub          
   125: putfield      #5          // totalEntries:int
   128: aload_0       
   129: dup           
   130: getfield      #21         // deletedEntries:int
   133: iconst_1      
   134: isub          
   135: putfield      #21         // deletedEntries:int
   138: iinc          
   141: goto          104
   144: aload_0       
   145: dup           
   146: getfield      #21         // deletedEntries:int
   149: iconst_1      
   150: iadd          
   151: putfield      #21         // deletedEntries:int
   154: aload_0       
   155: iload         4
   157: invokespecial #63         // maybeCompress:(int)int
   160: istore        4
   162: iload         4
   164: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4618448b560c458bda41ffcb458bc2442bc241ffc8448bc849c1e1034183f8090f8dc2010000448b461c4585c00f859e010000448bc2e99f0000000f1f40008bcaffc1813cc508000000addeadde0f85900200008b1cc50c000000418bf8ffc78befd1e53bdd0f86fc010000458be841d1e5413bdd0f8657020000448bf541ffc6413bde0f861c020000458bf541ffc6413bde0f8627020000458b44a910478944a9104f8d44a91049c1e80948b900e01b1701000000458824084c63c5478b4481144963dd45894499144d8d44991449c1e80945882408448bc7453bd80f8f5cffffff8b04c50c000000418bc8d1e13bc10f86c10100008bd9ffc33bc30f868901000045896489104589649910453bd80f857c0000004183f8010f8c12000000458bd041ffca41d1e2413bc20f86fd00000044895e0c8b4610458bd3448bd8418bc0e92c0000000f1f840000000000ffc8448bc041d1e0478b4481104585c00f851800000041ffca4489560c41ffcb44895e1083f8017dd7e9820000008bc2488b6c24104883c418850500000000c5f877c383f8080f84bb000000b801000000034610894610458bda41d1fb41c1fa024503da443bd80f8e580000008bc2488b6c24104883c418850500000000c5f877c3448bc241ffc089542404418bd0448b442404e9fbfeffff448bc241ffc089542404418bd0448b442404e9e4feffff8bc2488b6c24104883c418850500000000c5f877c36690e80000000090488b6c24104883c418850500000000c5f877c349baaddeaddeaddeadde4d8bda41bae5e6feff4589979c0200004d899fa8020000e8000000009049bb000000000000000041baedd7feffebda49bb000000000000000041bae52effff4589979c0200004d899fa8020000e8000000009041bae5f0feff4589979c0200004d89a7a8020000e8000000009049bb000000000000000041bae516ffffebc041bae5fafeffebd249bb000000000000000041bae50affffeba649bb000000000000000041bae520ffffeb9449baaddeaddeaddeadde4d8bda41bac424ffffe97cffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b06ad7f slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 8 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 55 10 r11|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 61 12 r8|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 67 14 r8|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 70 16 r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@31f54a6d encoding: base: 0 shift: 3  <||@
  Comment 77 18 CMP r8|DWORD y: 9 size: DWORD  <||@
  Comment 81 20 BRANCH trueDestinationProbability: 0.8553382850790764 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B18  <||@
  Comment 87 block B1 null  <||@
  Comment 87 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 24 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 91 26 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 94 28 BRANCH trueDestinationProbability: 0.6756341639197061 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B17  <||@
  Comment 100 block B2 null  <||@
  Comment 100 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 32 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 103 34 JUMP ~[] destination: B2 -> B3  <||@
  Comment 108 block B4 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 108 42 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 44 rcx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 116 46 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29]  <||@
  Comment 116 [rax:0, rsi:0, r9:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rcx|DWORD   <||@
  Comment 116 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 116 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 127 48 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14  <||@
  Comment 133 block B5 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 133 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 52 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 140 54 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 145 56 rbp|DWORD = SHL rdi|DWORD size: DWORD  <||@
  Comment 149 58 CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 151 60 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B13  <||@
  Comment 157 block B6 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 157 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 64 r13|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 163 66 CMP (x: rbx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 166 68 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B12  <||@
  Comment 172 block B7 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 172 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 72 r14|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 178 74 CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 181 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11  <||@
  Comment 187 block B8 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 187 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 80 r14|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 193 82 CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 196 84 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 202 block B9 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 202 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 88 r8|DWORD[.] = MOV [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 207 90 MOV (x: [r9|QWORD[.] + r13|DWORD * 4 + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 212 92 r8|QWORD[.] = LEA [r9|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 217 94 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 221 96 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 231 98 MOVB (x: [r8|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 235 100 r8|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 238 102 r8|DWORD[.] = MOV [r9|QWORD[.] + r8|QWORD * 4 + 20] size: DWORD  <||@
  Comment 243 104 rbx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 246 106 MOV (x: [r9|QWORD[.] + rbx|QWORD * 4 + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 251 108 r8|QWORD[.] = LEA [r9|QWORD[.] + rbx|QWORD * 4 + 20] size: QWORD  <||@
  Comment 256 110 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 260 112 MOVB (x: [r8|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 264 114 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 267 116 JUMP ~[] destination: B9 -> B3  <||@
  Comment 267 block B3 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 267 36 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 267 38 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 270 40 BRANCH trueDestinationProbability: 0.49236559903415955 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B19  <||@
  Comment 276 block B19 null  <||@
  Comment 276 196 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 276 198 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:72]  <||@
  Comment 276 [rsi:0, r9:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rdx|DWORD   <||@
  Comment 276 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 283 200 rcx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 288 202 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 290 204 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B40  <||@
  Comment 296 block B20 null  <||@
  Comment 296 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 208 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 300 210 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 302 212 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B39  <||@
  Comment 308 block B21 null  <||@
  Comment 308 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 216 MOV (x: [r9|QWORD[.] + rcx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 313 218 MOV (x: [r9|QWORD[.] + rbx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 318 220 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 321 222 BRANCH trueDestinationProbability: 0.639788586500662 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33  <||@
  Comment 327 block B22 null  <||@
  Comment 327 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 226 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 331 228 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B26 falseDestination: B22 -> B24  <||@
  Comment 337 block B24 null  <||@
  Comment 337 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 337 236 r10|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 343 238 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 346 240 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 349 242 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B26 falseDestination: B24 -> B32  <||@
  Comment 355 block B26 null  <||@
  Comment 355 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 355 250 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 359 252 rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 362 254 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 365 256 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 368 258 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 371 260 JUMP ~[] destination: B26 -> B27  <||@
  Comment 376 block B29 loop 1 depth 1 header:84|LoopBegin  <||@
  Comment 376 274 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 384 276 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 386 278 r8|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 392 280 r8|DWORD[.] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 397 282 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 400 284 BRANCH trueDestinationProbability: 0.09565361645653614 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 406 block B30 loop 1 depth 1 header:84|LoopBegin  <||@
  Comment 406 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 288 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 409 290 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 413 292 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 416 294 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 420 296 JUMP ~[] destination: B30 -> B27  <||@
  Comment 420 block B27 loop 1 depth 1 header:84|LoopBegin  <||@
  Comment 420 262 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 420 264 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 423 266 BRANCH trueDestinationProbability: 0.12732537097357943 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 430 block B31 null  <||@
  Comment 430 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 300 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 432 302 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 441 12  <||@
  Comment 451 block B33 null  <||@
  Comment 451 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 316 CMP rax|DWORD y: 8 size: DWORD  <||@
  Comment 454 318 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B36  <||@
  Comment 460 block B36 null  <||@
  Comment 460 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 338 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 465 340 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 468 342 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 471 344 r11|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 477 346 r10|DWORD = SAR r10|DWORD y: 2 size: DWORD  <||@
  Comment 481 348 r11|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 484 350 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 487 352 BRANCH trueDestinationProbability: 0.9807546640482536 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 493 block B37 null  <||@
  Comment 493 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 356 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 495 358 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 504 12  <||@
  Comment 514 block B17 null  <||@
  Comment 514 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 174 r8|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 520 176 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 524 178 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 527 180 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 532 182 JUMP ~[] destination: B17 -> B19  <||@
  Comment 537 block B18 null  <||@
  Comment 537 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 186 r8|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 543 188 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 547 190 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 550 192 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 555 194 JUMP ~[] destination: B18 -> B19  <||@
  Comment 560 block B28 null  <||@
  Comment 560 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 560 270 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 562 272 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 571 12  <||@
  Comment 581 block B38 null  <||@
  Comment 581 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 362 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157]  <||@
  Comment 581 9  <||@
  Comment 583 {HotSpotMethod<EconomicMapImpl.compressLarge(int)>}  <||@
  Comment 588 []at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 589 364 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 598 12  <||@
  Comment 608 block B32 null  <||@
  Comment 608 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 608 306 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1754109288]  <||@
  Comment 608 {Object[d.a@1754109288]}  <||@
  Comment 618 308 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 621 310 r10|DWORD = MOVE input: int[-71963|0xfffffffffffee6e5]  <||@
  Comment 627 312 JUMP ~[] destination: B32 -> B35  <||@
  Comment 627 block B35 null  <||@
  Comment 627 328 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 627 330 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 634 332 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 641 334 DEOPT info [bci:11, 81]  <||@
  Comment 641 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 646 [rsi:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r8|DWORD  |Object[null] 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81, duringCall: true, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rdx|DWORD   <||@
  Comment 647 block B34 null  <||@
  Comment 647 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 322 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 657 324 r10|DWORD = MOVE input: int[-75795|0xfffffffffffed7ed]  <||@
  Comment 663 326 JUMP ~[] destination: B34 -> B35  <||@
  Comment 665 block B13 null  <||@
  Comment 665 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 144 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 675 146 r10|DWORD = MOVE input: int[-53531|0xffffffffffff2ee5]  <||@
  Comment 681 148 JUMP ~[] destination: B13 -> B15  <||@
  Comment 681 block B15 null  <||@
  Comment 681 160 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 681 162 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 688 164 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 695 166 DEOPT info [bci:29]  <||@
  Comment 695 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 700 [rsi:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rcx|DWORD   <||@
  Comment 701 block B39 null  <||@
  Comment 701 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 701 368 r10|DWORD = MOVE input: int[-69403|0xfffffffffffef0e5]  <||@
  Comment 707 370 JUMP ~[] destination: B39 -> B41  <||@
  Comment 707 block B41 null  <||@
  Comment 707 378 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 707 380 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 714 382 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 721 384 DEOPT info [bci:72]  <||@
  Comment 721 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 726 [rsi:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rdx|DWORD   <||@
  Comment 727 block B11 null  <||@
  Comment 727 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 727 128 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 737 130 r10|DWORD = MOVE input: int[-59675|0xffffffffffff16e5]  <||@
  Comment 743 132 JUMP ~[] destination: B11 -> B15  <||@
  Comment 745 block B40 null  <||@
  Comment 745 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 745 374 r10|DWORD = MOVE input: int[-66843|0xfffffffffffefae5]  <||@
  Comment 751 376 JUMP ~[] destination: B40 -> B41  <||@
  Comment 753 block B10 null  <||@
  Comment 753 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 753 120 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 763 122 r10|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5]  <||@
  Comment 769 124 JUMP ~[] destination: B10 -> B15  <||@
  Comment 771 block B12 null  <||@
  Comment 771 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 771 136 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 781 138 r10|DWORD = MOVE input: int[-57115|0xffffffffffff20e5]  <||@
  Comment 787 140 JUMP ~[] destination: B12 -> B15  <||@
  Comment 789 block B14 null  <||@
  Comment 789 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 152 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376158750]  <||@
  Comment 789 {Object[d.a@376158750]}  <||@
  Comment 799 154 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 802 156 r10|DWORD = MOVE input: int[-56124|0xffffffffffff24c4]  <||@
  Comment 808 158 JUMP ~[] destination: B14 -> B15  <||@
  Comment 813 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 813 4  <||@
  Comment 819 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 819 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8884[org.graalvm.collections.EconomicMapImpl.remove(int)]"
  method "HotSpotCompilation-8884[org.graalvm.collections.EconomicMapImpl.remove(int)]"
  date 1527005177708
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a44cc0 448b560849c1e203493bc20f858f11dcfe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4618448b560c458bda41ffcb458bc2442bc241ffc8448bc849c1e1034183f8090f8dc2010000448b461c4585c00f859e010000448bc2e99f0000000f1f40008bcaffc1813cc508000000f52200f80f85900200008b1cc50c000000418bf8ffc78befd1e53bdd0f86fc010000458be841d1e5413bdd0f8657020000448bf541ffc6413bde0f861c020000458bf541ffc6413bde0f8627020000458b44a910478944a9104f8d44a91049c1e80948b900e01b1701000000458824084c63c5478b4481144963dd45894499144d8d44991449c1e80945882408448bc7453bd80f8f5cffffff8b04c50c000000418bc8d1e13bc10f86c10100008bd9ffc33bc30f868901000045896489104589649910453bd80f857c0000004183f8010f8c12000000458bd041ffca41d1e2413bc20f86fd00000044895e0c8b4610458bd3448bd8418bc0e92c0000000f1f840000000000ffc8448bc041d1e0478b4481104585c00f851800000041ffca4489560c41ffcb44895e1083f8017dd7e9820000008bc2488b6c24104883c418850587a1e4fcc5f877c383f8080f84bb000000b801000000034610894610458bda41d1fb41c1fa024503da443bd80f8e580000008bc2488b6c24104883c418850548a1e4fcc5f877c3448bc241ffc089542404418bd0448b442404e9fbfeffff448bc241ffc089542404418bd0448b442404e9e4feffff8bc2488b6c24104883c418850505a1e4fcc5f877c36690e89411dcfe90488b6c24104883c4188505eaa0e4fcc5f877c349bac8f3469c070000004d8bda41bae5e6feff4589979c0200004d899fa8020000e8b826dcfe9049bb000000000000000041baedd7feffebda49bb000000000000000041bae52effff4589979c0200004d899fa8020000e88226dcfe9041bae5f0feff4589979c0200004d89a7a8020000e86826dcfe9049bb000000000000000041bae516ffffebc041bae5fafeffebd249bb000000000000000041bae50affffeba649bb000000000000000041bae520ffffeb9449ba38ac9c9a070000004d8bda41bac424ffffe97cffffffe82e5620ff90e80825dcfe90f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b06ad7f slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 8 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 55 10 r11|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 61 12 r8|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 67 14 r8|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 70 16 r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@31f54a6d encoding: base: 0 shift: 3  <||@
  Comment 77 18 CMP r8|DWORD y: 9 size: DWORD  <||@
  Comment 81 20 BRANCH trueDestinationProbability: 0.8553382850790764 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B18  <||@
  Comment 87 block B1 null  <||@
  Comment 87 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 24 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 91 26 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 94 28 BRANCH trueDestinationProbability: 0.6756341639197061 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B17  <||@
  Comment 100 block B2 null  <||@
  Comment 100 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 32 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 103 34 JUMP ~[] destination: B2 -> B3  <||@
  Comment 108 block B4 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 108 42 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 44 rcx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 116 46 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29]  <||@
  Comment 116 [rax:0, rsi:0, r9:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rcx|DWORD   <||@
  Comment 116 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 116 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 127 48 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14  <||@
  Comment 133 block B5 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 133 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 52 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 140 54 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 145 56 rbp|DWORD = SHL rdi|DWORD size: DWORD  <||@
  Comment 149 58 CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 151 60 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B13  <||@
  Comment 157 block B6 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 157 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 64 r13|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 163 66 CMP (x: rbx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 166 68 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B12  <||@
  Comment 172 block B7 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 172 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 172 72 r14|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 178 74 CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 181 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11  <||@
  Comment 187 block B8 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 187 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 80 r14|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 193 82 CMP (x: rbx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 196 84 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 202 block B9 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 202 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 88 r8|DWORD[.] = MOV [r9|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 207 90 MOV (x: [r9|QWORD[.] + r13|DWORD * 4 + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 212 92 r8|QWORD[.] = LEA [r9|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 217 94 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 221 96 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 231 98 MOVB (x: [r8|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 235 100 r8|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 238 102 r8|DWORD[.] = MOV [r9|QWORD[.] + r8|QWORD * 4 + 20] size: DWORD  <||@
  Comment 243 104 rbx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 246 106 MOV (x: [r9|QWORD[.] + rbx|QWORD * 4 + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 251 108 r8|QWORD[.] = LEA [r9|QWORD[.] + rbx|QWORD * 4 + 20] size: QWORD  <||@
  Comment 256 110 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 260 112 MOVB (x: [r8|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 264 114 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 267 116 JUMP ~[] destination: B9 -> B3  <||@
  Comment 267 block B3 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 267 36 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 267 38 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 270 40 BRANCH trueDestinationProbability: 0.49236559903415955 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B19  <||@
  Comment 276 block B19 null  <||@
  Comment 276 196 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 276 198 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:72]  <||@
  Comment 276 [rsi:0, r9:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rdx|DWORD   <||@
  Comment 276 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 283 200 rcx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 288 202 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 290 204 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B40  <||@
  Comment 296 block B20 null  <||@
  Comment 296 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 208 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 300 210 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 302 212 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B39  <||@
  Comment 308 block B21 null  <||@
  Comment 308 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 216 MOV (x: [r9|QWORD[.] + rcx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 313 218 MOV (x: [r9|QWORD[.] + rbx|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 318 220 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 321 222 BRANCH trueDestinationProbability: 0.639788586500662 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33  <||@
  Comment 327 block B22 null  <||@
  Comment 327 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 226 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 331 228 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B22 -> B26 falseDestination: B22 -> B24  <||@
  Comment 337 block B24 null  <||@
  Comment 337 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 337 236 r10|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 343 238 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 346 240 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 349 242 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B26 falseDestination: B24 -> B32  <||@
  Comment 355 block B26 null  <||@
  Comment 355 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 355 250 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 359 252 rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 362 254 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 365 256 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 368 258 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 371 260 JUMP ~[] destination: B26 -> B27  <||@
  Comment 376 block B29 loop 1 depth 1 header:84|LoopBegin  <||@
  Comment 376 274 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 384 276 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 386 278 r8|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 392 280 r8|DWORD[.] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 397 282 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 400 284 BRANCH trueDestinationProbability: 0.09565361645653614 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 406 block B30 loop 1 depth 1 header:84|LoopBegin  <||@
  Comment 406 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 288 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 409 290 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 413 292 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 416 294 MOV (x: [rsi|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 420 296 JUMP ~[] destination: B30 -> B27  <||@
  Comment 420 block B27 loop 1 depth 1 header:84|LoopBegin  <||@
  Comment 420 262 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 420 264 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 423 266 BRANCH trueDestinationProbability: 0.12732537097357943 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 430 block B31 null  <||@
  Comment 430 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 300 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 432 302 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 441 12  <||@
  Comment 451 block B33 null  <||@
  Comment 451 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 316 CMP rax|DWORD y: 8 size: DWORD  <||@
  Comment 454 318 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B36  <||@
  Comment 460 block B36 null  <||@
  Comment 460 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 338 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 465 340 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 468 342 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 471 344 r11|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 477 346 r10|DWORD = SAR r10|DWORD y: 2 size: DWORD  <||@
  Comment 481 348 r11|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 484 350 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 487 352 BRANCH trueDestinationProbability: 0.9807546640482536 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 493 block B37 null  <||@
  Comment 493 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 356 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 495 358 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 504 12  <||@
  Comment 514 block B17 null  <||@
  Comment 514 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 174 r8|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 520 176 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 524 178 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 527 180 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 532 182 JUMP ~[] destination: B17 -> B19  <||@
  Comment 537 block B18 null  <||@
  Comment 537 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 186 r8|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 543 188 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 547 190 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 550 192 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 555 194 JUMP ~[] destination: B18 -> B19  <||@
  Comment 560 block B28 null  <||@
  Comment 560 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 560 270 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 562 272 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 571 12  <||@
  Comment 581 block B38 null  <||@
  Comment 581 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 362 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157]  <||@
  Comment 581 9  <||@
  Comment 583 {HotSpotMethod<EconomicMapImpl.compressLarge(int)>}  <||@
  Comment 588 []at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 589 364 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 598 12  <||@
  Comment 608 block B32 null  <||@
  Comment 608 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 608 306 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1754109288]  <||@
  Comment 608 {Object[d.a@1754109288]}  <||@
  Comment 618 308 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 621 310 r10|DWORD = MOVE input: int[-71963|0xfffffffffffee6e5]  <||@
  Comment 627 312 JUMP ~[] destination: B32 -> B35  <||@
  Comment 627 block B35 null  <||@
  Comment 627 328 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 627 330 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 634 332 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 641 334 DEOPT info [bci:11, 81]  <||@
  Comment 641 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 646 [rsi:0]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1         |2            
     locals:  |rsi|QWORD[.]  |r8|DWORD  |Object[null] 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81, duringCall: true, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rdx|DWORD   <||@
  Comment 647 block B34 null  <||@
  Comment 647 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 322 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 657 324 r10|DWORD = MOVE input: int[-75795|0xfffffffffffed7ed]  <||@
  Comment 663 326 JUMP ~[] destination: B34 -> B35  <||@
  Comment 665 block B13 null  <||@
  Comment 665 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 144 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 675 146 r10|DWORD = MOVE input: int[-53531|0xffffffffffff2ee5]  <||@
  Comment 681 148 JUMP ~[] destination: B13 -> B15  <||@
  Comment 681 block B15 null  <||@
  Comment 681 160 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 681 162 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 688 164 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 695 166 DEOPT info [bci:29]  <||@
  Comment 695 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 700 [rsi:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rcx|DWORD   <||@
  Comment 701 block B39 null  <||@
  Comment 701 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 701 368 r10|DWORD = MOVE input: int[-69403|0xfffffffffffef0e5]  <||@
  Comment 707 370 JUMP ~[] destination: B39 -> B41  <||@
  Comment 707 block B41 null  <||@
  Comment 707 378 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 707 380 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 714 382 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 721 384 DEOPT info [bci:72]  <||@
  Comment 721 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 726 [rsi:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |-  |rdx|DWORD   <||@
  Comment 727 block B11 null  <||@
  Comment 727 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 727 128 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 737 130 r10|DWORD = MOVE input: int[-59675|0xffffffffffff16e5]  <||@
  Comment 743 132 JUMP ~[] destination: B11 -> B15  <||@
  Comment 745 block B40 null  <||@
  Comment 745 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 745 374 r10|DWORD = MOVE input: int[-66843|0xfffffffffffefae5]  <||@
  Comment 751 376 JUMP ~[] destination: B40 -> B41  <||@
  Comment 753 block B10 null  <||@
  Comment 753 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 753 120 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 763 122 r10|DWORD = MOVE input: int[-62747|0xffffffffffff0ae5]  <||@
  Comment 769 124 JUMP ~[] destination: B10 -> B15  <||@
  Comment 771 block B12 null  <||@
  Comment 771 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 771 136 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 781 138 r10|DWORD = MOVE input: int[-57115|0xffffffffffff20e5]  <||@
  Comment 787 140 JUMP ~[] destination: B12 -> B15  <||@
  Comment 789 block B14 null  <||@
  Comment 789 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 152 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376158750]  <||@
  Comment 789 {Object[d.a@376158750]}  <||@
  Comment 799 154 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 802 156 r10|DWORD = MOVE input: int[-56124|0xffffffffffff24c4]  <||@
  Comment 808 158 JUMP ~[] destination: B14 -> B15  <||@
  Comment 813 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 813 4  <||@
  Comment 819 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 819 5  <||@
  HexCodeFile>>> <|@
end_nmethod
