begin_compilation
  name " HotSpotCompilation-7321[java.util.AbstractCollection.isEmpty()]"
  method "HotSpotCompilation-7321[java.util.AbstractCollection.isEmpty()]"
  date 1527005179414
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 v37 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v68 
=== Succesors ===
next: v22 
=== Usages ===
v66 v64 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v68 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v65 
y: v63 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v65 y: v63  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 i9 v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$SingletonList; target_method=size target_method_class=Ljava/util/Collections$SingletonList; position=at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9107425906732153
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v18 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606378459529249081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$SingletonList; target_method=size target_method_class=Ljava/util/Collections$SingletonList; position=at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 12]
stamp: void
=== Inputs ===
result: i6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591096094829311544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
displacement: 520
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v65 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v66 
=== Succesors ===
next: j36 
=== Usages ===
v67 v37 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v66 #next: j36  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v33 
index: - 
=== Succesors ===
=== Usages ===
j36 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v33 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j36 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v67 
=== Succesors ===
next: i4 
=== Usages ===
v37 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v67 #next: i4  <|@  <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5c82118f
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.size()>
=== Inputs ===
computedAddress: j36 
metaspaceMethod: v33 
arguments: a1 
=== Succesors ===
=== Usages ===
i4 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j36 metaspaceMethod: v33 arguments: a1  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<AbstractCollection.isEmpty()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 86
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
i4 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
polymorphic: true
stamp: i32
targetMethod: Indirect#AbstractCollection.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v37 
stateDuring: ?58 
=== Succesors ===
next: v10 
=== Usages ===
v7 
=== Predecessor ===
j36 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v37 stateDuring: ?58 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i6 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v7 
trueValue: i8 
falseValue: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v7 trueValue: i8 falseValue: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 12]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i4 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 v37 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v68 
=== Succesors ===
next: v22 
=== Usages ===
v66 v64 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v68 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
result meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v65 
y: v63 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v65 y: v63  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 i9 v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$SingletonList; target_method=size target_method_class=Ljava/util/Collections$SingletonList; position=at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9107425906732153
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v18 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@491482bc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9107425906732153 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606378459529249081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$SingletonList; target_method=size target_method_class=Ljava/util/Collections$SingletonList; position=at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 12]
stamp: void
=== Inputs ===
result: i6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591096094829311544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
result [v1|DWORD * 8 + 520] <|@
d <@d|@=== Debug Properties ===
displacement: 520
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v65 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v66 
=== Succesors ===
next: j36 
=== Usages ===
v67 v37 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v66 #next: j36  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
result [v2|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v33 
index: - 
=== Succesors ===
=== Usages ===
j36 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v33 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j36 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v67 
=== Succesors ===
next: i4 
=== Usages ===
v37 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v67 #next: i4  <|@  <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5c82118f
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.size()>
=== Inputs ===
computedAddress: j36 
metaspaceMethod: v33 
arguments: a1 
=== Succesors ===
=== Usages ===
i4 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j36 metaspaceMethod: v33 arguments: a1  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<AbstractCollection.isEmpty()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 86
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
i4 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
polymorphic: true
stamp: i32
targetMethod: Indirect#AbstractCollection.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v37 
stateDuring: ?58 
=== Succesors ===
next: v10 
=== Usages ===
v7 
=== Predecessor ===
j36 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v37 stateDuring: ?58 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i6 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v7 
trueValue: i8 
falseValue: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v7 trueValue: i8 falseValue: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 12]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i4 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [v1|DWORD * 8 + 520] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v2|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
locals: - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<AbstractCollection.size()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@491482bc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9107425906732153 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606378459529249081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591096094829311544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [v1|DWORD * 8 + 520] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v2|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
locals: - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<AbstractCollection.size()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@491482bc slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed} <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.9107425906732153 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606378459529249081
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591096094829311544
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rbx|QWORD = MOV [rbx|DWORD * 8 + 520] size: QWORD <|@ <|@
      nr   24  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
locals: - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<AbstractCollection.size()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr   36  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   42  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@491482bc slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed} <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.9107425906732153 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606378459529249081
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591096094829311544
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rbx|QWORD = MOV [rbx|DWORD * 8 + 520] size: QWORD <|@ <|@
      nr   24  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1]
locals: - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<AbstractCollection.size()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr   36  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   42  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b5e0881fbaddeadde0f8518000000b800000000488b6c24104883c418850500000000c5f877c3488b1cdd08020000488b4340ffd09085c00f94c00fb6c0488b6c24104883c418850500000000c5f877c3e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@491482bc slotKind: QWORD  <||@
  Comment 48 8 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 51 10 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed}  <||@
  Comment 51 {meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed}}  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.9107425906732153 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B1 null  <||@
  Comment 63 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 16 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 68 18 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 77 12  <||@
  Comment 87 block B2 null  <||@
  Comment 87 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 22 rbx|QWORD = MOV [rbx|DWORD * 8 + 520] size: QWORD  <||@
  Comment 95 24 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 99 32 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<AbstractCollection.size()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1]  <||@
  Comment 99 {HotSpotMethod<AbstractCollection.size()>}  <||@
  Comment 99 10  <||@
  Comment 101 []at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 102 36 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 104 38 rax|DWORD = SETCC condition: =  <||@
  Comment 110 42 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 119 12  <||@
  Comment 129 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 129 4  <||@
  Comment 135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 135 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7321[java.util.AbstractCollection.isEmpty()]"
  method "HotSpotCompilation-7321[java.util.AbstractCollection.isEmpty()]"
  date 1527005179444
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106b7d3e0 448b560849c1e203493bc20f856f8ac8ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b5e0881fb56e900f80f8518000000b800000000488b6c24104883c4188505d31bd1fdc5f877c3488b1cdd08020000488b4340ffd09085c00f94c00fb6c0488b6c24104883c4188505a91bd1fdc5f877c3e8bad10c0090e894a0c8ff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@491482bc slotKind: QWORD  <||@
  Comment 48 8 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 51 10 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed}  <||@
  Comment 51 {meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>;compressed}}  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.9107425906732153 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B1 null  <||@
  Comment 63 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 16 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 68 18 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 77 12  <||@
  Comment 87 block B2 null  <||@
  Comment 87 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 22 rbx|QWORD = MOV [rbx|DWORD * 8 + 520] size: QWORD  <||@
  Comment 95 24 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 99 32 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<AbstractCollection.size()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1]  <||@
  Comment 99 {HotSpotMethod<AbstractCollection.size()>}  <||@
  Comment 99 10  <||@
  Comment 101 []at java.util.AbstractCollection.isEmpty(AbstractCollection.java:86) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 102 36 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 104 38 rax|DWORD = SETCC condition: =  <||@
  Comment 110 42 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 119 12  <||@
  Comment 129 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 129 4  <||@
  Comment 135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 135 5  <||@
  HexCodeFile>>> <|@
end_nmethod
