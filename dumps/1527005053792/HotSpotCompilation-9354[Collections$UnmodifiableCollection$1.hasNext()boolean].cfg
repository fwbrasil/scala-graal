begin_compilation
  name " HotSpotCompilation-9354[java.util.Collections$UnmodifiableCollection$1.hasNext()]"
  method "HotSpotCompilation-9354[java.util.Collections$UnmodifiableCollection$1.hasNext()]"
  date 1527005208290
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a305 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a305  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Collections$UnmodifiableCollection$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v317 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Collections$UnmodifiableCollection$1.i
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v317 
=== Succesors ===
next: v306 
=== Usages ===
v324 v323 v318 v319 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v317 #next: v306  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Collections$UnmodifiableCollection$1.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 1041
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v279 v306 i308 v311 i314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a305 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v324 
=== Succesors ===
next: v22 
=== Usages ===
v300 v296 v298 
=== Predecessor ===
a305 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v324 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v306 
y: v295 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v306 y: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a305 
=== Succesors ===
=== Usages ===
i309 i312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a305  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a305 
=== Succesors ===
=== Usages ===
a307 a310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a305  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i63 i68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i63 i68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9405004800768123
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v15 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606646494768507825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a307 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v319 
=== Succesors ===
next: i308 
=== Usages ===
v320 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v319 #next: i308  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a307 
=== Succesors ===
=== Usages ===
i308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v320 
=== Succesors ===
next: i309 
=== Usages ===
v27 
=== Predecessor ===
a307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v320 #next: i309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v318 
=== Succesors ===
next: v33 
=== Usages ===
v27 
=== Predecessor ===
i308 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v318 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i308 
y: i309 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i308 y: i309  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v27 
trueValue: i28 
falseValue: i29 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v27 trueValue: i28 falseValue: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
result: i30 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i309 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i30 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4588735605539947760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v306 
y: v297 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v306 y: v297  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$Itr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9994957135653054
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v41 #falseSuccessor: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$Itr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a310 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v319 
=== Succesors ===
next: v311 
=== Usages ===
a124 v325 v321 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v319 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a310 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v325 
=== Succesors ===
next: i312 
=== Usages ===
v304 v302 
=== Predecessor ===
a310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v325 #next: i312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v318 
=== Succesors ===
next: v84 
=== Usages ===
?272 v62 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v318 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v311 
y: v301 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v311 y: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a310 
=== Succesors ===
=== Usages ===
a313 i315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a310  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9202979333724494
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
i312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v77 #falseSuccessor: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4588048197990067589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a313 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v321 
=== Succesors ===
next: i314 
=== Usages ===
v322 
=== Predecessor ===
v77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v321 #next: i314  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a313 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v322 
=== Succesors ===
next: v78 
=== Usages ===
i73 
=== Predecessor ===
a313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v322 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
i314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572114689372677318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v311 
y: v303 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v311 y: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9844587133450577
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v89 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572029761412953060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i315 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v321 
=== Succesors ===
next: v90 
=== Usages ===
i73 
=== Predecessor ===
v89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v321 #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
i315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4545063813811812459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i60 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i60  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a310 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a310  <|@  <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@2f8dd4dd
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.size()>
=== Inputs ===
arguments: a124 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a124  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Collections$UnmodifiableCollection$1.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 1041
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?272 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?65 
values: - i312 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?65 values: - i312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractCollection.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v136 
stateDuring: ?272 
=== Succesors ===
next: v72 
=== Usages ===
i73 
=== Predecessor ===
v92 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v136 stateDuring: ?272 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
i60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v70 
values: i60 i314 i315 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v70 values: i60 i314 i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v72 v78 v90 
=== Succesors ===
next: v100 
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v72 v78 v90 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i312 
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i73 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v62 
trueValue: i28 
falseValue: i29 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v62 trueValue: i28 falseValue: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
result: i63 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i63 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v306 
y: v299 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v306 y: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$ValueIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v172 #falseSuccessor: v174  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$ValueIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a316 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a316  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a305 
=== Succesors ===
=== Usages ===
a316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v323 
=== Succesors ===
next: v101 
=== Usages ===
v144 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v323 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
value: a316 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a316  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v144 
trueValue: i28 
falseValue: i29 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v144 trueValue: i28 falseValue: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
result: i68 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a316 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i68 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$ValueIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid a276 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -35123
stableDimension: 0
stamp: i32 [-35123] ⇊00000000ffff76cd ⇈00000000ffff76cd
stampKind: i32
value: int[-35123|0xffffffffffff76cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i287 
speculation: a276 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i287 speculation: a276  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a305 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a305  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Collections$UnmodifiableCollection$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v317 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a305 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Collections$UnmodifiableCollection$1.i
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v317 
=== Succesors ===
next: v306 
=== Usages ===
v324 v323 v318 v319 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v317 #next: v306  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Collections$UnmodifiableCollection$1.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 1041
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v279 v306 i308 v311 i314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
result [v1|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a305 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v324 
=== Succesors ===
next: v22 
=== Usages ===
v300 v296 v298 
=== Predecessor ===
a305 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v324 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
result meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v306 
y: v295 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v306 y: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v318 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a305 
=== Succesors ===
=== Usages ===
i309 i312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a305  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a305 
=== Succesors ===
=== Usages ===
a307 a310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a305  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i63 i68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i63 i68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9405004800768123
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v15 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2d99a5d7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9405004800768123 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606646494768507825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a307 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a307 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v319 
=== Succesors ===
next: i308 
=== Usages ===
v320 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v319 #next: i308  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a307 
=== Succesors ===
=== Usages ===
i308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i308 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v320 
=== Succesors ===
next: i309 
=== Usages ===
v27 
=== Predecessor ===
a307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v320 #next: i309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i309 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v318 
=== Succesors ===
next: v33 
=== Usages ===
v27 
=== Predecessor ===
i308 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v318 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i308 
y: i309 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i308 y: i309  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v27 
trueValue: i28 
falseValue: i29 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v27 trueValue: i28 falseValue: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
result: i30 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i309 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i30 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4588735605539947760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
result meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v306 
y: v297 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v306 y: v297  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$Itr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9994957135653054
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v41 #falseSuccessor: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9994957135653054 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$Itr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a310 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a310 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v319 
=== Succesors ===
next: v311 
=== Usages ===
a124 v325 v321 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v319 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
result [v7|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a310 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v325 
=== Succesors ===
next: i312 
=== Usages ===
v304 v302 
=== Predecessor ===
a310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v325 #next: i312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i312 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v318 
=== Succesors ===
next: v84 
=== Usages ===
?272 v62 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v318 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v311 
y: v301 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v311 y: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
result [v7|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a310 
=== Succesors ===
=== Usages ===
a313 i315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a310  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9202979333724494
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
i312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v77 #falseSuccessor: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4588048197990067589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a313 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a313 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v321 
=== Succesors ===
next: i314 
=== Usages ===
v322 
=== Predecessor ===
v77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v321 #next: i314  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a313 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i314 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v322 
=== Succesors ===
next: v78 
=== Usages ===
i73 
=== Predecessor ===
a313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v322 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
i314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572114689372677318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v311 
y: v303 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v311 y: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9844587133450577
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v89 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450577 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572029761412953060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i315 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i315 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v321 
=== Succesors ===
next: v90 
=== Usages ===
i73 
=== Predecessor ===
v89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v321 #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
i315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4545063813811812459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i60 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i60  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a310 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a310  <|@  <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@2f8dd4dd
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.size()>
=== Inputs ===
arguments: a124 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a124  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Collections$UnmodifiableCollection$1.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 1041
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?272 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?65 
values: - i312 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?65 values: - i312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i60 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractCollection.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v136 
stateDuring: ?272 
=== Succesors ===
next: v72 
=== Usages ===
i73 
=== Predecessor ===
v92 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v136 stateDuring: ?272 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
i60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56102a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v9|DWORD 
locals: - 
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.size()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 4] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i73 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v70 
values: i60 i314 i315 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v70 values: i60 i314 i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v72 v78 v90 
=== Succesors ===
next: v100 
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v72 v78 v90 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i312 
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i73 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v62 
trueValue: i28 
falseValue: i29 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v62 trueValue: i28 falseValue: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
result: i63 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i63 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
result meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v306 
y: v299 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v306 y: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$ValueIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v172 #falseSuccessor: v174  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$ValueIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a316 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a316  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
result [v1|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a305 
=== Succesors ===
=== Usages ===
a316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a316 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v323 
=== Succesors ===
next: v101 
=== Usages ===
v144 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v323 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
value: a316 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a316  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v144 
trueValue: i28 
falseValue: i29 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v144 trueValue: i28 falseValue: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
result: i68 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a316 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i68 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v1|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD[.], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$ValueIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid a276 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
result int[-35123|0xffffffffffff76cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -35123
stableDimension: 0
stamp: i32 [-35123] ⇊00000000ffff76cd ⇈00000000ffff76cd
stampKind: i32
value: int[-35123|0xffffffffffff76cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i287 
speculation: a276 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i287 speculation: a276  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -35123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2d99a5d7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9405004800768123 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606646494768507825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4588735605539947760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9994957135653054 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4588048197990067589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV [v10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572114689372677318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450577 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572029761412953060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4545063813811812459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56102a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v9|DWORD 
locals: - 
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.size()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 4] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v1|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD[.], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -35123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2d99a5d7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.9405004800768123 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606646494768507825
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   26  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4588735605539947760
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.9994957135653054 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4588048197990067589
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572114689372677318
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450577 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572029761412953060
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4545063813811812459
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56102a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:28|DWORD 
locals: - 
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.size()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 4] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed} <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction MOV [r15|QWORD + 668] y: -35123 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2d99a5d7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.9405004800768123 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4606646494768507825
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   26  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4588735605539947760
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.9994957135653054 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4588048197990067589
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 4588731281392441886
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4572114689372677318
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450577 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4572029761412953060
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4545063813811812459
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56102a4 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:28|DWORD 
locals: - 
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4]
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.size()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 4] <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed} <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4539477079226748521
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction MOV [r15|QWORD + 668] y: -35123 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // i:java.util.Iterator
     4: invokeinterface#5, 1       // java.util.Iterator.hasNext:()boolean
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b560c468b1cd5080000004181fbaddeadde0f8532000000428b04d5180000008b04c510000000428b34d50c0000003bf00f95c00fb6c0488b6c24104883c418850500000000c5f877c34181fbaddeadde0f858c000000468b1cd518000000468b04dd08000000468b14d50c0000004181f8addeadde0f852b000000428b04dd100000008b04c50c000000443bd00f95c00fb6c0488b6c24104883c418850500000000c5f877c34181f8addeadde0f850a000000428b04dd10000000ebcd448954240449c1e303498bf348b8ffffffffffffffff6690e80000000090448b542404eba84181fbaddeadde0f8523000000428b04d51400000085c00f95c00fb6c0488b6c24104883c418850500000000c5f877c341c7879c020000cd76ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2d99a5d7 slotKind: QWORD  <||@
  Comment 48 6 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 8 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 60 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 67 12 BRANCH trueDestinationProbability: 0.9405004800768123 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 73 block B1 null  <||@
  Comment 73 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 16 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 81 18 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 81 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 20 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 96 22 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 98 24 rax|DWORD = SETCC condition: !=  <||@
  Comment 104 26 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 113 12  <||@
  Comment 123 block B2 null  <||@
  Comment 123 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 30 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}  <||@
  Comment 123 {meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}}  <||@
  Comment 130 32 BRANCH trueDestinationProbability: 0.9994957135653054 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9  <||@
  Comment 136 block B3 null  <||@
  Comment 136 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 36 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 144 38 r8|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 144 [rsi:0, r10:0, r11:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 144 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 152 40 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 160 42 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 160 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 167 44 BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 173 block B4 null  <||@
  Comment 173 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 48 rax|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 181 50 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 181 [rsi:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 181 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 188 52 JUMP ~[] destination: B4 -> B8  <||@
  Comment 188 block B8 null  <||@
  Comment 188 80 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 188 82 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 191 84 rax|DWORD = SETCC condition: !=  <||@
  Comment 197 86 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 206 12  <||@
  Comment 216 block B5 null  <||@
  Comment 216 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 216 56 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 216 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 223 58 BRANCH trueDestinationProbability: 0.9844587133450577 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 229 block B6 null  <||@
  Comment 229 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 62 rax|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 237 64 JUMP ~[] destination: B6 -> B8  <||@
  Comment 239 block B7 null  <||@
  Comment 239 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 239 68 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 244 70 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56102a4 encoding: base: 0 shift: 3  <||@
  Comment 248 72 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 251 74 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.size()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 4]  <||@
  Comment 251 7  <||@
  Comment 263 {HotSpotMethod<AbstractCollection.size()>}  <||@
  Comment 268 []at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:28|DWORD 
  at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 269 76 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 274 78 JUMP ~[] destination: B7 -> B8  <||@
  Comment 276 block B9 null  <||@
  Comment 276 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 90 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed}  <||@
  Comment 276 {meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed}}  <||@
  Comment 283 92 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 289 block B10 null  <||@
  Comment 289 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 96 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 297 98 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 299 100 rax|DWORD = SETCC condition: !=  <||@
  Comment 305 102 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 314 12  <||@
  Comment 324 block B11 null  <||@
  Comment 324 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 106 MOV [r15|QWORD + 668] y: -35123 size: DWORD  <||@
  Comment 335 108 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 342 110 DEOPT info [bci:0]  <||@
  Comment 342 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 347 [rsi:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 348 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 348 4  <||@
  Comment 354 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 354 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9354[java.util.Collections$UnmodifiableCollection$1.hasNext()]"
  method "HotSpotCompilation-9354[java.util.Collections$UnmodifiableCollection$1.hasNext()]"
  date 1527005208382
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bc2ec0 448b560849c1e203493bc20f858f2fc4fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b560c468b1cd5080000004181fb9abf00f80f8532000000428b04d5180000008b04c510000000428b34d50c0000003bf00f95c00fb6c0488b6c24104883c4188505cfc0ccfcc5f877c34181fb1cb100f80f858c000000468b1cd518000000468b04dd08000000468b14d50c0000004181f88faf00f80f852b000000428b04dd100000008b04c50c000000443bd00f95c00fb6c0488b6c24104883c418850572c0ccfcc5f877c34181f8c8b101f80f850a000000428b04dd10000000ebcd448954240449c1e303498bf348b8ffffffffffffffff6690e81433c4fe90448b542404eba84181fb86ca01f80f8523000000428b04d51400000085c00f95c00fb6c0488b6c24104883c418850506c0ccfcc5f877c341c7879c020000cd76ffff4d89a7a8020000e8e345c4fe90e8ff7508ff90e8d944c4fe90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2d99a5d7 slotKind: QWORD  <||@
  Comment 48 6 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 8 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 52 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 10 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 60 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 67 12 BRANCH trueDestinationProbability: 0.9405004800768123 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 73 block B1 null  <||@
  Comment 73 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 16 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 81 18 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 81 [rsi:0, r10:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 20 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 96 22 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 98 24 rax|DWORD = SETCC condition: !=  <||@
  Comment 104 26 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 113 12  <||@
  Comment 123 block B2 null  <||@
  Comment 123 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 30 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}  <||@
  Comment 123 {meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}}  <||@
  Comment 130 32 BRANCH trueDestinationProbability: 0.9994957135653054 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9  <||@
  Comment 136 block B3 null  <||@
  Comment 136 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 36 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 144 38 r8|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 144 [rsi:0, r10:0, r11:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 144 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 152 40 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 160 42 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 160 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 167 44 BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 173 block B4 null  <||@
  Comment 173 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 48 rax|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 181 50 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 181 [rsi:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 181 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 188 52 JUMP ~[] destination: B4 -> B8  <||@
  Comment 188 block B8 null  <||@
  Comment 188 80 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 188 82 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 191 84 rax|DWORD = SETCC condition: !=  <||@
  Comment 197 86 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 206 12  <||@
  Comment 216 block B5 null  <||@
  Comment 216 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 216 56 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 216 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 223 58 BRANCH trueDestinationProbability: 0.9844587133450577 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 229 block B6 null  <||@
  Comment 229 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 62 rax|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 237 64 JUMP ~[] destination: B6 -> B8  <||@
  Comment 239 block B7 null  <||@
  Comment 239 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 239 68 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 244 70 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56102a4 encoding: base: 0 shift: 3  <||@
  Comment 248 72 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 251 74 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.size()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 4]  <||@
  Comment 251 7  <||@
  Comment 263 {HotSpotMethod<AbstractCollection.size()>}  <||@
  Comment 268 []at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:28|DWORD 
  at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 269 76 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 274 78 JUMP ~[] destination: B7 -> B8  <||@
  Comment 276 block B9 null  <||@
  Comment 276 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 90 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed}  <||@
  Comment 276 {meta{HotSpotType<Ljava/util/HashMap$ValueIterator;, resolved>;compressed}}  <||@
  Comment 283 92 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 289 block B10 null  <||@
  Comment 289 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 96 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 297 98 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 299 100 rax|DWORD = SETCC condition: !=  <||@
  Comment 305 102 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 314 12  <||@
  Comment 324 block B11 null  <||@
  Comment 324 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 106 MOV [r15|QWORD + 668] y: -35123 size: DWORD  <||@
  Comment 335 108 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 342 110 DEOPT info [bci:0]  <||@
  Comment 342 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 347 [rsi:0]at java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1041) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 348 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 348 4  <||@
  Comment 354 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 354 5  <||@
  HexCodeFile>>> <|@
end_nmethod
