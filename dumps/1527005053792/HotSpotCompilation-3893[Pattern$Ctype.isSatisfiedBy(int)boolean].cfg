begin_compilation
  name " HotSpotCompilation-3893[java.util.regex.Pattern$Ctype.isSatisfiedBy(int)]"
  method "HotSpotCompilation-3893[java.util.regex.Pattern$Ctype.isSatisfiedBy(int)]"
  date 1527005198115
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Ctype;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v54 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v30 v55 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 1]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
rawvalue: -128
stableDimension: 0
stamp: i32 [-128] ⇊00000000ffffff80 ⇈00000000ffffff80
stampKind: i32
value: int[-128|0xffffffffffffff80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 4]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
stamp: void
=== Inputs ===
x: i2 
y: i24 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i2 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v48 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i52 
=== Usages ===
i53 
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i52  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v54 
=== Succesors ===
next: i53 
=== Usages ===
v19 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v54 #next: i53  <|@  <|@
f <@~|@floating>@ <|@
tid a27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a27 
index: i2 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a27 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v48 
address: v55 
=== Succesors ===
next: v14 
=== Usages ===
v19 
=== Predecessor ===
i52 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v48 address: v55 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
stamp: void
=== Inputs ===
x: i52 
y: i53 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i52 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v19 
trueValue: i18 
falseValue: i20 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v19 trueValue: i18 falseValue: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 23]
stamp: void
=== Inputs ===
result: i21 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i53 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i21 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$Ctype.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3914
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 31
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Ctype;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v54 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v30 v55 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[-128|0xffffffffffffff80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 1]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
rawvalue: -128
stableDimension: 0
stamp: i32 [-128] ⇊00000000ffffff80 ⇈00000000ffffff80
stampKind: i32
value: int[-128|0xffffffffffffff80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 4]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
stamp: void
=== Inputs ===
x: i2 
y: i24 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i2 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v48 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60ea8d6f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v1|DWORD y: -128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i52 
=== Usages ===
i53 
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i52  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i52 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v54 
=== Succesors ===
next: i53 
=== Usages ===
v19 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v54 #next: i53  <|@  <|@
f <@~|@floating>@ <|@
tid a27 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
result [v3|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a27 
index: i2 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a27 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i53 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v48 
address: v55 
=== Succesors ===
next: v14 
=== Usages ===
v19 
=== Predecessor ===
i52 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v48 address: v55 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
stamp: void
=== Inputs ===
x: i52 
y: i53 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i52 y: i53  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v19 
trueValue: i18 
falseValue: i20 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v19 trueValue: i18 falseValue: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 23]
stamp: void
=== Inputs ===
result: i21 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i53 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i21 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v6|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$Ctype.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3914
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 31
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -7955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60ea8d6f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v1|DWORD y: -128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v6|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -7955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: sipush        128
     4: if_icmpge     22
     7: iload_1       
     8: aload_0       
     9: getfield      #1          // ctype:int
    12: invokestatic  #2          // java.util.regex.ASCII.isType:(int, int)boolean
    15: ifeq          22
    18: iconst_1      
    19: goto          23
    22: iconst_0      
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60ea8d6f slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST rdx|DWORD y: -128 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   26  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOV [r15|QWORD + 668] y: -7955 size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: sipush        128
     4: if_icmpge     22
     7: iload_1       
     8: aload_0       
     9: getfield      #1          // ctype:int
    12: invokestatic  #2          // java.util.regex.ASCII.isType:(int, int)boolean
    15: ifeq          22
    18: iconst_1      
    19: goto          23
    22: iconst_0      
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60ea8d6f slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST rdx|DWORD y: -128 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   26  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOV [r15|QWORD + 668] y: -7955 size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: sipush        128
     4: if_icmpge     22
     7: iload_1       
     8: aload_0       
     9: getfield      #1          // ctype:int
    12: invokestatic  #2          // java.util.regex.ASCII.isType:(int, int)boolean
    15: ifeq          22
    18: iconst_1      
    19: goto          23
    22: iconst_0      
    23: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410f7c280ffffff0f853a0000008b461049baaddeaddeaddeadde458b5492104485d0b80000000041ba01000000440f44d0418bc2488b6c24104883c418850500000000c5f877c341c7879c020000ede0ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60ea8d6f slotKind: QWORD  <||@
  Comment 48 10 TEST rdx|DWORD y: -128 size: DWORD  <||@
  Comment 54 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 60 block B1 null  <||@
  Comment 60 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 60 16 rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 63 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 63 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 73 20 r10|DWORD = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 78 22 TEST (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 81 24 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 86 26 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 96 28 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 99 30 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 108 12  <||@
  Comment 118 block B2 null  <||@
  Comment 118 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 34 MOV [r15|QWORD + 668] y: -7955 size: DWORD  <||@
  Comment 129 36 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 136 38 DEOPT info [bci:0]  <||@
  Comment 136 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 141 [rsi:0]at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 142 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 142 4  <||@
  Comment 148 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 148 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3893[java.util.regex.Pattern$Ctype.isSatisfiedBy(int)]"
  method "HotSpotCompilation-3893[java.util.regex.Pattern$Ctype.isSatisfiedBy(int)]"
  date 1527005198129
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106bdcfe0 448b560849c1e203493bc20f856f8ec2ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410f7c280ffffff0f853a0000008b461049ba38ba1ac006000000458b5492104485d0b80000000041ba01000000440f44d0418bc2488b6c24104883c4188505b41fcbfdc5f877c341c7879c020000ede0ffff4d89a7a8020000e891a5c2ff90e8add5060090e887a4c2ff90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60ea8d6f slotKind: QWORD  <||@
  Comment 48 10 TEST rdx|DWORD y: -128 size: DWORD  <||@
  Comment 54 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 60 block B1 null  <||@
  Comment 60 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 60 16 rax|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 63 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 63 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 73 20 r10|DWORD = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 78 22 TEST (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 81 24 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 86 26 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 96 28 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 99 30 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 108 12  <||@
  Comment 118 block B2 null  <||@
  Comment 118 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 34 MOV [r15|QWORD + 668] y: -7955 size: DWORD  <||@
  Comment 129 36 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 136 38 DEOPT info [bci:0]  <||@
  Comment 136 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 141 [rsi:0]at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 142 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 142 4  <||@
  Comment 148 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 148 5  <||@
  HexCodeFile>>> <|@
end_nmethod
