begin_compilation
  name " HotSpotCompilation-655[java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)]"
  method "HotSpotCompilation-655[java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)]"
  date 1527005214148
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObjectVolatile(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a19 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a19  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a [Ljava/util/concurrent/ConcurrentHashMap$Node;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1 
index: j5 
=== Succesors ===
=== Usages ===
a19 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a19 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Array: Object
nodeSourcePosition: at sun.misc.Unsafe.getObjectVolatile(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
=== Succesors ===
next: v35 
=== Usages ===
a20 v22 v87 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
a19 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v34 #falseSuccessor: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a19 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
=== Succesors ===
next: v84 
=== Usages ===
v86 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v87 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v83 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
=== Succesors ===
next: v80 
=== Usages ===
v39 
=== Predecessor ===
v83 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
rawvalue: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v84 
y: v31 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v84 y: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v79 #falseSuccessor: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v61 v69 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v61 v69 #next: v12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObjectVolatile(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid a20 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObjectVolatile(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 20]
stamp: void
=== Inputs ===
result: a20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a20 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ConcurrentHashMap.java
sourceLine: 755
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 24
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObjectVolatile(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a19 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a19  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a [Ljava/util/concurrent/ConcurrentHashMap$Node;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j5 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
result [v0|QWORD[.] + v2|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1 
index: j5 
=== Succesors ===
=== Usages ===
a19 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a19 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Array: Object
nodeSourcePosition: at sun.misc.Unsafe.getObjectVolatile(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
=== Succesors ===
next: v35 
=== Usages ===
a20 v22 v87 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
a19 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v34 #falseSuccessor: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f9b58e9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
result [v3|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a19 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
=== Succesors ===
next: v84 
=== Usages ===
v86 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v87 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
result [v4|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v83 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
=== Succesors ===
next: v80 
=== Usages ===
v39 
=== Predecessor ===
v83 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
rawvalue: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v84 
y: v31 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v84 y: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v79 #falseSuccessor: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v4|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v61 v69 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v61 v69 #next: v12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObjectVolatile(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid a20 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObjectVolatile(Object, long) [bci: -1]
at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 20]
stamp: void
=== Inputs ===
result: a20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a20 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ce4e91 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ConcurrentHashMap.java
sourceLine: 755
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 24
nodeSourcePosition: at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 17]
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -6179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f9b58e9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + v2|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v4|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ce4e91 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -6179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // U:sun.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #6          // ASHIFT:int
     9: lshl          
    10: getstatic     #7          // ABASE:long
    13: ladd          
    14: invokevirtual #8          // sun.misc.Unsafe.getObjectVolatile:(java.lang.Object, long)java.lang.Object
    17: checkcast     #17         // java.util.concurrent.ConcurrentHashMap$Node
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f9b58e9 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>} <|@ <|@
      nr   24  <|@ instruction CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ce4e91 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV [r15|QWORD + 668] y: -6179 size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // U:sun.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #6          // ASHIFT:int
     9: lshl          
    10: getstatic     #7          // ABASE:long
    13: ladd          
    14: invokevirtual #8          // sun.misc.Unsafe.getObjectVolatile:(java.lang.Object, long)java.lang.Object
    17: checkcast     #17         // java.util.concurrent.ConcurrentHashMap$Node
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f9b58e9 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>} <|@ <|@
      nr   24  <|@ instruction CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ce4e91 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV [r15|QWORD + 668] y: -6179 size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // U:sun.misc.Unsafe
     3: aload_0       
     4: iload_1       
     5: i2l           
     6: getstatic     #6          // ASHIFT:int
     9: lshl          
    10: getstatic     #7          // ABASE:long
    13: ladd          
    14: invokevirtual #8          // sun.misc.Unsafe.getObjectVolatile:(java.lang.Object, long)java.lang.Object
    17: checkcast     #17         // java.util.concurrent.ConcurrentHashMap$Node
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c24104863c28b44861085c00f8420000000448b14c50800000049bbaddeaddeaddeadde4e3b1cd5300000000f851700000048c1e003488b6c24104883c418850500000000c5f877c341c7879c020000dde7ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f9b58e9 slotKind: QWORD  <||@
  Comment 16 10 rax|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 19 12 rax|DWORD[.] = MOV [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD  <||@
  Comment 23 14 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 25 16 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 31 block B2 null  <||@
  Comment 31 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 31 20 r10|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 39 22 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>}  <||@
  Comment 39 {meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>}}  <||@
  Comment 49 24 CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 57 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B5  <||@
  Comment 63 block B4 null  <||@
  Comment 63 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 38 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ce4e91 encoding: base: 0 shift: 3  <||@
  Comment 67 42 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 76 12  <||@
  Comment 86 block B5 null  <||@
  Comment 86 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 46 MOV [r15|QWORD + 668] y: -6179 size: DWORD  <||@
  Comment 97 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 104 50 DEOPT info [bci:0]  <||@
  Comment 104 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 109 [rsi:0]at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 110 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 110 4  <||@
  Comment 116 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 116 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-655[java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)]"
  method "HotSpotCompilation-655[java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap$Node[], int)]"
  date 1527005214178
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b32be0 89842400c0feff4883ec1848896c24104863c28b44861085c00f8420000000448b14c50800000049bb205003c0070000004e3b1cd5300000000f851700000048c1e003488b6c24104883c4188505d4c3d5fcc5f877c341c7879c020000dde7ffff4d89a7a8020000e8b149cdfe90e8cd7911ff90e8a748cdfe90f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f9b58e9 slotKind: QWORD  <||@
  Comment 16 10 rax|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 19 12 rax|DWORD[.] = MOV [rsi|QWORD[.] + rax|QWORD * 4 + 16] size: DWORD  <||@
  Comment 23 14 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 25 16 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 31 block B2 null  <||@
  Comment 31 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 31 20 r10|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 39 22 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>}  <||@
  Comment 39 {meta{HotSpotType<Ljava/util/concurrent/ConcurrentHashMap$Node;, resolved>}}  <||@
  Comment 49 24 CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 57 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B5  <||@
  Comment 63 block B4 null  <||@
  Comment 63 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 38 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2ce4e91 encoding: base: 0 shift: 3  <||@
  Comment 67 42 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 76 12  <||@
  Comment 86 block B5 null  <||@
  Comment 86 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 46 MOV [r15|QWORD + 668] y: -6179 size: DWORD  <||@
  Comment 97 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 104 50 DEOPT info [bci:0]  <||@
  Comment 104 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 109 [rsi:0]at java.util.concurrent.ConcurrentHashMap.tabAt(ConcurrentHashMap.java:755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 110 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 110 4  <||@
  Comment 116 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 116 5  <||@
  HexCodeFile>>> <|@
end_nmethod
