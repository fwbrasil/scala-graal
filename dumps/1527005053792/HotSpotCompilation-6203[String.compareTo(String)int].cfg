begin_compilation
  name " HotSpotCompilation-6203[java.lang.String.compareTo(String)]"
  method "HotSpotCompilation-6203[java.lang.String.compareTo(String)]"
  date 1527005115538
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v80 v84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v81 v85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:96) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:96) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v5 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v5 #falseSuccessor: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 6]
stamp: void
=== Inputs ===
result: i8 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i8 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.compareTo(String)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1154
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - - 
=== Succesors ===
=== Usages ===
v69 v84 v85 v86 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1 #next: v85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a76 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a76  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 8]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
=== Succesors ===
next: v86 
=== Usages ===
a26 v86 v82 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 #next: v86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a76 
=== Succesors ===
next: a77 
=== Usages ===
=== Predecessor ===
a76 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a76 #next: a77  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:100) [bci: 13]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v81 
=== Succesors ===
next: v62 
=== Usages ===
a32 v38 v83 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v81 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
stamp: void
=== Inputs ===
value: a77 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a77  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
a77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v61 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid a66 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9995
stableDimension: 0
stamp: i32 [-9995] ⇊00000000ffffd8f5 ⇈00000000ffffd8f5
stampKind: i32
value: int[-9995|0xffffffffffffd8f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i75 
speculation: a66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i75 speculation: a66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i78 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a77 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
=== Succesors ===
next: i79 
=== Usages ===
i16 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 #next: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a76 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 20]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v82 
=== Succesors ===
next: i18 
=== Usages ===
i14 
=== Predecessor ===
i78 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v82 #next: i18  <|@  <|@
f <@~|@floating>@ <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 8]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a76 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a76  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:100) [bci: 13]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a77 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a77  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 i16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 22]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i79 
y: i13 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i79 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 26]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i78 
y: i13 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i78 y: i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
kind1: char
kind2: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayCompareToNode.compareTo(Object, Object, int, int, JavaKind, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 33]
stamp: i32
=== Inputs ===
array1: a26 
array2: a32 
length1: i14 
length2: i16 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
v19 
=== Predecessor ===
i79 >@ <|@
instruction <@ArrayCompareTo|@org.graalvm.compiler.replacements.nodes.ArrayCompareToNode>@ array1: a26 array2: a32 length1: i14 length2: i16 lastLocationAccess: - #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 36]
stamp: void
=== Inputs ===
result: i18 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i18 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v80 v84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v81 v85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:96) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:96) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v5 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v5 #falseSuccessor: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3eedb10e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:97) [bci: 6]
stamp: void
=== Inputs ===
result: i8 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i8 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.compareTo(String)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1154
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - - 
=== Succesors ===
=== Usages ===
v69 v84 v85 v86 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a1 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a1 #next: v85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a76 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a76  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a76 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 8]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
=== Succesors ===
next: v86 
=== Usages ===
a26 v86 v82 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 #next: v86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a76 
=== Succesors ===
next: a77 
=== Usages ===
=== Predecessor ===
a76 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a76 #next: a77  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a77 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:100) [bci: 13]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v81 
=== Succesors ===
next: v62 
=== Usages ===
a32 v38 v83 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v81 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
stamp: void
=== Inputs ===
value: a77 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a77  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
a77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v61 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [v0|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid a66 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result int[-9995|0xffffffffffffd8f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9995
stableDimension: 0
stamp: i32 [-9995] ⇊00000000ffffd8f5 ⇈00000000ffffd8f5
stampKind: i32
value: int[-9995|0xffffffffffffd8f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i75 
speculation: a66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i75 speculation: a66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -9995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i78 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a77 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i78 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 24]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
=== Succesors ===
next: i79 
=== Usages ===
i16 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 #next: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a76 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 20]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v82 
=== Succesors ===
next: i18 
=== Usages ===
i14 
=== Predecessor ===
i78 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v82 #next: i18  <|@  <|@
f <@~|@floating>@ <|@
tid a26 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:99) [bci: 8]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a76 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a76  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.getValue(String) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:100) [bci: 13]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a77 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a77  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 i16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 22]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i79 
y: i13 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i79 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 26]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i78 
y: i13 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i78 y: i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i18 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
kind1: char
kind2: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayCompareToNode.compareTo(Object, Object, int, int, JavaKind, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 33]
stamp: i32
=== Inputs ===
array1: a26 
array2: a32 
length1: i14 
length2: i16 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
v19 
=== Predecessor ===
i79 >@ <|@
instruction <@ArrayCompareTo|@org.graalvm.compiler.replacements.nodes.ArrayCompareToNode>@ array1: a26 array2: a32 length1: i14 length2: i16 lastLocationAccess: - #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.compareTo(AMD64StringSubstitutions.java:101) [bci: 36]
stamp: void
=== Inputs ===
result: i18 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i18 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: v6|QWORD[.], ~array2Value: v7|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: v10|QWORD[*], temp2: v11|QWORD[*], vectorTemp1: v12|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3eedb10e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [v0|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: v6|QWORD[.], ~array2Value: v7|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: v10|QWORD[*], temp2: v11|QWORD[*], vectorTemp1: v12|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -9995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: invokestatic  #12         // org.graalvm.compiler.replacements.StringSubstitutions.getValue:(java.lang.String)char[]
    11: astore_2      
    12: aload_1       
    13: invokestatic  #12         // org.graalvm.compiler.replacements.StringSubstitutions.getValue:(java.lang.String)char[]
    16: astore_3      
    17: aload_2       
    18: aload_3       
    19: aload_2       
    20: arraylength   
    21: iconst_1      
    22: ishl          
    23: aload_3       
    24: arraylength   
    25: iconst_1      
    26: ishl          
    27: getstatic     #1          // jdk.vm.ci.meta.JavaKind.Char:jdk.vm.ci.meta.JavaKind
    30: getstatic     #1          // jdk.vm.ci.meta.JavaKind.Char:jdk.vm.ci.meta.JavaKind
    33: invokestatic  #13         // org.graalvm.compiler.replacements.nodes.ArrayCompareToNode.compareTo:(java.lang.Object, java.lang.Object, int, int, jdk.vm.ci.meta.JavaKind, jdk.vm.ci.meta.JavaKind)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3eedb10e slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [rsi|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: r11|QWORD[.], ~array2Value: r8|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: r10|QWORD[*], temp2: r9|QWORD[*], vectorTemp1: xmm0|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction MOV [r15|QWORD + 668] y: -9995 size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: invokestatic  #12         // org.graalvm.compiler.replacements.StringSubstitutions.getValue:(java.lang.String)char[]
    11: astore_2      
    12: aload_1       
    13: invokestatic  #12         // org.graalvm.compiler.replacements.StringSubstitutions.getValue:(java.lang.String)char[]
    16: astore_3      
    17: aload_2       
    18: aload_3       
    19: aload_2       
    20: arraylength   
    21: iconst_1      
    22: ishl          
    23: aload_3       
    24: arraylength   
    25: iconst_1      
    26: ishl          
    27: getstatic     #1          // jdk.vm.ci.meta.JavaKind.Char:jdk.vm.ci.meta.JavaKind
    30: getstatic     #1          // jdk.vm.ci.meta.JavaKind.Char:jdk.vm.ci.meta.JavaKind
    33: invokestatic  #13         // org.graalvm.compiler.replacements.nodes.ArrayCompareToNode.compareTo:(java.lang.Object, java.lang.Object, int, int, jdk.vm.ci.meta.JavaKind, jdk.vm.ci.meta.JavaKind)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3eedb10e slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [rsi|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: r11|QWORD[.], ~array2Value: r8|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: r10|QWORD[*], temp2: r9|QWORD[*], vectorTemp1: xmm0|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction MOV [r15|QWORD + 668] y: -9995 size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.compareTo(String.java:1154) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_0      
     6: ireturn       
     7: aload_0       
     8: invokestatic  #12         // org.graalvm.compiler.replacements.StringSubstitutions.getValue:(java.lang.String)char[]
    11: astore_2      
    12: aload_1       
    13: invokestatic  #12         // org.graalvm.compiler.replacements.StringSubstitutions.getValue:(java.lang.String)char[]
    16: astore_3      
    17: aload_2       
    18: aload_3       
    19: aload_2       
    20: arraylength   
    21: iconst_1      
    22: ishl          
    23: aload_3       
    24: arraylength   
    25: iconst_1      
    26: ishl          
    27: getstatic     #1          // jdk.vm.ci.meta.JavaKind.Char:jdk.vm.ci.meta.JavaKind
    30: getstatic     #1          // jdk.vm.ci.meta.JavaKind.Char:jdk.vm.ci.meta.JavaKind
    33: invokestatic  #13         // org.graalvm.compiler.replacements.nodes.ArrayCompareToNode.compareTo:(java.lang.Object, java.lang.Object, int, int, jdk.vm.ci.meta.JavaKind, jdk.vm.ci.meta.JavaKind)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410483bd60f8480010000850685028b4e0c418504cc8b420c85c00f84820100008b14c50c000000448b14cd0c000000448bd949c1e303448bc049c1e00341d1e2d1e2418bca4d8d53104d8d48108bc12bca510f4ed085d20f8414010000410fb702410fb7092bc10f8509010000c1ea0183fa010f84f80000004d3bd10f84ef0000008bc283e2f00f8491000000c4c17a6f02c4c3796101197212c4c17a6f4210c4c37961411019731483c108410fb7044a410fb714492bc2e9b90000004d8d14424d8d0c4183e81083ea100f842700000048f7d8c4c17e6f0442c4c17def0441c4e27d17c00f85220000004883c01083ea1075e0c5fdefc04885c00f8470000000b8100000008bd048f7d8ebc7c5fdefc04d8d14424d8d0c41e96fffffff8bd083fa080f8c28000000c4c17a6f02c4c3796101190f8272ffffff4883ea080f842d0000004d8d14424d8d0c4148f7daeb0d4d8d14524d8d0c51ffca48f7da410fb70452410fb70c512bc1750a48ffc275ed58d1f8eb0159488b6c24104883c418850500000000c5f877c3b800000000488b6c24104883c418850500000000c5f877c341c7879c020000f5d8ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3eedb10e slotKind: QWORD  <||@
  Comment 48 10 CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 51 12 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 16 NULLCHECK [rsi|QWORD[.]] state [bci:0]  <||@
  Comment 57 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:1154) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 18 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 59 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:1154) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 61 20 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 64 22 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 64 [rcx:0, rdx:0, rsi:0]at java.lang.String.compareTo(String.java:1154) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 64 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 68 24 rax|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 71 26 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 73 28 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 79 block B4 null  <||@
  Comment 79 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 32 rdx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 86 34 r10|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 94 36 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3  <||@
  Comment 101 38 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3  <||@
  Comment 108 40 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 111 42 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 113 44 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 116 48 rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: r11|QWORD[.], ~array2Value: r8|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: r10|QWORD[*], temp2: r9|QWORD[*], vectorTemp1: xmm0|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char  <||@
  Comment 422 54 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 431 12  <||@
  Comment 441 block B1 null  <||@
  Comment 441 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 58 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 446 60 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 455 12  <||@
  Comment 465 block B3 null  <||@
  Comment 465 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 64 MOV [r15|QWORD + 668] y: -9995 size: DWORD  <||@
  Comment 476 66 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 483 68 DEOPT info [bci:0]  <||@
  Comment 483 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 488 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:1154) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 489 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 489 4  <||@
  Comment 495 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 495 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6203[java.lang.String.compareTo(String)]"
  method "HotSpotCompilation-6203[java.lang.String.compareTo(String)]"
  date 1527005115611
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107470520 448b560849c1e203493bc20f852f5939ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410483bd60f8480010000850685028b4e0c418504cc8b420c85c00f84820100008b14c50c000000448b14cd0c000000448bd949c1e303448bc049c1e00341d1e2d1e2418bca4d8d53104d8d48108bc12bca510f4ed085d20f8414010000410fb702410fb7092bc10f8509010000c1ea0183fa010f84f80000004d3bd10f84ef0000008bc283e2f00f8491000000c4c17a6f02c4c3796101197212c4c17a6f4210c4c37961411019731483c108410fb7044a410fb714492bc2e9b90000004d8d14424d8d0c4183e81083ea100f842700000048f7d8c4c17e6f0442c4c17def0441c4e27d17c00f85220000004883c01083ea1075e0c5fdefc04885c00f8470000000b8100000008bd048f7d8ebc7c5fdefc04d8d14424d8d0c41e96fffffff8bd083fa080f8c28000000c4c17a6f02c4c3796101190f8272ffffff4883ea080f842d0000004d8d14424d8d0c4148f7daeb0d4d8d14524d8d0c51ffca48f7da410fb70452410fb70c512bc1750a48ffc275ed58d1f8eb0159488b6c24104883c418850531e941fdc5f877c3b800000000488b6c24104883c418850519e941fdc5f877c341c7879c020000f5d8ffff4d89a7a8020000e8f66e39ff90e8129f7dff90e8ec6d39ff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3eedb10e slotKind: QWORD  <||@
  Comment 48 10 CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 51 12 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 16 NULLCHECK [rsi|QWORD[.]] state [bci:0]  <||@
  Comment 57 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:1154) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 18 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 59 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:1154) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 61 20 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 64 22 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 64 [rcx:0, rdx:0, rsi:0]at java.lang.String.compareTo(String.java:1154) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 64 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 68 24 rax|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 71 26 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 73 28 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 79 block B4 null  <||@
  Comment 79 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 32 rdx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 86 34 r10|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 94 36 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3  <||@
  Comment 101 38 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5fdd6e1 encoding: base: 0 shift: 3  <||@
  Comment 108 40 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 111 42 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 113 44 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 116 48 rax|DWORD = ARRAY_COMPARE_TO (length1Value: rcx|DWORD, length2Value: rdx|DWORD, ~array1Value: r11|QWORD[.], ~array2Value: r8|QWORD[.]) {length1ValueTemp: rcx|DWORD, length2ValueTemp: rdx|DWORD, temp1: r10|QWORD[*], temp2: r9|QWORD[*], vectorTemp1: xmm0|DOUBLE} array1BaseOffset: 16 array2BaseOffset: 16 kind1: char kind2: char  <||@
  Comment 422 54 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 431 12  <||@
  Comment 441 block B1 null  <||@
  Comment 441 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 58 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 446 60 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 455 12  <||@
  Comment 465 block B3 null  <||@
  Comment 465 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 64 MOV [r15|QWORD + 668] y: -9995 size: DWORD  <||@
  Comment 476 66 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 483 68 DEOPT info [bci:0]  <||@
  Comment 483 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 488 [rdx:0, rsi:0]at java.lang.String.compareTo(String.java:1154) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 489 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 489 4  <||@
  Comment 495 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 495 5  <||@
  HexCodeFile>>> <|@
end_nmethod
