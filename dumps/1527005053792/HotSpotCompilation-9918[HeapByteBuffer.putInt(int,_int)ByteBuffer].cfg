begin_compilation
  name " HotSpotCompilation-9918[java.nio.HeapByteBuffer.putInt(int, int)]"
  method "HotSpotCompilation-9918[java.nio.HeapByteBuffer.putInt(int, int)]"
  date 1527005235931
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/nio/HeapByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v206 v207 v15 v204 v205 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i10 v17 i20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i58 i34 i52 i43 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HeapByteBuffer.putInt(int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HeapByteBuffer.java
sourceLine: 381
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v188 i202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 v24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i16 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v160 #falseSuccessor: v158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21779
stableDimension: 0
stamp: i32 [-21779] ⇊00000000ffffaaed ⇈00000000ffffaaed
stampKind: i32
value: int[-21779|0xffffffffffffaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i199 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i199  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 6]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v204 
=== Succesors ===
next: v165 
=== Usages ===
i20 
=== Predecessor ===
v158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v204 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: i32
=== Inputs ===
x: i199 
y: i2 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i199 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 4]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 11]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i20 
y: i5 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i20 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 11]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
i199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v164 #falseSuccessor: v162  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 11]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22803
stableDimension: 0
stamp: i32 [-22803] ⇊00000000ffffa6ed ⇈00000000ffffa6ed
stampKind: i32
value: int[-22803|0xffffffffffffa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 11]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i200 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i200  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
displacement: 41
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.bigEndian
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 13]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
=== Succesors ===
next: v169 
=== Usages ===
i96 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 13]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i200 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i200  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i96 
y: i16 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i96 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v168 
=== Usages ===
=== Predecessor ===
i200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v166 #falseSuccessor: v168  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a201 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a201  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
=== Succesors ===
next: i202 
=== Usages ===
v212 v211 v208 v209 v210 
=== Predecessor ===
v166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 #next: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a201 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v208 
=== Succesors ===
next: i203 
=== Usages ===
v108 v139 
=== Predecessor ===
a201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v208 #next: i203  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 2]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
=== Succesors ===
next: v177 
=== Usages ===
i10 
=== Predecessor ===
i202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v205 #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 5]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 8]
stamp: i32
=== Inputs ===
x: i2 
y: i203 
=== Succesors ===
=== Usages ===
i50 i32 v139 i41 v212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i203  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 2]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 3]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32
=== Inputs ===
x: i10 
y: i31 
=== Succesors ===
=== Usages ===
v108 v209 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i202 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i202  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
i203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v174 #falseSuccessor: v176  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
v157 
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i202 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i202  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v178 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
v157 
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v174 v178 
=== Succesors ===
=== Usages ===
v137 v117 v127 v147 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v174 v178  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i32 
index: a201 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i32 index: a201  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 24
stableDimension: 0
stamp: i32 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i32
value: int[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32 [-128 - 127]
=== Inputs ===
x: i3 
y: i33 
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v157 
address: v209 
value: i35 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v209 value: i35 stateAfter: - lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 13]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 14]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32
=== Inputs ===
x: i10 
y: i40 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i41 
index: a201 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i41 index: a201  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i3 
y: i42 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i43 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 19]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v157 
address: v210 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v210 value: i44 stateAfter: - lastLocationAccess: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 24]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 25]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32
=== Inputs ===
x: i10 
y: i49 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i50 
index: a201 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i50 index: a201  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i3 
y: i51 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 30]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v157 
address: v211 
value: i53 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v211 value: i53 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i10 
index: a201 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i10 index: a201  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int0(Bits.java:257) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 36]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v157 
address: v212 
value: i58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v212 value: i58 stateAfter: - lastLocationAccess: - #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:382) [bci: 20]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -35867
stableDimension: 0
stamp: i32 [-35867] ⇊00000000ffff73e5 ⇈00000000ffff73e5
stampKind: i32
value: int[-35867|0xffffffffffff73e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27931
stableDimension: 0
stamp: i32 [-27931] ⇊00000000ffff92e5 ⇈00000000ffff92e5
stampKind: i32
value: int[-27931|0xffffffffffff92e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24851
stableDimension: 0
stamp: i32 [-24851] ⇊00000000ffff9eed ⇈00000000ffff9eed
stampKind: i32
value: int[-24851|0xffffffffffff9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B10" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-35867 - -21779] ⇊00000000ffff00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v182 
values: i184 i190 i194 i196 i198 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v182 values: i184 i190 i194 i196 i198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v183 v189 v193 v195 v197 
=== Succesors ===
next: v188 
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v183 v189 v193 v195 v197 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid a185 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i186 
speculation: a185 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i186 speculation: a185  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/nio/HeapByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v206 v207 v15 v204 v205 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i10 v17 i20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i58 i34 i52 i43 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HeapByteBuffer.putInt(int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HeapByteBuffer.java
sourceLine: 381
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v188 i202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 v24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i16 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v160 #falseSuccessor: v158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c7b1095 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result int[-21779|0xffffffffffffaaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21779
stableDimension: 0
stamp: i32 [-21779] ⇊00000000ffffaaed ⇈00000000ffffaaed
stampKind: i32
value: int[-21779|0xffffffffffffaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21779|0xffffffffffffaaed]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i199 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i199  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i199 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 6]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v204 
=== Succesors ===
next: v165 
=== Usages ===
i20 
=== Predecessor ===
v158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v204 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 10]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: i32
=== Inputs ===
x: i199 
y: i2 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i199 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 4]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 11]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i20 
y: i5 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i20 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 11]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
i199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v164 #falseSuccessor: v162  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v3|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 11]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result int[-22803|0xffffffffffffa6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22803
stableDimension: 0
stamp: i32 [-22803] ⇊00000000ffffa6ed ⇈00000000ffffa6ed
stampKind: i32
value: int[-22803|0xffffffffffffa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22803|0xffffffffffffa6ed]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.checkIndex(Buffer.java:545) [bci: 11]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i200 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i200  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
result [v0|QWORD[.] + 41] <|@
d <@d|@=== Debug Properties ===
displacement: 41
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.bigEndian
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 13]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
=== Succesors ===
next: v169 
=== Usages ===
i96 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 13]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i200 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i200  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i96 
y: i16 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i96 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v168 
=== Usages ===
=== Predecessor ===
i200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v166 #falseSuccessor: v168  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZXB [v0|QWORD[.] + 41] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a201 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a201  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v207 
=== Succesors ===
next: i202 
=== Usages ===
v212 v211 v208 v209 v210 
=== Predecessor ===
v166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v207 #next: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a201 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i202 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v208 
=== Succesors ===
next: i203 
=== Usages ===
v108 v139 
=== Predecessor ===
a201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v208 #next: i203  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i203 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 2]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
=== Succesors ===
next: v177 
=== Usages ===
i10 
=== Predecessor ===
i202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v205 #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.HeapByteBuffer.ix(HeapByteBuffer.java:131) [bci: 5]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 8]
stamp: i32
=== Inputs ===
x: i2 
y: i203 
=== Succesors ===
=== Usages ===
i50 i32 v139 i41 v212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i203  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 2]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 3]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32
=== Inputs ===
x: i10 
y: i31 
=== Succesors ===
=== Usages ===
v108 v209 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i202 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i202  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
i203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v174 #falseSuccessor: v176  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v1|DWORD, ~y: [v0|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
v157 
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i202 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i202  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v178 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
v157 
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v174 v178 
=== Succesors ===
=== Usages ===
v137 v117 v127 v147 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v174 v178  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
result [v9|DWORD + v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i32 
index: a201 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i32 index: a201  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 24
stableDimension: 0
stamp: i32 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i32
value: int[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32 [-128 - 127]
=== Inputs ===
x: i3 
y: i33 
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v157 
address: v209 
value: i35 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v209 value: i35 stateAfter: - lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 13]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 14]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32
=== Inputs ===
x: i10 
y: i40 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v11|DWORD + v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i41 
index: a201 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i41 index: a201  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i3 
y: i42 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i43 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i43  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 19]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v157 
address: v210 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v210 value: i44 stateAfter: - lastLocationAccess: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 24]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 25]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32
=== Inputs ===
x: i10 
y: i49 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v13|DWORD + v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i50 
index: a201 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i50 index: a201  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i3 
y: i51 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 30]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v157 
address: v211 
value: i53 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v211 value: i53 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [v8|DWORD + v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i10 
index: a201 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i10 index: a201  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int0(Bits.java:257) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 36]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v157 
address: v212 
value: i58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v212 value: i58 stateAfter: - lastLocationAccess: - #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:382) [bci: 20]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SAR v2|DWORD y: 24 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|DWORD + v6|DWORD[.] * 8 + 16], y: v10|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SAR v2|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|DWORD + v6|DWORD[.] * 8 + 16], y: v12|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SAR v2|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v13|DWORD + v6|DWORD[.] * 8 + 16], y: v14|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v8|DWORD + v6|DWORD[.] * 8 + 16], y: v2|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result int[-35867|0xffffffffffff73e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -35867
stableDimension: 0
stamp: i32 [-35867] ⇊00000000ffff73e5 ⇈00000000ffff73e5
stampKind: i32
value: int[-35867|0xffffffffffff73e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-35867|0xffffffffffff73e5]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
at java.nio.Bits.putInt(Bits.java:291) [bci: 16]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result int[-27931|0xffffffffffff92e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27931
stableDimension: 0
stamp: i32 [-27931] ⇊00000000ffff92e5 ⇈00000000ffff92e5
stampKind: i32
value: int[-27931|0xffffffffffff92e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27931|0xffffffffffff92e5]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putInt(Bits.java:288) [bci: 1]
at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result int[-24851|0xffffffffffff9eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24851
stableDimension: 0
stamp: i32 [-24851] ⇊00000000ffff9eed ⇈00000000ffff9eed
stampKind: i32
value: int[-24851|0xffffffffffff9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24851|0xffffffffffff9eed]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B10" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i186 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-35867 - -21779] ⇊00000000ffff00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v182 
values: i184 i190 i194 i196 i198 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v182 values: i184 i190 i194 i196 i198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v183 v189 v193 v195 v197 
=== Succesors ===
next: v188 
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v183 v189 v193 v195 v197 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid a185 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i186 
speculation: a185 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i186 speculation: a185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c7b1095 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v3|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZXB [v0|QWORD[.] + 41] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v1|DWORD, ~y: [v0|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SAR v2|DWORD y: 24 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|DWORD + v6|DWORD[.] * 8 + 16], y: v10|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SAR v2|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|DWORD + v6|DWORD[.] * 8 + 16], y: v12|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SAR v2|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v13|DWORD + v6|DWORD[.] * 8 + 16], y: v14|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v8|DWORD + v6|DWORD[.] * 8 + 16], y: v2|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21779|0xffffffffffffaaed]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B10" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24851|0xffffffffffff9eed]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-35867|0xffffffffffff73e5]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22803|0xffffffffffffa6ed]] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27931|0xffffffffffff92e5]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_0       
     3: iload_1       
     4: iconst_4      
     5: invokevirtual #29         // java.nio.Buffer.checkIndex:(int, int)int
     8: invokevirtual #11         // ix:(int)int
    11: iload_2       
    12: aload_0       
    13: getfield      #27         // java.nio.ByteBuffer.bigEndian:boolean
    16: invokestatic  #39         // java.nio.Bits.putInt:(java.nio.ByteBuffer, int, int, boolean)void
    19: aload_0       
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c7b1095 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP rax|DWORD y: 4 size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + 41] size: DWORD <|@ <|@
      nr   30  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r11|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|DWORD = SAR rcx|DWORD y: 24 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOVB (x: [r8|DWORD + rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr   60  <|@ instruction r10|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = SAR rcx|DWORD y: 16 size: DWORD <|@ <|@
      nr   64  <|@ instruction MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE <|@ <|@
      nr   66  <|@ instruction r10|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = SAR rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr   70  <|@ instruction MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE <|@ <|@
      nr   72  <|@ instruction MOVB (x: [r11|DWORD + rax|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21779|0xffffffffffffaaed] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B10" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35867|0xffffffffffff73e5] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-27931|0xffffffffffff92e5] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_0       
     3: iload_1       
     4: iconst_4      
     5: invokevirtual #29         // java.nio.Buffer.checkIndex:(int, int)int
     8: invokevirtual #11         // ix:(int)int
    11: iload_2       
    12: aload_0       
    13: getfield      #27         // java.nio.ByteBuffer.bigEndian:boolean
    16: invokestatic  #39         // java.nio.Bits.putInt:(java.nio.ByteBuffer, int, int, boolean)void
    19: aload_0       
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c7b1095 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP rax|DWORD y: 4 size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + 41] size: DWORD <|@ <|@
      nr   30  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r11|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|DWORD = SAR rcx|DWORD y: 24 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOVB (x: [r8|DWORD + rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr   60  <|@ instruction r10|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = SAR rcx|DWORD y: 16 size: DWORD <|@ <|@
      nr   64  <|@ instruction MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE <|@ <|@
      nr   66  <|@ instruction r10|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = SAR rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr   70  <|@ instruction MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE <|@ <|@
      nr   72  <|@ instruction MOVB (x: [r11|DWORD + rax|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21779|0xffffffffffffaaed] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B10" "B9" "B8" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35867|0xffffffffffff73e5] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-27931|0xffffffffffff92e5] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_0       
     3: iload_1       
     4: iconst_4      
     5: invokevirtual #29         // java.nio.Buffer.checkIndex:(int, int)int
     8: invokevirtual #11         // ix:(int)int
    11: iload_2       
    12: aload_0       
    13: getfield      #27         // java.nio.ByteBuffer.bigEndian:boolean
    16: invokestatic  #39         // java.nio.Bits.putInt:(java.nio.ByteBuffer, int, int, boolean)void
    19: aload_0       
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241085d20f8c8b0000008b461c2bc283f8040f8ca70000000fb6462985c00f858b0000008b462c448b14c50c000000448bda44035e24458d4303453bd00f8684000000453bd30f866b000000448bd141c1fa18458854c010458d5302448bc141c1f810458844c210458bd341ffc2448bc141c1f808458844c21041884cc310488bc6488b6c24104883c418850500000000c5f877c341baedaaffff4589979c0200004d89a7a8020000e8000000009041baed9effffebe441bae573ffffebdc41baeda6ffffebd441bae592ffffebcce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c7b1095 slotKind: QWORD  <||@
  Comment 48 12 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 50 14 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 56 block B2 null  <||@
  Comment 56 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 56 18 rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 59 20 rax|DWORD = SUB (x: rax|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 61 22 CMP rax|DWORD y: 4 size: DWORD  <||@
  Comment 64 24 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 70 block B4 null  <||@
  Comment 70 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 28 rax|DWORD = MOVZXB [rsi|QWORD[.] + 41] size: DWORD  <||@
  Comment 74 30 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 76 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10  <||@
  Comment 82 block B5 null  <||@
  Comment 82 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 36 rax|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 85 38 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [rax:0, rsi:0]at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 40 r11|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD  <||@
  Comment 100 42 r8|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 104 44 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 107 46 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 113 block B6 null  <||@
  Comment 113 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 50 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 116 52 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 122 block B7 null  <||@
  Comment 122 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 122 56 r10|DWORD = SAR rcx|DWORD y: 24 size: DWORD  <||@
  Comment 129 58 MOVB (x: [r8|DWORD + rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 134 60 r10|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 138 62 r8|DWORD = SAR rcx|DWORD y: 16 size: DWORD  <||@
  Comment 145 64 MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE  <||@
  Comment 150 66 r10|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 156 68 r8|DWORD = SAR rcx|DWORD y: 8 size: DWORD  <||@
  Comment 163 70 MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE  <||@
  Comment 168 72 MOVB (x: [r11|DWORD + rax|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 173 74 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 176 76 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 185 12  <||@
  Comment 195 block B1 null  <||@
  Comment 195 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 -1 r10|DWORD = MOVE input: int[-21779|0xffffffffffffaaed]  <||@
  Comment 201 80 JUMP ~[] destination: B1 -> B11  <||@
  Comment 201 block B11 null  <||@
  Comment 201 98 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 201 100 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 208 102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 215 104 DEOPT info [bci:0]  <||@
  Comment 215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 220 [rsi:0]at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 221 block B10 null  <||@
  Comment 221 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 -1 r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed]  <||@
  Comment 227 84 JUMP ~[] destination: B10 -> B11  <||@
  Comment 229 block B8 null  <||@
  Comment 229 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 -1 r10|DWORD = MOVE input: int[-35867|0xffffffffffff73e5]  <||@
  Comment 235 88 JUMP ~[] destination: B8 -> B11  <||@
  Comment 237 block B3 null  <||@
  Comment 237 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 -1 r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed]  <||@
  Comment 243 92 JUMP ~[] destination: B3 -> B11  <||@
  Comment 245 block B9 null  <||@
  Comment 245 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 -1 r10|DWORD = MOVE input: int[-27931|0xffffffffffff92e5]  <||@
  Comment 251 96 JUMP ~[] destination: B9 -> B11  <||@
  Comment 253 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 253 4  <||@
  Comment 259 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 259 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9918[java.nio.HeapByteBuffer.putInt(int, int)]"
  method "HotSpotCompilation-9918[java.nio.HeapByteBuffer.putInt(int, int)]"
  date 1527005235994
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107ccac60 448b560849c1e203493bc20f85efb1b3fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241085d20f8c8b0000008b461c2bc283f8040f8ca70000000fb6462985c00f858b0000008b462c448b14c50c000000448bda44035e24458d4303453bd00f8684000000453bd30f866b000000448bd141c1fa18458854c010458d5302448bc141c1f810458844c210458bd341ffc2448bc141c1f808458844c21041884cc310488bc6488b6c24104883c4188505e742bcfcc5f877c341baedaaffff4589979c0200004d89a7a8020000e8c2c8b3fe9041baed9effffebe441bae573ffffebdc41baeda6ffffebd441bae592ffffebcce8bef8f7fe90e898c7b3fe90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c7b1095 slotKind: QWORD  <||@
  Comment 48 12 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 50 14 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 56 block B2 null  <||@
  Comment 56 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 56 18 rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 59 20 rax|DWORD = SUB (x: rax|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 61 22 CMP rax|DWORD y: 4 size: DWORD  <||@
  Comment 64 24 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 70 block B4 null  <||@
  Comment 70 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 28 rax|DWORD = MOVZXB [rsi|QWORD[.] + 41] size: DWORD  <||@
  Comment 74 30 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 76 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B10  <||@
  Comment 82 block B5 null  <||@
  Comment 82 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 36 rax|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 85 38 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [rax:0, rsi:0]at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 40 r11|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 36]) size: DWORD  <||@
  Comment 100 42 r8|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 104 44 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 107 46 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 113 block B6 null  <||@
  Comment 113 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 50 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 116 52 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 122 block B7 null  <||@
  Comment 122 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 122 56 r10|DWORD = SAR rcx|DWORD y: 24 size: DWORD  <||@
  Comment 129 58 MOVB (x: [r8|DWORD + rax|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 134 60 r10|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 138 62 r8|DWORD = SAR rcx|DWORD y: 16 size: DWORD  <||@
  Comment 145 64 MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE  <||@
  Comment 150 66 r10|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 156 68 r8|DWORD = SAR rcx|DWORD y: 8 size: DWORD  <||@
  Comment 163 70 MOVB (x: [r10|DWORD + rax|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE  <||@
  Comment 168 72 MOVB (x: [r11|DWORD + rax|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 173 74 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 176 76 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 185 12  <||@
  Comment 195 block B1 null  <||@
  Comment 195 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 -1 r10|DWORD = MOVE input: int[-21779|0xffffffffffffaaed]  <||@
  Comment 201 80 JUMP ~[] destination: B1 -> B11  <||@
  Comment 201 block B11 null  <||@
  Comment 201 98 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 201 100 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 208 102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 215 104 DEOPT info [bci:0]  <||@
  Comment 215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 220 [rsi:0]at java.nio.HeapByteBuffer.putInt(HeapByteBuffer.java:381) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 221 block B10 null  <||@
  Comment 221 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 -1 r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed]  <||@
  Comment 227 84 JUMP ~[] destination: B10 -> B11  <||@
  Comment 229 block B8 null  <||@
  Comment 229 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 -1 r10|DWORD = MOVE input: int[-35867|0xffffffffffff73e5]  <||@
  Comment 235 88 JUMP ~[] destination: B8 -> B11  <||@
  Comment 237 block B3 null  <||@
  Comment 237 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 -1 r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed]  <||@
  Comment 243 92 JUMP ~[] destination: B3 -> B11  <||@
  Comment 245 block B9 null  <||@
  Comment 245 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 -1 r10|DWORD = MOVE input: int[-27931|0xffffffffffff92e5]  <||@
  Comment 251 96 JUMP ~[] destination: B9 -> B11  <||@
  Comment 253 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 253 4  <||@
  Comment 259 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 259 5  <||@
  HexCodeFile>>> <|@
end_nmethod
