begin_compilation
  name " HotSpotCompilation-9840[java.util.AbstractList.equals(Object)]"
  method "HotSpotCompilation-9840[java.util.AbstractList.equals(Object)]"
  date 1527005224016
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2252 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2252  <|@  <|@
f <@~|@floating>@ <|@
tid a3298 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3301 v3487 v3411 v3373 v3419 v3355 v3459 v3345 v3403 v3441 v3467 v3479 v3313 v3365 v3433 v3335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 a2732 v4271 v4280 v4272 a2687 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v4274 a2770 ?459 ?1182 ?1410 v4279 a2760 v4273 a2798 v4387 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 513
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v3301 a3623 a3761 a3669 a3526 a3577 a3715 v4092 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:513) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:513) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v2251 
falseSuccessor: v2249 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v2251 #falseSuccessor: v2249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:513) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3296 
=== Usages ===
=== Predecessor ===
v2252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3296  <|@  <|@
f <@~|@floating>@ <|@
tid i3297 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -405267
stableDimension: 0
stamp: i32 [-405267] ⇊00000000fff9d0ed ⇈00000000fff9d0ed
stampKind: i32
value: int[-405267|0xfffffffffff9d0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v2251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:513) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4092 
=== Usages ===
=== Predecessor ===
v2252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4092  <|@  <|@
f <@~|@floating>@ <|@
tid v4279 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v4092 v4094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:181) [bci: 40]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v4279 
=== Succesors ===
next: v4093 
=== Usages ===
v4276 v3983 v4275 
=== Predecessor ===
v2249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v4279 #next: v4093  <|@  <|@
f <@~|@floating>@ <|@
tid v4275 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v4092 
=== Succesors ===
=== Usages ===
v2615 v4093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v4092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:64) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v4275 
=== Succesors ===
next: v2583 
=== Usages ===
v2580 
=== Predecessor ===
v4092 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4275 #next: v2583  <|@  <|@
f <@~|@floating>@ <|@
tid v2572 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2580 v2615 v2604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2580 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:64) [bci: 14]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4093 
y: v2572 
=== Succesors ===
=== Usages ===
v2583 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4093 y: v2572  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 108]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i99 i170 i177 i185 i192 a3853 a3807 i355 i363 i613 i631 i987 i969 i1175 a3899 i1488 i1538 i2608 a3526 a3577 a3623 a3669 a3715 a3761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:516) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v892 v1317 v71 v108 v1170 v107 v111 i170 i177 i185 i192 i2592 ?287 i355 i363 v1153 i1538 v669 v885 v1343 ?1160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:64) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2580 
=== Succesors ===
trueSuccessor: v2581 
falseSuccessor: v2582 
=== Usages ===
=== Predecessor ===
v4093 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2580 #trueSuccessor: v2581 #falseSuccessor: v2582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:65) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2622 
=== Usages ===
=== Predecessor ===
v2583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2622  <|@  <|@
f <@*|@fixed>@ <|@
tid v2622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3285 
=== Predecessor ===
v2581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2587 
=== Usages ===
=== Predecessor ===
v2583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2587  <|@  <|@
f <@~|@floating>@ <|@
tid v3982 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3983 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4092 
y: v3982 
=== Succesors ===
=== Usages ===
v2587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4092 y: v3982  <|@  <|@
f <@*|@fixed>@ <|@
tid v2587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 5]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3983 
=== Succesors ===
trueSuccessor: v2585 
falseSuccessor: v2586 
=== Usages ===
=== Predecessor ===
v2582 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3983 #trueSuccessor: v2585 #falseSuccessor: v2586  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:99) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2623 
=== Usages ===
=== Predecessor ===
v2587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2623  <|@  <|@
f <@*|@fixed>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3285 
=== Predecessor ===
v2585 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2612 
=== Usages ===
=== Predecessor ===
v2587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2612  <|@  <|@
f <@~|@floating>@ <|@
tid v4276 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v4092 
=== Succesors ===
=== Usages ===
j2612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v4092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4276 
=== Succesors ===
next: i2613 
=== Usages ===
v4277 v4278 
=== Predecessor ===
v2586 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4276 #next: i2613  <|@  <|@
f <@~|@floating>@ <|@
tid v4277 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2612 
index: - 
=== Succesors ===
=== Usages ===
i2613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2613 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4277 
=== Succesors ===
next: v2590 
=== Usages ===
v2593 
=== Predecessor ===
j2612 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4277 #next: v2590  <|@  <|@
f <@*|@fixed>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2591 
=== Predecessor ===
i2613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B246" 
    successors "B8" "B247" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2591 
values: i13 i2608 
=== Succesors ===
=== Usages ===
v2593 i2599 i2608 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2591 values: i13 i2608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2590 
=== Succesors ===
next: v2596 
=== Usages ===
i2592 v2595 v2606 v2609 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2590 #next: v2596  <|@  <|@
f <@~|@floating>@ <|@
tid v2593 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2592 
y: i2613 
=== Succesors ===
=== Usages ===
v2596 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2592 y: i2613  <|@  <|@
f <@*|@fixed>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2593 
=== Succesors ===
trueSuccessor: v2594 
falseSuccessor: v2595 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2593 #trueSuccessor: v2594 #falseSuccessor: v2595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B246" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 56]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2614 
=== Usages ===
=== Predecessor ===
v2596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2614  <|@  <|@
f <@~|@floating>@ <|@
tid i2598 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2592 
y: i2598 
=== Succesors ===
=== Usages ===
i2600 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2592 y: i2598  <|@  <|@
f <@~|@floating>@ <|@
tid i2597 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2600 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2599 
y: i2597 
=== Succesors ===
=== Usages ===
j2601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2599 y: i2597  <|@  <|@
f <@~|@floating>@ <|@
tid j2601 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2600 
=== Succesors ===
=== Usages ===
v4278 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2600  <|@  <|@
f <@~|@floating>@ <|@
tid v4278 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2612 
index: j2601 
=== Succesors ===
=== Usages ===
j2614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2614 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4278 
=== Succesors ===
next: v2607 
=== Usages ===
v2603 
=== Predecessor ===
v2594 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4278 #next: v2607  <|@  <|@
f <@~|@floating>@ <|@
tid v2603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: Klass*
=== Inputs ===
input: j2614 
=== Succesors ===
=== Usages ===
v2604 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2614  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2603 
y: v2572 
=== Succesors ===
=== Usages ===
v2607 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2603 y: v2572  <|@  <|@
f <@*|@fixed>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2604 
=== Succesors ===
trueSuccessor: v2606 
falseSuccessor: v2605 
=== Usages ===
=== Predecessor ===
j2614 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2604 #trueSuccessor: v2606 #falseSuccessor: v2605  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 75]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2591 
=== Succesors ===
next: v2615 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2591 #next: v2615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4275 
value: v2572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2624 
=== Usages ===
=== Predecessor ===
v2606 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4275 value: v2572 stateAfter: - lastLocationAccess: - #next: v2624  <|@  <|@
f <@*|@fixed>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3285 
=== Predecessor ===
v2615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2622 v2623 v2624 
=== Succesors ===
next: v4094 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2622 v2623 v2624 #next: v4094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4094 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4279 
=== Succesors ===
next: v4095 
=== Usages ===
v3989 v3985 v3987 v4089 
=== Predecessor ===
v3285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4279 #next: v4095  <|@  <|@
f <@~|@floating>@ <|@
tid v4280 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v4095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4280 
=== Succesors ===
next: v469 
=== Usages ===
v3991 v3990 
=== Predecessor ===
v4094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4280 #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v3986 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3987 v3990 v4064 v4070 v4074 v4077 v4080 v4083 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3990 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4095 
y: v3986 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4095 y: v3986  <|@  <|@
f <@~|@floating>@ <|@
tid v3987 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4094 
y: v3986 
=== Succesors ===
=== Usages ===
v1218 v492 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4094 y: v3986  <|@  <|@
f <@~|@floating>@ <|@
tid v3988 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3989 v4063 v4067 v4068 v4069 v4072 v4073 v4076 v4079 v4082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4274 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i4100 i4101 i4103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4019 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3693 v3739 v3785 v3877 v4059 v4061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2803 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3869 j4091 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3984 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3985 v3991 v4089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3557 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3559 v3605 v3651 v3697 v3743 v3789 v3835 v3881 v3927 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3997 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3554 v3601 v3647 v3831 v3923 v4060 v4062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2838 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3915 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2838 
=== Succesors ===
=== Usages ===
v4316 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2838  <|@  <|@
f <@~|@floating>@ <|@
tid v4316 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3915 
index: - 
=== Succesors ===
=== Usages ===
j3919 j3597 j3550 j3643 j3827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3915 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3994 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a3526 a3577 a3623 a3669 a3715 a3761 a3807 a3853 a3899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3512 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a3526 a3577 a3623 a3669 a3715 a3761 a3807 a3853 a3899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2610 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4045 j3992 j4052 j4038 j4009 j4016 j4024 j4031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4272 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i4097 i4098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5141586199414127
=== Inputs ===
condition: v3990 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
v4095 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3990 #trueSuccessor: v465 #falseSuccessor: v468  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4096 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4096  <|@  <|@
f <@~|@floating>@ <|@
tid v4271 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i4096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4271 
=== Succesors ===
next: v2260 
=== Usages ===
v885 
=== Predecessor ===
v465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4271 #next: v2260  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4096 
y: i13 
=== Succesors ===
=== Usages ===
v2260 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4096 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v2259 
falseSuccessor: v2257 
=== Usages ===
=== Predecessor ===
i4096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v2259 #falseSuccessor: v2257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3304 
=== Usages ===
=== Predecessor ===
v2260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3304  <|@  <|@
f <@~|@floating>@ <|@
tid i3305 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -513555
stableDimension: 0
stamp: i32 [-513555] ⇊00000000fff829ed ⇈00000000fff829ed
stampKind: i32
value: int[-513555|0xfffffffffff829ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v2259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4097 
=== Usages ===
=== Predecessor ===
v2260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4097 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4272 
=== Succesors ===
next: v1218 
=== Usages ===
v3653 v3561 v3607 
=== Predecessor ===
v2257 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4272 #next: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid a2687 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v3565 v3563 v3609 v3611 v3655 v3657 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.5085168709992406
=== Inputs ===
condition: v3987 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1217 
=== Usages ===
=== Predecessor ===
i4097 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3987 #trueSuccessor: v1216 #falseSuccessor: v1217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3514 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3514 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3533 
=== Usages ===
v4281 v4282 
=== Predecessor ===
v1216 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3533  <|@  <|@
f <@~|@floating>@ <|@
tid v4281 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3514 
index: - 
=== Succesors ===
=== Usages ===
j3533 v3535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4281 
=== Succesors ===
next: j3534 
=== Usages ===
j3992 j3539 v4335 
=== Predecessor ===
j3514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4281 #next: j3534  <|@  <|@
f <@~|@floating>@ <|@
tid v4282 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3514 
index: - 
=== Succesors ===
=== Usages ===
j3534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3534 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4282 
=== Succesors ===
next: v3522 
=== Usages ===
v3519 
=== Predecessor ===
j3533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4282 #next: v3522  <|@  <|@
f <@~|@floating>@ <|@
tid j3992 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3533 
y: j2610 
=== Succesors ===
=== Usages ===
v3519 v3535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3533 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3519 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3534 
y: j3992 
=== Succesors ===
=== Usages ===
v3522 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3534 y: j3992  <|@  <|@
f <@*|@fixed>@ <|@
tid v3522 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3519 
=== Succesors ===
trueSuccessor: v3520 
falseSuccessor: v3521 
=== Usages ===
=== Predecessor ===
j3534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3519 #trueSuccessor: v3520 #falseSuccessor: v3521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567098666445716554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3526 
=== Usages ===
=== Predecessor ===
v3522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3526 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3527 
=== Usages ===
j3527 
=== Predecessor ===
v3520 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3527 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3526 
=== Succesors ===
next: v3540 
=== Usages ===
j3539 
=== Predecessor ===
a3526 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3526 #next: v3540  <|@  <|@
f <@*|@fixed>@ <|@
tid v3540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
j3527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4596828522603363643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3535 
=== Usages ===
=== Predecessor ===
v3522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4281 
value: j3992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3531 
=== Usages ===
=== Predecessor ===
v3521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4281 value: j3992 stateAfter: - lastLocationAccess: - #next: v3531  <|@  <|@
f <@~|@floating>@ <|@
tid v4335 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3533 
index: - 
=== Succesors ===
=== Usages ===
v3531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3533 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4335 
=== Succesors ===
next: v3538 
=== Usages ===
=== Predecessor ===
v3535 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4335 #next: v3538  <|@  <|@
f <@*|@fixed>@ <|@
tid v3538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
v3531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3539 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3537 
values: j3533 j3527 
=== Succesors ===
=== Usages ===
v4284 v4283 a2684 v4336 v4337 v4338 v4339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3537 values: j3533 j3527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3538 v3540 
=== Succesors ===
next: a2684 
=== Usages ===
j3539 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3538 v3540 #next: a2684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2684 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3539 
=== Succesors ===
next: j3550 
=== Usages ===
a2690 
=== Predecessor ===
v3537 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3539 #next: j3550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3551 
=== Usages ===
v3551 
=== Predecessor ===
a2684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3551  <|@  <|@
f <@~|@floating>@ <|@
tid v4283 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4283 
value: j3550 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3554 
=== Usages ===
=== Predecessor ===
j3550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4283 value: j3550 stateAfter: - lastLocationAccess: - #next: v3554  <|@  <|@
f <@~|@floating>@ <|@
tid v4284 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4284 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3559 
=== Usages ===
=== Predecessor ===
v3551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4284 value: v3997 stateAfter: - lastLocationAccess: - #next: v3559  <|@  <|@
f <@~|@floating>@ <|@
tid v4336 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4336 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3561 
=== Usages ===
=== Predecessor ===
v3554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4336 value: j3557 stateAfter: - lastLocationAccess: - #next: v3561  <|@  <|@
f <@~|@floating>@ <|@
tid v4337 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4337 
value: i4097 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3563 
=== Usages ===
=== Predecessor ===
v3559 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4337 value: i4097 stateAfter: - lastLocationAccess: - #next: v3563  <|@  <|@
f <@~|@floating>@ <|@
tid v4338 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4338 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3565 
=== Usages ===
=== Predecessor ===
v3561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4338 value: a2687 stateAfter: - lastLocationAccess: - #next: v3565  <|@  <|@
f <@~|@floating>@ <|@
tid v4339 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4339 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2690 
=== Usages ===
=== Predecessor ===
v3563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4339 value: a2687 stateAfter: - lastLocationAccess: - #next: a2690  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2690 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2684 
=== Succesors ===
next: v1179 
=== Usages ===
a1185 
=== Predecessor ===
v3565 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2684 #next: v1179  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
a2690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4596646706335347062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3566 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3566 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3581 
=== Usages ===
v4290 v4289 
=== Predecessor ===
v1217 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3581  <|@  <|@
f <@~|@floating>@ <|@
tid v4289 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3566 
index: - 
=== Succesors ===
=== Usages ===
v3583 v3629 j3581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4289 
=== Succesors ===
next: j3582 
=== Usages ===
v4345 j3587 j3633 j4009 
=== Predecessor ===
j3566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4289 #next: j3582  <|@  <|@
f <@~|@floating>@ <|@
tid v4290 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3566 
index: - 
=== Succesors ===
=== Usages ===
j3582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4290 
=== Succesors ===
next: v1418 
=== Usages ===
v3617 
=== Predecessor ===
j3581 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4290 #next: v1418  <|@  <|@
f <@~|@floating>@ <|@
tid j4009 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3581 
y: j2610 
=== Succesors ===
=== Usages ===
v3617 v3629 v3583 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3581 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3617 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3582 
y: j4009 
=== Succesors ===
=== Usages ===
v3620 v3574 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3582 y: j4009  <|@  <|@
f <@~|@floating>@ <|@
tid v4345 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3581 
index: - 
=== Succesors ===
=== Usages ===
v3626 v3580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3581 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3985 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4094 
y: v3984 
=== Succesors ===
=== Usages ===
v1418 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4094 y: v3984  <|@  <|@
f <@*|@fixed>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.9885209713024284
=== Inputs ===
condition: v3985 
=== Succesors ===
trueSuccessor: v1416 
falseSuccessor: v1417 
=== Usages ===
=== Predecessor ===
j3582 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3985 #trueSuccessor: v1416 #falseSuccessor: v1417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3574 
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3574  <|@  <|@
f <@*|@fixed>@ <|@
tid v3574 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3617 
=== Succesors ===
trueSuccessor: v3572 
falseSuccessor: v3573 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3617 #trueSuccessor: v3572 #falseSuccessor: v3573  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4566877838841885647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3577 
=== Usages ===
=== Predecessor ===
v3574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3577 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3578 
=== Usages ===
j3578 
=== Predecessor ===
v3572 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3578 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3577 
=== Succesors ===
next: v3588 
=== Usages ===
j3587 
=== Predecessor ===
a3577 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3577 #next: v3588  <|@  <|@
f <@*|@fixed>@ <|@
tid v3588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3585 
=== Predecessor ===
j3578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596486929903687710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3583 
=== Usages ===
=== Predecessor ===
v3574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4289 
value: j4009 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3580 
=== Usages ===
=== Predecessor ===
v3573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4289 value: j4009 stateAfter: - lastLocationAccess: - #next: v3580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4345 
=== Succesors ===
next: v3586 
=== Usages ===
=== Predecessor ===
v3583 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4345 #next: v3586  <|@  <|@
f <@*|@fixed>@ <|@
tid v3586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3585 
=== Predecessor ===
v3580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3587 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3585 
values: j3581 j3578 
=== Succesors ===
=== Usages ===
v4288 v4287 a2694 v4341 v4342 v4343 v4344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3585 values: j3581 j3578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3586 v3588 
=== Succesors ===
next: a2694 
=== Usages ===
j3587 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3586 v3588 #next: a2694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2694 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3587 
=== Succesors ===
next: j3597 
=== Usages ===
a2699 
=== Predecessor ===
v3585 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3587 #next: j3597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3598 
=== Usages ===
v3598 
=== Predecessor ===
a2694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3598  <|@  <|@
f <@~|@floating>@ <|@
tid v4287 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4287 
value: j3597 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3601 
=== Usages ===
=== Predecessor ===
j3597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4287 value: j3597 stateAfter: - lastLocationAccess: - #next: v3601  <|@  <|@
f <@~|@floating>@ <|@
tid v4288 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4288 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3605 
=== Usages ===
=== Predecessor ===
v3598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4288 value: v3997 stateAfter: - lastLocationAccess: - #next: v3605  <|@  <|@
f <@~|@floating>@ <|@
tid v4341 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4341 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3607 
=== Usages ===
=== Predecessor ===
v3601 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4341 value: j3557 stateAfter: - lastLocationAccess: - #next: v3607  <|@  <|@
f <@~|@floating>@ <|@
tid v4342 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4342 
value: i4097 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3609 
=== Usages ===
=== Predecessor ===
v3605 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4342 value: i4097 stateAfter: - lastLocationAccess: - #next: v3609  <|@  <|@
f <@~|@floating>@ <|@
tid v4343 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4343 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3611 
=== Usages ===
=== Predecessor ===
v3607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4343 value: a2687 stateAfter: - lastLocationAccess: - #next: v3611  <|@  <|@
f <@~|@floating>@ <|@
tid v4344 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4344 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2699 
=== Usages ===
=== Predecessor ===
v3609 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4344 value: a2687 stateAfter: - lastLocationAccess: - #next: a2699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2699 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2694 
=== Succesors ===
next: v1407 
=== Usages ===
a1413 
=== Predecessor ===
v3611 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2694 #next: v1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
a2699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3620 
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3620  <|@  <|@
f <@*|@fixed>@ <|@
tid v3620 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3617 
=== Succesors ===
trueSuccessor: v3618 
falseSuccessor: v3619 
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3617 #trueSuccessor: v3618 #falseSuccessor: v3619  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4537653897532319400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3623 
=== Usages ===
=== Predecessor ===
v3620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3623 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3624 
=== Usages ===
j3624 
=== Predecessor ===
v3618 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3624 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3623 
=== Succesors ===
next: v3634 
=== Usages ===
j3633 
=== Predecessor ===
a3623 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3623 #next: v3634  <|@  <|@
f <@*|@fixed>@ <|@
tid v3634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3631 
=== Predecessor ===
j3624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567585755083831521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3629 
=== Usages ===
=== Predecessor ===
v3620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4289 
value: j4009 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3626 
=== Usages ===
=== Predecessor ===
v3619 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4289 value: j4009 stateAfter: - lastLocationAccess: - #next: v3626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4345 
=== Succesors ===
next: v3632 
=== Usages ===
=== Predecessor ===
v3629 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4345 #next: v3632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3631 
=== Predecessor ===
v3626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3633 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3631 
values: j3581 j3624 
=== Succesors ===
=== Usages ===
v4292 v4291 a2703 v4346 v4347 v4348 v4349 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3631 values: j3581 j3624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3632 v3634 
=== Succesors ===
next: a2703 
=== Usages ===
j3633 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3632 v3634 #next: a2703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2703 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3633 
=== Succesors ===
next: j3643 
=== Usages ===
a2708 
=== Predecessor ===
v3631 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3633 #next: j3643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3644 
=== Usages ===
v3644 
=== Predecessor ===
a2703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3644  <|@  <|@
f <@~|@floating>@ <|@
tid v4291 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4291 
value: j3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3647 
=== Usages ===
=== Predecessor ===
j3643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4291 value: j3643 stateAfter: - lastLocationAccess: - #next: v3647  <|@  <|@
f <@~|@floating>@ <|@
tid v4292 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4292 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3651 
=== Usages ===
=== Predecessor ===
v3644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4292 value: v3997 stateAfter: - lastLocationAccess: - #next: v3651  <|@  <|@
f <@~|@floating>@ <|@
tid v4346 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4346 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3653 
=== Usages ===
=== Predecessor ===
v3647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4346 value: j3557 stateAfter: - lastLocationAccess: - #next: v3653  <|@  <|@
f <@~|@floating>@ <|@
tid v4347 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4347 
value: i4097 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3655 
=== Usages ===
=== Predecessor ===
v3651 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4347 value: i4097 stateAfter: - lastLocationAccess: - #next: v3655  <|@  <|@
f <@~|@floating>@ <|@
tid v4348 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4348 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3657 
=== Usages ===
=== Predecessor ===
v3653 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4348 value: a2687 stateAfter: - lastLocationAccess: - #next: v3657  <|@  <|@
f <@~|@floating>@ <|@
tid v4349 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4349 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2708 
=== Usages ===
=== Predecessor ===
v3655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4349 value: a2687 stateAfter: - lastLocationAccess: - #next: a2708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2708 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2703 
=== Succesors ===
next: v1411 
=== Usages ===
a1414 
=== Predecessor ===
v3657 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2703 #next: v1411  <|@  <|@
f <@*|@fixed>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
a2708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" "B244" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2264 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2264  <|@  <|@
f <@~|@floating>@ <|@
tid v3991 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4095 
y: v3984 
=== Succesors ===
=== Usages ===
v2264 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4095 y: v3984  <|@  <|@
f <@*|@fixed>@ <|@
tid v2264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3991 
=== Succesors ===
trueSuccessor: v2261 
falseSuccessor: v2263 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3991 #trueSuccessor: v2261 #falseSuccessor: v2263  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B39" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4098 
=== Usages ===
=== Predecessor ===
v2264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4098 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:849) [bci: 19]
at java.util.ArrayList$ListItr.<init>(ArrayList.java:918) [bci: 7]
at java.util.ArrayList.listIterator(ArrayList.java:829) [bci: 6]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4272 
=== Succesors ===
next: v492 
=== Usages ===
v3745 v3699 v3791 
=== Predecessor ===
v2261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4272 #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid a2732 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v3703 v3701 v3747 v3749 v3793 v3795 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid j4091 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2803 
=== Succesors ===
=== Usages ===
v4380 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2803  <|@  <|@
f <@~|@floating>@ <|@
tid v4380 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j4091 
index: - 
=== Succesors ===
=== Usages ===
j3735 j3781 j3689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4091 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.5085168709992406
=== Inputs ===
condition: v3987 
=== Succesors ===
trueSuccessor: v488 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
i4098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3987 #trueSuccessor: v488 #falseSuccessor: v491  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3658 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3658 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3673 
=== Usages ===
v4293 v4294 
=== Predecessor ===
v488 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3673  <|@  <|@
f <@~|@floating>@ <|@
tid v4293 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3658 
index: - 
=== Succesors ===
=== Usages ===
j3673 v3675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3658 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4293 
=== Succesors ===
next: j3674 
=== Usages ===
j4016 j3679 v4350 
=== Predecessor ===
j3658 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4293 #next: j3674  <|@  <|@
f <@~|@floating>@ <|@
tid v4294 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3658 
index: - 
=== Succesors ===
=== Usages ===
j3674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3658 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4294 
=== Succesors ===
next: v3666 
=== Usages ===
v3663 
=== Predecessor ===
j3673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4294 #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid j4016 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3673 
y: j2610 
=== Succesors ===
=== Usages ===
v3663 v3675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3673 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3663 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3674 
y: j4016 
=== Succesors ===
=== Usages ===
v3666 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3674 y: j4016  <|@  <|@
f <@*|@fixed>@ <|@
tid v3666 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3663 
=== Succesors ===
trueSuccessor: v3664 
falseSuccessor: v3665 
=== Usages ===
=== Predecessor ===
j3674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3663 #trueSuccessor: v3664 #falseSuccessor: v3665  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566825922055979378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3669 
=== Usages ===
=== Predecessor ===
v3666 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3669 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3670 
=== Usages ===
j3670 
=== Predecessor ===
v3664 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3670 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3669 
=== Succesors ===
next: v3680 
=== Usages ===
j3679 
=== Predecessor ===
a3669 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3669 #next: v3680  <|@  <|@
f <@*|@fixed>@ <|@
tid v3680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3677 
=== Predecessor ===
j3670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596406621125488950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3675 
=== Usages ===
=== Predecessor ===
v3666 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4293 
value: j4016 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3672 
=== Usages ===
=== Predecessor ===
v3665 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4293 value: j4016 stateAfter: - lastLocationAccess: - #next: v3672  <|@  <|@
f <@~|@floating>@ <|@
tid v4350 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3673 
index: - 
=== Succesors ===
=== Usages ===
v3672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3673 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4350 
=== Succesors ===
next: v3678 
=== Usages ===
=== Predecessor ===
v3675 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4350 #next: v3678  <|@  <|@
f <@*|@fixed>@ <|@
tid v3678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3677 
=== Predecessor ===
v3672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3679 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3677 
values: j3673 j3670 
=== Succesors ===
=== Usages ===
v4296 v4295 a2729 v4351 v4352 v4353 v4354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3677 values: j3673 j3670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3678 v3680 
=== Succesors ===
next: a2729 
=== Usages ===
j3679 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3678 v3680 #next: a2729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2729 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3679 
=== Succesors ===
next: j3689 
=== Usages ===
a2735 
=== Predecessor ===
v3677 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3679 #next: j3689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3689 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4380 
=== Succesors ===
next: v3690 
=== Usages ===
v3690 
=== Predecessor ===
a2729 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4380 #next: v3690  <|@  <|@
f <@~|@floating>@ <|@
tid v4295 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4295 
value: j3689 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3693 
=== Usages ===
=== Predecessor ===
j3689 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4295 value: j3689 stateAfter: - lastLocationAccess: - #next: v3693  <|@  <|@
f <@~|@floating>@ <|@
tid v4296 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3693 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4296 
value: v4019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3697 
=== Usages ===
=== Predecessor ===
v3690 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4296 value: v4019 stateAfter: - lastLocationAccess: - #next: v3697  <|@  <|@
f <@~|@floating>@ <|@
tid v4351 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4351 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3699 
=== Usages ===
=== Predecessor ===
v3693 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4351 value: j3557 stateAfter: - lastLocationAccess: - #next: v3699  <|@  <|@
f <@~|@floating>@ <|@
tid v4352 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3699 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4352 
value: i4098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3701 
=== Usages ===
=== Predecessor ===
v3697 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4352 value: i4098 stateAfter: - lastLocationAccess: - #next: v3701  <|@  <|@
f <@~|@floating>@ <|@
tid v4353 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4353 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3703 
=== Usages ===
=== Predecessor ===
v3699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4353 value: a2732 stateAfter: - lastLocationAccess: - #next: v3703  <|@  <|@
f <@~|@floating>@ <|@
tid v4354 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3703 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4354 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2735 
=== Usages ===
=== Predecessor ===
v3701 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4354 value: a2732 stateAfter: - lastLocationAccess: - #next: a2735  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2735 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2729 
=== Succesors ===
next: v1178 
=== Usages ===
a1185 
=== Predecessor ===
v3703 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2729 #next: v1178  <|@  <|@
f <@*|@fixed>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
a2735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B17" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1185 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v1177 
values: a2735 a2690 
=== Succesors ===
=== Usages ===
?459 a1186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1177 values: a2735 a2690  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1178 v1179 
=== Succesors ===
next: v2736 
=== Usages ===
a1185 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1178 v1179 #next: v2736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2736 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: i4099 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i4099  <|@  <|@
f <@~|@floating>@ <|@
tid v4273 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i4099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4273 
=== Succesors ===
next: v2268 
=== Usages ===
v892 
=== Predecessor ===
v2736 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4273 #next: v2268  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4099 
y: i13 
=== Succesors ===
=== Usages ===
v2268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4099 y: i13  <|@  <|@
tid ?459 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 518
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - a1185 
=== Succesors ===
=== Usages ===
v2266 a3807 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - a1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v892 
=== Succesors ===
trueSuccessor: v2267 
falseSuccessor: v2265 
=== Usages ===
=== Predecessor ===
i4099 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v892 #trueSuccessor: v2267 #falseSuccessor: v2265  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2266 
=== Usages ===
=== Predecessor ===
v2268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2266  <|@  <|@
f <@*|@fixed>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 2014
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?459 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2267 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?459  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3796 
=== Usages ===
=== Predecessor ===
v2268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3796 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3811 
=== Usages ===
v4305 v4306 
=== Predecessor ===
v2265 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4305 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3796 
index: - 
=== Succesors ===
=== Usages ===
j3811 v3813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3796 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4305 
=== Succesors ===
next: j3812 
=== Usages ===
j4038 j3817 v4365 
=== Predecessor ===
j3796 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4305 #next: j3812  <|@  <|@
f <@~|@floating>@ <|@
tid v4306 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3796 
index: - 
=== Succesors ===
=== Usages ===
j3812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3796 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4306 
=== Succesors ===
next: v3804 
=== Usages ===
v3801 
=== Predecessor ===
j3811 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4306 #next: v3804  <|@  <|@
f <@~|@floating>@ <|@
tid j4038 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3811 
y: j2610 
=== Succesors ===
=== Usages ===
v3801 v3813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3811 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3801 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3812 
y: j4038 
=== Succesors ===
=== Usages ===
v3804 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3812 y: j4038  <|@  <|@
f <@*|@fixed>@ <|@
tid v3804 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3801 
=== Succesors ===
trueSuccessor: v3802 
falseSuccessor: v3803 
=== Usages ===
=== Predecessor ===
j3812 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3801 #trueSuccessor: v3802 #falseSuccessor: v3803  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4571465893878218462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3807 
=== Usages ===
=== Predecessor ===
v3804 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3807 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?459 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3808 
=== Usages ===
j3808 
=== Predecessor ===
v3802 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?459 arguments: v3512 i3994 i98 #next: j3808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3808 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3807 
=== Succesors ===
next: v3818 
=== Usages ===
j3817 
=== Predecessor ===
a3807 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3807 #next: v3818  <|@  <|@
f <@*|@fixed>@ <|@
tid v3818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3815 
=== Predecessor ===
j3808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4601121171491796793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3813 
=== Usages ===
=== Predecessor ===
v3804 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3813 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4305 
value: j4038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3810 
=== Usages ===
=== Predecessor ===
v3803 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4305 value: j4038 stateAfter: - lastLocationAccess: - #next: v3810  <|@  <|@
f <@~|@floating>@ <|@
tid v4365 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3811 
index: - 
=== Succesors ===
=== Usages ===
v3810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3811 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4365 
=== Succesors ===
next: v3816 
=== Usages ===
=== Predecessor ===
v3813 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4365 #next: v3816  <|@  <|@
f <@*|@fixed>@ <|@
tid v3816 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3815 
=== Predecessor ===
v3810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors "B57" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3817 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3815 
values: j3811 j3808 
=== Succesors ===
=== Usages ===
v4308 v4307 a2757 v4366 v4367 v4368 v4369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3815 values: j3811 j3808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3816 v3818 
=== Succesors ===
next: a2757 
=== Usages ===
j3817 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3816 v3818 #next: a2757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2757 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3817 
=== Succesors ===
next: j3827 
=== Usages ===
a2763 
=== Predecessor ===
v3815 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3817 #next: j3827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3827 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3828 
=== Usages ===
v3828 
=== Predecessor ===
a2757 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3828  <|@  <|@
f <@~|@floating>@ <|@
tid v4307 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4307 
value: j3827 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3831 
=== Usages ===
=== Predecessor ===
j3827 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4307 value: j3827 stateAfter: - lastLocationAccess: - #next: v3831  <|@  <|@
f <@~|@floating>@ <|@
tid v4308 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4308 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3835 
=== Usages ===
=== Predecessor ===
v3828 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4308 value: v3997 stateAfter: - lastLocationAccess: - #next: v3835  <|@  <|@
f <@~|@floating>@ <|@
tid v4366 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4366 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i4100 
=== Usages ===
=== Predecessor ===
v3831 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4366 value: j3557 stateAfter: - lastLocationAccess: - #next: i4100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4274 
=== Succesors ===
next: v3837 
=== Usages ===
v3837 
=== Predecessor ===
v3835 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4274 #next: v3837  <|@  <|@
f <@~|@floating>@ <|@
tid v4367 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4367 
value: i4100 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3839 
=== Usages ===
=== Predecessor ===
i4100 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4367 value: i4100 stateAfter: - lastLocationAccess: - #next: v3839  <|@  <|@
f <@~|@floating>@ <|@
tid v4368 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2760 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v3841 v3839 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4368 
value: a2760 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3841 
=== Usages ===
=== Predecessor ===
v3837 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4368 value: a2760 stateAfter: - lastLocationAccess: - #next: v3841  <|@  <|@
f <@~|@floating>@ <|@
tid v4369 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4369 
value: a2760 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2763 
=== Usages ===
=== Predecessor ===
v3839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4369 value: a2760 stateAfter: - lastLocationAccess: - #next: a2763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2763 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2757 
=== Succesors ===
next: v489 
=== Usages ===
a484 
=== Predecessor ===
v3841 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2757 #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
a2763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B40" "B48" 
    xhandlers
    flags 
    probability 4596234818372127850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v4089 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4094 
y: v3984 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4094 y: v3984  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.9885209713024284
=== Inputs ===
condition: v4089 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4089 #trueSuccessor: v497 #falseSuccessor: v500  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3704 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3704 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3719 
=== Usages ===
v4297 v4298 
=== Predecessor ===
v497 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3719  <|@  <|@
f <@~|@floating>@ <|@
tid v4297 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3704 
index: - 
=== Succesors ===
=== Usages ===
j3719 v3721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3719 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4297 
=== Succesors ===
next: j3720 
=== Usages ===
j4024 j3725 v4355 
=== Predecessor ===
j3704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4297 #next: j3720  <|@  <|@
f <@~|@floating>@ <|@
tid v4298 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3704 
index: - 
=== Succesors ===
=== Usages ===
j3720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4298 
=== Succesors ===
next: v3712 
=== Usages ===
v3709 
=== Predecessor ===
j3719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4298 #next: v3712  <|@  <|@
f <@~|@floating>@ <|@
tid j4024 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3719 
y: j2610 
=== Succesors ===
=== Usages ===
v3709 v3721 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3719 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3709 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3720 
y: j4024 
=== Succesors ===
=== Usages ===
v3712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3720 y: j4024  <|@  <|@
f <@*|@fixed>@ <|@
tid v3712 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3709 
=== Succesors ===
trueSuccessor: v3710 
falseSuccessor: v3711 
=== Usages ===
=== Predecessor ===
j3720 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3709 #trueSuccessor: v3710 #falseSuccessor: v3711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4566584490871567730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3715 
=== Usages ===
=== Predecessor ===
v3712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3715 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3716 
=== Usages ===
j3716 
=== Predecessor ===
v3710 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3716 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3715 
=== Succesors ===
next: v3726 
=== Usages ===
j3725 
=== Predecessor ===
a3715 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3715 #next: v3726  <|@  <|@
f <@*|@fixed>@ <|@
tid v3726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3723 
=== Predecessor ===
j3716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596083841613113168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3721 
=== Usages ===
=== Predecessor ===
v3712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3721 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4297 
value: j4024 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3718 
=== Usages ===
=== Predecessor ===
v3711 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4297 value: j4024 stateAfter: - lastLocationAccess: - #next: v3718  <|@  <|@
f <@~|@floating>@ <|@
tid v4355 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3719 
index: - 
=== Succesors ===
=== Usages ===
v3718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3719 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4355 
=== Succesors ===
next: v3724 
=== Usages ===
=== Predecessor ===
v3721 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4355 #next: v3724  <|@  <|@
f <@*|@fixed>@ <|@
tid v3724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3723 
=== Predecessor ===
v3718 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3725 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3723 
values: j3719 j3716 
=== Succesors ===
=== Usages ===
v4300 v4299 a2739 v4356 v4357 v4358 v4359 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3723 values: j3719 j3716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3724 v3726 
=== Succesors ===
next: a2739 
=== Usages ===
j3725 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3724 v3726 #next: a2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2739 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3725 
=== Succesors ===
next: j3735 
=== Usages ===
a2744 
=== Predecessor ===
v3723 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3725 #next: j3735  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3735 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4380 
=== Succesors ===
next: v3736 
=== Usages ===
v3736 
=== Predecessor ===
a2739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4380 #next: v3736  <|@  <|@
f <@~|@floating>@ <|@
tid v4299 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4299 
value: j3735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3739 
=== Usages ===
=== Predecessor ===
j3735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4299 value: j3735 stateAfter: - lastLocationAccess: - #next: v3739  <|@  <|@
f <@~|@floating>@ <|@
tid v4300 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4300 
value: v4019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3743 
=== Usages ===
=== Predecessor ===
v3736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4300 value: v4019 stateAfter: - lastLocationAccess: - #next: v3743  <|@  <|@
f <@~|@floating>@ <|@
tid v4356 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4356 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3745 
=== Usages ===
=== Predecessor ===
v3739 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4356 value: j3557 stateAfter: - lastLocationAccess: - #next: v3745  <|@  <|@
f <@~|@floating>@ <|@
tid v4357 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4357 
value: i4098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3747 
=== Usages ===
=== Predecessor ===
v3743 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4357 value: i4098 stateAfter: - lastLocationAccess: - #next: v3747  <|@  <|@
f <@~|@floating>@ <|@
tid v4358 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4358 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3749 
=== Usages ===
=== Predecessor ===
v3745 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4358 value: a2732 stateAfter: - lastLocationAccess: - #next: v3749  <|@  <|@
f <@~|@floating>@ <|@
tid v4359 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4359 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2744 
=== Usages ===
=== Predecessor ===
v3747 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4359 value: a2732 stateAfter: - lastLocationAccess: - #next: a2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2744 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2739 
=== Succesors ===
next: v1406 
=== Usages ===
a1413 
=== Predecessor ===
v3749 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2739 #next: v1406  <|@  <|@
f <@*|@fixed>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
a2744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B22" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1413 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v1405 
values: a2744 a2699 
=== Succesors ===
=== Usages ===
a1186 ?1182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1405 values: a2744 a2699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1406 v1407 
=== Succesors ===
next: v2745 
=== Usages ===
a1413 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1406 v1407 #next: v2745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2745 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3842 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3842 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3857 
=== Usages ===
v4309 v4310 
=== Predecessor ===
v2745 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3857  <|@  <|@
f <@~|@floating>@ <|@
tid v4309 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3842 
index: - 
=== Succesors ===
=== Usages ===
j3857 v3859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4309 
=== Succesors ===
next: j3858 
=== Usages ===
j4045 j3863 v4370 
=== Predecessor ===
j3842 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4309 #next: j3858  <|@  <|@
f <@~|@floating>@ <|@
tid v4310 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3842 
index: - 
=== Succesors ===
=== Usages ===
j3858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4310 
=== Succesors ===
next: v3850 
=== Usages ===
v3847 
=== Predecessor ===
j3857 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4310 #next: v3850  <|@  <|@
f <@~|@floating>@ <|@
tid j4045 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3857 
y: j2610 
=== Succesors ===
=== Usages ===
v3847 v3859 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3857 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3847 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3858 
y: j4045 
=== Succesors ===
=== Usages ===
v3850 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3858 y: j4045  <|@  <|@
f <@*|@fixed>@ <|@
tid v3850 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3847 
=== Succesors ===
trueSuccessor: v3848 
falseSuccessor: v3849 
=== Usages ===
=== Predecessor ===
j3858 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3847 #trueSuccessor: v3848 #falseSuccessor: v3849  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571251147304625988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3853 
=== Usages ===
=== Predecessor ===
v3850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3853  <|@  <|@
tid ?1182 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 518
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - a1413 
=== Succesors ===
=== Usages ===
a3853 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - a1413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3853 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1182 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3854 
=== Usages ===
j3854 
=== Predecessor ===
v3848 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1182 arguments: v3512 i3994 i98 #next: j3854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3854 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3853 
=== Succesors ===
next: v3864 
=== Usages ===
j3863 
=== Predecessor ===
a3853 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3853 #next: v3864  <|@  <|@
f <@*|@fixed>@ <|@
tid v3864 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3861 
=== Predecessor ===
j3854 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4600788985385770935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3859 
=== Usages ===
=== Predecessor ===
v3850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4309 
value: j4045 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3856 
=== Usages ===
=== Predecessor ===
v3849 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4309 value: j4045 stateAfter: - lastLocationAccess: - #next: v3856  <|@  <|@
f <@~|@floating>@ <|@
tid v4370 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3857 
index: - 
=== Succesors ===
=== Usages ===
v3856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3857 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4370 
=== Succesors ===
next: v3862 
=== Usages ===
=== Predecessor ===
v3859 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4370 #next: v3862  <|@  <|@
f <@*|@fixed>@ <|@
tid v3862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3861 
=== Predecessor ===
v3856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3863 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3861 
values: j3857 j3854 
=== Succesors ===
=== Usages ===
v4313 v4312 a2767 v4371 v4372 v4373 v4374 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3861 values: j3857 j3854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3862 v3864 
=== Succesors ===
next: a2767 
=== Usages ===
j3863 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3862 v3864 #next: a2767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2767 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3863 
=== Succesors ===
next: j3873 
=== Usages ===
a2773 
=== Predecessor ===
v3861 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3863 #next: j3873  <|@  <|@
f <@~|@floating>@ <|@
tid j3869 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2803 
=== Succesors ===
=== Usages ===
v4311 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2803  <|@  <|@
f <@~|@floating>@ <|@
tid v4311 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3869 
index: - 
=== Succesors ===
=== Usages ===
j3873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3869 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4311 
=== Succesors ===
next: v3874 
=== Usages ===
v3874 
=== Predecessor ===
a2767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4311 #next: v3874  <|@  <|@
f <@~|@floating>@ <|@
tid v4312 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4312 
value: j3873 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3877 
=== Usages ===
=== Predecessor ===
j3873 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4312 value: j3873 stateAfter: - lastLocationAccess: - #next: v3877  <|@  <|@
f <@~|@floating>@ <|@
tid v4313 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4313 
value: v4019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3881 
=== Usages ===
=== Predecessor ===
v3874 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4313 value: v4019 stateAfter: - lastLocationAccess: - #next: v3881  <|@  <|@
f <@~|@floating>@ <|@
tid v4371 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4371 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i4101 
=== Usages ===
=== Predecessor ===
v3877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4371 value: j3557 stateAfter: - lastLocationAccess: - #next: i4101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:849) [bci: 19]
at java.util.ArrayList$ListItr.<init>(ArrayList.java:918) [bci: 7]
at java.util.ArrayList.listIterator(ArrayList.java:829) [bci: 6]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4274 
=== Succesors ===
next: v3883 
=== Usages ===
v3883 
=== Predecessor ===
v3881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4274 #next: v3883  <|@  <|@
f <@~|@floating>@ <|@
tid v4372 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4372 
value: i4101 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3885 
=== Usages ===
=== Predecessor ===
i4101 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4372 value: i4101 stateAfter: - lastLocationAccess: - #next: v3885  <|@  <|@
f <@~|@floating>@ <|@
tid v4373 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2770 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v3887 v3885 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3885 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4373 
value: a2770 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3887 
=== Usages ===
=== Predecessor ===
v3883 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4373 value: a2770 stateAfter: - lastLocationAccess: - #next: v3887  <|@  <|@
f <@~|@floating>@ <|@
tid v4374 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4374 
value: a2770 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2773 
=== Usages ===
=== Predecessor ===
v3885 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4374 value: a2770 stateAfter: - lastLocationAccess: - #next: a2773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2773 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2767 
=== Succesors ===
next: v498 
=== Usages ===
a484 
=== Predecessor ===
v3887 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2767 #next: v498  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
a2773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3750 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3750 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3765 
=== Usages ===
v4301 v4302 
=== Predecessor ===
v500 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3765  <|@  <|@
f <@~|@floating>@ <|@
tid v4301 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3750 
index: - 
=== Succesors ===
=== Usages ===
j3765 v3767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3750 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3765 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4301 
=== Succesors ===
next: j3766 
=== Usages ===
j4031 j3771 v4360 
=== Predecessor ===
j3750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4301 #next: j3766  <|@  <|@
f <@~|@floating>@ <|@
tid v4302 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3750 
index: - 
=== Succesors ===
=== Usages ===
j3766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3750 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4302 
=== Succesors ===
next: v3758 
=== Usages ===
v3755 
=== Predecessor ===
j3765 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4302 #next: v3758  <|@  <|@
f <@~|@floating>@ <|@
tid j4031 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3765 
y: j2610 
=== Succesors ===
=== Usages ===
v3755 v3767 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3765 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3755 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3766 
y: j4031 
=== Succesors ===
=== Usages ===
v3758 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3766 y: j4031  <|@  <|@
f <@*|@fixed>@ <|@
tid v3758 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3755 
=== Succesors ===
trueSuccessor: v3756 
falseSuccessor: v3757 
=== Usages ===
=== Predecessor ===
j3766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3755 #trueSuccessor: v3756 #falseSuccessor: v3757  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4537266573730721232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3761 
=== Usages ===
=== Predecessor ===
v3758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3761 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3762 
=== Usages ===
j3762 
=== Predecessor ===
v3756 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3762 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3761 
=== Succesors ===
next: v3772 
=== Usages ===
j3771 
=== Predecessor ===
a3761 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3761 #next: v3772  <|@  <|@
f <@*|@fixed>@ <|@
tid v3772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3769 
=== Predecessor ===
j3762 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4567286184331032938
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3767 
=== Usages ===
=== Predecessor ===
v3758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3767 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4301 
value: j4031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3764 
=== Usages ===
=== Predecessor ===
v3757 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4301 value: j4031 stateAfter: - lastLocationAccess: - #next: v3764  <|@  <|@
f <@~|@floating>@ <|@
tid v4360 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3765 
index: - 
=== Succesors ===
=== Usages ===
v3764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4360 
=== Succesors ===
next: v3770 
=== Usages ===
=== Predecessor ===
v3767 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4360 #next: v3770  <|@  <|@
f <@*|@fixed>@ <|@
tid v3770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3769 
=== Predecessor ===
v3764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3771 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3769 
values: j3765 j3762 
=== Succesors ===
=== Usages ===
v4304 v4303 a2748 v4361 v4362 v4363 v4364 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3769 values: j3765 j3762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3770 v3772 
=== Succesors ===
next: a2748 
=== Usages ===
j3771 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3770 v3772 #next: a2748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2748 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3771 
=== Succesors ===
next: j3781 
=== Usages ===
a2753 
=== Predecessor ===
v3769 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3771 #next: j3781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3781 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4380 
=== Succesors ===
next: v3782 
=== Usages ===
v3782 
=== Predecessor ===
a2748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4380 #next: v3782  <|@  <|@
f <@~|@floating>@ <|@
tid v4303 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4303 
value: j3781 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3785 
=== Usages ===
=== Predecessor ===
j3781 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4303 value: j3781 stateAfter: - lastLocationAccess: - #next: v3785  <|@  <|@
f <@~|@floating>@ <|@
tid v4304 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4304 
value: v4019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3789 
=== Usages ===
=== Predecessor ===
v3782 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4304 value: v4019 stateAfter: - lastLocationAccess: - #next: v3789  <|@  <|@
f <@~|@floating>@ <|@
tid v4361 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4361 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3791 
=== Usages ===
=== Predecessor ===
v3785 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4361 value: j3557 stateAfter: - lastLocationAccess: - #next: v3791  <|@  <|@
f <@~|@floating>@ <|@
tid v4362 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4362 
value: i4098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3793 
=== Usages ===
=== Predecessor ===
v3789 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4362 value: i4098 stateAfter: - lastLocationAccess: - #next: v3793  <|@  <|@
f <@~|@floating>@ <|@
tid v4363 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4363 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3795 
=== Usages ===
=== Predecessor ===
v3791 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4363 value: a2732 stateAfter: - lastLocationAccess: - #next: v3795  <|@  <|@
f <@~|@floating>@ <|@
tid v4364 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3795 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4364 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2753 
=== Usages ===
=== Predecessor ===
v3793 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4364 value: a2732 stateAfter: - lastLocationAccess: - #next: a2753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2753 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2748 
=== Succesors ===
next: v1409 
=== Usages ===
a1414 
=== Predecessor ===
v3795 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2748 #next: v1409  <|@  <|@
f <@*|@fixed>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
a2753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B26" 
    successors "B53" "B243" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1414 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v1408 
values: a2753 a2708 
=== Succesors ===
=== Usages ===
a1186 ?1410 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1408 values: a2753 a2708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1409 v1411 
=== Succesors ===
next: v2754 
=== Usages ===
a1414 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1409 v1411 #next: v2754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v2272 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v2272  <|@  <|@
tid ?1410 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 518
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - a1414 
=== Succesors ===
=== Usages ===
v3459 a3899 v4385 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - a1414  <|@  <|@
f <@~|@floating>@ <|@
tid v3989 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4094 
y: v3988 
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4094 y: v3988  <|@  <|@
f <@*|@fixed>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3989 
=== Succesors ===
trueSuccessor: v2269 
falseSuccessor: v2271 
=== Usages ===
=== Predecessor ===
v2754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3989 #trueSuccessor: v2269 #falseSuccessor: v2271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4102 
=== Usages ===
=== Predecessor ===
v2272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4102  <|@  <|@
f <@~|@floating>@ <|@
tid v4387 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a4102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4387 
=== Succesors ===
next: v4385 
=== Usages ===
v4385 
=== Predecessor ===
v2269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4387 #next: v4385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1410 
object: a4102 
=== Succesors ===
next: j3888 
=== Usages ===
=== Predecessor ===
a4102 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1410 object: a4102 #next: j3888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3888 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3903 
=== Usages ===
v4314 v4315 
=== Predecessor ===
v4385 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3903  <|@  <|@
f <@~|@floating>@ <|@
tid v4314 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3888 
index: - 
=== Succesors ===
=== Usages ===
j3903 v3905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4314 
=== Succesors ===
next: j3904 
=== Usages ===
j4052 j3909 v4375 
=== Predecessor ===
j3888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4314 #next: j3904  <|@  <|@
f <@~|@floating>@ <|@
tid v4315 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3888 
index: - 
=== Succesors ===
=== Usages ===
j3904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4315 
=== Succesors ===
next: v3896 
=== Usages ===
v3893 
=== Predecessor ===
j3903 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4315 #next: v3896  <|@  <|@
f <@~|@floating>@ <|@
tid j4052 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3903 
y: j2610 
=== Succesors ===
=== Usages ===
v3893 v3905 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3903 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3893 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3904 
y: j4052 
=== Succesors ===
=== Usages ===
v3896 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3904 y: j4052  <|@  <|@
f <@*|@fixed>@ <|@
tid v3896 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3893 
=== Succesors ===
trueSuccessor: v3894 
falseSuccessor: v3895 
=== Usages ===
=== Predecessor ===
j3904 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3893 #trueSuccessor: v3894 #falseSuccessor: v3895  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4541963835258890812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3899 
=== Usages ===
=== Predecessor ===
v3896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3899 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1410 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3900 
=== Usages ===
j3900 
=== Predecessor ===
v3894 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1410 arguments: v3512 i3994 i98 #next: j3900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3900 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3899 
=== Succesors ===
next: v3910 
=== Usages ===
j3909 
=== Predecessor ===
a3899 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3899 #next: v3910  <|@  <|@
f <@*|@fixed>@ <|@
tid v3910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3907 
=== Predecessor ===
j3900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571939569334802726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3905 
=== Usages ===
=== Predecessor ===
v3896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4314 
value: j4052 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3902 
=== Usages ===
=== Predecessor ===
v3895 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4314 value: j4052 stateAfter: - lastLocationAccess: - #next: v3902  <|@  <|@
f <@~|@floating>@ <|@
tid v4375 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3903 
index: - 
=== Succesors ===
=== Usages ===
v3902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4375 
=== Succesors ===
next: v3908 
=== Usages ===
=== Predecessor ===
v3905 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4375 #next: v3908  <|@  <|@
f <@*|@fixed>@ <|@
tid v3908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3907 
=== Predecessor ===
v3902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3909 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3907 
values: j3903 j3900 
=== Succesors ===
=== Usages ===
v4318 v4317 a2795 v4376 v4377 v4378 v4379 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3907 values: j3903 j3900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3908 v3910 
=== Succesors ===
next: a2795 
=== Usages ===
j3909 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3908 v3910 #next: a2795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2795 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3909 
=== Succesors ===
next: j3919 
=== Usages ===
a2801 
=== Predecessor ===
v3907 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3909 #next: j3919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3919 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3920 
=== Usages ===
v3920 
=== Predecessor ===
a2795 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3920  <|@  <|@
f <@~|@floating>@ <|@
tid v4317 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3920 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4317 
value: j3919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3923 
=== Usages ===
=== Predecessor ===
j3919 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4317 value: j3919 stateAfter: - lastLocationAccess: - #next: v3923  <|@  <|@
f <@~|@floating>@ <|@
tid v4318 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3923 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4318 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3927 
=== Usages ===
=== Predecessor ===
v3920 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4318 value: v3997 stateAfter: - lastLocationAccess: - #next: v3927  <|@  <|@
f <@~|@floating>@ <|@
tid v4376 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4376 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i4103 
=== Usages ===
=== Predecessor ===
v3923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4376 value: j3557 stateAfter: - lastLocationAccess: - #next: i4103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4103 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4274 
=== Succesors ===
next: v3929 
=== Usages ===
v3929 
=== Predecessor ===
v3927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4274 #next: v3929  <|@  <|@
f <@~|@floating>@ <|@
tid v4377 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3929 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4377 
value: i4103 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3931 
=== Usages ===
=== Predecessor ===
i4103 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4377 value: i4103 stateAfter: - lastLocationAccess: - #next: v3931  <|@  <|@
f <@~|@floating>@ <|@
tid v4378 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2798 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v3933 v3931 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3931 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4378 
value: a2798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3933 
=== Usages ===
=== Predecessor ===
v3929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4378 value: a2798 stateAfter: - lastLocationAccess: - #next: v3933  <|@  <|@
f <@~|@floating>@ <|@
tid v4379 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4379 
value: a2798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2801 
=== Usages ===
=== Predecessor ===
v3931 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4379 value: a2798 stateAfter: - lastLocationAccess: - #next: a2801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2801 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2795 
=== Succesors ===
next: v507 
=== Usages ===
a484 
=== Predecessor ===
v3933 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2795 #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
a2801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" "B47" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v481 
values: a2763 a2773 a2801 
=== Succesors ===
=== Usages ===
?1460 ?29 ?187 ?1521 v4258 ?1110 v4214 v4213 ?1382 ?1123 ?3292 ?1138 ?1160 ?350 ?113 ?172 ?139 ?287 ?514 ?617 ?1356 v4262 v4320 ?1494 ?925 ?3291 ?973 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: a2763 a2773 a2801  <|@  <|@
f <@~|@floating>@ <|@
tid a1186 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v481 
values: a1185 a1413 a1414 
=== Succesors ===
=== Usages ===
?973 ?29 v4212 ?187 ?1494 ?139 v4243 ?1138 ?1382 ?804 ?3292 v4225 v4249 ?113 v4238 ?172 ?1521 ?1460 v4211 ?514 ?617 ?1356 v4237 v4319 ?925 ?1110 ?1123 v4242 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: a1185 a1413 a1414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v498 v507 
=== Succesors ===
next: v2764 
=== Usages ===
a484 a1186 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v498 v507 #next: v2764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2764 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v4104 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v4104  <|@  <|@
f <@~|@floating>@ <|@
tid v4319 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v4104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4319 
=== Succesors ===
next: v4105 
=== Usages ===
v4060 v4059 
=== Predecessor ===
v2764 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4319 #next: v4105  <|@  <|@
f <@~|@floating>@ <|@
tid v4320 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
v4105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4320 
=== Succesors ===
next: v27 
=== Usages ===
v4062 v4061 
=== Predecessor ===
v4104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4320 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v4061 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4105 
y: v4019 
=== Succesors ===
=== Usages ===
v2306 v324 v2368 v2531 v1173 v1346 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4105 y: v4019  <|@  <|@
f <@~|@floating>@ <|@
tid v4062 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4105 
y: v3997 
=== Succesors ===
=== Usages ===
v1404 v2405 v152 v934 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4105 y: v3997  <|@  <|@
f <@~|@floating>@ <|@
tid v4059 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4104 
y: v4019 
=== Succesors ===
=== Usages ===
v1116 v2466 v2316 v299 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4104 y: v4019  <|@  <|@
f <@~|@floating>@ <|@
tid v4060 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4104 
y: v3997 
=== Succesors ===
=== Usages ===
v1390 v526 v126 v2381 v2329 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4104 y: v3997  <|@  <|@
f <@~|@floating>@ <|@
tid v4262 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
v1941 v1960 v1963 v1993 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4258 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
i4188 i4202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4238 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4237 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4225 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
i4138 i4167 i4180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
tid ?187 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
?285 ?230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4213 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
i4115 i4118 i4130 i4143 i4157 i4160 i4190 v1942 v1961 v1964 i4200 v1991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4214 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
a4113 a4116 a4128 a4141 a4155 a4158 a4186 a4197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
?274 ?195 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4211 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
i4108 i4121 i4124 i4127 i4140 i4146 i4149 i4169 i4181 v1872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
v3313 v4107 i4110 v4381 i4120 v4129 i4142 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4212 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
a4106 a4119 a4122 a4125 a4136 a4144 a4147 a4165 a4178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
rawvalue: meta{HotSpotMethod<Object.equals(Object)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.equals(Object)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4065 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4066 v4071 v4075 v4078 v4081 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v4105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B201" "B220" "B205" "B209" "B217" "B227" 
    successors "B59" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611999807685976702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.604426603016166
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 6
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: v126 
=== Usages ===
v35 v46 v64 v75 v83 v109 v1147 v1150 v1219 v1301 v1322 v2570 v2470 v2560 v2555 v2550 v2475 v2480 v2290 v2530 v2490 v2305 v2505 v2315 v2525 v2485 v2545 v2347 v2352 v2495 v2362 v2367 v2515 v2450 v2430 v2465 v2440 v2455 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 0.6218287856696522
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v119 #falseSuccessor: v125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4106 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: v4107 
=== Usages ===
v4321 v4216 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: v4107  <|@  <|@
f <@~|@floating>@ <|@
tid v4321 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4106 
=== Succesors ===
=== Usages ===
v4107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4321 
=== Succesors ===
next: i4108 
=== Usages ===
v4066 v4063 v4064 
=== Predecessor ===
a4106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4321 #next: i4108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v208 
=== Usages ===
?274 v169 ?195 
=== Predecessor ===
v4107 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v4063 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4107 
y: v3988 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4107 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid v4216 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4106 
=== Succesors ===
=== Usages ===
a4109 i4111 a4112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4106  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9202979333724495
=== Inputs ===
condition: v4063 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v207 
=== Usages ===
=== Predecessor ===
i4108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4063 #trueSuccessor: v201 #falseSuccessor: v207  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608192491734893793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4109 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4216 
=== Succesors ===
next: i4110 
=== Usages ===
v4217 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4216 #next: i4110  <|@  <|@
f <@~|@floating>@ <|@
tid v4217 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4109 
=== Succesors ===
=== Usages ===
i4110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4217 
=== Succesors ===
next: v202 
=== Usages ===
i197 
=== Predecessor ===
a4109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4217 #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
i4110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592304574260960305
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v4064 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4107 
y: v3986 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4107 y: v3986  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9844587133450589
=== Inputs ===
condition: v4064 
=== Succesors ===
trueSuccessor: v213 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4064 #trueSuccessor: v213 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592185836443809187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4111 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4216 
=== Succesors ===
next: v214 
=== Usages ===
i197 
=== Predecessor ===
v213 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4216 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
i4111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2291 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2291  <|@  <|@
f <@~|@floating>@ <|@
tid v4066 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4107 
y: v4065 
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4107 y: v4065  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4066 
=== Succesors ===
trueSuccessor: v2287 
falseSuccessor: v2290 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4066 #trueSuccessor: v2287 #falseSuccessor: v2290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4112 
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4216 
=== Succesors ===
next: v4381 
=== Usages ===
a1624 v4381 
=== Predecessor ===
v2287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4216 #next: v4381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
object: a4112 
=== Succesors ===
next: i271 
=== Usages ===
=== Predecessor ===
a4112 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?29 object: a4112 #next: i271  <|@  <|@
f <@~|@floating>@ <|@
tid a1624 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4112 
=== Succesors ===
=== Usages ===
v1628 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4112  <|@  <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4911283b
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1624 
=== Succesors ===
=== Usages ===
i271 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1624  <|@  <|@
tid ?274 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?172 
values: - i4108 
=== Succesors ===
=== Usages ===
?3287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - i4108  <|@  <|@
tid ?3287 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ReversedList.size()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 49
stackSize: 0
=== Inputs ===
outerFrameState: ?274 
values: - 
=== Succesors ===
=== Usages ===
i271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?274 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i271 <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1628 
stateDuring: ?3287 
=== Succesors ===
next: v223 
=== Usages ===
i197 
=== Predecessor ===
v4381 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1628 stateDuring: ?3287 #next: v223  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
i271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v194 
values: i4110 i4111 i271 
=== Succesors ===
=== Usages ===
?195 v169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v194 values: i4110 i4111 i271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v202 v214 v223 
=== Succesors ===
next: v1145 
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v202 v214 v223 #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i4108 
=== Succesors ===
=== Usages ===
i170 v1145 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i197 y: i4108  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v169 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1525 i1140 i1504 i1503 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v169 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stamp: void
trueSuccessorProbability: 0.2735680066652781
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v1146 
falseSuccessor: v1144 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v1146 #falseSuccessor: v1144  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B80" 
    xhandlers
    flags 
    probability 4600227602964532941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
v1146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606879592346181089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1404 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1404  <|@  <|@
tid ?195 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 2
=== Inputs ===
outerFrameState: ?172 
values: - i4108 i197 
=== Succesors ===
=== Usages ===
v3355 v4114 i4117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - i4108 i197  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.6844248193600183
=== Inputs ===
condition: v4062 
=== Succesors ===
trueSuccessor: v1402 
falseSuccessor: v1403 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4062 #trueSuccessor: v1402 #falseSuccessor: v1403  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604132708327177853
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4113 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: v4114 
=== Usages ===
a1597 v4322 
=== Predecessor ===
v1402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: v4114  <|@  <|@
f <@~|@floating>@ <|@
tid v4322 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4113 
=== Succesors ===
=== Usages ===
v4114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?195 
guard: - 
address: v4322 
=== Succesors ===
next: i4115 
=== Usages ===
v4067 
=== Predecessor ===
a4113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?195 guard: - address: v4322 #next: i4115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4115 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v1515 
=== Usages ===
i1498 i1496 
=== Predecessor ===
v4114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid v4067 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4114 
y: v3988 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4114 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1597 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4113 
=== Succesors ===
=== Usages ===
a1501 a1502 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4113  <|@  <|@
f <@*|@fixed>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9202979333724495
=== Inputs ===
condition: v4067 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1514 
=== Usages ===
=== Predecessor ===
i4115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4067 #trueSuccessor: v1509 #falseSuccessor: v1514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603657884159349860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1491  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
v1509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587758007721042323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1495 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1495  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2306 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2306  <|@  <|@
f <@*|@fixed>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v2302 
falseSuccessor: v2305 
=== Usages ===
=== Predecessor ===
v1403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v2302 #falseSuccessor: v2305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4116 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: i4117 
=== Usages ===
v4215 
=== Predecessor ===
v2302 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: i4117  <|@  <|@
f <@~|@floating>@ <|@
tid v4215 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4116 
=== Succesors ===
=== Usages ===
i4117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?195 
guard: - 
address: v4215 
=== Succesors ===
next: i4118 
=== Usages ===
v1539 
=== Predecessor ===
a4116 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?195 guard: - address: v4215 #next: i4118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v1530 
=== Usages ===
v1539 
=== Predecessor ===
i4117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v1530  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4117 
y: i4118 
=== Succesors ===
=== Usages ===
i1538 v1530 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4117 y: i4118  <|@  <|@
f <@~|@floating>@ <|@
tid i1538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1539 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1125 i1526 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1539 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stamp: void
trueSuccessorProbability: 0.051783461406124554
=== Inputs ===
condition: v1539 
=== Succesors ===
trueSuccessor: v1537 
falseSuccessor: v1529 
=== Usages ===
=== Predecessor ===
i4118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1539 #trueSuccessor: v1537 #falseSuccessor: v1529  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B117" 
    xhandlers
    flags 
    probability 4580209002611148875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1540  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598880901630742082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
v1529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3355 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3355  <|@  <|@
f <@~|@floating>@ <|@
tid i3357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -409395
stableDimension: 0
stamp: i32 [-409395] ⇊00000000fff9c0cd ⇈00000000fff9c0cd
stampKind: i32
value: int[-409395|0xfffffffffff9c0cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?195 
actionAndReason: i3357 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?195 actionAndReason: i3357 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3316 
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3316  <|@  <|@
f <@~|@floating>@ <|@
tid i3317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -415027
stableDimension: 0
stamp: i32 [-415027] ⇊00000000fff9aacd ⇈00000000fff9aacd
stampKind: i32
value: int[-415027|0xfffffffffff9aacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3308 
=== Predecessor ===
v2290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" "B241" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2316 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2316  <|@  <|@
f <@*|@fixed>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4059 
=== Succesors ===
trueSuccessor: v2312 
falseSuccessor: v2315 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4059 #trueSuccessor: v2312 #falseSuccessor: v2315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4119 
=== Usages ===
=== Predecessor ===
v2316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4120 
=== Usages ===
v4218 
=== Predecessor ===
v2312 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4120  <|@  <|@
f <@~|@floating>@ <|@
tid v4218 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4119 
=== Succesors ===
=== Usages ===
i4120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4218 
=== Succesors ===
next: i4121 
=== Usages ===
v176 
=== Predecessor ===
a4119 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4218 #next: i4121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v38 
=== Usages ===
v176 
=== Predecessor ===
i4120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4120 
y: i4121 
=== Succesors ===
=== Usages ===
i177 v38 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4120 y: i4121  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v176 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1525 i1140 i1504 i1503 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v176 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stamp: void
trueSuccessorProbability: 0.2735680066652781
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v1132 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
i4121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v1132 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4597142189795094960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
v1132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B66" 
    successors "B81" 
    xhandlers
    flags 
    probability 4603446753444729810
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1140 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1133 
values: i177 i170 
=== Succesors ===
=== Usages ===
?113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1133 values: i177 i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1134 v1135 
=== Succesors ===
next: v35 
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1134 v1135 #next: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B87" 
    xhandlers
    flags 
    probability 4603446753444729810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1116 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1116  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1140 
=== Succesors ===
=== Usages ===
v3335 i4123 v4126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1140  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.5994645247657295
=== Inputs ===
condition: v4059 
=== Succesors ===
trueSuccessor: v1114 
falseSuccessor: v1115 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4059 #trueSuccessor: v1114 #falseSuccessor: v1115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    probability 4599991815045550444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4122 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4123 
=== Usages ===
v4220 
=== Predecessor ===
v1114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4123  <|@  <|@
f <@~|@floating>@ <|@
tid v4220 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4122 
=== Succesors ===
=== Usages ===
i4123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?113 
guard: - 
address: v4220 
=== Succesors ===
next: i4124 
=== Usages ===
v1348 
=== Predecessor ===
a4122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?113 guard: - address: v4220 #next: i4124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v1342 
=== Usages ===
v1348 
=== Predecessor ===
i4123 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4123 
y: i4124 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4123 y: i4124  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8791164658634538
=== Inputs ===
condition: v1348 
=== Succesors ===
trueSuccessor: v1340 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
i4124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1348 #trueSuccessor: v1340 #falseSuccessor: v1341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4599227807522088194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.5443886097152428
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v1344 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v1344 #falseSuccessor: v1345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B136" 
    xhandlers
    flags 
    probability 4595217470780851132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1349  <|@  <|@
f <@*|@fixed>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B138" 
    xhandlers
    flags 
    probability 4594230945008584264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v1345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1343 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2329 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2329  <|@  <|@
f <@*|@fixed>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v2326 
falseSuccessor: v2328 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v2326 #falseSuccessor: v2328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4125 
=== Usages ===
=== Predecessor ===
v2329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: v4126 
=== Usages ===
a1672 v4324 
=== Predecessor ===
v2326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: v4126  <|@  <|@
f <@~|@floating>@ <|@
tid v4324 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4125 
=== Succesors ===
=== Usages ===
v4126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?113 
guard: - 
address: v4324 
=== Succesors ===
next: i4127 
=== Usages ===
v4069 
=== Predecessor ===
a4125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?113 guard: - address: v4324 #next: i4127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v1375 
=== Usages ===
i1360 i1358 
=== Predecessor ===
v4126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid v4069 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4126 
y: v3988 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4126 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1672 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4125 
=== Succesors ===
=== Usages ===
a1363 a1364 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.9202979333724494
=== Inputs ===
condition: v4069 
=== Succesors ===
trueSuccessor: v1369 
falseSuccessor: v1374 
=== Usages ===
=== Predecessor ===
i4127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4069 #trueSuccessor: v1369 #falseSuccessor: v1374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B127" 
    xhandlers
    flags 
    probability 4596940622275050737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1353 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1353  <|@  <|@
f <@*|@fixed>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
v1369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B129" 
    xhandlers
    flags 
    probability 4581042368272497659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1357  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3335 
=== Usages ===
=== Predecessor ===
v2329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3335  <|@  <|@
f <@~|@floating>@ <|@
tid i3339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -426803
stableDimension: 0
stamp: i32 [-426803] ⇊00000000fff97ccd ⇈00000000fff97ccd
stampKind: i32
value: int[-426803|0xfffffffffff97ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?113 
actionAndReason: i3339 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?113 actionAndReason: i3339 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B114" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603468868388755523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.6844248193600183
=== Inputs ===
condition: v4062 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4062 #trueSuccessor: v145 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4600917829224813035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4128 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: v4129 
=== Usages ===
a1644 v4323 
=== Predecessor ===
v145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: v4129  <|@  <|@
f <@~|@floating>@ <|@
tid v4323 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4128 
=== Succesors ===
=== Usages ===
v4129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4323 
=== Succesors ===
next: i4130 
=== Usages ===
v4068 
=== Predecessor ===
a4128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4323 #next: i4130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v243 
=== Usages ===
i1496 i1498 
=== Predecessor ===
v4129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v4068 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4129 
y: v3988 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4129 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1644 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4128 
=== Succesors ===
=== Usages ===
a1502 a1501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4128  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9202979333724495
=== Inputs ===
condition: v4068 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i4130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4068 #trueSuccessor: v236 #falseSuccessor: v242  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4600340291367836747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B69" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606992219884315274
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1498 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1489 
values: i4130 i4115 
=== Succesors ===
=== Usages ===
i1497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1489 values: i4130 i4115  <|@  <|@
f <@~|@floating>@ <|@
tid i1503 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1489 
values: i177 i170 
=== Succesors ===
=== Usages ===
?1138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1489 values: i177 i170  <|@  <|@
f <@~|@floating>@ <|@
tid a1502 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1489 
values: a1644 a1597 
=== Succesors ===
=== Usages ===
v4221 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1489 values: a1644 a1597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1490 v1491 
=== Succesors ===
next: a4131 
=== Usages ===
i1498 i1503 a1502 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1490 v1491 #next: a4131  <|@  <|@
f <@~|@floating>@ <|@
tid v4221 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1502 
index: - 
=== Succesors ===
=== Usages ===
a4131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4221 
=== Succesors ===
next: i4132 
=== Usages ===
v4222 
=== Predecessor ===
v1489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4221 #next: i4132  <|@  <|@
tid ?1138 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1503 
=== Succesors ===
=== Usages ===
i4132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1503  <|@  <|@
f <@~|@floating>@ <|@
tid v4222 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4131 
=== Succesors ===
=== Usages ===
i4132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1138 
guard: - 
address: v4222 
=== Succesors ===
next: v237 
=== Usages ===
i232 
=== Predecessor ===
a4131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1138 guard: - address: v4222 #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
i4132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4584781123891604733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1493  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B70" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590773165433694024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1496 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1492 
values: i4130 i4115 
=== Succesors ===
=== Usages ===
?285 i1497 i1497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1492 values: i4130 i4115  <|@  <|@
f <@~|@floating>@ <|@
tid a1501 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1492 
values: a1644 a1597 
=== Succesors ===
=== Usages ===
v4325 v4223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1492 values: a1644 a1597  <|@  <|@
f <@~|@floating>@ <|@
tid i1504 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1492 
values: i177 i170 
=== Succesors ===
=== Usages ===
?1494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1492 values: i177 i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1493 v1495 
=== Succesors ===
next: v4133 
=== Usages ===
i1496 a1501 i1504 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1493 v1495 #next: v4133  <|@  <|@
f <@~|@floating>@ <|@
tid v4325 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1501 
index: - 
=== Succesors ===
=== Usages ===
v4133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4325 
=== Succesors ===
next: v252 
=== Usages ===
v4071 v4070 
=== Predecessor ===
v1492 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4325 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v4070 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4133 
y: v3986 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4133 y: v3986  <|@  <|@
f <@~|@floating>@ <|@
tid v4223 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1501 
index: - 
=== Succesors ===
=== Usages ===
i4134 a4135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1501 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9844587133450589
=== Inputs ===
condition: v4070 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
v4133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4070 #trueSuccessor: v248 #falseSuccessor: v251  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590678227680113359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4134 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4223 
=== Succesors ===
next: v249 
=== Usages ===
i232 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4223 #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
i4134 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B112" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2348 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2348  <|@  <|@
f <@~|@floating>@ <|@
tid v4071 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4133 
y: v4065 
=== Succesors ===
=== Usages ===
v2348 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4133 y: v4065  <|@  <|@
f <@*|@fixed>@ <|@
tid v2348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4071 
=== Succesors ===
trueSuccessor: v2344 
falseSuccessor: v2347 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4071 #trueSuccessor: v2344 #falseSuccessor: v2347  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4135 
=== Usages ===
=== Predecessor ===
v2348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4223 
=== Succesors ===
next: v2353 
=== Usages ===
a1687 v1688 
=== Predecessor ===
v2344 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4223 #next: v2353  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
value: a4135 
=== Succesors ===
=== Usages ===
v2353 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4135  <|@  <|@
f <@*|@fixed>@ <|@
tid v2353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1688 
=== Succesors ===
trueSuccessor: v2352 
falseSuccessor: v2349 
=== Usages ===
=== Predecessor ===
a4135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1688 #trueSuccessor: v2352 #falseSuccessor: v2349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3480 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3480  <|@  <|@
f <@~|@floating>@ <|@
tid i3481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -432395
stableDimension: 0
stamp: i32 [-432395] ⇊00000000fff966f5 ⇈00000000fff966f5
stampKind: i32
value: int[-432395|0xfffffffffff966f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3474 
=== Predecessor ===
v2352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i282 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i282  <|@  <|@
f <@~|@floating>@ <|@
tid a1687 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4135 
=== Succesors ===
=== Usages ===
v1691 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4135  <|@  <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@403447a5
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1687 
=== Succesors ===
=== Usages ===
i282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1687  <|@  <|@
tid ?285 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?187 
values: - i1496 
=== Succesors ===
=== Usages ===
?3288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?187 values: - i1496  <|@  <|@
tid ?3288 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ReversedList.size()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 49
stackSize: 0
=== Inputs ===
outerFrameState: ?285 
values: - 
=== Succesors ===
=== Usages ===
i282 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?285 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1691 
stateDuring: ?3288 
=== Succesors ===
next: v258 
=== Usages ===
i232 
=== Predecessor ===
v2349 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1691 stateDuring: ?3288 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
i282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B95" "B98" "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324410
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v229 
values: i4132 i4134 i282 
=== Succesors ===
=== Usages ===
?230 v184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v229 values: i4132 i4134 i282  <|@  <|@
f <@~|@floating>@ <|@
tid i1497 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v229 
values: i1498 i1496 i1496 
=== Succesors ===
=== Usages ===
v184 ?230 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v229 values: i1498 i1496 i1496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v237 v249 v258 
=== Succesors ===
next: v1130 
=== Usages ===
i232 i1497 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v237 v249 v258 #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i1497 
=== Succesors ===
=== Usages ===
i185 v1130 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i1497  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v184 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1386 i1125 i1470 i1469 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v184 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stamp: void
trueSuccessorProbability: 0.051783461406124554
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1129 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v1131 #falseSuccessor: v1129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B117" 
    xhandlers
    flags 
    probability 4588098681682314043
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1120  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607221057745120672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1390 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1390  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7218022376776535
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1389 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v1388 #falseSuccessor: v1389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4136 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4137 
=== Usages ===
a1694 v4326 v4224 
=== Predecessor ===
v1388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4137  <|@  <|@
tid ?230 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 2
=== Inputs ===
outerFrameState: ?187 
values: - i1497 i232 
=== Succesors ===
=== Usages ===
v3365 i4137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?187 values: - i1497 i232  <|@  <|@
f <@~|@floating>@ <|@
tid v4224 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4136 
=== Succesors ===
=== Usages ===
i4137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?230 
guard: - 
address: v4224 
=== Succesors ===
next: i4138 
=== Usages ===
v1479 
=== Predecessor ===
a4136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?230 guard: - address: v4224 #next: i4138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4225 
=== Succesors ===
next: v2363 
=== Usages ===
v1479 
=== Predecessor ===
i4137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4225 #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4137 
y: i4138 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4137 y: i4138  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1479 
=== Succesors ===
trueSuccessor: v2359 
falseSuccessor: v2362 
=== Usages ===
=== Predecessor ===
i4138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1479 #trueSuccessor: v2359 #falseSuccessor: v2362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4139 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4139  <|@  <|@
f <@~|@floating>@ <|@
tid v4326 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4136 
=== Succesors ===
=== Usages ===
v4139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4326 
=== Succesors ===
next: i4140 
=== Usages ===
v4072 
=== Predecessor ===
v2359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4326 #next: i4140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:357) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v1487 
=== Usages ===
i1488 i1465 i1464 
=== Predecessor ===
v4139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid i1488 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i4140 
y: i98 
=== Succesors ===
=== Usages ===
i1472 i1471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4140 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v4072 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4139 
y: v3988 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4139 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1694 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4136 
=== Succesors ===
=== Usages ===
a1467 a1468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4136  <|@  <|@
f <@*|@fixed>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v4072 
=== Succesors ===
trueSuccessor: v1481 
falseSuccessor: v1486 
=== Usages ===
=== Predecessor ===
i4140 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4072 #trueSuccessor: v1481 #falseSuccessor: v1486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604276656686636359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1457 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1457  <|@  <|@
f <@*|@fixed>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587452961675709276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1461 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1461  <|@  <|@
f <@*|@fixed>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
v1486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3365 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3365  <|@  <|@
f <@~|@floating>@ <|@
tid i3367 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -435987
stableDimension: 0
stamp: i32 [-435987] ⇊00000000fff958ed ⇈00000000fff958ed
stampKind: i32
value: int[-435987|0xfffffffffff958ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?230 
actionAndReason: i3367 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2362 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?230 actionAndReason: i3367 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598726182345091718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1383 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1383  <|@  <|@
f <@*|@fixed>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3475 
=== Usages ===
=== Predecessor ===
v2348 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3475  <|@  <|@
f <@~|@floating>@ <|@
tid i3476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -431155
stableDimension: 0
stamp: i32 [-431155] ⇊00000000fff96bcd ⇈00000000fff96bcd
stampKind: i32
value: int[-431155|0xfffffffffff96bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3474 
=== Predecessor ===
v2347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3477 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-432395 - -431155] ⇊00000000fff962c5 ⇈00000000fff96ffd
valueDescription: i32
=== Inputs ===
merge: v3474 
values: i3476 i3481 
=== Succesors ===
=== Usages ===
v3479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3474 values: i3476 i3481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3475 v3480 
=== Succesors ===
next: v3479 
=== Usages ===
i3477 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3475 v3480 #next: v3479  <|@  <|@
tid ?1494 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1504 
=== Succesors ===
=== Usages ===
v3479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1504  <|@  <|@
f <@*|@fixed>@ <|@
tid v3479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1494 
actionAndReason: i3477 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3474 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1494 actionAndReason: i3477 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B115" "B240" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2368 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2368  <|@  <|@
f <@*|@fixed>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v2364 
falseSuccessor: v2367 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v2364 #falseSuccessor: v2367  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B152" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4141 
=== Usages ===
=== Predecessor ===
v2368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: i4142 
=== Usages ===
v4219 
=== Predecessor ===
v2364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: i4142  <|@  <|@
f <@~|@floating>@ <|@
tid v4219 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4141 
=== Succesors ===
=== Usages ===
i4142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4219 
=== Succesors ===
next: i4143 
=== Usages ===
v1523 
=== Predecessor ===
a4141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4219 #next: i4143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v49 
=== Usages ===
v1523 
=== Predecessor ===
i4142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4142 
y: i4143 
=== Succesors ===
=== Usages ===
i192 v49 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4142 y: i4143  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1523 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1526 i1125 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1523 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stamp: void
trueSuccessorProbability: 0.051783461406124554
=== Inputs ===
condition: v1523 
=== Succesors ===
trueSuccessor: v1117 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
i4143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1523 #trueSuccessor: v1117 #falseSuccessor: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576690041658903912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1117 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B104" "B73" 
    successors "B118" 
    xhandlers
    flags 
    probability 4590463348771837277
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1125 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1118 
values: i192 i185 i1538 
=== Succesors ===
=== Usages ===
?139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1118 values: i192 i185 i1538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1119 v1120 v1540 
=== Succesors ===
next: v46 
=== Usages ===
i1125 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1119 v1120 v1540 #next: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B124" 
    xhandlers
    flags 
    probability 4590463348771837277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v299  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1125 
=== Succesors ===
=== Usages ===
v3345 i4145 v4148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.5994645247657295
=== Inputs ===
condition: v4059 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4059 #trueSuccessor: v293 #falseSuccessor: v298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    probability 4587113324401426233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4144 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4145 
=== Usages ===
v4226 
=== Predecessor ===
v293 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4145  <|@  <|@
f <@~|@floating>@ <|@
tid v4226 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4144 
=== Succesors ===
=== Usages ===
i4145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v4226 
=== Succesors ===
next: i4146 
=== Usages ===
v1330 
=== Predecessor ===
a4144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v4226 #next: i4146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v1169 
=== Usages ===
v1330 
=== Predecessor ===
i4145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4145 
y: i4146 
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4145 y: i4146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8791164658634538
=== Inputs ===
condition: v1330 
=== Succesors ===
trueSuccessor: v1167 
falseSuccessor: v1168 
=== Usages ===
=== Predecessor ===
i4146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1330 #trueSuccessor: v1167 #falseSuccessor: v1168  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.5443886097152428
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v1171 
falseSuccessor: v1172 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v1171 #falseSuccessor: v1172  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B136" 
    xhandlers
    flags 
    probability 4582311893304577533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1157  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v1171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B138" 
    xhandlers
    flags 
    probability 4581226669887666333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v1173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1161  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v1172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4573373567577153376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1170 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B151" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2381 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2381  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v2378 
falseSuccessor: v2380 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v2378 #falseSuccessor: v2380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B128" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4147 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: v4148 
=== Usages ===
a1722 v4327 
=== Predecessor ===
v2378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: v4148  <|@  <|@
f <@~|@floating>@ <|@
tid v4327 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4147 
=== Succesors ===
=== Usages ===
v4148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v4327 
=== Succesors ===
next: i4149 
=== Usages ===
v4073 
=== Predecessor ===
a4147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v4327 #next: i4149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v380 
=== Usages ===
i1358 i1360 
=== Predecessor ===
v4148 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v4073 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4148 
y: v3988 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4148 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1722 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4147 
=== Succesors ===
=== Usages ===
a1364 a1363 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4147  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.9202979333724494
=== Inputs ===
condition: v4073 
=== Succesors ===
trueSuccessor: v373 
falseSuccessor: v379 
=== Usages ===
=== Predecessor ===
i4149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4073 #trueSuccessor: v373 #falseSuccessor: v379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B127" 
    xhandlers
    flags 
    probability 4584207438666858323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1352  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B89" 
    successors "B133" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1360 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1351 
values: i4149 i4127 
=== Succesors ===
=== Usages ===
i1359 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1351 values: i4149 i4127  <|@  <|@
f <@~|@floating>@ <|@
tid a1364 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1351 
values: a1722 a1672 
=== Succesors ===
=== Usages ===
v4227 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1351 values: a1722 a1672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1352 v1353 
=== Succesors ===
next: a4150 
=== Usages ===
i1360 a1364 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1352 v1353 #next: a4150  <|@  <|@
f <@~|@floating>@ <|@
tid v4227 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1364 
index: - 
=== Succesors ===
=== Usages ===
a4150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1364 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4227 
=== Succesors ===
next: i4151 
=== Usages ===
v4228 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4227 #next: i4151  <|@  <|@
tid ?1110 <|@
d <@d|@=== Debug Properties ===
bci: 93
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
i4151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4228 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4150 
=== Succesors ===
=== Usages ===
i4151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1110 
guard: - 
address: v4228 
=== Succesors ===
next: v374 
=== Usages ===
i369 
=== Predecessor ===
a4150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1110 guard: - address: v4228 #next: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
i4151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B129" 
    xhandlers
    flags 
    probability 4568070330086243707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B90" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4581782856717489066
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1358 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1354 
values: i4149 i4127 
=== Succesors ===
=== Usages ===
?446 i1359 i1359 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1354 values: i4149 i4127  <|@  <|@
f <@~|@floating>@ <|@
tid a1363 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1354 
values: a1722 a1672 
=== Succesors ===
=== Usages ===
v4328 v4229 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1354 values: a1722 a1672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1355 v1357 
=== Succesors ===
next: v4152 
=== Usages ===
i1358 a1363 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1355 v1357 #next: v4152  <|@  <|@
f <@~|@floating>@ <|@
tid v4328 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1363 
index: - 
=== Succesors ===
=== Usages ===
v4152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4328 
=== Succesors ===
next: v389 
=== Usages ===
v4075 v4074 
=== Predecessor ===
v1354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4328 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v4074 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4152 
y: v3986 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4152 y: v3986  <|@  <|@
f <@~|@floating>@ <|@
tid v4229 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1363 
index: - 
=== Succesors ===
=== Usages ===
i4153 a4154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1363 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.984458713345058
=== Inputs ===
condition: v4074 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v4152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4074 #trueSuccessor: v385 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581687656463207250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4153 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4229 
=== Succesors ===
next: v386 
=== Usages ===
i369 
=== Predecessor ===
v385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4229 #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
i4153 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2393 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2393  <|@  <|@
f <@~|@floating>@ <|@
tid v4075 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4152 
y: v4065 
=== Succesors ===
=== Usages ===
v2393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4152 y: v4065  <|@  <|@
tid ?1356 <|@
d <@d|@=== Debug Properties ===
bci: 93
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
v3433 v4384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4075 
=== Succesors ===
trueSuccessor: v2390 
falseSuccessor: v2392 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4075 #trueSuccessor: v2390 #falseSuccessor: v2392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4154 
=== Usages ===
=== Predecessor ===
v2393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4229 
=== Succesors ===
next: v4384 
=== Usages ===
a1737 v4384 
=== Predecessor ===
v2390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4229 #next: v4384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1356 
object: a4154 
=== Succesors ===
next: i443 
=== Usages ===
=== Predecessor ===
a4154 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1356 object: a4154 #next: i443  <|@  <|@
f <@~|@floating>@ <|@
tid a1737 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4154 
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4154  <|@  <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6f5a8c4
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1737 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1737  <|@  <|@
tid ?350 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a484 - - 
=== Succesors ===
=== Usages ===
?446 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a484 - -  <|@  <|@
tid ?446 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?350 
values: - i1358 
=== Succesors ===
=== Usages ===
?3293 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?350 values: - i1358  <|@  <|@
tid ?3293 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ReversedList.size()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 49
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: - 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i443 <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1741 
stateDuring: ?3293 
=== Succesors ===
next: v395 
=== Usages ===
i369 
=== Predecessor ===
v4384 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1741 stateDuring: ?3293 #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
i443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" "B132" 
    successors "B134" "B149" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v366 
values: i4151 i4153 i443 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v366 values: i4151 i4153 i443  <|@  <|@
f <@~|@floating>@ <|@
tid i1359 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v366 
values: i1360 i1358 i1358 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v366 values: i1360 i1358 i1358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v374 v386 v395 
=== Succesors ===
next: v93 
=== Usages ===
i369 i1359 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v374 v386 v395 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i1359 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i369 y: i1359  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8791164658634538
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B137" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.5443886097152428
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v318 #falseSuccessor: v323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" 
    xhandlers
    flags 
    probability 4593765787855561339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B121" "B84" 
    successors 
    xhandlers
    flags 
    probability 4599411145939086332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1156 v1157 v1349 
=== Succesors ===
next: a4155 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1156 v1157 v1349 #next: a4155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: i4156 
=== Usages ===
v4230 
=== Predecessor ===
v1155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: i4156  <|@  <|@
tid ?287 <|@
d <@d|@=== Debug Properties ===
bci: 99
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a484 - - i13 
=== Succesors ===
=== Usages ===
i4156 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a484 - - i13  <|@  <|@
f <@~|@floating>@ <|@
tid v4230 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4155 
=== Succesors ===
=== Usages ===
i4156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?287 
guard: - 
address: v4230 
=== Succesors ===
next: i4157 
=== Usages ===
v354 
=== Predecessor ===
a4155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?287 guard: - address: v4230 #next: i4157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v1176 
=== Usages ===
v354 
=== Predecessor ===
i4156 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v1176  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4156 
y: i4157 
=== Succesors ===
=== Usages ===
i355 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4156 y: i4157  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v354 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1175 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v354 trueValue: i13 falseValue: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i1175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 108]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i355 
y: i98 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i355 y: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i1175 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i4157 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i1175 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B138" 
    xhandlers
    flags 
    probability 4592360376218162154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B122" "B85" 
    successors "B139" "B147" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1159 v1161 v1350 
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1159 v1161 v1350 #next: v2405  <|@  <|@
tid ?1160 <|@
d <@d|@=== Debug Properties ===
bci: 99
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a484 - - i13 
=== Succesors ===
=== Usages ===
v3419 v4159 i4162 v4383 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a484 - - i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4062 
=== Succesors ===
trueSuccessor: v2402 
falseSuccessor: v2404 
=== Usages ===
=== Predecessor ===
v1158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4062 #trueSuccessor: v2402 #falseSuccessor: v2404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4158 
=== Usages ===
=== Predecessor ===
v2405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: v4159 
=== Usages ===
v4329 v4231 
=== Predecessor ===
v2402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: v4159  <|@  <|@
f <@~|@floating>@ <|@
tid v4329 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4158 
=== Succesors ===
=== Usages ===
v4159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1160 
guard: - 
address: v4329 
=== Succesors ===
next: i4160 
=== Usages ===
v4078 v4076 v4077 
=== Predecessor ===
a4158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1160 guard: - address: v4329 #next: i4160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v415 
=== Usages ===
?457 v362 
=== Predecessor ===
v4159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v4076 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4159 
y: v3988 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4159 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid v4231 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4158 
=== Succesors ===
=== Usages ===
a4161 i4163 a4164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4158  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.9202979333724494
=== Inputs ===
condition: v4076 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i4160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4076 #trueSuccessor: v408 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B145" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4161 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4231 
=== Succesors ===
next: i4162 
=== Usages ===
v4232 
=== Predecessor ===
v408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4231 #next: i4162  <|@  <|@
f <@~|@floating>@ <|@
tid v4232 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4161 
=== Succesors ===
=== Usages ===
i4162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1160 
guard: - 
address: v4232 
=== Succesors ===
next: v409 
=== Usages ===
i404 
=== Predecessor ===
a4161 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1160 guard: - address: v4232 #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i4162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4581782856717489067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v4077 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4159 
y: v3986 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4159 y: v3986  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.984458713345058
=== Inputs ===
condition: v4077 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4077 #trueSuccessor: v420 #falseSuccessor: v423  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 4581687656463207251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4163 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4231 
=== Succesors ===
next: v421 
=== Usages ===
i404 
=== Predecessor ===
v420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4231 #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i4163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B146" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2417 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2417  <|@  <|@
f <@~|@floating>@ <|@
tid v4078 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4159 
y: v4065 
=== Succesors ===
=== Usages ===
v2417 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4159 y: v4065  <|@  <|@
f <@*|@fixed>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4078 
=== Succesors ===
trueSuccessor: v2414 
falseSuccessor: v2416 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4078 #trueSuccessor: v2414 #falseSuccessor: v2416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4164 
=== Usages ===
=== Predecessor ===
v2417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4164 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4231 
=== Succesors ===
next: v4383 
=== Usages ===
a1772 v4383 
=== Predecessor ===
v2414 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4231 #next: v4383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1160 
object: a4164 
=== Succesors ===
next: i454 
=== Usages ===
=== Predecessor ===
a4164 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1160 object: a4164 #next: i454  <|@  <|@
f <@~|@floating>@ <|@
tid a1772 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4164 
=== Succesors ===
=== Usages ===
v1776 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4164  <|@  <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@7d5293ff
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1772 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1772  <|@  <|@
tid ?365 <|@
d <@d|@=== Debug Properties ===
bci: 103
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
?457 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
tid ?457 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?365 
values: - i4160 
=== Succesors ===
=== Usages ===
?3294 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?365 values: - i4160  <|@  <|@
tid ?3294 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ReversedList.size()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 49
stackSize: 0
=== Inputs ===
outerFrameState: ?457 
values: - 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?457 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1776 
stateDuring: ?3294 
=== Succesors ===
next: v430 
=== Usages ===
i404 
=== Predecessor ===
v4383 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1776 stateDuring: ?3294 #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B142" "B144" 
    successors 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v401 
values: i4162 i4163 i454 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v401 values: i4162 i4163 i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v409 v421 v430 
=== Succesors ===
next: v110 
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v409 v421 v430 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i4160 
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i404 y: i4160  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v362 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v362 trueValue: i13 falseValue: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 108]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i363 
y: i98 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i363 y: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i99 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i99 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3426 
=== Usages ===
=== Predecessor ===
v2417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3426  <|@  <|@
f <@~|@floating>@ <|@
tid i3427 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -452915
stableDimension: 0
stamp: i32 [-452915] ⇊00000000fff916cd ⇈00000000fff916cd
stampKind: i32
value: int[-452915|0xfffffffffff916cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3414 
=== Predecessor ===
v2416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3420 
=== Usages ===
=== Predecessor ===
v2405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3420  <|@  <|@
f <@~|@floating>@ <|@
tid i3421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -448563
stableDimension: 0
stamp: i32 [-448563] ⇊00000000fff927cd ⇈00000000fff927cd
stampKind: i32
value: int[-448563|0xfffffffffff927cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3414 
=== Predecessor ===
v2404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3417 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-454155 - -448563] ⇊00000000fff900c5 ⇈00000000fff93ffd
valueDescription: i32
=== Inputs ===
merge: v3414 
values: i3421 i3427 
=== Succesors ===
=== Usages ===
v3419 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3414 values: i3421 i3427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3420 v3426 
=== Succesors ===
next: v3419 
=== Usages ===
i3417 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3420 v3426 #next: v3419  <|@  <|@
f <@*|@fixed>@ <|@
tid v3419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1160 
actionAndReason: i3417 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3414 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1160 actionAndReason: i3417 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3433 
=== Usages ===
=== Predecessor ===
v2393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3433  <|@  <|@
f <@~|@floating>@ <|@
tid i3435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -443955
stableDimension: 0
stamp: i32 [-443955] ⇊00000000fff939cd ⇈00000000fff939cd
stampKind: i32
value: int[-443955|0xfffffffffff939cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1356 
actionAndReason: i3435 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2392 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1356 actionAndReason: i3435 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3345 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3345  <|@  <|@
f <@~|@floating>@ <|@
tid i3349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -439603
stableDimension: 0
stamp: i32 [-439603] ⇊00000000fff94acd ⇈00000000fff94acd
stampKind: i32
value: int[-439603|0xfffffffffff94acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?139 
actionAndReason: i3349 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2380 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?139 actionAndReason: i3349 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595504170808271966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1520 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1520  <|@  <|@
f <@*|@fixed>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B74" 
    successors "B154" "B170" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602048976889610353
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1525 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1519 
values: i177 i170 
=== Succesors ===
=== Usages ===
?1521 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1519 values: i177 i170  <|@  <|@
f <@~|@floating>@ <|@
tid i1526 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1519 
values: i192 i1538 
=== Succesors ===
=== Usages ===
i1386 i1470 i1469 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1519 values: i192 i1538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1520 v1522 
=== Succesors ===
next: v526 
=== Usages ===
i1525 i1526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1520 v1522 #next: v526  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7218022376776535
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v525 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v520 #falseSuccessor: v525  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B169" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4165 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4166 
=== Usages ===
a1779 v4330 v4233 
=== Predecessor ===
v520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4166  <|@  <|@
tid ?1521 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1525 
=== Succesors ===
=== Usages ===
v3487 i4166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1525  <|@  <|@
f <@~|@floating>@ <|@
tid v4233 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4165 
=== Succesors ===
=== Usages ===
i4166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?1521 
guard: - 
address: v4233 
=== Succesors ===
next: i4167 
=== Usages ===
v730 
=== Predecessor ===
a4165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1521 guard: - address: v4233 #next: i4167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4225 
=== Succesors ===
next: v2431 
=== Usages ===
v730 
=== Predecessor ===
i4166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4225 #next: v2431  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4166 
y: i4167 
=== Succesors ===
=== Usages ===
v2431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4166 y: i4167  <|@  <|@
f <@*|@fixed>@ <|@
tid v2431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v2427 
falseSuccessor: v2430 
=== Usages ===
=== Predecessor ===
i4167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v2427 #falseSuccessor: v2430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4168 
=== Usages ===
=== Predecessor ===
v2431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4168  <|@  <|@
f <@~|@floating>@ <|@
tid v4330 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4165 
=== Succesors ===
=== Usages ===
v4168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4330 
=== Succesors ===
next: i4169 
=== Usages ===
v4079 
=== Predecessor ===
v2427 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4330 #next: i4169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:357) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v747 
=== Usages ===
i1464 i1465 i613 
=== Predecessor ===
v4168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i4169 
y: i98 
=== Succesors ===
=== Usages ===
i1471 i1472 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4169 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v4079 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4168 
y: v3988 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4168 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1779 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4165 
=== Succesors ===
=== Usages ===
a1468 a1467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4165  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v4079 
=== Succesors ===
trueSuccessor: v740 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
i4169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4079 #trueSuccessor: v740 #falseSuccessor: v746  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599298131621115601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1456 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1456  <|@  <|@
f <@*|@fixed>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B108" 
    successors "B158" "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1472 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1455 
values: i613 i1488 
=== Succesors ===
=== Usages ===
v1812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: i613 i1488  <|@  <|@
f <@~|@floating>@ <|@
tid i1465 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1455 
values: i4169 i4140 
=== Succesors ===
=== Usages ===
v4236 v1810 v1799 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: i4169 i4140  <|@  <|@
f <@~|@floating>@ <|@
tid i1469 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1455 
values: i1526 i185 
=== Succesors ===
=== Usages ===
?1123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: i1526 i185  <|@  <|@
f <@~|@floating>@ <|@
tid a1468 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1455 
values: a1779 a1694 
=== Succesors ===
=== Usages ===
v4234 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: a1779 a1694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1456 v1457 
=== Succesors ===
next: a4170 
=== Usages ===
i1472 i1465 i1469 a1468 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1456 v1457 #next: a4170  <|@  <|@
f <@~|@floating>@ <|@
tid v4234 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1468 
index: - 
=== Succesors ===
=== Usages ===
a4170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4234 
=== Succesors ===
next: i4171 
=== Usages ===
a1793 v4235 
=== Predecessor ===
v1455 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4234 #next: i4171  <|@  <|@
tid ?1123 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1469 
=== Succesors ===
=== Usages ===
v3411 i4171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1469  <|@  <|@
f <@~|@floating>@ <|@
tid v4235 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4170 
=== Succesors ===
=== Usages ===
i4171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1123 
guard: - 
address: v4235 
=== Succesors ===
next: v2441 
=== Usages ===
v1799 
=== Predecessor ===
a4170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1123 guard: - address: v4235 #next: v2441  <|@  <|@
f <@~|@floating>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1465 
y: i4171 
=== Succesors ===
=== Usages ===
v2441 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1465 y: i4171  <|@  <|@
f <@*|@fixed>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1799 
=== Succesors ===
trueSuccessor: v2437 
falseSuccessor: v2440 
=== Usages ===
=== Predecessor ===
i4171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1799 #trueSuccessor: v2437 #falseSuccessor: v2440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1810 
=== Usages ===
a4172 
=== Predecessor ===
v2441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4237 
value: i1465 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1812 
=== Usages ===
=== Predecessor ===
v2437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4237 value: i1465 stateAfter: - lastLocationAccess: - #next: v1812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4238 
value: i1472 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4172 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4238 value: i1472 stateAfter: - lastLocationAccess: - #next: a4172  <|@  <|@
f <@~|@floating>@ <|@
tid a1793 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a4170 
=== Succesors ===
=== Usages ===
v4236 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4170  <|@  <|@
f <@~|@floating>@ <|@
tid v4236 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1793 
index: i1465 
=== Succesors ===
=== Usages ===
a4172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1793 index: i1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2437 
address: v4236 
=== Succesors ===
next: v1093 
=== Usages ===
a1808 
=== Predecessor ===
v1812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2437 address: v4236 #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid a1808 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a4172 
=== Succesors ===
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
a4172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3411 
=== Usages ===
=== Predecessor ===
v2441 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3411  <|@  <|@
f <@~|@floating>@ <|@
tid i3413 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -460827
stableDimension: 0
stamp: i32 [-460827] ⇊00000000fff8f7e5 ⇈00000000fff8f7e5
stampKind: i32
value: int[-460827|0xfffffffffff8f7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1123 
actionAndReason: i3413 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2440 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1123 actionAndReason: i3413 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582381754285081060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1459 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1459  <|@  <|@
f <@*|@fixed>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B109" 
    successors "B162" "B165" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286631
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1471 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1458 
values: i613 i1488 
=== Succesors ===
=== Usages ===
v1845 v1834 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1458 values: i613 i1488  <|@  <|@
f <@~|@floating>@ <|@
tid i1464 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1458 
values: i4169 i4140 
=== Succesors ===
=== Usages ===
?804 i798 v1844 ?3289 v1832 v4241 v1822 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1458 values: i4169 i4140  <|@  <|@
f <@~|@floating>@ <|@
tid a1467 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1458 
values: a1779 a1694 
=== Succesors ===
=== Usages ===
v4244 v4239 v4331 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1458 values: a1779 a1694  <|@  <|@
f <@~|@floating>@ <|@
tid i1470 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1458 
values: i1526 i185 
=== Succesors ===
=== Usages ===
?1460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1458 values: i1526 i185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1459 v1461 
=== Succesors ===
next: v4173 
=== Usages ===
i1471 i1464 a1467 i1470 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1459 v1461 #next: v4173  <|@  <|@
f <@~|@floating>@ <|@
tid v4331 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1467 
index: - 
=== Succesors ===
=== Usages ===
v4173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4331 
=== Succesors ===
next: v756 
=== Usages ===
v4081 v4080 
=== Predecessor ===
v1458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4331 #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid v4080 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4173 
y: v3986 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4173 y: v3986  <|@  <|@
tid ?1460 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1470 
=== Succesors ===
=== Usages ===
v3467 i4175 v4386 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1470  <|@  <|@
f <@~|@floating>@ <|@
tid v4243 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1834 v1845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4242 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1832 v1844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.9931451844203519
=== Inputs ===
condition: v4080 
=== Succesors ===
trueSuccessor: v752 
falseSuccessor: v755 
=== Usages ===
=== Predecessor ===
v4173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4080 #trueSuccessor: v752 #falseSuccessor: v755  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4174 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4174  <|@  <|@
f <@~|@floating>@ <|@
tid v4239 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1467 
index: - 
=== Succesors ===
=== Usages ===
a4174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4239 
=== Succesors ===
next: i4175 
=== Usages ===
a1816 v4240 
=== Predecessor ===
v752 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4239 #next: i4175  <|@  <|@
f <@~|@floating>@ <|@
tid v4240 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4174 
=== Succesors ===
=== Usages ===
i4175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1460 
guard: - 
address: v4240 
=== Succesors ===
next: v2451 
=== Usages ===
v1822 
=== Predecessor ===
a4174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1460 guard: - address: v4240 #next: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1464 
y: i4175 
=== Succesors ===
=== Usages ===
v2451 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1464 y: i4175  <|@  <|@
f <@*|@fixed>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1822 
=== Succesors ===
trueSuccessor: v2447 
falseSuccessor: v2450 
=== Usages ===
=== Predecessor ===
i4175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1822 #trueSuccessor: v2447 #falseSuccessor: v2450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1832 
=== Usages ===
a4176 
=== Predecessor ===
v2451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4242 
value: i1464 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v2447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4242 value: i1464 stateAfter: - lastLocationAccess: - #next: v1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4243 
value: i1471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4176 
=== Usages ===
=== Predecessor ===
v1832 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4243 value: i1471 stateAfter: - lastLocationAccess: - #next: a4176  <|@  <|@
f <@~|@floating>@ <|@
tid a1816 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a4174 
=== Succesors ===
=== Usages ===
v4241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4174  <|@  <|@
f <@~|@floating>@ <|@
tid v4241 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1816 
index: i1464 
=== Succesors ===
=== Usages ===
a4176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1816 index: i1464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v2447 
address: v4241 
=== Succesors ===
next: v1237 
=== Usages ===
a1830 
=== Predecessor ===
v1834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2447 address: v4241 #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid a1830 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a4176 
=== Succesors ===
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4176  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
a4176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3468 
=== Usages ===
=== Predecessor ===
v2451 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3468  <|@  <|@
f <@~|@floating>@ <|@
tid i3469 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -466715
stableDimension: 0
stamp: i32 [-466715] ⇊00000000fff8e0e5 ⇈00000000fff8e0e5
stampKind: i32
value: int[-466715|0xfffffffffff8e0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3462 
=== Predecessor ===
v2450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B166" "B167" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2456 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2456  <|@  <|@
f <@~|@floating>@ <|@
tid v4081 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4173 
y: v4065 
=== Succesors ===
=== Usages ===
v2456 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4173 y: v4065  <|@  <|@
f <@*|@fixed>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4081 
=== Succesors ===
trueSuccessor: v2452 
falseSuccessor: v2455 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4081 #trueSuccessor: v2452 #falseSuccessor: v2455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4177 
=== Usages ===
=== Predecessor ===
v2456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4177  <|@  <|@
f <@~|@floating>@ <|@
tid v4244 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1467 
index: - 
=== Succesors ===
=== Usages ===
a4177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4244 
=== Succesors ===
next: v4386 
=== Usages ===
a1838 v4386 
=== Predecessor ===
v2452 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4244 #next: v4386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1460 
object: a4177 
=== Succesors ===
next: i796 
=== Usages ===
=== Predecessor ===
a4177 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1460 object: a4177 #next: i796  <|@  <|@
f <@~|@floating>@ <|@
tid a1838 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4177 
=== Succesors ===
=== Usages ===
?3289 v1843 v1842 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4177  <|@  <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3d422c9e
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1838 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1838  <|@  <|@
tid ?617 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 521
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
?804 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
tid ?804 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?617 
values: a1186 i1464 - 
=== Succesors ===
=== Usages ===
?3290 ?3289 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?617 values: a1186 i1464 -  <|@  <|@
tid ?3289 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<ReversedList.get(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?804 
values: - i1464 a1838 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?804 values: - i1464 a1838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i796 <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1842 
stateDuring: ?3289 
=== Succesors ===
next: a801 
=== Usages ===
i798 
=== Predecessor ===
v4386 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1842 stateDuring: ?3289 #next: a801  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 14]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i796 
y: i1464 
=== Succesors ===
=== Usages ===
i799 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i796 y: i1464  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:848) [bci: 10]
at java.util.ArrayList$ListItr.<init>(ArrayList.java:918) [bci: 7]
at java.util.ArrayList.listIterator(ArrayList.java:829) [bci: 6]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i799 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 16]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i798 
y: i697 
=== Succesors ===
=== Usages ===
v1843 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i798 y: i697  <|@  <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@5f295dfc
stamp: void
targetMethod: HotSpotMethod<List.get(int)>
=== Inputs ===
arguments: a1838 i799 
=== Succesors ===
=== Usages ===
a801 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1838 i799  <|@  <|@
tid ?3290 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<ReversedList.get(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?804 
values: - - 
=== Succesors ===
=== Usages ===
a801 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?804 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a801 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#List.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1843 
stateDuring: ?3290 
=== Succesors ===
next: v1844 
=== Usages ===
a516 
=== Predecessor ===
i796 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1843 stateDuring: ?3290 #next: v1844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4242 
value: i1464 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1845 
=== Usages ===
=== Predecessor ===
a801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4242 value: i1464 stateAfter: - lastLocationAccess: - #next: v1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4243 
value: i1471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4243 value: i1471 stateAfter: - lastLocationAccess: - #next: v521  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v1845 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3470 
=== Usages ===
=== Predecessor ===
v2456 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3470  <|@  <|@
f <@~|@floating>@ <|@
tid i3471 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -469811
stableDimension: 0
stamp: i32 [-469811] ⇊00000000fff8d4cd ⇈00000000fff8d4cd
stampKind: i32
value: int[-469811|0xfffffffffff8d4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3462 
=== Predecessor ===
v2455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3465 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-471051 - -465419] ⇊00000000fff8c0c5 ⇈00000000fff8fffd
valueDescription: i32
=== Inputs ===
merge: v3462 
values: i3469 i3471 
=== Succesors ===
=== Usages ===
v3467 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3462 values: i3469 i3471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3468 v3470 
=== Succesors ===
next: v3467 
=== Usages ===
i3465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3468 v3470 #next: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v3467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1460 
actionAndReason: i3465 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3462 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1460 actionAndReason: i3465 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3487 
=== Usages ===
=== Predecessor ===
v2431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3487  <|@  <|@
f <@~|@floating>@ <|@
tid i3489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -457491
stableDimension: 0
stamp: i32 [-457491] ⇊00000000fff904ed ⇈00000000fff904ed
stampKind: i32
value: int[-457491|0xfffffffffff904ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1521 
actionAndReason: i3489 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2430 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1521 actionAndReason: i3489 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593829144217942789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1381 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1381  <|@  <|@
f <@*|@fixed>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B111" 
    successors "B172" "B238" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1386 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1380 
values: i1526 i185 
=== Succesors ===
=== Usages ===
?1382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1380 values: i1526 i185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1381 v1383 
=== Succesors ===
next: v2466 
=== Usages ===
i1386 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1381 v1383 #next: v2466  <|@  <|@
f <@*|@fixed>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4059 
=== Succesors ===
trueSuccessor: v2462 
falseSuccessor: v2465 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4059 #trueSuccessor: v2462 #falseSuccessor: v2465  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B173" "B174" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4178 
=== Usages ===
=== Predecessor ===
v2466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: v2471 
=== Usages ===
v4247 v1850 v4245 v4246 
=== Predecessor ===
v2462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: v2471  <|@  <|@
f <@~|@floating>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
value: a4178 
=== Succesors ===
=== Usages ===
v2471 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4178  <|@  <|@
f <@*|@fixed>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1850 
=== Succesors ===
trueSuccessor: v2470 
falseSuccessor: v2467 
=== Usages ===
=== Predecessor ===
a4178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1850 #trueSuccessor: v2470 #falseSuccessor: v2467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3442 
=== Usages ===
=== Predecessor ===
v2471 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3442  <|@  <|@
f <@~|@floating>@ <|@
tid i3443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -473867
stableDimension: 0
stamp: i32 [-473867] ⇊00000000fff8c4f5 ⇈00000000fff8c4f5
stampKind: i32
value: int[-473867|0xfffffffffff8c4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B237" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4179 
=== Usages ===
=== Predecessor ===
v2471 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4179  <|@  <|@
f <@~|@floating>@ <|@
tid v4245 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4178 
=== Succesors ===
=== Usages ===
i4179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4245 
=== Succesors ===
next: i4180 
=== Usages ===
v771 
=== Predecessor ===
v2467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4245 #next: i4180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4225 
=== Succesors ===
next: v2476 
=== Usages ===
v771 
=== Predecessor ===
i4179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4225 #next: v2476  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4179 
y: i4180 
=== Succesors ===
=== Usages ===
v2476 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4179 y: i4180  <|@  <|@
f <@*|@fixed>@ <|@
tid v2476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v771 
=== Succesors ===
trueSuccessor: v2472 
falseSuccessor: v2475 
=== Usages ===
=== Predecessor ===
i4180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v771 #trueSuccessor: v2472 #falseSuccessor: v2475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B236" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4181 
=== Usages ===
=== Predecessor ===
v2476 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:860) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: i4182 
=== Usages ===
v624 v629 i631 v1876 v1874 v4250 
=== Predecessor ===
v2472 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: i4182  <|@  <|@
f <@~|@floating>@ <|@
tid v4246 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4178 
=== Succesors ===
=== Usages ===
i4182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4246 
=== Succesors ===
next: v2481 
=== Usages ===
v624 
=== Predecessor ===
i4181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4246 #next: v2481  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4181 
y: i4182 
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4181 y: i4182  <|@  <|@
f <@*|@fixed>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v624 
=== Succesors ===
trueSuccessor: v2477 
falseSuccessor: v2480 
=== Usages ===
=== Predecessor ===
i4182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v624 #trueSuccessor: v2477 #falseSuccessor: v2480  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B177" "B178" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4183 
=== Usages ===
=== Predecessor ===
v2481 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4183  <|@  <|@
f <@~|@floating>@ <|@
tid v4247 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4178 
=== Succesors ===
=== Usages ===
a4183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4247 
=== Succesors ===
next: v2486 
=== Usages ===
a1865 v1866 v4248 
=== Predecessor ===
v2477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4247 #next: v2486  <|@  <|@
f <@~|@floating>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
value: a4183 
=== Succesors ===
=== Usages ===
v2486 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4183  <|@  <|@
f <@*|@fixed>@ <|@
tid v2486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1866 
=== Succesors ===
trueSuccessor: v2485 
falseSuccessor: v2482 
=== Usages ===
=== Predecessor ===
a4183 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1866 #trueSuccessor: v2485 #falseSuccessor: v2482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3448 
=== Usages ===
=== Predecessor ===
v2486 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3448  <|@  <|@
f <@~|@floating>@ <|@
tid i3449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -477963
stableDimension: 0
stamp: i32 [-477963] ⇊00000000fff8b4f5 ⇈00000000fff8b4f5
stampKind: i32
value: int[-477963|0xfffffffffff8b4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" "B235" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4184 
=== Usages ===
=== Predecessor ===
v2486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4184  <|@  <|@
f <@~|@floating>@ <|@
tid v4248 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4183 
=== Succesors ===
=== Usages ===
i4184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4184 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4248 
=== Succesors ===
next: v2491 
=== Usages ===
v629 v1876 
=== Predecessor ===
v2482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4248 #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4181 
y: i4184 
=== Succesors ===
=== Usages ===
v2491 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4181 y: i4184  <|@  <|@
f <@*|@fixed>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v629 
=== Succesors ===
trueSuccessor: v2487 
falseSuccessor: v2490 
=== Usages ===
=== Predecessor ===
i4184 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v629 #trueSuccessor: v2487 #falseSuccessor: v2490  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B180" "B234" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2496 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2496  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4181 
y: i4184 
=== Succesors ===
=== Usages ===
v2496 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4181 y: i4184  <|@  <|@
f <@*|@fixed>@ <|@
tid v2496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1876 
=== Succesors ===
trueSuccessor: v2492 
falseSuccessor: v2495 
=== Usages ===
=== Predecessor ===
v2487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1876 #trueSuccessor: v2492 #falseSuccessor: v2495  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1872 
=== Usages ===
a4185 
=== Predecessor ===
v2496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1872  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 53]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i4181 
y: i98 
=== Succesors ===
=== Usages ===
v1872 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4181 y: i98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 54]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
value: i631 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1874 
=== Usages ===
=== Predecessor ===
v2492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4211 value: i631 stateAfter: - lastLocationAccess: - #next: v1874  <|@  <|@
f <@~|@floating>@ <|@
tid v4249 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 61]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4249 
value: i4181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4185 
=== Usages ===
=== Predecessor ===
v1872 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4249 value: i4181 stateAfter: - lastLocationAccess: - #next: a4185  <|@  <|@
f <@~|@floating>@ <|@
tid a1865 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a4183 
=== Succesors ===
=== Usages ===
v4250 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4183  <|@  <|@
f <@~|@floating>@ <|@
tid v4250 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1865 
index: i4181 
=== Succesors ===
=== Usages ===
a4185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1865 index: i4181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2492 
address: v4250 
=== Succesors ===
next: v532 
=== Usages ===
a1884 
=== Predecessor ===
v1874 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2492 address: v4250 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid a1884 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a4185 
=== Succesors ===
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4185  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
a4185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B166" "B180" "B158" "B163" 
    successors "B182" "B193" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v513 
values: a801 a1884 a1808 a1830 
=== Succesors ===
=== Usages ===
?514 ?973 v57 v642 ?925 v1908 v4333 v639 v4252 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v513 values: a801 a1884 a1808 a1830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v521 v532 v1093 v1237 
=== Succesors ===
next: v934 
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v521 v532 v1093 v1237 #next: v934  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 521
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - a516 
=== Succesors ===
=== Usages ===
v3373 i4187 i4192 i4195 a4198 i4199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - a516  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 0.7218022376776535
=== Inputs ===
condition: v4062 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v933 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4062 #trueSuccessor: v931 #falseSuccessor: v933  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B192" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4186 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: i4187 
=== Usages ===
a1911 v4332 v4257 v4259 v4263 
=== Predecessor ===
v931 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: i4187  <|@  <|@
f <@~|@floating>@ <|@
tid v4257 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4186 
=== Succesors ===
=== Usages ===
i4187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4257 
=== Succesors ===
next: i4188 
=== Usages ===
v1011 
=== Predecessor ===
a4186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4257 #next: i4188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4258 
=== Succesors ===
next: v2506 
=== Usages ===
v1011 
=== Predecessor ===
i4187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4258 #next: v2506  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4187 
y: i4188 
=== Succesors ===
=== Usages ===
v2506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4187 y: i4188  <|@  <|@
f <@*|@fixed>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1011 
=== Succesors ===
trueSuccessor: v2502 
falseSuccessor: v2505 
=== Usages ===
=== Predecessor ===
i4188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1011 #trueSuccessor: v2502 #falseSuccessor: v2505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4189 
=== Usages ===
=== Predecessor ===
v2506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4189  <|@  <|@
f <@~|@floating>@ <|@
tid v4332 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4186 
=== Succesors ===
=== Usages ===
v4189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4332 
=== Succesors ===
next: i4190 
=== Usages ===
v4083 v4082 
=== Predecessor ===
v2502 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4332 #next: i4190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:357) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v1028 
=== Usages ===
v1962 ?3291 v1963 v1951 i969 v1960 v4265 v4261 v1941 v1931 
=== Predecessor ===
v4189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: i32
=== Inputs ===
x: i4190 
y: i98 
=== Succesors ===
=== Usages ===
v1964 v1942 v1961 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4190 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v4082 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4189 
y: v3988 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4189 y: v3988  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v4082 
=== Succesors ===
trueSuccessor: v1021 
falseSuccessor: v1027 
=== Usages ===
=== Predecessor ===
i4190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4082 #trueSuccessor: v1021 #falseSuccessor: v1027  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4191 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4191  <|@  <|@
f <@~|@floating>@ <|@
tid v4259 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4186 
=== Succesors ===
=== Usages ===
a4191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4259 
=== Succesors ===
next: i4192 
=== Usages ===
a1925 v4260 
=== Predecessor ===
v1021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4259 #next: i4192  <|@  <|@
f <@~|@floating>@ <|@
tid v4260 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4191 
=== Succesors ===
=== Usages ===
i4192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4260 
=== Succesors ===
next: v2516 
=== Usages ===
v1931 
=== Predecessor ===
a4191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4260 #next: v2516  <|@  <|@
f <@~|@floating>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4190 
y: i4192 
=== Succesors ===
=== Usages ===
v2516 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4190 y: i4192  <|@  <|@
f <@*|@fixed>@ <|@
tid v2516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1931 
=== Succesors ===
trueSuccessor: v2512 
falseSuccessor: v2515 
=== Usages ===
=== Predecessor ===
i4192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1931 #trueSuccessor: v2512 #falseSuccessor: v2515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1941 
=== Usages ===
a4193 
=== Predecessor ===
v2516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4262 
value: i4190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v2512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4262 value: i4190 stateAfter: - lastLocationAccess: - #next: v1942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
value: i969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4193 
=== Usages ===
=== Predecessor ===
v1941 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4213 value: i969 stateAfter: - lastLocationAccess: - #next: a4193  <|@  <|@
f <@~|@floating>@ <|@
tid a1925 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a4191 
=== Succesors ===
=== Usages ===
v4261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4191  <|@  <|@
f <@~|@floating>@ <|@
tid v4261 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1925 
index: i4190 
=== Succesors ===
=== Usages ===
a4193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1925 index: i4190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2512 
address: v4261 
=== Succesors ===
next: v1104 
=== Usages ===
a1939 
=== Predecessor ===
v1942 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2512 address: v4261 #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid a1939 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a4193 
=== Succesors ===
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4193  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
a4193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3378 
=== Usages ===
=== Predecessor ===
v2516 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3378  <|@  <|@
f <@~|@floating>@ <|@
tid i3379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -494619
stableDimension: 0
stamp: i32 [-494619] ⇊00000000fff873e5 ⇈00000000fff873e5
stampKind: i32
value: int[-494619|0xfffffffffff873e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" "B191" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid v4083 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4189 
y: v3986 
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4189 y: v3986  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 0.9931451844203519
=== Inputs ===
condition: v4083 
=== Succesors ===
trueSuccessor: v1033 
falseSuccessor: v1036 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4083 #trueSuccessor: v1033 #falseSuccessor: v1036  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4194 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4194  <|@  <|@
f <@~|@floating>@ <|@
tid v4263 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4186 
=== Succesors ===
=== Usages ===
a4194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4263 
=== Succesors ===
next: i4195 
=== Usages ===
a1945 v4264 
=== Predecessor ===
v1033 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4263 #next: i4195  <|@  <|@
f <@~|@floating>@ <|@
tid v4264 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4194 
=== Succesors ===
=== Usages ===
i4195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4264 
=== Succesors ===
next: v2526 
=== Usages ===
v1951 
=== Predecessor ===
a4194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4264 #next: v2526  <|@  <|@
f <@~|@floating>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4190 
y: i4195 
=== Succesors ===
=== Usages ===
v2526 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4190 y: i4195  <|@  <|@
f <@*|@fixed>@ <|@
tid v2526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1951 
=== Succesors ===
trueSuccessor: v2522 
falseSuccessor: v2525 
=== Usages ===
=== Predecessor ===
i4195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1951 #trueSuccessor: v2522 #falseSuccessor: v2525  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1960 
=== Usages ===
a4196 
=== Predecessor ===
v2526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4262 
value: i4190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1961 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4262 value: i4190 stateAfter: - lastLocationAccess: - #next: v1961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
value: i969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4196 
=== Usages ===
=== Predecessor ===
v1960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4213 value: i969 stateAfter: - lastLocationAccess: - #next: a4196  <|@  <|@
f <@~|@floating>@ <|@
tid a1945 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a4194 
=== Succesors ===
=== Usages ===
v4265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4194  <|@  <|@
f <@~|@floating>@ <|@
tid v4265 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1945 
index: i4190 
=== Succesors ===
=== Usages ===
a4196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1945 index: i4190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v2522 
address: v4265 
=== Succesors ===
next: v1248 
=== Usages ===
a1959 
=== Predecessor ===
v1961 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2522 address: v4265 #next: v1248  <|@  <|@
f <@~|@floating>@ <|@
tid a1959 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a4196 
=== Succesors ===
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
a4196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3382 
=== Usages ===
=== Predecessor ===
v2526 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3382  <|@  <|@
f <@~|@floating>@ <|@
tid i3383 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -499739
stableDimension: 0
stamp: i32 [-499739] ⇊00000000fff85fe5 ⇈00000000fff85fe5
stampKind: i32
value: int[-499739|0xfffffffffff85fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a965 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a965  <|@  <|@
f <@~|@floating>@ <|@
tid a1911 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4186 
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4186  <|@  <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@74317d55
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a1911 i4190 
=== Succesors ===
=== Usages ===
a965 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1911 i4190  <|@  <|@
tid ?973 <|@
d <@d|@=== Debug Properties ===
bci: 58
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 522
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 a516 - 
=== Succesors ===
=== Usages ===
?3291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 a516 -  <|@  <|@
tid ?3291 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?973 
values: a484 i4190 - 
=== Succesors ===
=== Usages ===
a965 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?973 values: a484 i4190 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a965 <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1962 
stateDuring: ?3291 
=== Succesors ===
next: v1963 
=== Usages ===
a927 
=== Predecessor ===
v1036 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1962 stateDuring: ?3291 #next: v1963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4262 
value: i4190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1964 
=== Usages ===
=== Predecessor ===
a965 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4262 value: i4190 stateAfter: - lastLocationAccess: - #next: v1964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
value: i969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4213 value: i969 stateAfter: - lastLocationAccess: - #next: v932  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v1964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3374 
=== Usages ===
=== Predecessor ===
v2506 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3374  <|@  <|@
f <@~|@floating>@ <|@
tid i3375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -491283
stableDimension: 0
stamp: i32 [-491283] ⇊00000000fff880ed ⇈00000000fff880ed
stampKind: i32
value: int[-491283|0xfffffffffff880ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B194" "B232" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2531 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v2531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v2527 
falseSuccessor: v2530 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v2527 #falseSuccessor: v2530  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B231" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4197 
=== Usages ===
=== Predecessor ===
v2531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: a4198 
=== Usages ===
v4268 v4267 v4266 
=== Predecessor ===
v2527 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: a4198  <|@  <|@
f <@~|@floating>@ <|@
tid v4268 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4197 
=== Succesors ===
=== Usages ===
a4198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4268 
=== Succesors ===
next: i4199 
=== Usages ===
a1984 v4269 
=== Predecessor ===
a4197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4268 #next: i4199  <|@  <|@
f <@~|@floating>@ <|@
tid v4269 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4198 
=== Succesors ===
=== Usages ===
i4199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4269 
=== Succesors ===
next: i4200 
=== Usages ===
v985 v1995 
=== Predecessor ===
a4198 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4269 #next: i4200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:860) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v2546 
=== Usages ===
v980 v985 i987 v1995 v1993 v4270 
=== Predecessor ===
i4199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v2546  <|@  <|@
f <@~|@floating>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4200 
y: i4199 
=== Succesors ===
=== Usages ===
v2546 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4200 y: i4199  <|@  <|@
f <@*|@fixed>@ <|@
tid v2546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1995 
=== Succesors ===
trueSuccessor: v2542 
falseSuccessor: v2545 
=== Usages ===
=== Predecessor ===
i4200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1995 #trueSuccessor: v2542 #falseSuccessor: v2545  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B230" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4201 
=== Usages ===
a4204 
=== Predecessor ===
v2546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4201  <|@  <|@
f <@~|@floating>@ <|@
tid v4266 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4197 
=== Succesors ===
=== Usages ===
i4201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4266 
=== Succesors ===
next: i4202 
=== Usages ===
v1042 
=== Predecessor ===
v2542 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4266 #next: i4202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4258 
=== Succesors ===
next: v2551 
=== Usages ===
v1042 
=== Predecessor ===
i4201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4258 #next: v2551  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4201 
y: i4202 
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4201 y: i4202  <|@  <|@
f <@*|@fixed>@ <|@
tid v2551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1042 
=== Succesors ===
trueSuccessor: v2547 
falseSuccessor: v2550 
=== Usages ===
=== Predecessor ===
i4202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1042 #trueSuccessor: v2547 #falseSuccessor: v2550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B197" "B229" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4203 
=== Usages ===
=== Predecessor ===
v2551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4203  <|@  <|@
f <@~|@floating>@ <|@
tid v4267 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4197 
=== Succesors ===
=== Usages ===
i4203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4267 
=== Succesors ===
next: v2556 
=== Usages ===
v980 
=== Predecessor ===
v2547 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4267 #next: v2556  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4200 
y: i4203 
=== Succesors ===
=== Usages ===
v2556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4200 y: i4203  <|@  <|@
f <@*|@fixed>@ <|@
tid v2556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v980 
=== Succesors ===
trueSuccessor: v2552 
falseSuccessor: v2555 
=== Usages ===
=== Predecessor ===
i4203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v980 #trueSuccessor: v2552 #falseSuccessor: v2555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B228" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2561 
=== Usages ===
=== Predecessor ===
v2556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2561  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4200 
y: i4199 
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4200 y: i4199  <|@  <|@
f <@*|@fixed>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v985 
=== Succesors ===
trueSuccessor: v2557 
falseSuccessor: v2560 
=== Usages ===
=== Predecessor ===
v2552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v985 #trueSuccessor: v2557 #falseSuccessor: v2560  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1991 
=== Usages ===
=== Predecessor ===
v2561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid i987 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 53]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: i32
=== Inputs ===
x: i4200 
y: i98 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4200 y: i98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 54]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
value: i987 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1993 
=== Usages ===
=== Predecessor ===
v2557 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4213 value: i987 stateAfter: - lastLocationAccess: - #next: v1993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 61]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4262 
value: i4200 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4204 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4262 value: i4200 stateAfter: - lastLocationAccess: - #next: a4204  <|@  <|@
f <@~|@floating>@ <|@
tid a1984 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a4198 
=== Succesors ===
=== Usages ===
v4270 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4198  <|@  <|@
f <@~|@floating>@ <|@
tid v4270 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1984 
index: i4200 
=== Succesors ===
=== Usages ===
a4204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1984 index: i4200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2542 
address: v4270 
=== Succesors ===
next: v940 
=== Usages ===
a2003 
=== Predecessor ===
v1993 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2542 address: v4270 #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid a2003 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a4204 
=== Succesors ===
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4204  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
a4204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B191" "B198" "B185" "B189" 
    successors "B200" "B203" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v924 
values: a965 a2003 a1939 a1959 
=== Succesors ===
=== Usages ===
?925 v61 v1908 v639 v4254 v642 v4334 v4088 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v924 values: a965 a2003 a1939 a1959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v932 v940 v1104 v1248 
=== Succesors ===
next: v60 
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v932 v940 v1104 v1248 #next: v60  <|@  <|@
tid ?925 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 522
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 a516 - a927 
=== Succesors ===
=== Usages ===
v2244 v2246 v2247 v2248 v2245 v3403 v4382 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 a516 - a927  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 67]
stamp: void
=== Inputs ===
value: a516 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a516  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 67]
stamp: void
trueSuccessorProbability: 0.04052010885999391
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v58 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B201" "B202" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4588766096413004776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 72]
stamp: void
=== Inputs ===
value: a927 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a927  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8223880597014925
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v64  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4587237696756455476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2244 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2244 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4577267220407250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B204" "B207" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609046482132508958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4205 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4205  <|@  <|@
f <@~|@floating>@ <|@
tid v4333 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a516 
index: - 
=== Succesors ===
=== Usages ===
v4205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a516 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4333 
=== Succesors ===
next: v1887 
=== Usages ===
v4251 v4085 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4333 #next: v1887  <|@  <|@
f <@~|@floating>@ <|@
tid v4251 <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v4205 
=== Succesors ===
=== Usages ===
v1887 v1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v4205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v4251 
=== Succesors ===
next: v554 
=== Usages ===
v552 
=== Predecessor ===
v4205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4251 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1887 
y: v550 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1887 y: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=equals target_method_class=Ljava/lang/Object; position=at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.6124803025527892
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v553 
=== Usages ===
=== Predecessor ===
v1887 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v545 #falseSuccessor: v553  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B205" "B206" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605975355817697406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=equals target_method_class=Ljava/lang/Object; position=at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1152 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1152  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Object.equals(Object.java:149) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a516 
y: a927 
=== Succesors ===
=== Usages ===
v1152 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a516 y: a927  <|@  <|@
f <@*|@fixed>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
trueSuccessorProbability: 0.8973841790104002
=== Inputs ===
condition: v639 
=== Succesors ===
trueSuccessor: v1151 
falseSuccessor: v1150 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v639 #trueSuccessor: v1151 #falseSuccessor: v1150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605174938430272170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:525) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2246 
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v1147  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2246 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4591067759762566818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" "B223" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603110409192579518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v4084 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4085 v4086 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4085 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4205 
y: v4084 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4205 y: v4084  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.3667859466493169
=== Inputs ===
condition: v4085 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v561 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4085 #trueSuccessor: v558 #falseSuccessor: v561  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B209" "B210" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596408653117255331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a516 
y: a927 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a516 y: a927  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v642 
=== Succesors ===
trueSuccessor: v643 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v642 #trueSuccessor: v643 #falseSuccessor: v644  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2247 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v1219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2247 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" "B212" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3235 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3235  <|@  <|@
f <@~|@floating>@ <|@
tid v4088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 72]
stamp: void
=== Inputs ===
value: a927 
=== Succesors ===
=== Usages ===
v3235 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a927  <|@  <|@
f <@*|@fixed>@ <|@
tid v3235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v4088 
=== Succesors ===
trueSuccessor: v3234 
falseSuccessor: v3233 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4088 #trueSuccessor: v3234 #falseSuccessor: v3233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B225" 
    xhandlers
    flags 
    probability 4576946128042429364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1253 
=== Usages ===
=== Predecessor ===
v3235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1253  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v3234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" "B222" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591180990207212844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4206 
=== Usages ===
=== Predecessor ===
v3235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4206  <|@  <|@
f <@~|@floating>@ <|@
tid v4334 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a927 
index: - 
=== Succesors ===
=== Usages ===
v4206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a927 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4334 
=== Succesors ===
next: v3495 
=== Usages ===
v4086 
=== Predecessor ===
v3233 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4334 #next: v3495  <|@  <|@
f <@~|@floating>@ <|@
tid v4086 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4206 
y: v4084 
=== Succesors ===
=== Usages ===
v3495 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4206 y: v4084  <|@  <|@
f <@*|@fixed>@ <|@
tid v3495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v4086 
=== Succesors ===
trueSuccessor: v3493 
falseSuccessor: v3492 
=== Usages ===
=== Predecessor ===
v4206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4086 #trueSuccessor: v3493 #falseSuccessor: v3492  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B214" "B215" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4207 
=== Usages ===
=== Predecessor ===
v3495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4207  <|@  <|@
f <@~|@floating>@ <|@
tid v4252 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a516 
index: - 
=== Succesors ===
=== Usages ===
a4207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a516 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v4252 
=== Succesors ===
next: v4382 
=== Usages ===
a1890 v4382 v4253 
=== Predecessor ===
v3493 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4252 #next: v4382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
object: a4207 
=== Succesors ===
next: a4208 
=== Usages ===
=== Predecessor ===
a4207 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?925 object: a4207 #next: a4208  <|@  <|@
f <@~|@floating>@ <|@
tid v4254 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a927 
index: - 
=== Succesors ===
=== Usages ===
a4208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a927 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v4254 
=== Succesors ===
next: v2571 
=== Usages ===
a1898 v1899 v4255 
=== Predecessor ===
v4382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4254 #next: v2571  <|@  <|@
f <@~|@floating>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
value: a4208 
=== Succesors ===
=== Usages ===
v2571 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4208  <|@  <|@
f <@*|@fixed>@ <|@
tid v2571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1899 
=== Succesors ===
trueSuccessor: v2570 
falseSuccessor: v2567 
=== Usages ===
=== Predecessor ===
a4208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1899 #trueSuccessor: v2570 #falseSuccessor: v2567  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3403 
=== Usages ===
=== Predecessor ===
v2571 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3403  <|@  <|@
f <@~|@floating>@ <|@
tid i3405 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -486411
stableDimension: 0
stamp: i32 [-486411] ⇊00000000fff893f5 ⇈00000000fff893f5
stampKind: i32
value: int[-486411|0xfffffffffff893f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
actionAndReason: i3405 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2570 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?925 actionAndReason: i3405 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B216" "B221" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4209 
=== Usages ===
=== Predecessor ===
v2571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4209  <|@  <|@
f <@~|@floating>@ <|@
tid v4255 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4208 
=== Succesors ===
=== Usages ===
i4209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4255 
=== Succesors ===
next: i4210 
=== Usages ===
v662 
=== Predecessor ===
v2567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4255 #next: i4210  <|@  <|@
f <@~|@floating>@ <|@
tid v4253 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4207 
=== Succesors ===
=== Usages ===
i4210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4253 
=== Succesors ===
next: v665 
=== Usages ===
v662 v669 i677 
=== Predecessor ===
i4209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4253 #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4209 
y: i4210 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4209 y: i4210  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v664 
=== Usages ===
=== Predecessor ===
i4210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v663 #falseSuccessor: v664  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B217" "B218" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582173790952471852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4210 
y: i13 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4210 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v669 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v669 #trueSuccessor: v670 #falseSuccessor: v671  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2248 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v1301 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i677 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i677  <|@  <|@
f <@~|@floating>@ <|@
tid a1890 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a4207 
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4207  <|@  <|@
f <@~|@floating>@ <|@
tid a1898 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a4208 
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a1890 
array2: a1898 
length: i4210 
lastLocationAccess: - 
=== Succesors ===
next: v81 
=== Usages ===
v71 
=== Predecessor ===
v671 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a1890 array2: a1898 length: i4210 lastLocationAccess: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i677 
y: i13 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i677 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
trueSuccessorProbability: 0.10261582098959976
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v1249 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
i677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v1249 #falseSuccessor: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B225" 
    xhandlers
    flags 
    probability 4562992447969328341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1251 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577001488191303057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:525) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2245 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:525) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2245 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B225" 
    xhandlers
    flags 
    probability 4582173790952471852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B225" 
    xhandlers
    flags 
    probability 4586677390579842348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3500 
=== Usages ===
=== Predecessor ===
v3495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3500  <|@  <|@
f <@*|@fixed>@ <|@
tid v3500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v3492 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B224" "B227" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599921682799152171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1904 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v4251 
=== Succesors ===
next: j1907 
=== Usages ===
v4256 v1908 
=== Predecessor ===
v561 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4251 #next: j1907  <|@  <|@
f <@~|@floating>@ <|@
tid v4256 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v1904 
index: - 
=== Succesors ===
=== Usages ===
j1907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4256 
=== Succesors ===
next: i69 
=== Usages ===
v1908 
=== Predecessor ===
v1904 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4256 #next: i69  <|@  <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1d95d547
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j1907 
metaspaceMethod: v1904 
arguments: a516 a927 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j1907 metaspaceMethod: v1904 arguments: a516 a927  <|@  <|@
tid ?3292 <|@
d <@d|@=== Debug Properties ===
bci: 82
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 523
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
bci: 82
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1908 
stateDuring: ?3292 
=== Succesors ===
next: v1319 
=== Usages ===
v1317 
=== Predecessor ===
j1907 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1908 stateDuring: ?3292 #next: v1319  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i13 
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i69 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
trueSuccessorProbability: 0.10261582098959976
=== Inputs ===
condition: v1317 
=== Succesors ===
trueSuccessor: v1320 
falseSuccessor: v1318 
=== Usages ===
=== Predecessor ===
i69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1317 #trueSuccessor: v1320 #falseSuccessor: v1318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B225" 
    xhandlers
    flags 
    probability 4585291663706160091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1321  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B219" "B211" "B221" "B224" "B222" 
    successors "B226" 
    xhandlers
    flags 
    probability 4592924920330780472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1251 v1253 v1282 v1321 v3500 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1251 v1253 v1282 v1321 v3500 #next: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors 
    xhandlers
    flags 
    probability 4592924920330780472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599280327465356464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:525) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1322 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1322  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 5
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3396 
=== Usages ===
=== Predecessor ===
v2561 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3396  <|@  <|@
f <@~|@floating>@ <|@
tid i3397 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -509459
stableDimension: 0
stamp: i32 [-509459] ⇊00000000fff839ed ⇈00000000fff839ed
stampKind: i32
value: int[-509459|0xfffffffffff839ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3394 
=== Usages ===
=== Predecessor ===
v2556 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3394  <|@  <|@
f <@~|@floating>@ <|@
tid i3395 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -507155
stableDimension: 0
stamp: i32 [-507155] ⇊00000000fff842ed ⇈00000000fff842ed
stampKind: i32
value: int[-507155|0xfffffffffff842ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3392 
=== Usages ===
=== Predecessor ===
v2551 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3392  <|@  <|@
f <@~|@floating>@ <|@
tid i3393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -505875
stableDimension: 0
stamp: i32 [-505875] ⇊00000000fff847ed ⇈00000000fff847ed
stampKind: i32
value: int[-505875|0xfffffffffff847ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3390 
=== Usages ===
=== Predecessor ===
v2546 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3390  <|@  <|@
f <@~|@floating>@ <|@
tid i3391 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -511003
stableDimension: 0
stamp: i32 [-511003] ⇊00000000fff833e5 ⇈00000000fff833e5
stampKind: i32
value: int[-511003|0xfffffffffff833e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3384 
=== Usages ===
=== Predecessor ===
v2531 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3384  <|@  <|@
f <@~|@floating>@ <|@
tid i3385 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -503091
stableDimension: 0
stamp: i32 [-503091] ⇊00000000fff852cd ⇈00000000fff852cd
stampKind: i32
value: int[-503091|0xfffffffffff852cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B192" "B186" "B190" "B232" "B231" "B230" "B229" "B228" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3371 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-511003 - -491283] ⇊00000000fff800c5 ⇈00000000fff8fffd
valueDescription: i32
=== Inputs ===
merge: v3368 
values: i3375 i3379 i3383 i3385 i3391 i3393 i3395 i3397 
=== Succesors ===
=== Usages ===
v3373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3368 values: i3375 i3379 i3383 i3385 i3391 i3393 i3395 i3397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3374 v3378 v3382 v3384 v3390 v3392 v3394 v3396 
=== Succesors ===
next: v3373 
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3374 v3378 v3382 v3384 v3390 v3392 v3394 v3396 #next: v3373  <|@  <|@
f <@*|@fixed>@ <|@
tid v3373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?514 
actionAndReason: i3371 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3368 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?514 actionAndReason: i3371 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3452 
=== Usages ===
=== Predecessor ===
v2496 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3452  <|@  <|@
f <@~|@floating>@ <|@
tid i3453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -480539
stableDimension: 0
stamp: i32 [-480539] ⇊00000000fff8aae5 ⇈00000000fff8aae5
stampKind: i32
value: int[-480539|0xfffffffffff8aae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3450 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3450  <|@  <|@
f <@~|@floating>@ <|@
tid i3451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -478995
stableDimension: 0
stamp: i32 [-478995] ⇊00000000fff8b0ed ⇈00000000fff8b0ed
stampKind: i32
value: int[-478995|0xfffffffffff8b0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3446 
=== Usages ===
=== Predecessor ===
v2481 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3446  <|@  <|@
f <@~|@floating>@ <|@
tid i3447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -476691
stableDimension: 0
stamp: i32 [-476691] ⇊00000000fff8b9ed ⇈00000000fff8b9ed
stampKind: i32
value: int[-476691|0xfffffffffff8b9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3444 
=== Usages ===
=== Predecessor ===
v2476 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3444  <|@  <|@
f <@~|@floating>@ <|@
tid i3445 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -475411
stableDimension: 0
stamp: i32 [-475411] ⇊00000000fff8beed ⇈00000000fff8beed
stampKind: i32
value: int[-475411|0xfffffffffff8beed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3437 
=== Usages ===
=== Predecessor ===
v2466 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3437  <|@  <|@
f <@~|@floating>@ <|@
tid i3438 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -472627
stableDimension: 0
stamp: i32 [-472627] ⇊00000000fff8c9cd ⇈00000000fff8c9cd
stampKind: i32
value: int[-472627|0xfffffffffff8c9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B173" "B237" "B236" "B177" "B235" "B234" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3439 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-480539 - -472627] ⇊00000000fff880c5 ⇈00000000fff8fffd
valueDescription: i32
=== Inputs ===
merge: v3436 
values: i3438 i3443 i3445 i3447 i3449 i3451 i3453 
=== Succesors ===
=== Usages ===
v3441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3436 values: i3438 i3443 i3445 i3447 i3449 i3451 i3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3437 v3442 v3444 v3446 v3448 v3450 v3452 
=== Succesors ===
next: v3441 
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3437 v3442 v3444 v3446 v3448 v3450 v3452 #next: v3441  <|@  <|@
tid ?1382 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1386 
=== Succesors ===
=== Usages ===
v3441 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1386  <|@  <|@
f <@*|@fixed>@ <|@
tid v3441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1382 
actionAndReason: i3439 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3436 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1382 actionAndReason: i3439 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3326 
=== Usages ===
=== Predecessor ===
v2368 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3326  <|@  <|@
f <@~|@floating>@ <|@
tid i3327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -421427
stableDimension: 0
stamp: i32 [-421427] ⇊00000000fff991cd ⇈00000000fff991cd
stampKind: i32
value: int[-421427|0xfffffffffff991cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3308 
=== Predecessor ===
v2367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3320 
=== Usages ===
=== Predecessor ===
v2316 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3320  <|@  <|@
f <@~|@floating>@ <|@
tid i3321 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -417075
stableDimension: 0
stamp: i32 [-417075] ⇊00000000fff9a2cd ⇈00000000fff9a2cd
stampKind: i32
value: int[-417075|0xfffffffffff9a2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3308 
=== Predecessor ===
v2315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B76" "B241" "B240" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3311 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-423179 - -407563] ⇊00000000fff980c5 ⇈00000000fff9fffd
valueDescription: i32
=== Inputs ===
merge: v3308 
values: i3317 i3321 i3327 
=== Succesors ===
=== Usages ===
v3313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3308 values: i3317 i3321 i3327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3316 v3320 v3326 
=== Succesors ===
next: v3313 
=== Usages ===
i3311 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3316 v3320 v3326 #next: v3313  <|@  <|@
f <@*|@fixed>@ <|@
tid v3313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i3311 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3308 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i3311 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3459 
=== Usages ===
=== Predecessor ===
v2272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3459  <|@  <|@
f <@~|@floating>@ <|@
tid i3461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -516915
stableDimension: 0
stamp: i32 [-516915] ⇊00000000fff81ccd ⇈00000000fff81ccd
stampKind: i32
value: int[-516915|0xfffffffffff81ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1410 
actionAndReason: i3461 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2271 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1410 actionAndReason: i3461 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3306 
=== Usages ===
=== Predecessor ===
v2264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3306  <|@  <|@
f <@~|@floating>@ <|@
tid i3307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -514355
stableDimension: 0
stamp: i32 [-514355] ⇊00000000fff826cd ⇈00000000fff826cd
stampKind: i32
value: int[-514355|0xfffffffffff826cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v2263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" "B244" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3299 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-514355 - -405267] ⇊00000000fff800c5 ⇈00000000fff9fffd
valueDescription: i32
=== Inputs ===
merge: v3295 
values: i3297 i3305 i3307 
=== Succesors ===
=== Usages ===
v3301 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3295 values: i3297 i3305 i3307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3296 v3304 v3306 
=== Succesors ===
next: v3301 
=== Usages ===
i3299 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3296 v3304 v3306 #next: v3301  <|@  <|@
f <@*|@fixed>@ <|@
tid v3301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i3299 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3295 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i3299 speculation: a3298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2609 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2609  <|@  <|@
f <@~|@floating>@ <|@
tid i2608 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: i32
=== Inputs ===
x: i2592 
y: i98 
=== Succesors ===
=== Usages ===
i2592 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2592 y: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v2591 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2605 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2591  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2591 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v2596 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2591 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:516) [bci: 15]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2595 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2252 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2252  <|@  <|@
f <@~|@floating>@ <|@
tid a3298 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3301 v3487 v3411 v3373 v3419 v3355 v3459 v3345 v3403 v3441 v3467 v3479 v3313 v3365 v3433 v3335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 a2732 v4271 v4280 v4272 a2687 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v4274 a2770 ?459 ?1182 ?1410 v4279 a2760 v4273 a2798 v4387 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 513
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v3301 a3623 a3761 a3669 a3526 a3577 a3715 v4092 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:513) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:513) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v2251 
falseSuccessor: v2249 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v2251 #falseSuccessor: v2249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@311f2cb7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:513) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3296 
=== Usages ===
=== Predecessor ===
v2252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3296  <|@  <|@
f <@~|@floating>@ <|@
tid i3297 <|@
result int[-405267|0xfffffffffff9d0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -405267
stableDimension: 0
stamp: i32 [-405267] ⇊00000000fff9d0ed ⇈00000000fff9d0ed
stampKind: i32
value: int[-405267|0xfffffffffff9d0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v2251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-405267|0xfffffffffff9d0ed]] destination: B1 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:513) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4092 
=== Usages ===
=== Predecessor ===
v2252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4092  <|@  <|@
f <@~|@floating>@ <|@
tid v4279 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v4092 v4094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4092 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:181) [bci: 40]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v4279 
=== Succesors ===
next: v4093 
=== Usages ===
v4276 v3983 v4275 
=== Predecessor ===
v2249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v4279 #next: v4093  <|@  <|@
f <@~|@floating>@ <|@
tid v4275 <|@
result [v2|DWORD * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v4092 
=== Succesors ===
=== Usages ===
v2615 v4093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v4092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4093 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:64) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v4275 
=== Succesors ===
next: v2583 
=== Usages ===
v2580 
=== Predecessor ===
v4092 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4275 #next: v2583  <|@  <|@
f <@~|@floating>@ <|@
tid v2572 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2580 v2615 v2604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2580 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:64) [bci: 14]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4093 
y: v2572 
=== Succesors ===
=== Usages ===
v2583 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4093 y: v2572  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 108]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i99 i170 i177 i185 i192 a3853 a3807 i355 i363 i613 i631 i987 i969 i1175 a3899 i1488 i1538 i2608 a3526 a3577 a3623 a3669 a3715 a3761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:516) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v892 v1317 v71 v108 v1170 v107 v111 i170 i177 i185 i192 i2592 ?287 i355 i363 v1153 i1538 v669 v885 v1343 ?1160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2583 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:64) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2580 
=== Succesors ===
trueSuccessor: v2581 
falseSuccessor: v2582 
=== Usages ===
=== Predecessor ===
v4093 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2580 #trueSuccessor: v2581 #falseSuccessor: v2582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [v2|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:65) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2622 
=== Usages ===
=== Predecessor ===
v2583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2622  <|@  <|@
f <@*|@fixed>@ <|@
tid v2622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3285 
=== Predecessor ===
v2581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2587 
=== Usages ===
=== Predecessor ===
v2583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2587  <|@  <|@
f <@~|@floating>@ <|@
tid v3982 <|@
result meta{HotSpotType<Ljava/util/List;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/util/List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3983 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4092 
y: v3982 
=== Succesors ===
=== Usages ===
v2587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4092 y: v3982  <|@  <|@
f <@*|@fixed>@ <|@
tid v2587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 5]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3983 
=== Succesors ===
trueSuccessor: v2585 
falseSuccessor: v2586 
=== Usages ===
=== Predecessor ===
v2582 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3983 #trueSuccessor: v2585 #falseSuccessor: v2586  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:99) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2623 
=== Usages ===
=== Predecessor ===
v2587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2623  <|@  <|@
f <@*|@fixed>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3285 
=== Predecessor ===
v2585 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2612 
=== Usages ===
=== Predecessor ===
v2587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2612  <|@  <|@
f <@~|@floating>@ <|@
tid v4276 <|@
result [v2|DWORD * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v4092 
=== Succesors ===
=== Usages ===
j2612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v4092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2612 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4276 
=== Succesors ===
next: i2613 
=== Usages ===
v4277 v4278 
=== Predecessor ===
v2586 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4276 #next: i2613  <|@  <|@
f <@~|@floating>@ <|@
tid v4277 <|@
result [v4|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2612 
index: - 
=== Succesors ===
=== Usages ===
i2613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2613 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4277 
=== Succesors ===
next: v2590 
=== Usages ===
v2593 
=== Predecessor ===
j2612 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4277 #next: v2590  <|@  <|@
f <@*|@fixed>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2591 
=== Predecessor ===
i2613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [v2|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B246" 
    successors "B8" "B247" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2592 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2591 
values: i13 i2608 
=== Succesors ===
=== Usages ===
v2593 i2599 i2608 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2591 values: i13 i2608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2590 
=== Succesors ===
next: v2596 
=== Usages ===
i2592 v2595 v2606 v2609 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2590 #next: v2596  <|@  <|@
f <@~|@floating>@ <|@
tid v2593 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2592 
y: i2613 
=== Succesors ===
=== Usages ===
v2596 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2592 y: i2613  <|@  <|@
f <@*|@fixed>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2593 
=== Succesors ===
trueSuccessor: v2594 
falseSuccessor: v2595 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2593 #trueSuccessor: v2594 #falseSuccessor: v2595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B246" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 56]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2614 
=== Usages ===
=== Predecessor ===
v2596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2614  <|@  <|@
f <@~|@floating>@ <|@
tid i2598 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2599 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2592 
y: i2598 
=== Succesors ===
=== Usages ===
i2600 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2592 y: i2598  <|@  <|@
f <@~|@floating>@ <|@
tid i2597 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2600 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2599 
y: i2597 
=== Succesors ===
=== Usages ===
j2601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2599 y: i2597  <|@  <|@
f <@~|@floating>@ <|@
tid j2601 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2600 
=== Succesors ===
=== Usages ===
v4278 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2600  <|@  <|@
f <@~|@floating>@ <|@
tid v4278 <|@
result [v4|QWORD + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2612 
index: j2601 
=== Succesors ===
=== Usages ===
j2614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2614 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4278 
=== Succesors ===
next: v2607 
=== Usages ===
v2603 
=== Predecessor ===
v2594 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4278 #next: v2607  <|@  <|@
f <@~|@floating>@ <|@
tid v2603 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: Klass*
=== Inputs ===
input: j2614 
=== Succesors ===
=== Usages ===
v2604 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2614  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2603 
y: v2572 
=== Succesors ===
=== Usages ===
v2607 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2603 y: v2572  <|@  <|@
f <@*|@fixed>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2604 
=== Succesors ===
trueSuccessor: v2606 
falseSuccessor: v2605 
=== Usages ===
=== Predecessor ===
j2614 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2604 #trueSuccessor: v2606 #falseSuccessor: v2605  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v6|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v7|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v4|QWORD + v9|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 75]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2591 
=== Succesors ===
next: v2615 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2591 #next: v2615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4275 
value: v2572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2624 
=== Usages ===
=== Predecessor ===
v2606 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4275 value: v2572 stateAfter: - lastLocationAccess: - #next: v2624  <|@  <|@
f <@*|@fixed>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3285 
=== Predecessor ===
v2615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD * 8 + 24], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2622 v2623 v2624 
=== Succesors ===
next: v4094 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2622 v2623 v2624 #next: v4094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4094 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4279 
=== Succesors ===
next: v4095 
=== Usages ===
v3989 v3985 v3987 v4089 
=== Predecessor ===
v3285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4279 #next: v4095  <|@  <|@
f <@~|@floating>@ <|@
tid v4280 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v4095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4095 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4280 
=== Succesors ===
next: v469 
=== Usages ===
v3991 v3990 
=== Predecessor ===
v4094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4280 #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v3986 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3987 v3990 v4064 v4070 v4074 v4077 v4080 v4083 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3990 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4095 
y: v3986 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4095 y: v3986  <|@  <|@
f <@~|@floating>@ <|@
tid v3987 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4094 
y: v3986 
=== Succesors ===
=== Usages ===
v1218 v492 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4094 y: v3986  <|@  <|@
f <@~|@floating>@ <|@
tid v3988 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3989 v4063 v4067 v4068 v4069 v4072 v4073 v4076 v4079 v4082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4274 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i4100 i4101 i4103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4019 <|@
result meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3693 v3739 v3785 v3877 v4059 v4061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2803 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3869 j4091 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3984 <|@
result meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3985 v3991 v4089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3557 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3559 v3605 v3651 v3697 v3743 v3789 v3835 v3881 v3927 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3997 <|@
result meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3554 v3601 v3647 v3831 v3923 v4060 v4062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2838 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3915 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2838 
=== Succesors ===
=== Usages ===
v4316 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2838  <|@  <|@
f <@~|@floating>@ <|@
tid v4316 <|@
result [v15|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3915 
index: - 
=== Succesors ===
=== Usages ===
j3919 j3597 j3550 j3643 j3827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3915 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3994 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a3526 a3577 a3623 a3669 a3715 a3761 a3807 a3853 a3899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3512 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a3526 a3577 a3623 a3669 a3715 a3761 a3807 a3853 a3899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2610 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4045 j3992 j4052 j4038 j4009 j4016 j4024 j4031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4272 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i4097 i4098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5141586199414127
=== Inputs ===
condition: v3990 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
v4095 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3990 #trueSuccessor: v465 #falseSuccessor: v468  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5141586199414127 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4096 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4096  <|@  <|@
f <@~|@floating>@ <|@
tid v4271 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i4096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4096 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4271 
=== Succesors ===
next: v2260 
=== Usages ===
v885 
=== Predecessor ===
v465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4271 #next: v2260  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4096 
y: i13 
=== Succesors ===
=== Usages ===
v2260 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4096 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2260 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v2259 
falseSuccessor: v2257 
=== Usages ===
=== Predecessor ===
i4096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v2259 #falseSuccessor: v2257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3304 
=== Usages ===
=== Predecessor ===
v2260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3304  <|@  <|@
f <@~|@floating>@ <|@
tid i3305 <|@
result int[-513555|0xfffffffffff829ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -513555
stableDimension: 0
stamp: i32 [-513555] ⇊00000000fff829ed ⇈00000000fff829ed
stampKind: i32
value: int[-513555|0xfffffffffff829ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v2259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-513555|0xfffffffffff829ed]] destination: B12 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4097 
=== Usages ===
=== Predecessor ===
v2260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4097 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4272 
=== Succesors ===
next: v1218 
=== Usages ===
v3653 v3561 v3607 
=== Predecessor ===
v2257 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4272 #next: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid a2687 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v3565 v3563 v3609 v3611 v3655 v3657 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.5085168709992406
=== Inputs ===
condition: v3987 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1217 
=== Usages ===
=== Predecessor ===
i4097 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3987 #trueSuccessor: v1216 #falseSuccessor: v1217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3514 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3514 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3533 
=== Usages ===
v4281 v4282 
=== Predecessor ===
v1216 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3533  <|@  <|@
f <@~|@floating>@ <|@
tid v4281 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3514 
index: - 
=== Succesors ===
=== Usages ===
j3533 v3535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3533 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4281 
=== Succesors ===
next: j3534 
=== Usages ===
j3992 j3539 v4335 
=== Predecessor ===
j3514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4281 #next: j3534  <|@  <|@
f <@~|@floating>@ <|@
tid v4282 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3514 
index: - 
=== Succesors ===
=== Usages ===
j3534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3534 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4282 
=== Succesors ===
next: v3522 
=== Usages ===
v3519 
=== Predecessor ===
j3533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4282 #next: v3522  <|@  <|@
f <@~|@floating>@ <|@
tid j3992 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3533 
y: j2610 
=== Succesors ===
=== Usages ===
v3519 v3535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3533 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3519 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3534 
y: j3992 
=== Succesors ===
=== Usages ===
v3522 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3534 y: j3992  <|@  <|@
f <@*|@fixed>@ <|@
tid v3522 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3519 
=== Succesors ===
trueSuccessor: v3520 
falseSuccessor: v3521 
=== Usages ===
=== Predecessor ===
j3534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3519 #trueSuccessor: v3520 #falseSuccessor: v3521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v19|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567098666445716554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3526 
=== Usages ===
=== Predecessor ===
v3522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3526 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3527 
=== Usages ===
j3527 
=== Predecessor ===
v3520 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3527 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3526 
=== Succesors ===
next: v3540 
=== Usages ===
j3539 
=== Predecessor ===
a3526 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3526 #next: v3540  <|@  <|@
f <@*|@fixed>@ <|@
tid v3540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
j3527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4596828522603363643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3535 
=== Usages ===
=== Predecessor ===
v3522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4281 
value: j3992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3531 
=== Usages ===
=== Predecessor ===
v3521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4281 value: j3992 stateAfter: - lastLocationAccess: - #next: v3531  <|@  <|@
f <@~|@floating>@ <|@
tid v4335 <|@
result [v19|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3533 
index: - 
=== Succesors ===
=== Usages ===
v3531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3533 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4335 
=== Succesors ===
next: v3538 
=== Usages ===
=== Predecessor ===
v3535 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4335 #next: v3538  <|@  <|@
f <@*|@fixed>@ <|@
tid v3538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
v3531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3539 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3537 
values: j3533 j3527 
=== Succesors ===
=== Usages ===
v4284 v4283 a2684 v4336 v4337 v4338 v4339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3537 values: j3533 j3527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3538 v3540 
=== Succesors ===
next: a2684 
=== Usages ===
j3539 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3538 v3540 #next: a2684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2684 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3539 
=== Succesors ===
next: j3550 
=== Usages ===
a2690 
=== Predecessor ===
v3537 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3539 #next: j3550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3550 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3551 
=== Usages ===
v3551 
=== Predecessor ===
a2684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3551  <|@  <|@
f <@~|@floating>@ <|@
tid v4283 <|@
result [v22|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4283 
value: j3550 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3554 
=== Usages ===
=== Predecessor ===
j3550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4283 value: j3550 stateAfter: - lastLocationAccess: - #next: v3554  <|@  <|@
f <@~|@floating>@ <|@
tid v4284 <|@
result [v22|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4284 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3559 
=== Usages ===
=== Predecessor ===
v3551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4284 value: v3997 stateAfter: - lastLocationAccess: - #next: v3559  <|@  <|@
f <@~|@floating>@ <|@
tid v4336 <|@
result [v22|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4336 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3561 
=== Usages ===
=== Predecessor ===
v3554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4336 value: j3557 stateAfter: - lastLocationAccess: - #next: v3561  <|@  <|@
f <@~|@floating>@ <|@
tid v4337 <|@
result [v22|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4337 
value: i4097 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3563 
=== Usages ===
=== Predecessor ===
v3559 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4337 value: i4097 stateAfter: - lastLocationAccess: - #next: v3563  <|@  <|@
f <@~|@floating>@ <|@
tid v4338 <|@
result [v22|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4338 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3565 
=== Usages ===
=== Predecessor ===
v3561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4338 value: a2687 stateAfter: - lastLocationAccess: - #next: v3565  <|@  <|@
f <@~|@floating>@ <|@
tid v4339 <|@
result [v22|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3539 
index: - 
=== Succesors ===
=== Usages ===
v3565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4339 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2690 
=== Usages ===
=== Predecessor ===
v3563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4339 value: a2687 stateAfter: - lastLocationAccess: - #next: a2690  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2690 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2684 
=== Succesors ===
next: v1179 
=== Usages ===
a1185 
=== Predecessor ===
v3565 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2684 #next: v1179  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
a2690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v22|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*]], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*] + 20], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*] + 24], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*] + 28], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4596646706335347062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3566 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3566 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3581 
=== Usages ===
v4290 v4289 
=== Predecessor ===
v1217 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3581  <|@  <|@
f <@~|@floating>@ <|@
tid v4289 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3566 
index: - 
=== Succesors ===
=== Usages ===
v3583 v3629 j3581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3581 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4289 
=== Succesors ===
next: j3582 
=== Usages ===
v4345 j3587 j3633 j4009 
=== Predecessor ===
j3566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4289 #next: j3582  <|@  <|@
f <@~|@floating>@ <|@
tid v4290 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3566 
index: - 
=== Succesors ===
=== Usages ===
j3582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3582 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4290 
=== Succesors ===
next: v1418 
=== Usages ===
v3617 
=== Predecessor ===
j3581 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4290 #next: v1418  <|@  <|@
f <@~|@floating>@ <|@
tid j4009 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3581 
y: j2610 
=== Succesors ===
=== Usages ===
v3617 v3629 v3583 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3581 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3617 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3582 
y: j4009 
=== Succesors ===
=== Usages ===
v3620 v3574 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3582 y: j4009  <|@  <|@
f <@~|@floating>@ <|@
tid v4345 <|@
result [v25|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3581 
index: - 
=== Succesors ===
=== Usages ===
v3626 v3580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3581 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3985 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4094 
y: v3984 
=== Succesors ===
=== Usages ===
v1418 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4094 y: v3984  <|@  <|@
f <@*|@fixed>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.9885209713024284
=== Inputs ===
condition: v3985 
=== Succesors ===
trueSuccessor: v1416 
falseSuccessor: v1417 
=== Usages ===
=== Predecessor ===
j3582 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3985 #trueSuccessor: v1416 #falseSuccessor: v1417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v25|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3574 
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3574  <|@  <|@
f <@*|@fixed>@ <|@
tid v3574 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3617 
=== Succesors ===
trueSuccessor: v3572 
falseSuccessor: v3573 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3617 #trueSuccessor: v3572 #falseSuccessor: v3573  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4566877838841885647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3577 
=== Usages ===
=== Predecessor ===
v3574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3577 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3578 
=== Usages ===
j3578 
=== Predecessor ===
v3572 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3578 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3577 
=== Succesors ===
next: v3588 
=== Usages ===
j3587 
=== Predecessor ===
a3577 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3577 #next: v3588  <|@  <|@
f <@*|@fixed>@ <|@
tid v3588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3585 
=== Predecessor ===
j3578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596486929903687710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3583 
=== Usages ===
=== Predecessor ===
v3574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4289 
value: j4009 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3580 
=== Usages ===
=== Predecessor ===
v3573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4289 value: j4009 stateAfter: - lastLocationAccess: - #next: v3580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4345 
=== Succesors ===
next: v3586 
=== Usages ===
=== Predecessor ===
v3583 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4345 #next: v3586  <|@  <|@
f <@*|@fixed>@ <|@
tid v3586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3585 
=== Predecessor ===
v3580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3587 <|@
result v29|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3585 
values: j3581 j3578 
=== Succesors ===
=== Usages ===
v4288 v4287 a2694 v4341 v4342 v4343 v4344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3585 values: j3581 j3578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3586 v3588 
=== Succesors ===
next: a2694 
=== Usages ===
j3587 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3586 v3588 #next: a2694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2694 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3587 
=== Succesors ===
next: j3597 
=== Usages ===
a2699 
=== Predecessor ===
v3585 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3587 #next: j3597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3597 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3598 
=== Usages ===
v3598 
=== Predecessor ===
a2694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3598  <|@  <|@
f <@~|@floating>@ <|@
tid v4287 <|@
result [v29|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4287 
value: j3597 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3601 
=== Usages ===
=== Predecessor ===
j3597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4287 value: j3597 stateAfter: - lastLocationAccess: - #next: v3601  <|@  <|@
f <@~|@floating>@ <|@
tid v4288 <|@
result [v29|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4288 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3605 
=== Usages ===
=== Predecessor ===
v3598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4288 value: v3997 stateAfter: - lastLocationAccess: - #next: v3605  <|@  <|@
f <@~|@floating>@ <|@
tid v4341 <|@
result [v29|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4341 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3607 
=== Usages ===
=== Predecessor ===
v3601 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4341 value: j3557 stateAfter: - lastLocationAccess: - #next: v3607  <|@  <|@
f <@~|@floating>@ <|@
tid v4342 <|@
result [v29|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4342 
value: i4097 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3609 
=== Usages ===
=== Predecessor ===
v3605 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4342 value: i4097 stateAfter: - lastLocationAccess: - #next: v3609  <|@  <|@
f <@~|@floating>@ <|@
tid v4343 <|@
result [v29|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4343 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3611 
=== Usages ===
=== Predecessor ===
v3607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4343 value: a2687 stateAfter: - lastLocationAccess: - #next: v3611  <|@  <|@
f <@~|@floating>@ <|@
tid v4344 <|@
result [v29|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3587 
index: - 
=== Succesors ===
=== Usages ===
v3611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4344 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2699 
=== Usages ===
=== Predecessor ===
v3609 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4344 value: a2687 stateAfter: - lastLocationAccess: - #next: a2699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2699 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2694 
=== Succesors ===
next: v1407 
=== Usages ===
a1413 
=== Predecessor ===
v3611 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2694 #next: v1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
a2699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*]], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v29|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 20], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 24], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 28], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[.]] destination: B22 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3620 
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3620  <|@  <|@
f <@*|@fixed>@ <|@
tid v3620 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3617 
=== Succesors ===
trueSuccessor: v3618 
falseSuccessor: v3619 
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3617 #trueSuccessor: v3618 #falseSuccessor: v3619  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4537653897532319400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3623 
=== Usages ===
=== Predecessor ===
v3620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3623 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3624 
=== Usages ===
j3624 
=== Predecessor ===
v3618 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3624 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3623 
=== Succesors ===
next: v3634 
=== Usages ===
j3633 
=== Predecessor ===
a3623 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3623 #next: v3634  <|@  <|@
f <@*|@fixed>@ <|@
tid v3634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3631 
=== Predecessor ===
j3624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567585755083831521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3629 
=== Usages ===
=== Predecessor ===
v3620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4289 
value: j4009 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3626 
=== Usages ===
=== Predecessor ===
v3619 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4289 value: j4009 stateAfter: - lastLocationAccess: - #next: v3626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4345 
=== Succesors ===
next: v3632 
=== Usages ===
=== Predecessor ===
v3629 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4345 #next: v3632  <|@  <|@
f <@*|@fixed>@ <|@
tid v3632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3631 
=== Predecessor ===
v3626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3633 <|@
result v33|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3631 
values: j3581 j3624 
=== Succesors ===
=== Usages ===
v4292 v4291 a2703 v4346 v4347 v4348 v4349 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3631 values: j3581 j3624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3632 v3634 
=== Succesors ===
next: a2703 
=== Usages ===
j3633 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3632 v3634 #next: a2703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2703 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3633 
=== Succesors ===
next: j3643 
=== Usages ===
a2708 
=== Predecessor ===
v3631 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3633 #next: j3643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3643 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3644 
=== Usages ===
v3644 
=== Predecessor ===
a2703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3644  <|@  <|@
f <@~|@floating>@ <|@
tid v4291 <|@
result [v33|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4291 
value: j3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3647 
=== Usages ===
=== Predecessor ===
j3643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4291 value: j3643 stateAfter: - lastLocationAccess: - #next: v3647  <|@  <|@
f <@~|@floating>@ <|@
tid v4292 <|@
result [v33|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4292 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3651 
=== Usages ===
=== Predecessor ===
v3644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4292 value: v3997 stateAfter: - lastLocationAccess: - #next: v3651  <|@  <|@
f <@~|@floating>@ <|@
tid v4346 <|@
result [v33|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4346 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3653 
=== Usages ===
=== Predecessor ===
v3647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4346 value: j3557 stateAfter: - lastLocationAccess: - #next: v3653  <|@  <|@
f <@~|@floating>@ <|@
tid v4347 <|@
result [v33|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4347 
value: i4097 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3655 
=== Usages ===
=== Predecessor ===
v3651 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4347 value: i4097 stateAfter: - lastLocationAccess: - #next: v3655  <|@  <|@
f <@~|@floating>@ <|@
tid v4348 <|@
result [v33|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4348 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3657 
=== Usages ===
=== Predecessor ===
v3653 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4348 value: a2687 stateAfter: - lastLocationAccess: - #next: v3657  <|@  <|@
f <@~|@floating>@ <|@
tid v4349 <|@
result [v33|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3633 
index: - 
=== Succesors ===
=== Usages ===
v3657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3633 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4349 
value: a2687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2708 
=== Usages ===
=== Predecessor ===
v3655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4349 value: a2687 stateAfter: - lastLocationAccess: - #next: a2708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2708 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2703 
=== Succesors ===
next: v1411 
=== Usages ===
a1414 
=== Predecessor ===
v3657 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2703 #next: v1411  <|@  <|@
f <@*|@fixed>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
a2708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v33|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*]], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 20], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 24], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 28], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B26 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" "B244" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2264 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2264  <|@  <|@
f <@~|@floating>@ <|@
tid v3991 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4095 
y: v3984 
=== Succesors ===
=== Usages ===
v2264 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4095 y: v3984  <|@  <|@
f <@*|@fixed>@ <|@
tid v2264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3991 
=== Succesors ===
trueSuccessor: v2261 
falseSuccessor: v2263 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3991 #trueSuccessor: v2261 #falseSuccessor: v2263  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B39" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4098 
=== Usages ===
=== Predecessor ===
v2264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4098 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:849) [bci: 19]
at java.util.ArrayList$ListItr.<init>(ArrayList.java:918) [bci: 7]
at java.util.ArrayList.listIterator(ArrayList.java:829) [bci: 6]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4272 
=== Succesors ===
next: v492 
=== Usages ===
v3745 v3699 v3791 
=== Predecessor ===
v2261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4272 #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid a2732 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v3703 v3701 v3747 v3749 v3793 v3795 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid j4091 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2803 
=== Succesors ===
=== Usages ===
v4380 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2803  <|@  <|@
f <@~|@floating>@ <|@
tid v4380 <|@
result [v13|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j4091 
index: - 
=== Succesors ===
=== Usages ===
j3735 j3781 j3689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4091 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.5085168709992406
=== Inputs ===
condition: v3987 
=== Succesors ===
trueSuccessor: v488 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
i4098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3987 #trueSuccessor: v488 #falseSuccessor: v491  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3658 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3658 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3673 
=== Usages ===
v4293 v4294 
=== Predecessor ===
v488 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3673  <|@  <|@
f <@~|@floating>@ <|@
tid v4293 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3658 
index: - 
=== Succesors ===
=== Usages ===
j3673 v3675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3658 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3673 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4293 
=== Succesors ===
next: j3674 
=== Usages ===
j4016 j3679 v4350 
=== Predecessor ===
j3658 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4293 #next: j3674  <|@  <|@
f <@~|@floating>@ <|@
tid v4294 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3658 
index: - 
=== Succesors ===
=== Usages ===
j3674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3658 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3674 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4294 
=== Succesors ===
next: v3666 
=== Usages ===
v3663 
=== Predecessor ===
j3673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4294 #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid j4016 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3673 
y: j2610 
=== Succesors ===
=== Usages ===
v3663 v3675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3673 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3663 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3674 
y: j4016 
=== Succesors ===
=== Usages ===
v3666 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3674 y: j4016  <|@  <|@
f <@*|@fixed>@ <|@
tid v3666 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3663 
=== Succesors ===
trueSuccessor: v3664 
falseSuccessor: v3665 
=== Usages ===
=== Predecessor ===
j3674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3663 #trueSuccessor: v3664 #falseSuccessor: v3665  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566825922055979378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3669 
=== Usages ===
=== Predecessor ===
v3666 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3669 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3670 
=== Usages ===
j3670 
=== Predecessor ===
v3664 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3670 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3669 
=== Succesors ===
next: v3680 
=== Usages ===
j3679 
=== Predecessor ===
a3669 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3669 #next: v3680  <|@  <|@
f <@*|@fixed>@ <|@
tid v3680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3677 
=== Predecessor ===
j3670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596406621125488950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3675 
=== Usages ===
=== Predecessor ===
v3666 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4293 
value: j4016 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3672 
=== Usages ===
=== Predecessor ===
v3665 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4293 value: j4016 stateAfter: - lastLocationAccess: - #next: v3672  <|@  <|@
f <@~|@floating>@ <|@
tid v4350 <|@
result [v38|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3673 
index: - 
=== Succesors ===
=== Usages ===
v3672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3673 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4350 
=== Succesors ===
next: v3678 
=== Usages ===
=== Predecessor ===
v3675 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4350 #next: v3678  <|@  <|@
f <@*|@fixed>@ <|@
tid v3678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3677 
=== Predecessor ===
v3672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3679 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3677 
values: j3673 j3670 
=== Succesors ===
=== Usages ===
v4296 v4295 a2729 v4351 v4352 v4353 v4354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3677 values: j3673 j3670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3678 v3680 
=== Succesors ===
next: a2729 
=== Usages ===
j3679 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3678 v3680 #next: a2729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2729 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3679 
=== Succesors ===
next: j3689 
=== Usages ===
a2735 
=== Predecessor ===
v3677 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3679 #next: j3689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3689 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4380 
=== Succesors ===
next: v3690 
=== Usages ===
v3690 
=== Predecessor ===
a2729 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4380 #next: v3690  <|@  <|@
f <@~|@floating>@ <|@
tid v4295 <|@
result [v41|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4295 
value: j3689 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3693 
=== Usages ===
=== Predecessor ===
j3689 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4295 value: j3689 stateAfter: - lastLocationAccess: - #next: v3693  <|@  <|@
f <@~|@floating>@ <|@
tid v4296 <|@
result [v41|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3693 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4296 
value: v4019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3697 
=== Usages ===
=== Predecessor ===
v3690 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4296 value: v4019 stateAfter: - lastLocationAccess: - #next: v3697  <|@  <|@
f <@~|@floating>@ <|@
tid v4351 <|@
result [v41|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4351 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3699 
=== Usages ===
=== Predecessor ===
v3693 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4351 value: j3557 stateAfter: - lastLocationAccess: - #next: v3699  <|@  <|@
f <@~|@floating>@ <|@
tid v4352 <|@
result [v41|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3699 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4352 
value: i4098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3701 
=== Usages ===
=== Predecessor ===
v3697 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4352 value: i4098 stateAfter: - lastLocationAccess: - #next: v3701  <|@  <|@
f <@~|@floating>@ <|@
tid v4353 <|@
result [v41|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4353 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3703 
=== Usages ===
=== Predecessor ===
v3699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4353 value: a2732 stateAfter: - lastLocationAccess: - #next: v3703  <|@  <|@
f <@~|@floating>@ <|@
tid v4354 <|@
result [v41|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3679 
index: - 
=== Succesors ===
=== Usages ===
v3703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3679 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3703 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4354 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2735 
=== Usages ===
=== Predecessor ===
v3701 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4354 value: a2732 stateAfter: - lastLocationAccess: - #next: a2735  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2735 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2729 
=== Succesors ===
next: v1178 
=== Usages ===
a1185 
=== Predecessor ===
v3703 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2729 #next: v1178  <|@  <|@
f <@*|@fixed>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
a2735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE v41|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*]], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 20], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 24], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 28], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B17" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1185 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v1177 
values: a2735 a2690 
=== Succesors ===
=== Usages ===
?459 a1186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1177 values: a2735 a2690  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1178 v1179 
=== Succesors ===
next: v2736 
=== Usages ===
a1185 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1178 v1179 #next: v2736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2736 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: i4099 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i4099  <|@  <|@
f <@~|@floating>@ <|@
tid v4273 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i4099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4099 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4273 
=== Succesors ===
next: v2268 
=== Usages ===
v892 
=== Predecessor ===
v2736 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4273 #next: v2268  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4099 
y: i13 
=== Succesors ===
=== Usages ===
v2268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4099 y: i13  <|@  <|@
tid ?459 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 518
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - a1185 
=== Succesors ===
=== Usages ===
v2266 a3807 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - a1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v892 
=== Succesors ===
trueSuccessor: v2267 
falseSuccessor: v2265 
=== Usages ===
=== Predecessor ===
i4099 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v892 #trueSuccessor: v2267 #falseSuccessor: v2265  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2266 
=== Usages ===
=== Predecessor ===
v2268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2266  <|@  <|@
f <@*|@fixed>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 2014
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?459 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2267 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?459  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -515603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v44|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3796 
=== Usages ===
=== Predecessor ===
v2268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3796 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3811 
=== Usages ===
v4305 v4306 
=== Predecessor ===
v2265 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3811  <|@  <|@
f <@~|@floating>@ <|@
tid v4305 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3796 
index: - 
=== Succesors ===
=== Usages ===
j3811 v3813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3796 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3811 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4305 
=== Succesors ===
next: j3812 
=== Usages ===
j4038 j3817 v4365 
=== Predecessor ===
j3796 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4305 #next: j3812  <|@  <|@
f <@~|@floating>@ <|@
tid v4306 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3796 
index: - 
=== Succesors ===
=== Usages ===
j3812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3796 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3812 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4306 
=== Succesors ===
next: v3804 
=== Usages ===
v3801 
=== Predecessor ===
j3811 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4306 #next: v3804  <|@  <|@
f <@~|@floating>@ <|@
tid j4038 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3811 
y: j2610 
=== Succesors ===
=== Usages ===
v3801 v3813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3811 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3801 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3812 
y: j4038 
=== Succesors ===
=== Usages ===
v3804 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3812 y: j4038  <|@  <|@
f <@*|@fixed>@ <|@
tid v3804 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3801 
=== Succesors ===
trueSuccessor: v3802 
falseSuccessor: v3803 
=== Usages ===
=== Predecessor ===
j3812 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3801 #trueSuccessor: v3802 #falseSuccessor: v3803  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v46|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4571465893878218462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3807 
=== Usages ===
=== Predecessor ===
v3804 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3807 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?459 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3808 
=== Usages ===
j3808 
=== Predecessor ===
v3802 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?459 arguments: v3512 i3994 i98 #next: j3808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3808 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3807 
=== Succesors ===
next: v3818 
=== Usages ===
j3817 
=== Predecessor ===
a3807 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3807 #next: v3818  <|@  <|@
f <@*|@fixed>@ <|@
tid v3818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3815 
=== Predecessor ===
j3808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v44|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4601121171491796793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3813 
=== Usages ===
=== Predecessor ===
v3804 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3813 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4305 
value: j4038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3810 
=== Usages ===
=== Predecessor ===
v3803 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4305 value: j4038 stateAfter: - lastLocationAccess: - #next: v3810  <|@  <|@
f <@~|@floating>@ <|@
tid v4365 <|@
result [v46|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3811 
index: - 
=== Succesors ===
=== Usages ===
v3810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3811 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4365 
=== Succesors ===
next: v3816 
=== Usages ===
=== Predecessor ===
v3813 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4365 #next: v3816  <|@  <|@
f <@*|@fixed>@ <|@
tid v3816 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3815 
=== Predecessor ===
v3810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v46|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors "B57" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3817 <|@
result v49|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3815 
values: j3811 j3808 
=== Succesors ===
=== Usages ===
v4308 v4307 a2757 v4366 v4367 v4368 v4369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3815 values: j3811 j3808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3816 v3818 
=== Succesors ===
next: a2757 
=== Usages ===
j3817 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3816 v3818 #next: a2757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2757 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3817 
=== Succesors ===
next: j3827 
=== Usages ===
a2763 
=== Predecessor ===
v3815 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3817 #next: j3827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3827 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3828 
=== Usages ===
v3828 
=== Predecessor ===
a2757 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3828  <|@  <|@
f <@~|@floating>@ <|@
tid v4307 <|@
result [v49|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4307 
value: j3827 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3831 
=== Usages ===
=== Predecessor ===
j3827 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4307 value: j3827 stateAfter: - lastLocationAccess: - #next: v3831  <|@  <|@
f <@~|@floating>@ <|@
tid v4308 <|@
result [v49|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4308 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3835 
=== Usages ===
=== Predecessor ===
v3828 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4308 value: v3997 stateAfter: - lastLocationAccess: - #next: v3835  <|@  <|@
f <@~|@floating>@ <|@
tid v4366 <|@
result [v49|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4366 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i4100 
=== Usages ===
=== Predecessor ===
v3831 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4366 value: j3557 stateAfter: - lastLocationAccess: - #next: i4100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4100 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4274 
=== Succesors ===
next: v3837 
=== Usages ===
v3837 
=== Predecessor ===
v3835 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4274 #next: v3837  <|@  <|@
f <@~|@floating>@ <|@
tid v4367 <|@
result [v49|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4367 
value: i4100 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3839 
=== Usages ===
=== Predecessor ===
i4100 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4367 value: i4100 stateAfter: - lastLocationAccess: - #next: v3839  <|@  <|@
f <@~|@floating>@ <|@
tid v4368 <|@
result [v49|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2760 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v3841 v3839 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4368 
value: a2760 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3841 
=== Usages ===
=== Predecessor ===
v3837 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4368 value: a2760 stateAfter: - lastLocationAccess: - #next: v3841  <|@  <|@
f <@~|@floating>@ <|@
tid v4369 <|@
result [v49|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3817 
index: - 
=== Succesors ===
=== Usages ===
v3841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4369 
value: a2760 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2763 
=== Usages ===
=== Predecessor ===
v3839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4369 value: a2760 stateAfter: - lastLocationAccess: - #next: a2763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2763 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2757 
=== Succesors ===
next: v489 
=== Usages ===
a484 
=== Predecessor ===
v3841 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2757 #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
a2763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v49|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*]], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 20], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 24], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 28], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.], v44|QWORD[.]] destination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B40" "B48" 
    xhandlers
    flags 
    probability 4596234818372127850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v4089 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4094 
y: v3984 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4094 y: v3984  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 0.9885209713024284
=== Inputs ===
condition: v4089 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4089 #trueSuccessor: v497 #falseSuccessor: v500  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3704 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3704 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3719 
=== Usages ===
v4297 v4298 
=== Predecessor ===
v497 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3719  <|@  <|@
f <@~|@floating>@ <|@
tid v4297 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3704 
index: - 
=== Succesors ===
=== Usages ===
j3719 v3721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3719 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4297 
=== Succesors ===
next: j3720 
=== Usages ===
j4024 j3725 v4355 
=== Predecessor ===
j3704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4297 #next: j3720  <|@  <|@
f <@~|@floating>@ <|@
tid v4298 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3704 
index: - 
=== Succesors ===
=== Usages ===
j3720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3720 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4298 
=== Succesors ===
next: v3712 
=== Usages ===
v3709 
=== Predecessor ===
j3719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4298 #next: v3712  <|@  <|@
f <@~|@floating>@ <|@
tid j4024 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3719 
y: j2610 
=== Succesors ===
=== Usages ===
v3709 v3721 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3719 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3709 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3720 
y: j4024 
=== Succesors ===
=== Usages ===
v3712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3720 y: j4024  <|@  <|@
f <@*|@fixed>@ <|@
tid v3712 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3709 
=== Succesors ===
trueSuccessor: v3710 
falseSuccessor: v3711 
=== Usages ===
=== Predecessor ===
j3720 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3709 #trueSuccessor: v3710 #falseSuccessor: v3711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v54|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4566584490871567730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3715 
=== Usages ===
=== Predecessor ===
v3712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3715 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3716 
=== Usages ===
j3716 
=== Predecessor ===
v3710 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3716 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3715 
=== Succesors ===
next: v3726 
=== Usages ===
j3725 
=== Predecessor ===
a3715 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3715 #next: v3726  <|@  <|@
f <@*|@fixed>@ <|@
tid v3726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3723 
=== Predecessor ===
j3716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596083841613113168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3721 
=== Usages ===
=== Predecessor ===
v3712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3721 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4297 
value: j4024 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3718 
=== Usages ===
=== Predecessor ===
v3711 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4297 value: j4024 stateAfter: - lastLocationAccess: - #next: v3718  <|@  <|@
f <@~|@floating>@ <|@
tid v4355 <|@
result [v54|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3719 
index: - 
=== Succesors ===
=== Usages ===
v3718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3719 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4355 
=== Succesors ===
next: v3724 
=== Usages ===
=== Predecessor ===
v3721 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4355 #next: v3724  <|@  <|@
f <@*|@fixed>@ <|@
tid v3724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3723 
=== Predecessor ===
v3718 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3725 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3723 
values: j3719 j3716 
=== Succesors ===
=== Usages ===
v4300 v4299 a2739 v4356 v4357 v4358 v4359 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3723 values: j3719 j3716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3724 v3726 
=== Succesors ===
next: a2739 
=== Usages ===
j3725 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3724 v3726 #next: a2739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2739 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3725 
=== Succesors ===
next: j3735 
=== Usages ===
a2744 
=== Predecessor ===
v3723 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3725 #next: j3735  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3735 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4380 
=== Succesors ===
next: v3736 
=== Usages ===
v3736 
=== Predecessor ===
a2739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4380 #next: v3736  <|@  <|@
f <@~|@floating>@ <|@
tid v4299 <|@
result [v57|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4299 
value: j3735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3739 
=== Usages ===
=== Predecessor ===
j3735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4299 value: j3735 stateAfter: - lastLocationAccess: - #next: v3739  <|@  <|@
f <@~|@floating>@ <|@
tid v4300 <|@
result [v57|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4300 
value: v4019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3743 
=== Usages ===
=== Predecessor ===
v3736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4300 value: v4019 stateAfter: - lastLocationAccess: - #next: v3743  <|@  <|@
f <@~|@floating>@ <|@
tid v4356 <|@
result [v57|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4356 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3745 
=== Usages ===
=== Predecessor ===
v3739 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4356 value: j3557 stateAfter: - lastLocationAccess: - #next: v3745  <|@  <|@
f <@~|@floating>@ <|@
tid v4357 <|@
result [v57|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4357 
value: i4098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3747 
=== Usages ===
=== Predecessor ===
v3743 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4357 value: i4098 stateAfter: - lastLocationAccess: - #next: v3747  <|@  <|@
f <@~|@floating>@ <|@
tid v4358 <|@
result [v57|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4358 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3749 
=== Usages ===
=== Predecessor ===
v3745 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4358 value: a2732 stateAfter: - lastLocationAccess: - #next: v3749  <|@  <|@
f <@~|@floating>@ <|@
tid v4359 <|@
result [v57|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3725 
index: - 
=== Succesors ===
=== Usages ===
v3749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4359 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2744 
=== Usages ===
=== Predecessor ===
v3747 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4359 value: a2732 stateAfter: - lastLocationAccess: - #next: a2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2744 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2739 
=== Succesors ===
next: v1406 
=== Usages ===
a1413 
=== Predecessor ===
v3749 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2739 #next: v1406  <|@  <|@
f <@*|@fixed>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
a2744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*]], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v57|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 20], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 24], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 28], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B22" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1413 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v1405 
values: a2744 a2699 
=== Succesors ===
=== Usages ===
a1186 ?1182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1405 values: a2744 a2699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1406 v1407 
=== Succesors ===
next: v2745 
=== Usages ===
a1413 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1406 v1407 #next: v2745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2745 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3842 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3842 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3857 
=== Usages ===
v4309 v4310 
=== Predecessor ===
v2745 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3857  <|@  <|@
f <@~|@floating>@ <|@
tid v4309 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3842 
index: - 
=== Succesors ===
=== Usages ===
j3857 v3859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3857 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4309 
=== Succesors ===
next: j3858 
=== Usages ===
j4045 j3863 v4370 
=== Predecessor ===
j3842 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4309 #next: j3858  <|@  <|@
f <@~|@floating>@ <|@
tid v4310 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3842 
index: - 
=== Succesors ===
=== Usages ===
j3858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3842 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3858 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4310 
=== Succesors ===
next: v3850 
=== Usages ===
v3847 
=== Predecessor ===
j3857 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4310 #next: v3850  <|@  <|@
f <@~|@floating>@ <|@
tid j4045 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3857 
y: j2610 
=== Succesors ===
=== Usages ===
v3847 v3859 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3857 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3847 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3858 
y: j4045 
=== Succesors ===
=== Usages ===
v3850 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3858 y: j4045  <|@  <|@
f <@*|@fixed>@ <|@
tid v3850 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3847 
=== Succesors ===
trueSuccessor: v3848 
falseSuccessor: v3849 
=== Usages ===
=== Predecessor ===
j3858 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3847 #trueSuccessor: v3848 #falseSuccessor: v3849  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v61|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571251147304625988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3853 
=== Usages ===
=== Predecessor ===
v3850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3853  <|@  <|@
tid ?1182 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 518
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - a1413 
=== Succesors ===
=== Usages ===
a3853 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - a1413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3853 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1182 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3854 
=== Usages ===
j3854 
=== Predecessor ===
v3848 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1182 arguments: v3512 i3994 i98 #next: j3854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3854 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3853 
=== Succesors ===
next: v3864 
=== Usages ===
j3863 
=== Predecessor ===
a3853 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3853 #next: v3864  <|@  <|@
f <@*|@fixed>@ <|@
tid v3864 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3861 
=== Predecessor ===
j3854 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v60|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4600788985385770935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3859 
=== Usages ===
=== Predecessor ===
v3850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4309 
value: j4045 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3856 
=== Usages ===
=== Predecessor ===
v3849 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4309 value: j4045 stateAfter: - lastLocationAccess: - #next: v3856  <|@  <|@
f <@~|@floating>@ <|@
tid v4370 <|@
result [v61|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3857 
index: - 
=== Succesors ===
=== Usages ===
v3856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3857 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4370 
=== Succesors ===
next: v3862 
=== Usages ===
=== Predecessor ===
v3859 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4370 #next: v3862  <|@  <|@
f <@*|@fixed>@ <|@
tid v3862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3861 
=== Predecessor ===
v3856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3863 <|@
result v64|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3861 
values: j3857 j3854 
=== Succesors ===
=== Usages ===
v4313 v4312 a2767 v4371 v4372 v4373 v4374 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3861 values: j3857 j3854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3862 v3864 
=== Succesors ===
next: a2767 
=== Usages ===
j3863 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3862 v3864 #next: a2767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2767 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3863 
=== Succesors ===
next: j3873 
=== Usages ===
a2773 
=== Predecessor ===
v3861 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3863 #next: j3873  <|@  <|@
f <@~|@floating>@ <|@
tid j3869 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2803 
=== Succesors ===
=== Usages ===
v4311 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2803  <|@  <|@
f <@~|@floating>@ <|@
tid v4311 <|@
result [v13|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3869 
index: - 
=== Succesors ===
=== Usages ===
j3873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3869 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3873 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4311 
=== Succesors ===
next: v3874 
=== Usages ===
v3874 
=== Predecessor ===
a2767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4311 #next: v3874  <|@  <|@
f <@~|@floating>@ <|@
tid v4312 <|@
result [v64|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4312 
value: j3873 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3877 
=== Usages ===
=== Predecessor ===
j3873 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4312 value: j3873 stateAfter: - lastLocationAccess: - #next: v3877  <|@  <|@
f <@~|@floating>@ <|@
tid v4313 <|@
result [v64|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4313 
value: v4019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3881 
=== Usages ===
=== Predecessor ===
v3874 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4313 value: v4019 stateAfter: - lastLocationAccess: - #next: v3881  <|@  <|@
f <@~|@floating>@ <|@
tid v4371 <|@
result [v64|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4371 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i4101 
=== Usages ===
=== Predecessor ===
v3877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4371 value: j3557 stateAfter: - lastLocationAccess: - #next: i4101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4101 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:849) [bci: 19]
at java.util.ArrayList$ListItr.<init>(ArrayList.java:918) [bci: 7]
at java.util.ArrayList.listIterator(ArrayList.java:829) [bci: 6]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4274 
=== Succesors ===
next: v3883 
=== Usages ===
v3883 
=== Predecessor ===
v3881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4274 #next: v3883  <|@  <|@
f <@~|@floating>@ <|@
tid v4372 <|@
result [v64|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4372 
value: i4101 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3885 
=== Usages ===
=== Predecessor ===
i4101 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4372 value: i4101 stateAfter: - lastLocationAccess: - #next: v3885  <|@  <|@
f <@~|@floating>@ <|@
tid v4373 <|@
result [v64|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2770 <|@
result v68|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v3887 v3885 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3885 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4373 
value: a2770 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3887 
=== Usages ===
=== Predecessor ===
v3883 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4373 value: a2770 stateAfter: - lastLocationAccess: - #next: v3887  <|@  <|@
f <@~|@floating>@ <|@
tid v4374 <|@
result [v64|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3863 
index: - 
=== Succesors ===
=== Usages ===
v3887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4374 
value: a2770 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2773 
=== Usages ===
=== Predecessor ===
v3885 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4374 value: a2770 stateAfter: - lastLocationAccess: - #next: a2773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2773 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2767 
=== Succesors ===
next: v498 
=== Usages ===
a484 
=== Predecessor ===
v3887 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2767 #next: v498  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
a2773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE v64|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*]], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v64|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*] + 20], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*] + 24], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*] + 28], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.], v60|QWORD[.]] destination: B47 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: j3750 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3750 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3765 
=== Usages ===
v4301 v4302 
=== Predecessor ===
v500 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3765  <|@  <|@
f <@~|@floating>@ <|@
tid v4301 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3750 
index: - 
=== Succesors ===
=== Usages ===
j3765 v3767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3750 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3765 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4301 
=== Succesors ===
next: j3766 
=== Usages ===
j4031 j3771 v4360 
=== Predecessor ===
j3750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4301 #next: j3766  <|@  <|@
f <@~|@floating>@ <|@
tid v4302 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3750 
index: - 
=== Succesors ===
=== Usages ===
j3766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3750 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3766 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4302 
=== Succesors ===
next: v3758 
=== Usages ===
v3755 
=== Predecessor ===
j3765 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4302 #next: v3758  <|@  <|@
f <@~|@floating>@ <|@
tid j4031 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3765 
y: j2610 
=== Succesors ===
=== Usages ===
v3755 v3767 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3765 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3755 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3766 
y: j4031 
=== Succesors ===
=== Usages ===
v3758 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3766 y: j4031  <|@  <|@
f <@*|@fixed>@ <|@
tid v3758 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3755 
=== Succesors ===
trueSuccessor: v3756 
falseSuccessor: v3757 
=== Usages ===
=== Predecessor ===
j3766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3755 #trueSuccessor: v3756 #falseSuccessor: v3757  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v69|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4537266573730721232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3761 
=== Usages ===
=== Predecessor ===
v3758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3761 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3762 
=== Usages ===
j3762 
=== Predecessor ===
v3756 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v3512 i3994 i98 #next: j3762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3762 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3761 
=== Succesors ===
next: v3772 
=== Usages ===
j3771 
=== Predecessor ===
a3761 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3761 #next: v3772  <|@  <|@
f <@*|@fixed>@ <|@
tid v3772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3769 
=== Predecessor ===
j3762 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4567286184331032938
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3767 
=== Usages ===
=== Predecessor ===
v3758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3767 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4301 
value: j4031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3764 
=== Usages ===
=== Predecessor ===
v3757 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4301 value: j4031 stateAfter: - lastLocationAccess: - #next: v3764  <|@  <|@
f <@~|@floating>@ <|@
tid v4360 <|@
result [v69|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3765 
index: - 
=== Succesors ===
=== Usages ===
v3764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4360 
=== Succesors ===
next: v3770 
=== Usages ===
=== Predecessor ===
v3767 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4360 #next: v3770  <|@  <|@
f <@*|@fixed>@ <|@
tid v3770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3769 
=== Predecessor ===
v3764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3771 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3769 
values: j3765 j3762 
=== Succesors ===
=== Usages ===
v4304 v4303 a2748 v4361 v4362 v4363 v4364 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3769 values: j3765 j3762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3770 v3772 
=== Succesors ===
next: a2748 
=== Usages ===
j3771 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3770 v3772 #next: a2748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2748 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3771 
=== Succesors ===
next: j3781 
=== Usages ===
a2753 
=== Predecessor ===
v3769 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3771 #next: j3781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3781 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4380 
=== Succesors ===
next: v3782 
=== Usages ===
v3782 
=== Predecessor ===
a2748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4380 #next: v3782  <|@  <|@
f <@~|@floating>@ <|@
tid v4303 <|@
result [v72|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4303 
value: j3781 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3785 
=== Usages ===
=== Predecessor ===
j3781 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4303 value: j3781 stateAfter: - lastLocationAccess: - #next: v3785  <|@  <|@
f <@~|@floating>@ <|@
tid v4304 <|@
result [v72|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4304 
value: v4019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3789 
=== Usages ===
=== Predecessor ===
v3782 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4304 value: v4019 stateAfter: - lastLocationAccess: - #next: v3789  <|@  <|@
f <@~|@floating>@ <|@
tid v4361 <|@
result [v72|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4361 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3791 
=== Usages ===
=== Predecessor ===
v3785 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4361 value: j3557 stateAfter: - lastLocationAccess: - #next: v3791  <|@  <|@
f <@~|@floating>@ <|@
tid v4362 <|@
result [v72|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4362 
value: i4098 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3793 
=== Usages ===
=== Predecessor ===
v3789 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4362 value: i4098 stateAfter: - lastLocationAccess: - #next: v3793  <|@  <|@
f <@~|@floating>@ <|@
tid v4363 <|@
result [v72|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4363 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3795 
=== Usages ===
=== Predecessor ===
v3791 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4363 value: a2732 stateAfter: - lastLocationAccess: - #next: v3795  <|@  <|@
f <@~|@floating>@ <|@
tid v4364 <|@
result [v72|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3771 
index: - 
=== Succesors ===
=== Usages ===
v3795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3771 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3795 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4364 
value: a2732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2753 
=== Usages ===
=== Predecessor ===
v3793 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4364 value: a2732 stateAfter: - lastLocationAccess: - #next: a2753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2753 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2748 
=== Succesors ===
next: v1409 
=== Usages ===
a1414 
=== Predecessor ===
v3795 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2748 #next: v1409  <|@  <|@
f <@*|@fixed>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
a2753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE v72|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*]], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v72|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 20], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 24], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 28], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B26" 
    successors "B53" "B243" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1414 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v1408 
values: a2753 a2708 
=== Succesors ===
=== Usages ===
a1186 ?1410 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1408 values: a2753 a2708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1409 v1411 
=== Succesors ===
next: v2754 
=== Usages ===
a1414 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1409 v1411 #next: v2754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v2272 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v2272  <|@  <|@
tid ?1410 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 518
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - - - - a1414 
=== Succesors ===
=== Usages ===
v3459 a3899 v4385 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - - - - a1414  <|@  <|@
f <@~|@floating>@ <|@
tid v3989 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4094 
y: v3988 
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4094 y: v3988  <|@  <|@
f <@*|@fixed>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3989 
=== Succesors ===
trueSuccessor: v2269 
falseSuccessor: v2271 
=== Usages ===
=== Predecessor ===
v2754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3989 #trueSuccessor: v2269 #falseSuccessor: v2271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4102 
=== Usages ===
=== Predecessor ===
v2272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4102  <|@  <|@
f <@~|@floating>@ <|@
tid v4387 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a4102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4102 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4387 
=== Succesors ===
next: v4385 
=== Usages ===
v4385 
=== Predecessor ===
v2269 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4387 #next: v4385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1410 
object: a4102 
=== Succesors ===
next: j3888 
=== Usages ===
=== Predecessor ===
a4102 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1410 object: a4102 #next: j3888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3888 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3903 
=== Usages ===
v4314 v4315 
=== Predecessor ===
v4385 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3903  <|@  <|@
f <@~|@floating>@ <|@
tid v4314 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3888 
index: - 
=== Succesors ===
=== Usages ===
j3903 v3905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3903 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4314 
=== Succesors ===
next: j3904 
=== Usages ===
j4052 j3909 v4375 
=== Predecessor ===
j3888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4314 #next: j3904  <|@  <|@
f <@~|@floating>@ <|@
tid v4315 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3888 
index: - 
=== Succesors ===
=== Usages ===
j3904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3888 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3904 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4315 
=== Succesors ===
next: v3896 
=== Usages ===
v3893 
=== Predecessor ===
j3903 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4315 #next: v3896  <|@  <|@
f <@~|@floating>@ <|@
tid j4052 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3903 
y: j2610 
=== Succesors ===
=== Usages ===
v3893 v3905 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3903 y: j2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3893 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3904 
y: j4052 
=== Succesors ===
=== Usages ===
v3896 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3904 y: j4052  <|@  <|@
f <@*|@fixed>@ <|@
tid v3896 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3893 
=== Succesors ===
trueSuccessor: v3894 
falseSuccessor: v3895 
=== Usages ===
=== Predecessor ===
j3904 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3893 #trueSuccessor: v3894 #falseSuccessor: v3895  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v75|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v76|DWORD[.] * 8] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v77|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4541963835258890812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3899 
=== Usages ===
=== Predecessor ===
v3896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3899 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1410 
arguments: v3512 i3994 i98 
=== Succesors ===
next: j3900 
=== Usages ===
j3900 
=== Predecessor ===
v3894 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1410 arguments: v3512 i3994 i98 #next: j3900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3900 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3899 
=== Succesors ===
next: v3910 
=== Usages ===
j3909 
=== Predecessor ===
a3899 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3899 #next: v3910  <|@  <|@
f <@*|@fixed>@ <|@
tid v3910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3907 
=== Predecessor ===
j3900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v75|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571939569334802726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3905 
=== Usages ===
=== Predecessor ===
v3896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4314 
value: j4052 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3902 
=== Usages ===
=== Predecessor ===
v3895 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4314 value: j4052 stateAfter: - lastLocationAccess: - #next: v3902  <|@  <|@
f <@~|@floating>@ <|@
tid v4375 <|@
result [v77|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j3903 
index: - 
=== Succesors ===
=== Usages ===
v3902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v4375 
=== Succesors ===
next: v3908 
=== Usages ===
=== Predecessor ===
v3905 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v4375 #next: v3908  <|@  <|@
f <@*|@fixed>@ <|@
tid v3908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3907 
=== Predecessor ===
v3902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v77|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3909 <|@
result v80|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3907 
values: j3903 j3900 
=== Succesors ===
=== Usages ===
v4318 v4317 a2795 v4376 v4377 v4378 v4379 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3907 values: j3903 j3900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3908 v3910 
=== Succesors ===
next: a2795 
=== Usages ===
j3909 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3908 v3910 #next: a2795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2795 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3909 
=== Succesors ===
next: j3919 
=== Usages ===
a2801 
=== Predecessor ===
v3907 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3909 #next: j3919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3919 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4316 
=== Succesors ===
next: v3920 
=== Usages ===
v3920 
=== Predecessor ===
a2795 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4316 #next: v3920  <|@  <|@
f <@~|@floating>@ <|@
tid v4317 <|@
result [v80|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3920 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4317 
value: j3919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3923 
=== Usages ===
=== Predecessor ===
j3919 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4317 value: j3919 stateAfter: - lastLocationAccess: - #next: v3923  <|@  <|@
f <@~|@floating>@ <|@
tid v4318 <|@
result [v80|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3923 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4318 
value: v3997 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3927 
=== Usages ===
=== Predecessor ===
v3920 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4318 value: v3997 stateAfter: - lastLocationAccess: - #next: v3927  <|@  <|@
f <@~|@floating>@ <|@
tid v4376 <|@
result [v80|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4376 
value: j3557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i4103 
=== Usages ===
=== Predecessor ===
v3923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4376 value: j3557 stateAfter: - lastLocationAccess: - #next: i4103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4103 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList$ListItr.<init>(AbstractList.java:391) [bci: 8]
at java.util.AbstractList.listIterator(AbstractList.java:327) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4274 
=== Succesors ===
next: v3929 
=== Usages ===
v3929 
=== Predecessor ===
v3927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4274 #next: v3929  <|@  <|@
f <@~|@floating>@ <|@
tid v4377 <|@
result [v80|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3929 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4377 
value: i4103 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3931 
=== Usages ===
=== Predecessor ===
i4103 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4377 value: i4103 stateAfter: - lastLocationAccess: - #next: v3931  <|@  <|@
f <@~|@floating>@ <|@
tid v4378 <|@
result [v80|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2798 <|@
result v84|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v3933 v3931 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3931 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4378 
value: a2798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3933 
=== Usages ===
=== Predecessor ===
v3929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4378 value: a2798 stateAfter: - lastLocationAccess: - #next: v3933  <|@  <|@
f <@~|@floating>@ <|@
tid v4379 <|@
result [v80|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3909 
index: - 
=== Succesors ===
=== Usages ===
v3933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3909 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4379 
value: a2798 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2801 
=== Usages ===
=== Predecessor ===
v3931 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4379 value: a2798 stateAfter: - lastLocationAccess: - #next: a2801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2801 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2795 
=== Succesors ===
next: v507 
=== Usages ===
a484 
=== Predecessor ===
v3933 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2795 #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
a2801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*]], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v80|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 20], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 24], y: v84|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 28], y: v84|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.], v75|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" "B47" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a484 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v481 
values: a2763 a2773 a2801 
=== Succesors ===
=== Usages ===
?1460 ?29 ?187 ?1521 v4258 ?1110 v4214 v4213 ?1382 ?1123 ?3292 ?1138 ?1160 ?350 ?113 ?172 ?139 ?287 ?514 ?617 ?1356 v4262 v4320 ?1494 ?925 ?3291 ?973 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: a2763 a2773 a2801  <|@  <|@
f <@~|@floating>@ <|@
tid a1186 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v481 
values: a1185 a1413 a1414 
=== Succesors ===
=== Usages ===
?973 ?29 v4212 ?187 ?1494 ?139 v4243 ?1138 ?1382 ?804 ?3292 v4225 v4249 ?113 v4238 ?172 ?1521 ?1460 v4211 ?514 ?617 ?1356 v4237 v4319 ?925 ?1110 ?1123 v4242 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: a1185 a1413 a1414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v498 v507 
=== Succesors ===
next: v2764 
=== Usages ===
a484 a1186 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v498 v507 #next: v2764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2764 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v4104 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v4104  <|@  <|@
f <@~|@floating>@ <|@
tid v4319 <|@
result [v86|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v4104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4104 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4319 
=== Succesors ===
next: v4105 
=== Usages ===
v4060 v4059 
=== Predecessor ===
v2764 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4319 #next: v4105  <|@  <|@
f <@~|@floating>@ <|@
tid v4320 <|@
result [v85|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
v4105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4105 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4320 
=== Succesors ===
next: v27 
=== Usages ===
v4062 v4061 
=== Predecessor ===
v4104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4320 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v4061 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4105 
y: v4019 
=== Succesors ===
=== Usages ===
v2306 v324 v2368 v2531 v1173 v1346 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4105 y: v4019  <|@  <|@
f <@~|@floating>@ <|@
tid v4062 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4105 
y: v3997 
=== Succesors ===
=== Usages ===
v1404 v2405 v152 v934 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4105 y: v3997  <|@  <|@
f <@~|@floating>@ <|@
tid v4059 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4104 
y: v4019 
=== Succesors ===
=== Usages ===
v1116 v2466 v2316 v299 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4104 y: v4019  <|@  <|@
f <@~|@floating>@ <|@
tid v4060 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4104 
y: v3997 
=== Succesors ===
=== Usages ===
v1390 v526 v126 v2381 v2329 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4104 y: v3997  <|@  <|@
f <@~|@floating>@ <|@
tid v4262 <|@
result [v85|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
v1941 v1960 v1963 v1993 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4258 <|@
result [v85|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
i4188 i4202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4238 <|@
result [v86|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4237 <|@
result [v86|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4225 <|@
result [v86|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
i4138 i4167 i4180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
tid ?187 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
?285 ?230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4213 <|@
result [v85|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
i4115 i4118 i4130 i4143 i4157 i4160 i4190 v1942 v1961 v1964 i4200 v1991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4214 <|@
result [v85|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a484 
index: - 
=== Succesors ===
=== Usages ===
a4113 a4116 a4128 a4141 a4155 a4158 a4186 a4197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a484 index: -  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
?274 ?195 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4211 <|@
result [v86|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
i4108 i4121 i4124 i4127 i4140 i4146 i4149 i4169 i4181 v1872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
v3313 v4107 i4110 v4381 i4120 v4129 i4142 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4212 <|@
result [v86|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
a4106 a4119 a4122 a4125 a4136 a4144 a4147 a4165 a4178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
rawvalue: meta{HotSpotMethod<Object.equals(Object)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.equals(Object)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4065 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4066 v4071 v4075 v4078 v4081 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v4105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD[.], v86|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV [v86|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV [v85|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B201" "B220" "B205" "B209" "B217" "B227" 
    successors "B59" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611999807685976702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.604426603016166
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 6
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: v126 
=== Usages ===
v35 v46 v64 v75 v83 v109 v1147 v1150 v1219 v1301 v1322 v2570 v2470 v2560 v2555 v2550 v2475 v2480 v2290 v2530 v2490 v2305 v2505 v2315 v2525 v2485 v2545 v2347 v2352 v2495 v2362 v2367 v2515 v2450 v2430 v2465 v2440 v2455 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 0.6218287856696522
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v119 #falseSuccessor: v125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6218287856696522 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4106 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4106 <|@
result v90|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: v4107 
=== Usages ===
v4321 v4216 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: v4107  <|@  <|@
f <@~|@floating>@ <|@
tid v4321 <|@
result [v90|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4106 
=== Succesors ===
=== Usages ===
v4107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4107 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4321 
=== Succesors ===
next: i4108 
=== Usages ===
v4066 v4063 v4064 
=== Predecessor ===
a4106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4321 #next: i4108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4108 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v208 
=== Usages ===
?274 v169 ?195 
=== Predecessor ===
v4107 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v4063 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4107 
y: v3988 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4107 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid v4216 <|@
result [v90|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4106 
=== Succesors ===
=== Usages ===
a4109 i4111 a4112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4106  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9202979333724495
=== Inputs ===
condition: v4063 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v207 
=== Usages ===
=== Predecessor ===
i4108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4063 #trueSuccessor: v201 #falseSuccessor: v207  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v91|DWORD = MOV [v90|DWORD[.] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608192491734893793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4109 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4109 <|@
result v93|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4216 
=== Succesors ===
next: i4110 
=== Usages ===
v4217 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4216 #next: i4110  <|@  <|@
f <@~|@floating>@ <|@
tid v4217 <|@
result [v93|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4109 
=== Succesors ===
=== Usages ===
i4110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4110 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4217 
=== Succesors ===
next: v202 
=== Usages ===
i197 
=== Predecessor ===
a4109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4217 #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
i4110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v90|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v94|DWORD = MOV [v93|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD] destination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592304574260960305
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v4064 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4107 
y: v3986 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4107 y: v3986  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9844587133450589
=== Inputs ===
condition: v4064 
=== Succesors ===
trueSuccessor: v213 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4064 #trueSuccessor: v213 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592185836443809187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4111 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4111 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4216 
=== Succesors ===
next: v214 
=== Usages ===
i197 
=== Predecessor ===
v213 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4216 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
i4111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV [v90|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|DWORD] destination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2291 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2291  <|@  <|@
f <@~|@floating>@ <|@
tid v4066 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4107 
y: v4065 
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4107 y: v4065  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4066 
=== Succesors ===
trueSuccessor: v2287 
falseSuccessor: v2290 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4066 #trueSuccessor: v2287 #falseSuccessor: v2290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4112 
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4112 <|@
result v96|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4216 
=== Succesors ===
next: v4381 
=== Usages ===
a1624 v4381 
=== Predecessor ===
v2287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4216 #next: v4381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
object: a4112 
=== Succesors ===
next: i271 
=== Usages ===
=== Predecessor ===
a4112 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?29 object: a4112 #next: i271  <|@  <|@
f <@~|@floating>@ <|@
tid a1624 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4112 
=== Succesors ===
=== Usages ===
v1628 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4112  <|@  <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4911283b
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1624 
=== Succesors ===
=== Usages ===
i271 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1624  <|@  <|@
tid ?274 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?172 
values: - i4108 
=== Succesors ===
=== Usages ===
?3287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - i4108  <|@  <|@
tid ?3287 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ReversedList.size()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 49
stackSize: 0
=== Inputs ===
outerFrameState: ?274 
values: - 
=== Succesors ===
=== Usages ===
i271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?274 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i271 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1628 
stateDuring: ?3287 
=== Succesors ===
next: v223 
=== Usages ===
i197 
=== Predecessor ===
v4381 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1628 stateDuring: ?3287 #next: v223  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
i271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[.] = MOV [v90|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v96|DWORD[.] * 8] state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v92|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 32] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i197 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v194 
values: i4110 i4111 i271 
=== Succesors ===
=== Usages ===
?195 v169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v194 values: i4110 i4111 i271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v202 v214 v223 
=== Succesors ===
next: v1145 
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v202 v214 v223 #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i4108 
=== Succesors ===
=== Usages ===
i170 v1145 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i197 y: i4108  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v169 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1525 i1140 i1504 i1503 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v169 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stamp: void
trueSuccessorProbability: 0.2735680066652781
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v1146 
falseSuccessor: v1144 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v1146 #falseSuccessor: v1144  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B80" 
    xhandlers
    flags 
    probability 4600227602964532941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
v1146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|DWORD] destination: B66 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606879592346181089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1404 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1404  <|@  <|@
tid ?195 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 2
=== Inputs ===
outerFrameState: ?172 
values: - i4108 i197 
=== Succesors ===
=== Usages ===
v3355 v4114 i4117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - i4108 i197  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.6844248193600183
=== Inputs ===
condition: v4062 
=== Succesors ===
trueSuccessor: v1402 
falseSuccessor: v1403 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4062 #trueSuccessor: v1402 #falseSuccessor: v1403  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604132708327177853
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4113 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4113 <|@
result v101|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: v4114 
=== Usages ===
a1597 v4322 
=== Predecessor ===
v1402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: v4114  <|@  <|@
f <@~|@floating>@ <|@
tid v4322 <|@
result [v101|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4113 
=== Succesors ===
=== Usages ===
v4114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4114 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?195 
guard: - 
address: v4322 
=== Succesors ===
next: i4115 
=== Usages ===
v4067 
=== Predecessor ===
a4113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?195 guard: - address: v4322 #next: i4115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4115 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v1515 
=== Usages ===
i1498 i1496 
=== Predecessor ===
v4114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid v4067 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4114 
y: v3988 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4114 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1597 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4113 
=== Succesors ===
=== Usages ===
a1501 a1502 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4113  <|@  <|@
f <@*|@fixed>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9202979333724495
=== Inputs ===
condition: v4067 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1514 
=== Usages ===
=== Predecessor ===
i4115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4067 #trueSuccessor: v1509 #falseSuccessor: v1514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v92|DWORD v99|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v102|DWORD = MOV [v101|DWORD[.] * 8 + 8] size: DWORD state [bci:11, 32] <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v101|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v102|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603657884159349860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1491  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
v1509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v100|DWORD, v104|QWORD[.]] destination: B69 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587758007721042323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1495 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1495  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v104|QWORD[.], v100|DWORD] destination: B70 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2306 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2306  <|@  <|@
f <@*|@fixed>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v2302 
falseSuccessor: v2305 
=== Usages ===
=== Predecessor ===
v1403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v2302 #falseSuccessor: v2305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4116 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4116 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: i4117 
=== Usages ===
v4215 
=== Predecessor ===
v2302 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: i4117  <|@  <|@
f <@~|@floating>@ <|@
tid v4215 <|@
result [v105|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4116 
=== Succesors ===
=== Usages ===
i4117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4117 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?195 
guard: - 
address: v4215 
=== Succesors ===
next: i4118 
=== Usages ===
v1539 
=== Predecessor ===
a4116 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?195 guard: - address: v4215 #next: i4118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4118 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v1530 
=== Usages ===
v1539 
=== Predecessor ===
i4117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v1530  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4117 
y: i4118 
=== Succesors ===
=== Usages ===
i1538 v1530 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4117 y: i4118  <|@  <|@
f <@~|@floating>@ <|@
tid i1538 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1539 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1125 i1526 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1539 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stamp: void
trueSuccessorProbability: 0.051783461406124554
=== Inputs ===
condition: v1539 
=== Succesors ===
trueSuccessor: v1537 
falseSuccessor: v1529 
=== Usages ===
=== Predecessor ===
i4118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1539 #trueSuccessor: v1537 #falseSuccessor: v1529  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v92|DWORD v99|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v106|DWORD = MOV [v105|DWORD[.] * 8 + 16] size: DWORD state [bci:11, 32] <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v107|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v107|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B117" 
    xhandlers
    flags 
    probability 4580209002611148875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1540  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD] destination: B73 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598880901630742082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
v1529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|DWORD, v108|DWORD] destination: B74 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3355 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3355  <|@  <|@
f <@~|@floating>@ <|@
tid i3357 <|@
result int[-409395|0xfffffffffff9c0cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -409395
stableDimension: 0
stamp: i32 [-409395] ⇊00000000fff9c0cd ⇈00000000fff9c0cd
stampKind: i32
value: int[-409395|0xfffffffffff9c0cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?195 
actionAndReason: i3357 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?195 actionAndReason: i3357 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -409395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v92|DWORD v99|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:11, 32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3316 
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3316  <|@  <|@
f <@~|@floating>@ <|@
tid i3317 <|@
result int[-415027|0xfffffffffff9aacd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -415027
stableDimension: 0
stamp: i32 [-415027] ⇊00000000fff9aacd ⇈00000000fff9aacd
stampKind: i32
value: int[-415027|0xfffffffffff9aacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3308 
=== Predecessor ===
v2290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-415027|0xfffffffffff9aacd]] destination: B76 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" "B241" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2316 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2316  <|@  <|@
f <@*|@fixed>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4059 
=== Succesors ===
trueSuccessor: v2312 
falseSuccessor: v2315 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4059 #trueSuccessor: v2312 #falseSuccessor: v2315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4119 
=== Usages ===
=== Predecessor ===
v2316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4119 <|@
result v109|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4120 
=== Usages ===
v4218 
=== Predecessor ===
v2312 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4120  <|@  <|@
f <@~|@floating>@ <|@
tid v4218 <|@
result [v109|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4119 
=== Succesors ===
=== Usages ===
i4120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4120 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4218 
=== Succesors ===
next: i4121 
=== Usages ===
v176 
=== Predecessor ===
a4119 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4218 #next: i4121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4121 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v38 
=== Usages ===
v176 
=== Predecessor ===
i4120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4120 
y: i4121 
=== Succesors ===
=== Usages ===
i177 v38 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4120 y: i4121  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v176 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1525 i1140 i1504 i1503 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v176 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stamp: void
trueSuccessorProbability: 0.2735680066652781
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v1132 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
i4121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v1132 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v110|DWORD = MOV [v109|DWORD[.] * 8 + 16] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4597142189795094960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
v1132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B66" 
    successors "B81" 
    xhandlers
    flags 
    probability 4603446753444729810
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1140 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1133 
values: i177 i170 
=== Succesors ===
=== Usages ===
?113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1133 values: i177 i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1134 v1135 
=== Succesors ===
next: v35 
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1134 v1135 #next: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v113|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B87" 
    xhandlers
    flags 
    probability 4603446753444729810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1116 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1116  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1140 
=== Succesors ===
=== Usages ===
v3335 i4123 v4126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1140  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.5994645247657295
=== Inputs ===
condition: v4059 
=== Succesors ===
trueSuccessor: v1114 
falseSuccessor: v1115 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4059 #trueSuccessor: v1114 #falseSuccessor: v1115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    probability 4599991815045550444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4122 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4122 <|@
result v114|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4123 
=== Usages ===
v4220 
=== Predecessor ===
v1114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4123  <|@  <|@
f <@~|@floating>@ <|@
tid v4220 <|@
result [v114|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4122 
=== Succesors ===
=== Usages ===
i4123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4123 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?113 
guard: - 
address: v4220 
=== Succesors ===
next: i4124 
=== Usages ===
v1348 
=== Predecessor ===
a4122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?113 guard: - address: v4220 #next: i4124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4124 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v1342 
=== Usages ===
v1348 
=== Predecessor ===
i4123 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1348 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4123 
y: i4124 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4123 y: i4124  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8791164658634538
=== Inputs ===
condition: v1348 
=== Succesors ===
trueSuccessor: v1340 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
i4124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1348 #trueSuccessor: v1340 #falseSuccessor: v1341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v113|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v115|DWORD = MOV [v114|DWORD[.] * 8 + 16] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: [v86|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4599227807522088194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.5443886097152428
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v1344 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v1344 #falseSuccessor: v1345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B136" 
    xhandlers
    flags 
    probability 4595217470780851132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1349  <|@  <|@
f <@*|@fixed>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B138" 
    xhandlers
    flags 
    probability 4594230945008584264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v1345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1343 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2329 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2329  <|@  <|@
f <@*|@fixed>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v2326 
falseSuccessor: v2328 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v2326 #falseSuccessor: v2328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4125 
=== Usages ===
=== Predecessor ===
v2329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4125 <|@
result v116|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: v4126 
=== Usages ===
a1672 v4324 
=== Predecessor ===
v2326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: v4126  <|@  <|@
f <@~|@floating>@ <|@
tid v4324 <|@
result [v116|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4125 
=== Succesors ===
=== Usages ===
v4126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4126 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?113 
guard: - 
address: v4324 
=== Succesors ===
next: i4127 
=== Usages ===
v4069 
=== Predecessor ===
a4125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?113 guard: - address: v4324 #next: i4127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4127 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v1375 
=== Usages ===
i1360 i1358 
=== Predecessor ===
v4126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid v4069 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4126 
y: v3988 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4126 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1672 <|@
result v119|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4125 
=== Succesors ===
=== Usages ===
a1363 a1364 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.9202979333724494
=== Inputs ===
condition: v4069 
=== Succesors ===
trueSuccessor: v1369 
falseSuccessor: v1374 
=== Usages ===
=== Predecessor ===
i4127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4069 #trueSuccessor: v1369 #falseSuccessor: v1374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v113|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v117|DWORD = MOV [v116|DWORD[.] * 8 + 8] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v117|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B127" 
    xhandlers
    flags 
    probability 4596940622275050737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1353 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1353  <|@  <|@
f <@*|@fixed>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
v1369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|DWORD, v119|QWORD[.]] destination: B89 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B129" 
    xhandlers
    flags 
    probability 4581042368272497659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1357  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|DWORD, v119|QWORD[.]] destination: B90 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3335 
=== Usages ===
=== Predecessor ===
v2329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3335  <|@  <|@
f <@~|@floating>@ <|@
tid i3339 <|@
result int[-426803|0xfffffffffff97ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -426803
stableDimension: 0
stamp: i32 [-426803] ⇊00000000fff97ccd ⇈00000000fff97ccd
stampKind: i32
value: int[-426803|0xfffffffffff97ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?113 
actionAndReason: i3339 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?113 actionAndReason: i3339 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -426803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v113|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B114" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603468868388755523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.6844248193600183
=== Inputs ===
condition: v4062 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4062 #trueSuccessor: v145 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4600917829224813035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4128 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4128 <|@
result v120|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: v4129 
=== Usages ===
a1644 v4323 
=== Predecessor ===
v145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: v4129  <|@  <|@
f <@~|@floating>@ <|@
tid v4323 <|@
result [v120|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4128 
=== Succesors ===
=== Usages ===
v4129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4129 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4323 
=== Succesors ===
next: i4130 
=== Usages ===
v4068 
=== Predecessor ===
a4128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4323 #next: i4130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4130 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v243 
=== Usages ===
i1496 i1498 
=== Predecessor ===
v4129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v4068 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4129 
y: v3988 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4129 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1644 <|@
result v123|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4128 
=== Succesors ===
=== Usages ===
a1502 a1501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4128  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9202979333724495
=== Inputs ===
condition: v4068 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i4130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4068 #trueSuccessor: v236 #falseSuccessor: v242  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v121|DWORD = MOV [v120|DWORD[.] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = UNCOMPRESSPOINTER (input: v120|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v121|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4600340291367836747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1490 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|DWORD, v112|DWORD, v123|QWORD[.]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B69" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606992219884315274
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1498 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1489 
values: i4130 i4115 
=== Succesors ===
=== Usages ===
i1497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1489 values: i4130 i4115  <|@  <|@
f <@~|@floating>@ <|@
tid i1503 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1489 
values: i177 i170 
=== Succesors ===
=== Usages ===
?1138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1489 values: i177 i170  <|@  <|@
f <@~|@floating>@ <|@
tid a1502 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1489 
values: a1644 a1597 
=== Succesors ===
=== Usages ===
v4221 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1489 values: a1644 a1597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1490 v1491 
=== Succesors ===
next: a4131 
=== Usages ===
i1498 i1503 a1502 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1490 v1491 #next: a4131  <|@  <|@
f <@~|@floating>@ <|@
tid v4221 <|@
result [v126|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1502 
index: - 
=== Succesors ===
=== Usages ===
a4131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1502 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4131 <|@
result v127|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4221 
=== Succesors ===
next: i4132 
=== Usages ===
v4222 
=== Predecessor ===
v1489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4221 #next: i4132  <|@  <|@
tid ?1138 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1503 
=== Succesors ===
=== Usages ===
i4132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1503  <|@  <|@
f <@~|@floating>@ <|@
tid v4222 <|@
result [v127|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4131 
=== Succesors ===
=== Usages ===
i4132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4132 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1138 
guard: - 
address: v4222 
=== Succesors ===
next: v237 
=== Usages ===
i232 
=== Predecessor ===
a4131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1138 guard: - address: v4222 #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
i4132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD, v125|DWORD, v126|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|DWORD[.] = MOV [v126|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v125|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v128|DWORD = MOV [v127|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD, v124|DWORD] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4584781123891604733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1493  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|DWORD, v123|QWORD[.], v112|DWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B70" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590773165433694024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1496 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1492 
values: i4130 i4115 
=== Succesors ===
=== Usages ===
?285 i1497 i1497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1492 values: i4130 i4115  <|@  <|@
f <@~|@floating>@ <|@
tid a1501 <|@
result v130|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1492 
values: a1644 a1597 
=== Succesors ===
=== Usages ===
v4325 v4223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1492 values: a1644 a1597  <|@  <|@
f <@~|@floating>@ <|@
tid i1504 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1492 
values: i177 i170 
=== Succesors ===
=== Usages ===
?1494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1492 values: i177 i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1493 v1495 
=== Succesors ===
next: v4133 
=== Usages ===
i1496 a1501 i1504 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1493 v1495 #next: v4133  <|@  <|@
f <@~|@floating>@ <|@
tid v4325 <|@
result [v130|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1501 
index: - 
=== Succesors ===
=== Usages ===
v4133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4133 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4325 
=== Succesors ===
next: v252 
=== Usages ===
v4071 v4070 
=== Predecessor ===
v1492 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4325 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v4070 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4133 
y: v3986 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4133 y: v3986  <|@  <|@
f <@~|@floating>@ <|@
tid v4223 <|@
result [v130|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1501 
index: - 
=== Succesors ===
=== Usages ===
i4134 a4135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1501 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9844587133450589
=== Inputs ===
condition: v4070 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
v4133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4070 #trueSuccessor: v248 #falseSuccessor: v251  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD, v130|QWORD[.], v131|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOV [v130|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v132|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590678227680113359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4134 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4134 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4223 
=== Succesors ===
next: v249 
=== Usages ===
i232 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4223 #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
i4134 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOV [v130|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|DWORD, v129|DWORD] destination: B98 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B112" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2348 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2348  <|@  <|@
f <@~|@floating>@ <|@
tid v4071 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4133 
y: v4065 
=== Succesors ===
=== Usages ===
v2348 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4133 y: v4065  <|@  <|@
f <@*|@fixed>@ <|@
tid v2348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4071 
=== Succesors ===
trueSuccessor: v2344 
falseSuccessor: v2347 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4071 #trueSuccessor: v2344 #falseSuccessor: v2347  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v132|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4135 
=== Usages ===
=== Predecessor ===
v2348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4135 <|@
result v134|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4223 
=== Succesors ===
next: v2353 
=== Usages ===
a1687 v1688 
=== Predecessor ===
v2344 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4223 #next: v2353  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
value: a4135 
=== Succesors ===
=== Usages ===
v2353 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4135  <|@  <|@
f <@*|@fixed>@ <|@
tid v2353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1688 
=== Succesors ===
trueSuccessor: v2352 
falseSuccessor: v2349 
=== Usages ===
=== Predecessor ===
a4135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1688 #trueSuccessor: v2352 #falseSuccessor: v2349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[.] = MOV [v130|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v134|DWORD[.], y: v134|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3480 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3480  <|@  <|@
f <@~|@floating>@ <|@
tid i3481 <|@
result int[-432395|0xfffffffffff966f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -432395
stableDimension: 0
stamp: i32 [-432395] ⇊00000000fff966f5 ⇈00000000fff966f5
stampKind: i32
value: int[-432395|0xfffffffffff966f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3474 
=== Predecessor ===
v2352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-432395|0xfffffffffff966f5]] destination: B101 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i282 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i282  <|@  <|@
f <@~|@floating>@ <|@
tid a1687 <|@
result v135|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4135 
=== Succesors ===
=== Usages ===
v1691 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4135  <|@  <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@403447a5
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1687 
=== Succesors ===
=== Usages ===
i282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1687  <|@  <|@
tid ?285 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?187 
values: - i1496 
=== Succesors ===
=== Usages ===
?3288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?187 values: - i1496  <|@  <|@
tid ?3288 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ReversedList.size()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 49
stackSize: 0
=== Inputs ===
outerFrameState: ?285 
values: - 
=== Succesors ===
=== Usages ===
i282 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?285 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i282 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1691 
stateDuring: ?3288 
=== Succesors ===
next: v258 
=== Usages ===
i232 
=== Predecessor ===
v2349 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1691 stateDuring: ?3288 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
i282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = UNCOMPRESSPOINTER (input: v134|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v129|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 41] <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD, v129|DWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B95" "B98" "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324410
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i232 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v229 
values: i4132 i4134 i282 
=== Succesors ===
=== Usages ===
?230 v184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v229 values: i4132 i4134 i282  <|@  <|@
f <@~|@floating>@ <|@
tid i1497 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v229 
values: i1498 i1496 i1496 
=== Succesors ===
=== Usages ===
v184 ?230 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v229 values: i1498 i1496 i1496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v237 v249 v258 
=== Succesors ===
next: v1130 
=== Usages ===
i232 i1497 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v237 v249 v258 #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i1497 
=== Succesors ===
=== Usages ===
i185 v1130 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i1497  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v184 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1386 i1125 i1470 i1469 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v184 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stamp: void
trueSuccessorProbability: 0.051783461406124554
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1129 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v1131 #falseSuccessor: v1129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|DWORD, v138|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|DWORD, y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|DWORD, y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B117" 
    xhandlers
    flags 
    probability 4588098681682314043
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1120  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v139|DWORD] destination: B104 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607221057745120672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1390 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1390  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7218022376776535
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1389 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v1388 #falseSuccessor: v1389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4136 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4136 <|@
result v140|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4137 
=== Usages ===
a1694 v4326 v4224 
=== Predecessor ===
v1388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4137  <|@  <|@
tid ?230 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 2
=== Inputs ===
outerFrameState: ?187 
values: - i1497 i232 
=== Succesors ===
=== Usages ===
v3365 i4137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?187 values: - i1497 i232  <|@  <|@
f <@~|@floating>@ <|@
tid v4224 <|@
result [v140|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4136 
=== Succesors ===
=== Usages ===
i4137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4137 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?230 
guard: - 
address: v4224 
=== Succesors ===
next: i4138 
=== Usages ===
v1479 
=== Predecessor ===
a4136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?230 guard: - address: v4224 #next: i4138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4138 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4225 
=== Succesors ===
next: v2363 
=== Usages ===
v1479 
=== Predecessor ===
i4137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4225 #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4137 
y: i4138 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4137 y: i4138  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1479 
=== Succesors ===
trueSuccessor: v2359 
falseSuccessor: v2362 
=== Usages ===
=== Predecessor ===
i4138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1479 #trueSuccessor: v2359 #falseSuccessor: v2362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v138|DWORD v137|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v141|DWORD = MOV [v140|DWORD[.] * 8 + 12] size: DWORD state [bci:11, 41] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v141|DWORD, y: [v86|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4139 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4139  <|@  <|@
f <@~|@floating>@ <|@
tid v4326 <|@
result [v140|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4136 
=== Succesors ===
=== Usages ===
v4139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4139 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4326 
=== Succesors ===
next: i4140 
=== Usages ===
v4072 
=== Predecessor ===
v2359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4326 #next: i4140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4140 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:357) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v1487 
=== Usages ===
i1488 i1465 i1464 
=== Predecessor ===
v4139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid i1488 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i4140 
y: i98 
=== Succesors ===
=== Usages ===
i1472 i1471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4140 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v4072 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4139 
y: v3988 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4139 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1694 <|@
result v145|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4136 
=== Succesors ===
=== Usages ===
a1467 a1468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4136  <|@  <|@
f <@*|@fixed>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v4072 
=== Succesors ===
trueSuccessor: v1481 
falseSuccessor: v1486 
=== Usages ===
=== Predecessor ===
i4140 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4072 #trueSuccessor: v1481 #falseSuccessor: v1486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOV [v140|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = INC v143|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = UNCOMPRESSPOINTER (input: v140|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v142|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604276656686636359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1457 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1457  <|@  <|@
f <@*|@fixed>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v1481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD, v143|DWORD, v139|DWORD, v145|QWORD[.]] destination: B108 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587452961675709276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1461 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1461  <|@  <|@
f <@*|@fixed>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
v1486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD, v143|DWORD, v145|QWORD[.], v139|DWORD] destination: B109 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3365 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3365  <|@  <|@
f <@~|@floating>@ <|@
tid i3367 <|@
result int[-435987|0xfffffffffff958ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -435987
stableDimension: 0
stamp: i32 [-435987] ⇊00000000fff958ed ⇈00000000fff958ed
stampKind: i32
value: int[-435987|0xfffffffffff958ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?230 
actionAndReason: i3367 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2362 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?230 actionAndReason: i3367 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -435987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v138|DWORD v137|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:11, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598726182345091718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1383 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1383  <|@  <|@
f <@*|@fixed>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v139|DWORD] destination: B111 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3475 
=== Usages ===
=== Predecessor ===
v2348 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3475  <|@  <|@
f <@~|@floating>@ <|@
tid i3476 <|@
result int[-431155|0xfffffffffff96bcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -431155
stableDimension: 0
stamp: i32 [-431155] ⇊00000000fff96bcd ⇈00000000fff96bcd
stampKind: i32
value: int[-431155|0xfffffffffff96bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3474 
=== Predecessor ===
v2347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-431155|0xfffffffffff96bcd]] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3477 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-432395 - -431155] ⇊00000000fff962c5 ⇈00000000fff96ffd
valueDescription: i32
=== Inputs ===
merge: v3474 
values: i3476 i3481 
=== Succesors ===
=== Usages ===
v3479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3474 values: i3476 i3481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3475 v3480 
=== Succesors ===
next: v3479 
=== Usages ===
i3477 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3475 v3480 #next: v3479  <|@  <|@
tid ?1494 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1504 
=== Succesors ===
=== Usages ===
v3479 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1504  <|@  <|@
f <@*|@fixed>@ <|@
tid v3479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1494 
actionAndReason: i3477 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3474 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1494 actionAndReason: i3477 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v131|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B115" "B240" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2368 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2368  <|@  <|@
f <@*|@fixed>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v2364 
falseSuccessor: v2367 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v2364 #falseSuccessor: v2367  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B152" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4141 
=== Usages ===
=== Predecessor ===
v2368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4141 <|@
result v147|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: i4142 
=== Usages ===
v4219 
=== Predecessor ===
v2364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: i4142  <|@  <|@
f <@~|@floating>@ <|@
tid v4219 <|@
result [v147|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4141 
=== Succesors ===
=== Usages ===
i4142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4142 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v4219 
=== Succesors ===
next: i4143 
=== Usages ===
v1523 
=== Predecessor ===
a4141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v4219 #next: i4143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4143 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v49 
=== Usages ===
v1523 
=== Predecessor ===
i4142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4142 
y: i4143 
=== Succesors ===
=== Usages ===
i192 v49 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4142 y: i4143  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v150|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1523 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1526 i1125 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1523 trueValue: i13 falseValue: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stamp: void
trueSuccessorProbability: 0.051783461406124554
=== Inputs ===
condition: v1523 
=== Succesors ===
trueSuccessor: v1117 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
i4143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1523 #trueSuccessor: v1117 #falseSuccessor: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v148|DWORD = MOV [v147|DWORD[.] * 8 + 16] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v148|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v148|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576690041658903912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
v1117 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|DWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B104" "B73" 
    successors "B118" 
    xhandlers
    flags 
    probability 4590463348771837277
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1125 <|@
result v151|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1118 
values: i192 i185 i1538 
=== Succesors ===
=== Usages ===
?139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1118 values: i192 i185 i1538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1119 v1120 v1540 
=== Succesors ===
next: v46 
=== Usages ===
i1125 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1119 v1120 v1540 #next: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B124" 
    xhandlers
    flags 
    probability 4590463348771837277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v1118 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v299  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1125 
=== Succesors ===
=== Usages ===
v3345 i4145 v4148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.5994645247657295
=== Inputs ===
condition: v4059 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4059 #trueSuccessor: v293 #falseSuccessor: v298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    probability 4587113324401426233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4144 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4144 <|@
result v152|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4145 
=== Usages ===
v4226 
=== Predecessor ===
v293 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4145  <|@  <|@
f <@~|@floating>@ <|@
tid v4226 <|@
result [v152|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4144 
=== Succesors ===
=== Usages ===
i4145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4145 <|@
result v153|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v4226 
=== Succesors ===
next: i4146 
=== Usages ===
v1330 
=== Predecessor ===
a4144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v4226 #next: i4146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4146 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v1169 
=== Usages ===
v1330 
=== Predecessor ===
i4145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4145 
y: i4146 
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4145 y: i4146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8791164658634538
=== Inputs ===
condition: v1330 
=== Succesors ===
trueSuccessor: v1167 
falseSuccessor: v1168 
=== Usages ===
=== Predecessor ===
i4146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1330 #trueSuccessor: v1167 #falseSuccessor: v1168  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v151|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v153|DWORD = MOV [v152|DWORD[.] * 8 + 16] size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v153|DWORD, y: [v86|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.5443886097152428
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v1171 
falseSuccessor: v1172 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v1171 #falseSuccessor: v1172  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B136" 
    xhandlers
    flags 
    probability 4582311893304577533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1157  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v1171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B138" 
    xhandlers
    flags 
    probability 4581226669887666333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v1173 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1161  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v1172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4573373567577153376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1170 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B151" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2381 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2381  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v2378 
falseSuccessor: v2380 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v2378 #falseSuccessor: v2380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B124 -> B125 falseDestination: B124 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B128" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4147 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4147 <|@
result v154|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: v4148 
=== Usages ===
a1722 v4327 
=== Predecessor ===
v2378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: v4148  <|@  <|@
f <@~|@floating>@ <|@
tid v4327 <|@
result [v154|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4147 
=== Succesors ===
=== Usages ===
v4148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4148 <|@
result v155|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v4327 
=== Succesors ===
next: i4149 
=== Usages ===
v4073 
=== Predecessor ===
a4147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v4327 #next: i4149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4149 <|@
result v156|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v380 
=== Usages ===
i1358 i1360 
=== Predecessor ===
v4148 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v4073 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4148 
y: v3988 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4148 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1722 <|@
result v157|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4147 
=== Succesors ===
=== Usages ===
a1364 a1363 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4147  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.9202979333724494
=== Inputs ===
condition: v4073 
=== Succesors ===
trueSuccessor: v373 
falseSuccessor: v379 
=== Usages ===
=== Predecessor ===
i4149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4073 #trueSuccessor: v373 #falseSuccessor: v379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v151|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v155|DWORD = MOV [v154|DWORD[.] * 8 + 8] size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = UNCOMPRESSPOINTER (input: v154|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B127" 
    xhandlers
    flags 
    probability 4584207438666858323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1352  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|DWORD, v157|QWORD[.]] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B89" 
    successors "B133" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1360 <|@
result v158|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1351 
values: i4149 i4127 
=== Succesors ===
=== Usages ===
i1359 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1351 values: i4149 i4127  <|@  <|@
f <@~|@floating>@ <|@
tid a1364 <|@
result v159|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1351 
values: a1722 a1672 
=== Succesors ===
=== Usages ===
v4227 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1351 values: a1722 a1672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1352 v1353 
=== Succesors ===
next: a4150 
=== Usages ===
i1360 a1364 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1352 v1353 #next: a4150  <|@  <|@
f <@~|@floating>@ <|@
tid v4227 <|@
result [v159|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1364 
index: - 
=== Succesors ===
=== Usages ===
a4150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1364 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4150 <|@
result v160|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4227 
=== Succesors ===
next: i4151 
=== Usages ===
v4228 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4227 #next: i4151  <|@  <|@
tid ?1110 <|@
d <@d|@=== Debug Properties ===
bci: 93
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
i4151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4228 <|@
result [v160|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4150 
=== Succesors ===
=== Usages ===
i4151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4151 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1110 
guard: - 
address: v4228 
=== Succesors ===
next: v374 
=== Usages ===
i369 
=== Predecessor ===
a4150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1110 guard: - address: v4228 #next: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
i4151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|DWORD, v159|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|DWORD[.] = MOV [v159|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v161|DWORD = MOV [v160|DWORD[.] * 8 + 12] size: DWORD state [bci:93] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|DWORD, v158|DWORD] destination: B127 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B129" 
    xhandlers
    flags 
    probability 4568070330086243707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|DWORD, v157|QWORD[.]] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B90" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4581782856717489066
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1358 <|@
result v162|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1354 
values: i4149 i4127 
=== Succesors ===
=== Usages ===
?446 i1359 i1359 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1354 values: i4149 i4127  <|@  <|@
f <@~|@floating>@ <|@
tid a1363 <|@
result v163|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1354 
values: a1722 a1672 
=== Succesors ===
=== Usages ===
v4328 v4229 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1354 values: a1722 a1672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1355 v1357 
=== Succesors ===
next: v4152 
=== Usages ===
i1358 a1363 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1355 v1357 #next: v4152  <|@  <|@
f <@~|@floating>@ <|@
tid v4328 <|@
result [v163|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1363 
index: - 
=== Succesors ===
=== Usages ===
v4152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4152 <|@
result v164|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4328 
=== Succesors ===
next: v389 
=== Usages ===
v4075 v4074 
=== Predecessor ===
v1354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4328 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v4074 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4152 
y: v3986 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4152 y: v3986  <|@  <|@
f <@~|@floating>@ <|@
tid v4229 <|@
result [v163|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1363 
index: - 
=== Succesors ===
=== Usages ===
i4153 a4154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1363 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 0.984458713345058
=== Inputs ===
condition: v4074 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v4152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4074 #trueSuccessor: v385 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v162|DWORD, v163|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOV [v163|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v164|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581687656463207250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4153 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4153 <|@
result v165|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4229 
=== Succesors ===
next: v386 
=== Usages ===
i369 
=== Predecessor ===
v385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4229 #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
i4153 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = MOV [v163|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|DWORD, v162|DWORD] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2393 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2393  <|@  <|@
f <@~|@floating>@ <|@
tid v4075 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4152 
y: v4065 
=== Succesors ===
=== Usages ===
v2393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4152 y: v4065  <|@  <|@
tid ?1356 <|@
d <@d|@=== Debug Properties ===
bci: 93
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
v3433 v4384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4075 
=== Succesors ===
trueSuccessor: v2390 
falseSuccessor: v2392 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4075 #trueSuccessor: v2390 #falseSuccessor: v2392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v164|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4154 
=== Usages ===
=== Predecessor ===
v2393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4154 <|@
result v166|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4229 
=== Succesors ===
next: v4384 
=== Usages ===
a1737 v4384 
=== Predecessor ===
v2390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4229 #next: v4384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1356 
object: a4154 
=== Succesors ===
next: i443 
=== Usages ===
=== Predecessor ===
a4154 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1356 object: a4154 #next: i443  <|@  <|@
f <@~|@floating>@ <|@
tid a1737 <|@
result v167|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4154 
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4154  <|@  <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6f5a8c4
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1737 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1737  <|@  <|@
tid ?350 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - a484 - - 
=== Succesors ===
=== Usages ===
?446 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a484 - -  <|@  <|@
tid ?446 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?350 
values: - i1358 
=== Succesors ===
=== Usages ===
?3293 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?350 values: - i1358  <|@  <|@
tid ?3293 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ReversedList.size()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 49
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: - 
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i443 <|@
result v168|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1741 
stateDuring: ?3293 
=== Succesors ===
next: v395 
=== Usages ===
i369 
=== Predecessor ===
v4384 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1741 stateDuring: ?3293 #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
i443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|DWORD[.] = MOV [v163|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v166|DWORD[.] * 8] state [bci:93] <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = UNCOMPRESSPOINTER (input: v166|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v167|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v162|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 94] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v168|DWORD, v162|DWORD] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" "B132" 
    successors "B134" "B149" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i369 <|@
result v169|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v366 
values: i4151 i4153 i443 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v366 values: i4151 i4153 i443  <|@  <|@
f <@~|@floating>@ <|@
tid i1359 <|@
result v170|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v366 
values: i1360 i1358 i1358 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v366 values: i1360 i1358 i1358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v374 v386 v395 
=== Succesors ===
next: v93 
=== Usages ===
i369 i1359 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v374 v386 v395 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i1359 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i369 y: i1359  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8791164658634538
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v169|DWORD, v170|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|DWORD, y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B133 -> B134 falseDestination: B133 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B137" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.5443886097152428
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v318 #falseSuccessor: v323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" 
    xhandlers
    flags 
    probability 4593765787855561339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1155 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B121" "B84" 
    successors 
    xhandlers
    flags 
    probability 4599411145939086332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1156 v1157 v1349 
=== Succesors ===
next: a4155 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1156 v1157 v1349 #next: a4155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4155 <|@
result v171|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: i4156 
=== Usages ===
v4230 
=== Predecessor ===
v1155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: i4156  <|@  <|@
tid ?287 <|@
d <@d|@=== Debug Properties ===
bci: 99
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a484 - - i13 
=== Succesors ===
=== Usages ===
i4156 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a484 - - i13  <|@  <|@
f <@~|@floating>@ <|@
tid v4230 <|@
result [v171|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4155 
=== Succesors ===
=== Usages ===
i4156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4156 <|@
result v172|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?287 
guard: - 
address: v4230 
=== Succesors ===
next: i4157 
=== Usages ===
v354 
=== Predecessor ===
a4155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?287 guard: - address: v4230 #next: i4157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4157 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v1176 
=== Usages ===
v354 
=== Predecessor ===
i4156 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v1176  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4156 
y: i4157 
=== Succesors ===
=== Usages ===
i355 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4156 y: i4157  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v354 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i1175 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v354 trueValue: i13 falseValue: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i1175 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 108]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i355 
y: i98 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i355 y: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i1175 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i4157 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i1175 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction v172|DWORD = MOV [v171|DWORD[.] * 8 + 16] size: DWORD state [bci:99] <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v173|DWORD, y: v172|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = XOR v174|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v175|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B138" 
    xhandlers
    flags 
    probability 4592360376218162154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B122" "B85" 
    successors "B139" "B147" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1159 v1161 v1350 
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1159 v1161 v1350 #next: v2405  <|@  <|@
tid ?1160 <|@
d <@d|@=== Debug Properties ===
bci: 99
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a484 - - i13 
=== Succesors ===
=== Usages ===
v3419 v4159 i4162 v4383 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a484 - - i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4062 
=== Succesors ===
trueSuccessor: v2402 
falseSuccessor: v2404 
=== Usages ===
=== Predecessor ===
v1158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4062 #trueSuccessor: v2402 #falseSuccessor: v2404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4158 
=== Usages ===
=== Predecessor ===
v2405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4158 <|@
result v176|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: v4159 
=== Usages ===
v4329 v4231 
=== Predecessor ===
v2402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: v4159  <|@  <|@
f <@~|@floating>@ <|@
tid v4329 <|@
result [v176|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4158 
=== Succesors ===
=== Usages ===
v4159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4159 <|@
result v177|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1160 
guard: - 
address: v4329 
=== Succesors ===
next: i4160 
=== Usages ===
v4078 v4076 v4077 
=== Predecessor ===
a4158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1160 guard: - address: v4329 #next: i4160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4160 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v415 
=== Usages ===
?457 v362 
=== Predecessor ===
v4159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v4076 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4159 
y: v3988 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4159 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid v4231 <|@
result [v176|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4158 
=== Succesors ===
=== Usages ===
a4161 i4163 a4164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4158  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.9202979333724494
=== Inputs ===
condition: v4076 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i4160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4076 #trueSuccessor: v408 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction v177|DWORD = MOV [v176|DWORD[.] * 8 + 8] size: DWORD state [bci:99] <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v177|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B145" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4161 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4161 <|@
result v179|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4231 
=== Succesors ===
next: i4162 
=== Usages ===
v4232 
=== Predecessor ===
v408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4231 #next: i4162  <|@  <|@
f <@~|@floating>@ <|@
tid v4232 <|@
result [v179|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4161 
=== Succesors ===
=== Usages ===
i4162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4162 <|@
result v180|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1160 
guard: - 
address: v4232 
=== Succesors ===
next: v409 
=== Usages ===
i404 
=== Predecessor ===
a4161 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1160 guard: - address: v4232 #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i4162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|DWORD[.] = MOV [v176|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction v180|DWORD = MOV [v179|DWORD[.] * 8 + 12] size: DWORD state [bci:99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v180|DWORD] destination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4581782856717489067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v4077 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4159 
y: v3986 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4159 y: v3986  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 0.984458713345058
=== Inputs ===
condition: v4077 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4077 #trueSuccessor: v420 #falseSuccessor: v423  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v177|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 4581687656463207251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4163 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4163 <|@
result v181|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4231 
=== Succesors ===
next: v421 
=== Usages ===
i404 
=== Predecessor ===
v420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4231 #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i4163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOV [v176|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v181|DWORD] destination: B142 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B146" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2417 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2417  <|@  <|@
f <@~|@floating>@ <|@
tid v4078 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4159 
y: v4065 
=== Succesors ===
=== Usages ===
v2417 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4159 y: v4065  <|@  <|@
f <@*|@fixed>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4078 
=== Succesors ===
trueSuccessor: v2414 
falseSuccessor: v2416 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4078 #trueSuccessor: v2414 #falseSuccessor: v2416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v177|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4164 
=== Usages ===
=== Predecessor ===
v2417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4164 <|@
result v182|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4231 
=== Succesors ===
next: v4383 
=== Usages ===
a1772 v4383 
=== Predecessor ===
v2414 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4231 #next: v4383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1160 
object: a4164 
=== Succesors ===
next: i454 
=== Usages ===
=== Predecessor ===
a4164 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1160 object: a4164 #next: i454  <|@  <|@
f <@~|@floating>@ <|@
tid a1772 <|@
result v183|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 1]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4164 
=== Succesors ===
=== Usages ===
v1776 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4164  <|@  <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@7d5293ff
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1772 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1772  <|@  <|@
tid ?365 <|@
d <@d|@=== Debug Properties ===
bci: 103
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 526
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
?457 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
tid ?457 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractList$Itr.hasNext()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?365 
values: - i4160 
=== Succesors ===
=== Usages ===
?3294 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?365 values: - i4160  <|@  <|@
tid ?3294 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ReversedList.size()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 49
stackSize: 0
=== Inputs ===
outerFrameState: ?457 
values: - 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?457 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i454 <|@
result v184|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1776 
stateDuring: ?3294 
=== Succesors ===
next: v430 
=== Usages ===
i404 
=== Predecessor ===
v4383 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1776 stateDuring: ?3294 #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|DWORD[.] = MOV [v176|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v182|DWORD[.] * 8] state [bci:99] <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = UNCOMPRESSPOINTER (input: v182|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v183|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v178|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 103] <|@ <|@
      nr   -1  <|@ instruction v184|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|DWORD] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B142" "B144" 
    successors 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i404 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v401 
values: i4162 i4163 i454 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v401 values: i4162 i4163 i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v409 v421 v430 
=== Succesors ===
next: v110 
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v409 v421 v430 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i4160 
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i404 y: i4160  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
result v186|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v362 
trueValue: i13 
falseValue: i98 
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v362 trueValue: i13 falseValue: i98  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
result v187|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 108]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i363 
y: i98 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i363 y: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i99 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i99 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v185|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v178|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = XOR v186|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v187|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3426 
=== Usages ===
=== Predecessor ===
v2417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3426  <|@  <|@
f <@~|@floating>@ <|@
tid i3427 <|@
result int[-452915|0xfffffffffff916cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -452915
stableDimension: 0
stamp: i32 [-452915] ⇊00000000fff916cd ⇈00000000fff916cd
stampKind: i32
value: int[-452915|0xfffffffffff916cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3414 
=== Predecessor ===
v2416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-452915|0xfffffffffff916cd]] destination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3420 
=== Usages ===
=== Predecessor ===
v2405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3420  <|@  <|@
f <@~|@floating>@ <|@
tid i3421 <|@
result int[-448563|0xfffffffffff927cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -448563
stableDimension: 0
stamp: i32 [-448563] ⇊00000000fff927cd ⇈00000000fff927cd
stampKind: i32
value: int[-448563|0xfffffffffff927cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3414 
=== Predecessor ===
v2404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-448563|0xfffffffffff927cd]] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3417 <|@
result v188|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-454155 - -448563] ⇊00000000fff900c5 ⇈00000000fff93ffd
valueDescription: i32
=== Inputs ===
merge: v3414 
values: i3421 i3427 
=== Succesors ===
=== Usages ===
v3419 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3414 values: i3421 i3427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3420 v3426 
=== Succesors ===
next: v3419 
=== Usages ===
i3417 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3420 v3426 #next: v3419  <|@  <|@
f <@*|@fixed>@ <|@
tid v3419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1160 
actionAndReason: i3417 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3414 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1160 actionAndReason: i3417 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v188|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v188|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:526) [bci: 116]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=size target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3433 
=== Usages ===
=== Predecessor ===
v2393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3433  <|@  <|@
f <@~|@floating>@ <|@
tid i3435 <|@
result int[-443955|0xfffffffffff939cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -443955
stableDimension: 0
stamp: i32 [-443955] ⇊00000000fff939cd ⇈00000000fff939cd
stampKind: i32
value: int[-443955|0xfffffffffff939cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1356 
actionAndReason: i3435 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2392 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1356 actionAndReason: i3435 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -443955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:93] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=hasNext target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3345 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3345  <|@  <|@
f <@~|@floating>@ <|@
tid i3349 <|@
result int[-439603|0xfffffffffff94acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -439603
stableDimension: 0
stamp: i32 [-439603] ⇊00000000fff94acd ⇈00000000fff94acd
stampKind: i32
value: int[-439603|0xfffffffffff94acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?139 
actionAndReason: i3349 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2380 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?139 actionAndReason: i3349 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -439603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v151|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595504170808271966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1520 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1520  <|@  <|@
f <@*|@fixed>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD, v150|DWORD] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B74" 
    successors "B154" "B170" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602048976889610353
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1525 <|@
result v189|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1519 
values: i177 i170 
=== Succesors ===
=== Usages ===
?1521 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1519 values: i177 i170  <|@  <|@
f <@~|@floating>@ <|@
tid i1526 <|@
result v190|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1519 
values: i192 i1538 
=== Succesors ===
=== Usages ===
i1386 i1470 i1469 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1519 values: i192 i1538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1520 v1522 
=== Succesors ===
next: v526 
=== Usages ===
i1525 i1526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1520 v1522 #next: v526  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7218022376776535
=== Inputs ===
condition: v4060 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v525 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4060 #trueSuccessor: v520 #falseSuccessor: v525  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v189|DWORD, v190|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B169" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4165 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4165 <|@
result v191|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: i4166 
=== Usages ===
a1779 v4330 v4233 
=== Predecessor ===
v520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: i4166  <|@  <|@
tid ?1521 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1525 
=== Succesors ===
=== Usages ===
v3487 i4166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1525  <|@  <|@
f <@~|@floating>@ <|@
tid v4233 <|@
result [v191|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4165 
=== Succesors ===
=== Usages ===
i4166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4166 <|@
result v192|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?1521 
guard: - 
address: v4233 
=== Succesors ===
next: i4167 
=== Usages ===
v730 
=== Predecessor ===
a4165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1521 guard: - address: v4233 #next: i4167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4167 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4225 
=== Succesors ===
next: v2431 
=== Usages ===
v730 
=== Predecessor ===
i4166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4225 #next: v2431  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4166 
y: i4167 
=== Succesors ===
=== Usages ===
v2431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4166 y: i4167  <|@  <|@
f <@*|@fixed>@ <|@
tid v2431 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v2427 
falseSuccessor: v2430 
=== Usages ===
=== Predecessor ===
i4167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v2427 #falseSuccessor: v2430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v189|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v192|DWORD = MOV [v191|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v192|DWORD, y: [v86|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4168 
=== Usages ===
=== Predecessor ===
v2431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4168  <|@  <|@
f <@~|@floating>@ <|@
tid v4330 <|@
result [v191|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4165 
=== Succesors ===
=== Usages ===
v4168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4168 <|@
result v193|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4330 
=== Succesors ===
next: i4169 
=== Usages ===
v4079 
=== Predecessor ===
v2427 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4330 #next: i4169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4169 <|@
result v194|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:357) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: v747 
=== Usages ===
i1464 i1465 i613 
=== Predecessor ===
v4168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i4169 
y: i98 
=== Succesors ===
=== Usages ===
i1471 i1472 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4169 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v4079 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4168 
y: v3988 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4168 y: v3988  <|@  <|@
f <@~|@floating>@ <|@
tid a1779 <|@
result v196|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4165 
=== Succesors ===
=== Usages ===
a1468 a1467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4165  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v4079 
=== Succesors ===
trueSuccessor: v740 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
i4169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4079 #trueSuccessor: v740 #falseSuccessor: v746  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOV [v191|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = INC v194|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = UNCOMPRESSPOINTER (input: v191|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v193|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599298131621115601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1456 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1456  <|@  <|@
f <@*|@fixed>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1455 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, v194|DWORD, v190|DWORD, v196|QWORD[.]] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B108" 
    successors "B158" "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1472 <|@
result v197|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1455 
values: i613 i1488 
=== Succesors ===
=== Usages ===
v1812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: i613 i1488  <|@  <|@
f <@~|@floating>@ <|@
tid i1465 <|@
result v198|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1455 
values: i4169 i4140 
=== Succesors ===
=== Usages ===
v4236 v1810 v1799 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: i4169 i4140  <|@  <|@
f <@~|@floating>@ <|@
tid i1469 <|@
result v199|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1455 
values: i1526 i185 
=== Succesors ===
=== Usages ===
?1123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: i1526 i185  <|@  <|@
f <@~|@floating>@ <|@
tid a1468 <|@
result v200|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1455 
values: a1779 a1694 
=== Succesors ===
=== Usages ===
v4234 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1455 values: a1779 a1694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1456 v1457 
=== Succesors ===
next: a4170 
=== Usages ===
i1472 i1465 i1469 a1468 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1456 v1457 #next: a4170  <|@  <|@
f <@~|@floating>@ <|@
tid v4234 <|@
result [v200|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1468 
index: - 
=== Succesors ===
=== Usages ===
a4170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4170 <|@
result v201|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4234 
=== Succesors ===
next: i4171 
=== Usages ===
a1793 v4235 
=== Predecessor ===
v1455 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4234 #next: i4171  <|@  <|@
tid ?1123 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1469 
=== Succesors ===
=== Usages ===
v3411 i4171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1469  <|@  <|@
f <@~|@floating>@ <|@
tid v4235 <|@
result [v201|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4170 
=== Succesors ===
=== Usages ===
i4171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4171 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1123 
guard: - 
address: v4235 
=== Succesors ===
next: v2441 
=== Usages ===
v1799 
=== Predecessor ===
a4170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1123 guard: - address: v4235 #next: v2441  <|@  <|@
f <@~|@floating>@ <|@
tid v1799 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1465 
y: i4171 
=== Succesors ===
=== Usages ===
v2441 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1465 y: i4171  <|@  <|@
f <@*|@fixed>@ <|@
tid v2441 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1799 
=== Succesors ===
trueSuccessor: v2437 
falseSuccessor: v2440 
=== Usages ===
=== Predecessor ===
i4171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1799 #trueSuccessor: v2437 #falseSuccessor: v2440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v197|DWORD, v198|DWORD, v199|DWORD, v200|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|DWORD[.] = MOV [v200|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v199|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction CMP (x: v198|DWORD, y: [v201|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1810 
=== Usages ===
a4172 
=== Predecessor ===
v2441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4237 
value: i1465 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1812 
=== Usages ===
=== Predecessor ===
v2437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4237 value: i1465 stateAfter: - lastLocationAccess: - #next: v1812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4238 
value: i1472 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4172 
=== Usages ===
=== Predecessor ===
v1810 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4238 value: i1472 stateAfter: - lastLocationAccess: - #next: a4172  <|@  <|@
f <@~|@floating>@ <|@
tid a1793 <|@
result v202|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a4170 
=== Succesors ===
=== Usages ===
v4236 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4170  <|@  <|@
f <@~|@floating>@ <|@
tid v4236 <|@
result [v202|QWORD[.] + v198|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1793 
index: i1465 
=== Succesors ===
=== Usages ===
a4172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1793 index: i1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4172 <|@
result v203|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2437 
address: v4236 
=== Succesors ===
next: v1093 
=== Usages ===
a1808 
=== Predecessor ===
v1812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2437 address: v4236 #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid a1808 <|@
result v204|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a4172 
=== Succesors ===
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
a4172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 16], y: v198|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 12], y: v197|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD[.] = UNCOMPRESSPOINTER (input: v201|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v203|DWORD[.] = MOV [v202|QWORD[.] + v198|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD[.] = UNCOMPRESSPOINTER (input: v203|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|QWORD[.]] destination: B158 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3411 
=== Usages ===
=== Predecessor ===
v2441 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3411  <|@  <|@
f <@~|@floating>@ <|@
tid i3413 <|@
result int[-460827|0xfffffffffff8f7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -460827
stableDimension: 0
stamp: i32 [-460827] ⇊00000000fff8f7e5 ⇈00000000fff8f7e5
stampKind: i32
value: int[-460827|0xfffffffffff8f7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1123 
actionAndReason: i3413 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2440 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1123 actionAndReason: i3413 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -460827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v199|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582381754285081060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1459 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1459  <|@  <|@
f <@*|@fixed>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, v194|DWORD, v196|QWORD[.], v190|DWORD] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B109" 
    successors "B162" "B165" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286631
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1471 <|@
result v205|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1458 
values: i613 i1488 
=== Succesors ===
=== Usages ===
v1845 v1834 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1458 values: i613 i1488  <|@  <|@
f <@~|@floating>@ <|@
tid i1464 <|@
result v206|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1458 
values: i4169 i4140 
=== Succesors ===
=== Usages ===
?804 i798 v1844 ?3289 v1832 v4241 v1822 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1458 values: i4169 i4140  <|@  <|@
f <@~|@floating>@ <|@
tid a1467 <|@
result v207|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/AbstractList;
valueDescription: a -
=== Inputs ===
merge: v1458 
values: a1779 a1694 
=== Succesors ===
=== Usages ===
v4244 v4239 v4331 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1458 values: a1779 a1694  <|@  <|@
f <@~|@floating>@ <|@
tid i1470 <|@
result v208|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1458 
values: i1526 i185 
=== Succesors ===
=== Usages ===
?1460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1458 values: i1526 i185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1459 v1461 
=== Succesors ===
next: v4173 
=== Usages ===
i1471 i1464 a1467 i1470 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1459 v1461 #next: v4173  <|@  <|@
f <@~|@floating>@ <|@
tid v4331 <|@
result [v207|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1467 
index: - 
=== Succesors ===
=== Usages ===
v4173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4173 <|@
result v209|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4331 
=== Succesors ===
next: v756 
=== Usages ===
v4081 v4080 
=== Predecessor ===
v1458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4331 #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid v4080 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4173 
y: v3986 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4173 y: v3986  <|@  <|@
tid ?1460 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1470 
=== Succesors ===
=== Usages ===
v3467 i4175 v4386 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1470  <|@  <|@
f <@~|@floating>@ <|@
tid v4243 <|@
result [v86|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1834 v1845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4242 <|@
result [v86|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1832 v1844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.9931451844203519
=== Inputs ===
condition: v4080 
=== Succesors ===
trueSuccessor: v752 
falseSuccessor: v755 
=== Usages ===
=== Predecessor ===
v4173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4080 #trueSuccessor: v752 #falseSuccessor: v755  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v205|DWORD, v206|DWORD, v207|QWORD[.], v208|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = MOV [v207|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v209|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B161 -> B162 falseDestination: B161 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4174 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4174  <|@  <|@
f <@~|@floating>@ <|@
tid v4239 <|@
result [v207|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1467 
index: - 
=== Succesors ===
=== Usages ===
a4174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4174 <|@
result v210|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4239 
=== Succesors ===
next: i4175 
=== Usages ===
a1816 v4240 
=== Predecessor ===
v752 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4239 #next: i4175  <|@  <|@
f <@~|@floating>@ <|@
tid v4240 <|@
result [v210|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4174 
=== Succesors ===
=== Usages ===
i4175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4175 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1460 
guard: - 
address: v4240 
=== Succesors ===
next: v2451 
=== Usages ===
v1822 
=== Predecessor ===
a4174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1460 guard: - address: v4240 #next: v2451  <|@  <|@
f <@~|@floating>@ <|@
tid v1822 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1464 
y: i4175 
=== Succesors ===
=== Usages ===
v2451 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1464 y: i4175  <|@  <|@
f <@*|@fixed>@ <|@
tid v2451 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1822 
=== Succesors ===
trueSuccessor: v2447 
falseSuccessor: v2450 
=== Usages ===
=== Predecessor ===
i4175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1822 #trueSuccessor: v2447 #falseSuccessor: v2450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|DWORD[.] = MOV [v207|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v208|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction CMP (x: v206|DWORD, y: [v210|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1832 
=== Usages ===
a4176 
=== Predecessor ===
v2451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4242 
value: i1464 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v2447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4242 value: i1464 stateAfter: - lastLocationAccess: - #next: v1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4243 
value: i1471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4176 
=== Usages ===
=== Predecessor ===
v1832 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4243 value: i1471 stateAfter: - lastLocationAccess: - #next: a4176  <|@  <|@
f <@~|@floating>@ <|@
tid a1816 <|@
result v211|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a4174 
=== Succesors ===
=== Usages ===
v4241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4174  <|@  <|@
f <@~|@floating>@ <|@
tid v4241 <|@
result [v211|QWORD[.] + v206|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1816 
index: i1464 
=== Succesors ===
=== Usages ===
a4176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1816 index: i1464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4176 <|@
result v212|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v2447 
address: v4241 
=== Succesors ===
next: v1237 
=== Usages ===
a1830 
=== Predecessor ===
v1834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2447 address: v4241 #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid a1830 <|@
result v213|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a4176 
=== Succesors ===
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4176  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
a4176 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 16], y: v206|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 12], y: v205|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = UNCOMPRESSPOINTER (input: v210|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v212|DWORD[.] = MOV [v211|QWORD[.] + v206|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = UNCOMPRESSPOINTER (input: v212|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD[.]] destination: B163 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3468 
=== Usages ===
=== Predecessor ===
v2451 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3468  <|@  <|@
f <@~|@floating>@ <|@
tid i3469 <|@
result int[-466715|0xfffffffffff8e0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -466715
stableDimension: 0
stamp: i32 [-466715] ⇊00000000fff8e0e5 ⇈00000000fff8e0e5
stampKind: i32
value: int[-466715|0xfffffffffff8e0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3462 
=== Predecessor ===
v2450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-466715|0xfffffffffff8e0e5]] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B166" "B167" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2456 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2456  <|@  <|@
f <@~|@floating>@ <|@
tid v4081 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4173 
y: v4065 
=== Succesors ===
=== Usages ===
v2456 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4173 y: v4065  <|@  <|@
f <@*|@fixed>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4081 
=== Succesors ===
trueSuccessor: v2452 
falseSuccessor: v2455 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4081 #trueSuccessor: v2452 #falseSuccessor: v2455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v209|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4177 
=== Usages ===
=== Predecessor ===
v2456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4177  <|@  <|@
f <@~|@floating>@ <|@
tid v4244 <|@
result [v207|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1467 
index: - 
=== Succesors ===
=== Usages ===
a4177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4177 <|@
result v214|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReversedList.original
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v4244 
=== Succesors ===
next: v4386 
=== Usages ===
a1838 v4386 
=== Predecessor ===
v2452 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4244 #next: v4386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1460 
object: a4177 
=== Succesors ===
next: i796 
=== Usages ===
=== Predecessor ===
a4177 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1460 object: a4177 #next: i796  <|@  <|@
f <@~|@floating>@ <|@
tid a1838 <|@
result v215|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a -
=== Inputs ===
value: a4177 
=== Succesors ===
=== Usages ===
?3289 v1843 v1842 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4177  <|@  <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3d422c9e
stamp: void
targetMethod: HotSpotMethod<List.size()>
=== Inputs ===
arguments: a1838 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1838  <|@  <|@
tid ?617 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 521
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
?804 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
tid ?804 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?617 
values: a1186 i1464 - 
=== Succesors ===
=== Usages ===
?3290 ?3289 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?617 values: a1186 i1464 -  <|@  <|@
tid ?3289 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<ReversedList.get(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?804 
values: - i1464 a1838 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?804 values: - i1464 a1838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i796 <|@
result v216|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 8
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
polymorphic: false
stamp: i32
targetMethod: Direct#List.size
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1842 
stateDuring: ?3289 
=== Succesors ===
next: a801 
=== Usages ===
i798 
=== Predecessor ===
v4386 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1842 stateDuring: ?3289 #next: a801  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
result v217|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 14]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i796 
y: i1464 
=== Succesors ===
=== Usages ===
i799 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i796 y: i1464  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:848) [bci: 10]
at java.util.ArrayList$ListItr.<init>(ArrayList.java:918) [bci: 7]
at java.util.ArrayList.listIterator(ArrayList.java:829) [bci: 6]
at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i799 <|@
result v218|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 16]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i798 
y: i697 
=== Succesors ===
=== Usages ===
v1843 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i798 y: i697  <|@  <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@5f295dfc
stamp: void
targetMethod: HotSpotMethod<List.get(int)>
=== Inputs ===
arguments: a1838 i799 
=== Succesors ===
=== Usages ===
a801 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1838 i799  <|@  <|@
tid ?3290 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<ReversedList.get(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ReversedList.java
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?804 
values: - - 
=== Succesors ===
=== Usages ===
a801 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?804 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a801 <|@
result v219|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#List.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1843 
stateDuring: ?3290 
=== Succesors ===
next: v1844 
=== Usages ===
a516 
=== Predecessor ===
i796 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1843 stateDuring: ?3290 #next: v1844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4242 
value: i1464 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1845 
=== Usages ===
=== Predecessor ===
a801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4242 value: i1464 stateAfter: - lastLocationAccess: - #next: v1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4243 
value: i1471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4243 value: i1471 stateAfter: - lastLocationAccess: - #next: v521  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
v1845 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[.] = MOV [v207|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v208|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v214|DWORD[.] * 8] state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = UNCOMPRESSPOINTER (input: v214|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v215|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
stack: v215|QWORD[.] 
locals: - v206|DWORD 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v86|QWORD[.] v206|DWORD - 
java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 50] <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = SUB (x: v216|DWORD, ~y: v206|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = DEC v217|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v215|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v218|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
locals: - - 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v86|QWORD[.] v206|DWORD - 
java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 50] <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 16], y: v206|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 12], y: v205|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v219|QWORD[.]] destination: B166 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/core/common/util/ReversedList; target_method=get target_method_class=Lorg/graalvm/compiler/core/common/util/ReversedList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3470 
=== Usages ===
=== Predecessor ===
v2456 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3470  <|@  <|@
f <@~|@floating>@ <|@
tid i3471 <|@
result int[-469811|0xfffffffffff8d4cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -469811
stableDimension: 0
stamp: i32 [-469811] ⇊00000000fff8d4cd ⇈00000000fff8d4cd
stampKind: i32
value: int[-469811|0xfffffffffff8d4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3462 
=== Predecessor ===
v2455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-469811|0xfffffffffff8d4cd]] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3465 <|@
result v220|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-471051 - -465419] ⇊00000000fff8c0c5 ⇈00000000fff8fffd
valueDescription: i32
=== Inputs ===
merge: v3462 
values: i3469 i3471 
=== Succesors ===
=== Usages ===
v3467 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3462 values: i3469 i3471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3468 v3470 
=== Succesors ===
next: v3467 
=== Usages ===
i3465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3468 v3470 #next: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v3467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1460 
actionAndReason: i3465 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3462 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1460 actionAndReason: i3465 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v220|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v220|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v208|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3487 
=== Usages ===
=== Predecessor ===
v2431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3487  <|@  <|@
f <@~|@floating>@ <|@
tid i3489 <|@
result int[-457491|0xfffffffffff904ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -457491
stableDimension: 0
stamp: i32 [-457491] ⇊00000000fff904ed ⇈00000000fff904ed
stampKind: i32
value: int[-457491|0xfffffffffff904ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1521 
actionAndReason: i3489 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2430 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1521 actionAndReason: i3489 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -457491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v189|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593829144217942789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1381 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1381  <|@  <|@
f <@*|@fixed>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v190|DWORD] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B111" 
    successors "B172" "B238" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1386 <|@
result v221|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1380 
values: i1526 i185 
=== Succesors ===
=== Usages ===
?1382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1380 values: i1526 i185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1381 v1383 
=== Succesors ===
next: v2466 
=== Usages ===
i1386 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1381 v1383 #next: v2466  <|@  <|@
f <@*|@fixed>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4059 
=== Succesors ===
trueSuccessor: v2462 
falseSuccessor: v2465 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4059 #trueSuccessor: v2462 #falseSuccessor: v2465  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v221|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B171 -> B172 falseDestination: B171 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B173" "B174" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4178 
=== Usages ===
=== Predecessor ===
v2466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4178 <|@
result v222|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4212 
=== Succesors ===
next: v2471 
=== Usages ===
v4247 v1850 v4245 v4246 
=== Predecessor ===
v2462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4212 #next: v2471  <|@  <|@
f <@~|@floating>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
value: a4178 
=== Succesors ===
=== Usages ===
v2471 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4178  <|@  <|@
f <@*|@fixed>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1850 
=== Succesors ===
trueSuccessor: v2470 
falseSuccessor: v2467 
=== Usages ===
=== Predecessor ===
a4178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1850 #trueSuccessor: v2470 #falseSuccessor: v2467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v222|DWORD[.], y: v222|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3442 
=== Usages ===
=== Predecessor ===
v2471 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3442  <|@  <|@
f <@~|@floating>@ <|@
tid i3443 <|@
result int[-473867|0xfffffffffff8c4f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -473867
stableDimension: 0
stamp: i32 [-473867] ⇊00000000fff8c4f5 ⇈00000000fff8c4f5
stampKind: i32
value: int[-473867|0xfffffffffff8c4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-473867|0xfffffffffff8c4f5]] destination: B173 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B237" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4179 
=== Usages ===
=== Predecessor ===
v2471 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4179  <|@  <|@
f <@~|@floating>@ <|@
tid v4245 <|@
result [v222|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4178 
=== Succesors ===
=== Usages ===
i4179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4179 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4245 
=== Succesors ===
next: i4180 
=== Usages ===
v771 
=== Predecessor ===
v2467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4245 #next: i4180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4180 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4225 
=== Succesors ===
next: v2476 
=== Usages ===
v771 
=== Predecessor ===
i4179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4225 #next: v2476  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4179 
y: i4180 
=== Succesors ===
=== Usages ===
v2476 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4179 y: i4180  <|@  <|@
f <@*|@fixed>@ <|@
tid v2476 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v771 
=== Succesors ===
trueSuccessor: v2472 
falseSuccessor: v2475 
=== Usages ===
=== Predecessor ===
i4180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v771 #trueSuccessor: v2472 #falseSuccessor: v2475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOV [v222|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v223|DWORD, y: [v86|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B236" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4181 
=== Usages ===
=== Predecessor ===
v2476 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4181 <|@
result v224|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:860) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
=== Succesors ===
next: i4182 
=== Usages ===
v624 v629 i631 v1876 v1874 v4250 
=== Predecessor ===
v2472 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4211 #next: i4182  <|@  <|@
f <@~|@floating>@ <|@
tid v4246 <|@
result [v222|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4178 
=== Succesors ===
=== Usages ===
i4182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4182 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4246 
=== Succesors ===
next: v2481 
=== Usages ===
v624 
=== Predecessor ===
i4181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4246 #next: v2481  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4181 
y: i4182 
=== Succesors ===
=== Usages ===
v2481 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4181 y: i4182  <|@  <|@
f <@*|@fixed>@ <|@
tid v2481 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v624 
=== Succesors ===
trueSuccessor: v2477 
falseSuccessor: v2480 
=== Usages ===
=== Predecessor ===
i4182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v624 #trueSuccessor: v2477 #falseSuccessor: v2480  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v224|DWORD, y: [v222|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B177" "B178" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4183 
=== Usages ===
=== Predecessor ===
v2481 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4183  <|@  <|@
f <@~|@floating>@ <|@
tid v4247 <|@
result [v222|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4178 
=== Succesors ===
=== Usages ===
a4183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4183 <|@
result v225|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4247 
=== Succesors ===
next: v2486 
=== Usages ===
a1865 v1866 v4248 
=== Predecessor ===
v2477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4247 #next: v2486  <|@  <|@
f <@~|@floating>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
value: a4183 
=== Succesors ===
=== Usages ===
v2486 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4183  <|@  <|@
f <@*|@fixed>@ <|@
tid v2486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1866 
=== Succesors ===
trueSuccessor: v2485 
falseSuccessor: v2482 
=== Usages ===
=== Predecessor ===
a4183 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1866 #trueSuccessor: v2485 #falseSuccessor: v2482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD[.] = MOV [v222|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v225|DWORD[.], y: v225|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3448 
=== Usages ===
=== Predecessor ===
v2486 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3448  <|@  <|@
f <@~|@floating>@ <|@
tid i3449 <|@
result int[-477963|0xfffffffffff8b4f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -477963
stableDimension: 0
stamp: i32 [-477963] ⇊00000000fff8b4f5 ⇈00000000fff8b4f5
stampKind: i32
value: int[-477963|0xfffffffffff8b4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-477963|0xfffffffffff8b4f5]] destination: B177 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" "B235" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4184 
=== Usages ===
=== Predecessor ===
v2486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4184  <|@  <|@
f <@~|@floating>@ <|@
tid v4248 <|@
result [v225|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4183 
=== Succesors ===
=== Usages ===
i4184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4184 <|@
result v226|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4248 
=== Succesors ===
next: v2491 
=== Usages ===
v629 v1876 
=== Predecessor ===
v2482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4248 #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4181 
y: i4184 
=== Succesors ===
=== Usages ===
v2491 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4181 y: i4184  <|@  <|@
f <@*|@fixed>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v629 
=== Succesors ===
trueSuccessor: v2487 
falseSuccessor: v2490 
=== Usages ===
=== Predecessor ===
i4184 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v629 #trueSuccessor: v2487 #falseSuccessor: v2490  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|DWORD = MOV [v225|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v226|DWORD, y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B180" "B234" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2496 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2496  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4181 
y: i4184 
=== Succesors ===
=== Usages ===
v2496 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4181 y: i4184  <|@  <|@
f <@*|@fixed>@ <|@
tid v2496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1876 
=== Succesors ===
trueSuccessor: v2492 
falseSuccessor: v2495 
=== Usages ===
=== Predecessor ===
v2487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1876 #trueSuccessor: v2492 #falseSuccessor: v2495  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v226|DWORD, y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B180 falseDestination: B179 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1872 
=== Usages ===
a4185 
=== Predecessor ===
v2496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1872  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
result v227|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 53]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: i32
=== Inputs ===
x: i4181 
y: i98 
=== Succesors ===
=== Usages ===
v1872 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4181 y: i98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 54]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4211 
value: i631 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1874 
=== Usages ===
=== Predecessor ===
v2492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4211 value: i631 stateAfter: - lastLocationAccess: - #next: v1874  <|@  <|@
f <@~|@floating>@ <|@
tid v4249 <|@
result [v86|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1186 
index: - 
=== Succesors ===
=== Usages ===
v1874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 61]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4249 
value: i4181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4185 
=== Usages ===
=== Predecessor ===
v1872 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4249 value: i4181 stateAfter: - lastLocationAccess: - #next: a4185  <|@  <|@
f <@~|@floating>@ <|@
tid a1865 <|@
result v228|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a4183 
=== Succesors ===
=== Usages ===
v4250 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4183  <|@  <|@
f <@~|@floating>@ <|@
tid v4250 <|@
result [v228|QWORD[.] + v224|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1865 
index: i4181 
=== Succesors ===
=== Usages ===
a4185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1865 index: i4181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4185 <|@
result v229|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2492 
address: v4250 
=== Succesors ===
next: v532 
=== Usages ===
a1884 
=== Predecessor ===
v1874 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2492 address: v4250 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid a1884 <|@
result v230|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a4185 
=== Succesors ===
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4185  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
a4185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v227|DWORD = INC v224|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 12], y: v227|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 16], y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v228|QWORD[.] = UNCOMPRESSPOINTER (input: v225|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v229|DWORD[.] = MOV [v228|QWORD[.] + v224|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v230|QWORD[.] = UNCOMPRESSPOINTER (input: v229|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v230|QWORD[.]] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B166" "B180" "B158" "B163" 
    successors "B182" "B193" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a516 <|@
result v231|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v513 
values: a801 a1884 a1808 a1830 
=== Succesors ===
=== Usages ===
?514 ?973 v57 v642 ?925 v1908 v4333 v639 v4252 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v513 values: a801 a1884 a1808 a1830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v521 v532 v1093 v1237 
=== Succesors ===
next: v934 
=== Usages ===
a516 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v521 v532 v1093 v1237 #next: v934  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 521
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - a516 
=== Succesors ===
=== Usages ===
v3373 i4187 i4192 i4195 a4198 i4199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - a516  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 0.7218022376776535
=== Inputs ===
condition: v4062 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v933 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4062 #trueSuccessor: v931 #falseSuccessor: v933  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v231|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B181 -> B182 falseDestination: B181 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B192" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=next target_method_class=Ljava/util/AbstractList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4186 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4186 <|@
result v232|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: i4187 
=== Usages ===
a1911 v4332 v4257 v4259 v4263 
=== Predecessor ===
v931 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: i4187  <|@  <|@
f <@~|@floating>@ <|@
tid v4257 <|@
result [v232|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4186 
=== Succesors ===
=== Usages ===
i4187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4187 <|@
result v233|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4257 
=== Succesors ===
next: i4188 
=== Usages ===
v1011 
=== Predecessor ===
a4186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4257 #next: i4188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4188 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4258 
=== Succesors ===
next: v2506 
=== Usages ===
v1011 
=== Predecessor ===
i4187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4258 #next: v2506  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4187 
y: i4188 
=== Succesors ===
=== Usages ===
v2506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4187 y: i4188  <|@  <|@
f <@*|@fixed>@ <|@
tid v2506 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1011 
=== Succesors ===
trueSuccessor: v2502 
falseSuccessor: v2505 
=== Usages ===
=== Predecessor ===
i4188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1011 #trueSuccessor: v2502 #falseSuccessor: v2505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v232|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v233|DWORD = MOV [v232|DWORD[.] * 8 + 12] size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v233|DWORD, y: [v85|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B182 -> B183 falseDestination: B182 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4189 
=== Usages ===
=== Predecessor ===
v2506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4189  <|@  <|@
f <@~|@floating>@ <|@
tid v4332 <|@
result [v232|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4186 
=== Succesors ===
=== Usages ===
v4189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4189 <|@
result v234|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4332 
=== Succesors ===
next: i4190 
=== Usages ===
v4083 v4082 
=== Predecessor ===
v2502 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4332 #next: i4190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4190 <|@
result v235|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:357) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v1028 
=== Usages ===
v1962 ?3291 v1963 v1951 i969 v1960 v4265 v4261 v1941 v1931 
=== Predecessor ===
v4189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
result v236|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: i32
=== Inputs ===
x: i4190 
y: i98 
=== Succesors ===
=== Usages ===
v1964 v1942 v1961 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4190 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v4082 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4189 
y: v3988 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4189 y: v3988  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v4082 
=== Succesors ===
trueSuccessor: v1021 
falseSuccessor: v1027 
=== Usages ===
=== Predecessor ===
i4190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4082 #trueSuccessor: v1021 #falseSuccessor: v1027  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = MOV [v232|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v235|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v236|DWORD = INC v235|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v234|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B183 -> B184 falseDestination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4191 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4191  <|@  <|@
f <@~|@floating>@ <|@
tid v4259 <|@
result [v232|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4186 
=== Succesors ===
=== Usages ===
a4191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4191 <|@
result v237|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4259 
=== Succesors ===
next: i4192 
=== Usages ===
a1925 v4260 
=== Predecessor ===
v1021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4259 #next: i4192  <|@  <|@
f <@~|@floating>@ <|@
tid v4260 <|@
result [v237|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4191 
=== Succesors ===
=== Usages ===
i4192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4192 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4260 
=== Succesors ===
next: v2516 
=== Usages ===
v1931 
=== Predecessor ===
a4191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4260 #next: v2516  <|@  <|@
f <@~|@floating>@ <|@
tid v1931 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4190 
y: i4192 
=== Succesors ===
=== Usages ===
v2516 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4190 y: i4192  <|@  <|@
f <@*|@fixed>@ <|@
tid v2516 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1931 
=== Succesors ===
trueSuccessor: v2512 
falseSuccessor: v2515 
=== Usages ===
=== Predecessor ===
i4192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1931 #trueSuccessor: v2512 #falseSuccessor: v2515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v237|DWORD[.] = MOV [v232|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction CMP (x: v235|DWORD, y: [v237|DWORD[.] * 8 + 12]) size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1941 
=== Usages ===
a4193 
=== Predecessor ===
v2516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4262 
value: i4190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v2512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4262 value: i4190 stateAfter: - lastLocationAccess: - #next: v1942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
value: i969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4193 
=== Usages ===
=== Predecessor ===
v1941 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4213 value: i969 stateAfter: - lastLocationAccess: - #next: a4193  <|@  <|@
f <@~|@floating>@ <|@
tid a1925 <|@
result v238|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a4191 
=== Succesors ===
=== Usages ===
v4261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4191  <|@  <|@
f <@~|@floating>@ <|@
tid v4261 <|@
result [v238|QWORD[.] + v235|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1925 
index: i4190 
=== Succesors ===
=== Usages ===
a4193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1925 index: i4190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4193 <|@
result v239|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2512 
address: v4261 
=== Succesors ===
next: v1104 
=== Usages ===
a1939 
=== Predecessor ===
v1942 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2512 address: v4261 #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid a1939 <|@
result v240|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a4193 
=== Succesors ===
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4193  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
a4193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 16], y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 12], y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[.] = UNCOMPRESSPOINTER (input: v237|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v239|DWORD[.] = MOV [v238|QWORD[.] + v235|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v240|QWORD[.] = UNCOMPRESSPOINTER (input: v239|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v240|QWORD[.]] destination: B185 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3378 
=== Usages ===
=== Predecessor ===
v2516 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3378  <|@  <|@
f <@~|@floating>@ <|@
tid i3379 <|@
result int[-494619|0xfffffffffff873e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -494619
stableDimension: 0
stamp: i32 [-494619] ⇊00000000fff873e5 ⇈00000000fff873e5
stampKind: i32
value: int[-494619|0xfffffffffff873e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-494619|0xfffffffffff873e5]] destination: B186 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" "B191" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid v4083 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4189 
y: v3986 
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4189 y: v3986  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 0.9931451844203519
=== Inputs ===
condition: v4083 
=== Succesors ===
trueSuccessor: v1033 
falseSuccessor: v1036 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4083 #trueSuccessor: v1033 #falseSuccessor: v1036  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v234|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4194 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4194  <|@  <|@
f <@~|@floating>@ <|@
tid v4263 <|@
result [v232|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4186 
=== Succesors ===
=== Usages ===
a4194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4194 <|@
result v241|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4263 
=== Succesors ===
next: i4195 
=== Usages ===
a1945 v4264 
=== Predecessor ===
v1033 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4263 #next: i4195  <|@  <|@
f <@~|@floating>@ <|@
tid v4264 <|@
result [v241|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4194 
=== Succesors ===
=== Usages ===
i4195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4195 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4264 
=== Succesors ===
next: v2526 
=== Usages ===
v1951 
=== Predecessor ===
a4194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4264 #next: v2526  <|@  <|@
f <@~|@floating>@ <|@
tid v1951 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4190 
y: i4195 
=== Succesors ===
=== Usages ===
v2526 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4190 y: i4195  <|@  <|@
f <@*|@fixed>@ <|@
tid v2526 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1951 
=== Succesors ===
trueSuccessor: v2522 
falseSuccessor: v2525 
=== Usages ===
=== Predecessor ===
i4195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1951 #trueSuccessor: v2522 #falseSuccessor: v2525  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v241|DWORD[.] = MOV [v232|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction CMP (x: v235|DWORD, y: [v241|DWORD[.] * 8 + 12]) size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1960 
=== Usages ===
a4196 
=== Predecessor ===
v2526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4262 
value: i4190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1961 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4262 value: i4190 stateAfter: - lastLocationAccess: - #next: v1961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
value: i969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4196 
=== Usages ===
=== Predecessor ===
v1960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4213 value: i969 stateAfter: - lastLocationAccess: - #next: a4196  <|@  <|@
f <@~|@floating>@ <|@
tid a1945 <|@
result v242|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a4194 
=== Succesors ===
=== Usages ===
v4265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4194  <|@  <|@
f <@~|@floating>@ <|@
tid v4265 <|@
result [v242|QWORD[.] + v235|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1945 
index: i4190 
=== Succesors ===
=== Usages ===
a4196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1945 index: i4190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4196 <|@
result v243|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v2522 
address: v4265 
=== Succesors ===
next: v1248 
=== Usages ===
a1959 
=== Predecessor ===
v1961 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2522 address: v4265 #next: v1248  <|@  <|@
f <@~|@floating>@ <|@
tid a1959 <|@
result v244|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a4196 
=== Succesors ===
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
a4196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 16], y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 12], y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|QWORD[.] = UNCOMPRESSPOINTER (input: v241|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v243|DWORD[.] = MOV [v242|QWORD[.] + v235|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[.] = UNCOMPRESSPOINTER (input: v243|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v244|QWORD[.]] destination: B189 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3382 
=== Usages ===
=== Predecessor ===
v2526 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3382  <|@  <|@
f <@~|@floating>@ <|@
tid i3383 <|@
result int[-499739|0xfffffffffff85fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -499739
stableDimension: 0
stamp: i32 [-499739] ⇊00000000fff85fe5 ⇈00000000fff85fe5
stampKind: i32
value: int[-499739|0xfffffffffff85fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-499739|0xfffffffffff85fe5]] destination: B190 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a965 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a965  <|@  <|@
f <@~|@floating>@ <|@
tid a1911 <|@
result v245|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a4186 
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4186  <|@  <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@74317d55
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a1911 i4190 
=== Succesors ===
=== Usages ===
a965 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1911 i4190  <|@  <|@
tid ?973 <|@
d <@d|@=== Debug Properties ===
bci: 58
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 522
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 a516 - 
=== Succesors ===
=== Usages ===
?3291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 a516 -  <|@  <|@
tid ?3291 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?973 
values: a484 i4190 - 
=== Succesors ===
=== Usages ===
a965 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?973 values: a484 i4190 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a965 <|@
result v246|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1962 
stateDuring: ?3291 
=== Succesors ===
next: v1963 
=== Usages ===
a927 
=== Predecessor ===
v1036 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1962 stateDuring: ?3291 #next: v1963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4262 
value: i4190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1964 
=== Usages ===
=== Predecessor ===
a965 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4262 value: i4190 stateAfter: - lastLocationAccess: - #next: v1964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
value: i969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4213 value: i969 stateAfter: - lastLocationAccess: - #next: v932  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v1964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD[.] = UNCOMPRESSPOINTER (input: v232|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v245|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v235|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v85|QWORD[.] v235|DWORD - 
java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 58] <|@ <|@
      nr   -1  <|@ instruction v246|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 16], y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 12], y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v246|QWORD[.]] destination: B191 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3374 
=== Usages ===
=== Predecessor ===
v2506 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3374  <|@  <|@
f <@~|@floating>@ <|@
tid i3375 <|@
result int[-491283|0xfffffffffff880ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -491283
stableDimension: 0
stamp: i32 [-491283] ⇊00000000fff880ed ⇈00000000fff880ed
stampKind: i32
value: int[-491283|0xfffffffffff880ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-491283|0xfffffffffff880ed]] destination: B192 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B194" "B232" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2531 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v2531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v4061 
=== Succesors ===
trueSuccessor: v2527 
falseSuccessor: v2530 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4061 #trueSuccessor: v2527 #falseSuccessor: v2530  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B231" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4197 
=== Usages ===
=== Predecessor ===
v2531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4197 <|@
result v247|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v4214 
=== Succesors ===
next: a4198 
=== Usages ===
v4268 v4267 v4266 
=== Predecessor ===
v2527 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4214 #next: a4198  <|@  <|@
f <@~|@floating>@ <|@
tid v4268 <|@
result [v247|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4197 
=== Succesors ===
=== Usages ===
a4198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4198 <|@
result v248|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4268 
=== Succesors ===
next: i4199 
=== Usages ===
a1984 v4269 
=== Predecessor ===
a4197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4268 #next: i4199  <|@  <|@
f <@~|@floating>@ <|@
tid v4269 <|@
result [v248|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4198 
=== Succesors ===
=== Usages ===
i4199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4199 <|@
result v249|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v4269 
=== Succesors ===
next: i4200 
=== Usages ===
v985 v1995 
=== Predecessor ===
a4198 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v4269 #next: i4200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4200 <|@
result v250|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:860) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
=== Succesors ===
next: v2546 
=== Usages ===
v980 v985 i987 v1995 v1993 v4270 
=== Predecessor ===
i4199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4213 #next: v2546  <|@  <|@
f <@~|@floating>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4200 
y: i4199 
=== Succesors ===
=== Usages ===
v2546 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4200 y: i4199  <|@  <|@
f <@*|@fixed>@ <|@
tid v2546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1995 
=== Succesors ===
trueSuccessor: v2542 
falseSuccessor: v2545 
=== Usages ===
=== Predecessor ===
i4200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1995 #trueSuccessor: v2542 #falseSuccessor: v2545  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v248|DWORD[.] = MOV [v247|DWORD[.] * 8 + 20] size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v249|DWORD = MOV [v248|DWORD[.] * 8 + 12] size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ instruction v250|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B230" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4201 
=== Usages ===
a4204 
=== Predecessor ===
v2546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4201  <|@  <|@
f <@~|@floating>@ <|@
tid v4266 <|@
result [v247|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4197 
=== Succesors ===
=== Usages ===
i4201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4201 <|@
result v251|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4266 
=== Succesors ===
next: i4202 
=== Usages ===
v1042 
=== Predecessor ===
v2542 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4266 #next: i4202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4202 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4258 
=== Succesors ===
next: v2551 
=== Usages ===
v1042 
=== Predecessor ===
i4201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4258 #next: v2551  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4201 
y: i4202 
=== Succesors ===
=== Usages ===
v2551 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4201 y: i4202  <|@  <|@
f <@*|@fixed>@ <|@
tid v2551 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1042 
=== Succesors ===
trueSuccessor: v2547 
falseSuccessor: v2550 
=== Usages ===
=== Predecessor ===
i4202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1042 #trueSuccessor: v2547 #falseSuccessor: v2550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|DWORD = MOV [v247|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v251|DWORD, y: [v85|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B197" "B229" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4203 
=== Usages ===
=== Predecessor ===
v2551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4203  <|@  <|@
f <@~|@floating>@ <|@
tid v4267 <|@
result [v247|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4197 
=== Succesors ===
=== Usages ===
i4203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4203 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 14]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v4267 
=== Succesors ===
next: v2556 
=== Usages ===
v980 
=== Predecessor ===
v2547 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4267 #next: v2556  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4200 
y: i4203 
=== Succesors ===
=== Usages ===
v2556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4200 y: i4203  <|@  <|@
f <@*|@fixed>@ <|@
tid v2556 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v980 
=== Succesors ===
trueSuccessor: v2552 
falseSuccessor: v2555 
=== Usages ===
=== Predecessor ===
i4203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v980 #trueSuccessor: v2552 #falseSuccessor: v2555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v250|DWORD, y: [v247|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B196 -> B197 falseDestination: B196 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B228" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2561 
=== Usages ===
=== Predecessor ===
v2556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2561  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4200 
y: i4199 
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4200 y: i4199  <|@  <|@
f <@*|@fixed>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v985 
=== Succesors ===
trueSuccessor: v2557 
falseSuccessor: v2560 
=== Usages ===
=== Predecessor ===
v2552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v985 #trueSuccessor: v2557 #falseSuccessor: v2560  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1991 
=== Usages ===
=== Predecessor ===
v2561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid i987 <|@
result v252|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 53]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: i32
=== Inputs ===
x: i4200 
y: i98 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4200 y: i98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 54]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4213 
value: i987 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1993 
=== Usages ===
=== Predecessor ===
v2557 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4213 value: i987 stateAfter: - lastLocationAccess: - #next: v1993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 61]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v4262 
value: i4200 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4204 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v4262 value: i4200 stateAfter: - lastLocationAccess: - #next: a4204  <|@  <|@
f <@~|@floating>@ <|@
tid a1984 <|@
result v253|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a4198 
=== Succesors ===
=== Usages ===
v4270 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4198  <|@  <|@
f <@~|@floating>@ <|@
tid v4270 <|@
result [v253|QWORD[.] + v250|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1984 
index: i4200 
=== Succesors ===
=== Usages ===
a4204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1984 index: i4200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4204 <|@
result v254|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v2542 
address: v4270 
=== Succesors ===
next: v940 
=== Usages ===
a2003 
=== Predecessor ===
v1993 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2542 address: v4270 #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid a2003 <|@
result v255|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a4204 
=== Succesors ===
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4204  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
a4204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD = INC v250|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 12], y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 16], y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v253|QWORD[.] = UNCOMPRESSPOINTER (input: v248|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v254|DWORD[.] = MOV [v253|QWORD[.] + v250|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v255|QWORD[.] = UNCOMPRESSPOINTER (input: v254|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v255|QWORD[.]] destination: B198 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B191" "B198" "B185" "B189" 
    successors "B200" "B203" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a927 <|@
result v256|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v924 
values: a965 a2003 a1939 a1959 
=== Succesors ===
=== Usages ===
?925 v61 v1908 v639 v4254 v642 v4334 v4088 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v924 values: a965 a2003 a1939 a1959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v932 v940 v1104 v1248 
=== Succesors ===
next: v60 
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v932 v940 v1104 v1248 #next: v60  <|@  <|@
tid ?925 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 522
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 a516 - a927 
=== Succesors ===
=== Usages ===
v2244 v2246 v2247 v2248 v2245 v3403 v4382 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 a516 - a927  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 67]
stamp: void
=== Inputs ===
value: a516 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a516  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 67]
stamp: void
trueSuccessorProbability: 0.04052010885999391
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v58 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v256|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v231|QWORD[.], y: v231|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04052010885999391 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B201" "B202" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4588766096413004776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 72]
stamp: void
=== Inputs ===
value: a927 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a927  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8223880597014925
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v256|QWORD[.], y: v256|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8223880597014925 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4587237696756455476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2244 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2244 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B201 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4577267220407250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B204" "B207" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609046482132508958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4205 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4205  <|@  <|@
f <@~|@floating>@ <|@
tid v4333 <|@
result [v231|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a516 
index: - 
=== Succesors ===
=== Usages ===
v4205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a516 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4205 <|@
result v257|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4333 
=== Succesors ===
next: v1887 
=== Usages ===
v4251 v4085 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4333 #next: v1887  <|@  <|@
f <@~|@floating>@ <|@
tid v4251 <|@
result [v257|DWORD * 8 + 448] <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v4205 
=== Succesors ===
=== Usages ===
v1887 v1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v4205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1887 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v4251 
=== Succesors ===
next: v554 
=== Usages ===
v552 
=== Predecessor ===
v4205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4251 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1887 
y: v550 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1887 y: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=equals target_method_class=Ljava/lang/Object; position=at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.6124803025527892
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v553 
=== Usages ===
=== Predecessor ===
v1887 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v545 #falseSuccessor: v553  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|DWORD = MOV [v231|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: [v257|DWORD * 8 + 448]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6124803025527892 condition: = trueDestination: B203 -> B204 falseDestination: B203 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B205" "B206" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605975355817697406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=equals target_method_class=Ljava/lang/Object; position=at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1152 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1152  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Object.equals(Object.java:149) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a516 
y: a927 
=== Succesors ===
=== Usages ===
v1152 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a516 y: a927  <|@  <|@
f <@*|@fixed>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
trueSuccessorProbability: 0.8973841790104002
=== Inputs ===
condition: v639 
=== Succesors ===
trueSuccessor: v1151 
falseSuccessor: v1150 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v639 #trueSuccessor: v1151 #falseSuccessor: v1150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v256|QWORD[.], y: v231|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8973841790104002 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605174938430272170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:525) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2246 
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v1147  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2246 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B205 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4591067759762566818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1152 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" "B223" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603110409192579518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v4084 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4085 v4086 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4085 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4205 
y: v4084 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4205 y: v4084  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.3667859466493169
=== Inputs ===
condition: v4085 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v561 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4085 #trueSuccessor: v558 #falseSuccessor: v561  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v257|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3667859466493169 condition: = trueDestination: B207 -> B208 falseDestination: B207 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B209" "B210" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596408653117255331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a516 
y: a927 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a516 y: a927  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v642 
=== Succesors ===
trueSuccessor: v643 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v642 #trueSuccessor: v643 #falseSuccessor: v644  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v256|QWORD[.], y: v231|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2247 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v1219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2247 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B209 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" "B212" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3235 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3235  <|@  <|@
f <@~|@floating>@ <|@
tid v4088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 72]
stamp: void
=== Inputs ===
value: a927 
=== Succesors ===
=== Usages ===
v3235 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a927  <|@  <|@
f <@*|@fixed>@ <|@
tid v3235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v4088 
=== Succesors ===
trueSuccessor: v3234 
falseSuccessor: v3233 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4088 #trueSuccessor: v3234 #falseSuccessor: v3233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v256|QWORD[.], y: v256|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B210 -> B211 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B225" 
    xhandlers
    flags 
    probability 4576946128042429364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1253 
=== Usages ===
=== Predecessor ===
v3235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1253  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v3234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B211 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" "B222" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591180990207212844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4206 
=== Usages ===
=== Predecessor ===
v3235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4206  <|@  <|@
f <@~|@floating>@ <|@
tid v4334 <|@
result [v256|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a927 
index: - 
=== Succesors ===
=== Usages ===
v4206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a927 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4206 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v4334 
=== Succesors ===
next: v3495 
=== Usages ===
v4086 
=== Predecessor ===
v3233 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4334 #next: v3495  <|@  <|@
f <@~|@floating>@ <|@
tid v4086 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v4206 
y: v4084 
=== Succesors ===
=== Usages ===
v3495 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v4206 y: v4084  <|@  <|@
f <@*|@fixed>@ <|@
tid v3495 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v4086 
=== Succesors ===
trueSuccessor: v3493 
falseSuccessor: v3492 
=== Usages ===
=== Predecessor ===
v4206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4086 #trueSuccessor: v3493 #falseSuccessor: v3492  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v256|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B212 -> B213 falseDestination: B212 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B214" "B215" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: a4207 
=== Usages ===
=== Predecessor ===
v3495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4207  <|@  <|@
f <@~|@floating>@ <|@
tid v4252 <|@
result [v231|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a516 
index: - 
=== Succesors ===
=== Usages ===
a4207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a516 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4207 <|@
result v258|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v4252 
=== Succesors ===
next: v4382 
=== Usages ===
a1890 v4382 v4253 
=== Predecessor ===
v3493 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4252 #next: v4382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
object: a4207 
=== Succesors ===
next: a4208 
=== Usages ===
=== Predecessor ===
a4207 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?925 object: a4207 #next: a4208  <|@  <|@
f <@~|@floating>@ <|@
tid v4254 <|@
result [v256|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a927 
index: - 
=== Succesors ===
=== Usages ===
a4208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a927 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4208 <|@
result v259|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v4254 
=== Succesors ===
next: v2571 
=== Usages ===
a1898 v1899 v4255 
=== Predecessor ===
v4382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4254 #next: v2571  <|@  <|@
f <@~|@floating>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
value: a4208 
=== Succesors ===
=== Usages ===
v2571 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4208  <|@  <|@
f <@*|@fixed>@ <|@
tid v2571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1899 
=== Succesors ===
trueSuccessor: v2570 
falseSuccessor: v2567 
=== Usages ===
=== Predecessor ===
a4208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1899 #trueSuccessor: v2570 #falseSuccessor: v2567  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v258|DWORD[.] = MOV [v231|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v258|DWORD[.] * 8] state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v259|DWORD[.] = MOV [v256|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v259|DWORD[.], y: v259|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B213 -> B214 falseDestination: B213 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3403 
=== Usages ===
=== Predecessor ===
v2571 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3403  <|@  <|@
f <@~|@floating>@ <|@
tid i3405 <|@
result int[-486411|0xfffffffffff893f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -486411
stableDimension: 0
stamp: i32 [-486411] ⇊00000000fff893f5 ⇈00000000fff893f5
stampKind: i32
value: int[-486411|0xfffffffffff893f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
actionAndReason: i3405 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2570 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?925 actionAndReason: i3405 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -486411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B216" "B221" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i4209 
=== Usages ===
=== Predecessor ===
v2571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4209  <|@  <|@
f <@~|@floating>@ <|@
tid v4255 <|@
result [v259|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4208 
=== Succesors ===
=== Usages ===
i4209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4209 <|@
result v260|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4255 
=== Succesors ===
next: i4210 
=== Usages ===
v662 
=== Predecessor ===
v2567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4255 #next: i4210  <|@  <|@
f <@~|@floating>@ <|@
tid v4253 <|@
result [v258|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a4207 
=== Succesors ===
=== Usages ===
i4210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a4207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4210 <|@
result v261|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v4253 
=== Succesors ===
next: v665 
=== Usages ===
v662 v669 i677 
=== Predecessor ===
i4209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4253 #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4209 
y: i4210 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4209 y: i4210  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v664 
=== Usages ===
=== Predecessor ===
i4210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v663 #falseSuccessor: v664  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = MOV [v259|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOV [v258|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v261|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B215 -> B216 falseDestination: B215 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B217" "B218" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582173790952471852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4210 
y: i13 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4210 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v669 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v669 #trueSuccessor: v670 #falseSuccessor: v671  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v261|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B216 -> B217 falseDestination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2248 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v1301 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B217 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i677 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i677  <|@  <|@
f <@~|@floating>@ <|@
tid a1890 <|@
result v262|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a4207 
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4207  <|@  <|@
f <@~|@floating>@ <|@
tid a1898 <|@
result v263|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a4208 
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i677 <|@
result v264|DWORD <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a1890 
array2: a1898 
length: i4210 
lastLocationAccess: - 
=== Succesors ===
next: v81 
=== Usages ===
v71 
=== Predecessor ===
v671 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a1890 array2: a1898 length: i4210 lastLocationAccess: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i677 
y: i13 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i677 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
trueSuccessorProbability: 0.10261582098959976
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v1249 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
i677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v1249 #falseSuccessor: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = UNCOMPRESSPOINTER (input: v258|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v263|QWORD[.] = UNCOMPRESSPOINTER (input: v259|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v264|DWORD = ARRAY_EQUALS (~array1Value: v262|QWORD[.], ~array2Value: v263|QWORD[.], ~lengthValue: v261|DWORD) {temp1: v265|QWORD[*], temp2: v266|QWORD[*], temp3: v267|QWORD, temp4: v268|QWORD, temp5: -, tempXMM: -, vectorTemp1: v269|DOUBLE, vectorTemp2: v270|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v264|DWORD, y: v264|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B225" 
    xhandlers
    flags 
    probability 4562992447969328341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1251 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B219 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577001488191303057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:525) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2245 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?925 
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?925 #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:525) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2245 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B220 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B225" 
    xhandlers
    flags 
    probability 4582173790952471852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B221 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B225" 
    xhandlers
    flags 
    probability 4586677390579842348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3500 
=== Usages ===
=== Predecessor ===
v3495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3500  <|@  <|@
f <@*|@fixed>@ <|@
tid v3500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v3492 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B222 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B224" "B227" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599921682799152171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1904 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
result v271|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v4251 
=== Succesors ===
next: j1907 
=== Usages ===
v4256 v1908 
=== Predecessor ===
v561 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4251 #next: j1907  <|@  <|@
f <@~|@floating>@ <|@
tid v4256 <|@
result [v271|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v1904 
index: - 
=== Succesors ===
=== Usages ===
j1907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1907 <|@
result v272|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v4256 
=== Succesors ===
next: i69 
=== Usages ===
v1908 
=== Predecessor ===
v1904 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v4256 #next: i69  <|@  <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1d95d547
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j1907 
metaspaceMethod: v1904 
arguments: a516 a927 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j1907 metaspaceMethod: v1904 arguments: a516 a927  <|@  <|@
tid ?3292 <|@
d <@d|@=== Debug Properties ===
bci: 82
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 523
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i69 <|@
result v273|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 82
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1908 
stateDuring: ?3292 
=== Succesors ===
next: v1319 
=== Usages ===
v1317 
=== Predecessor ===
j1907 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1908 stateDuring: ?3292 #next: v1319  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i13 
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i69 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:523) [bci: 85]
stamp: void
trueSuccessorProbability: 0.10261582098959976
=== Inputs ===
condition: v1317 
=== Succesors ===
trueSuccessor: v1320 
falseSuccessor: v1318 
=== Usages ===
=== Predecessor ===
i69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1317 #trueSuccessor: v1320 #falseSuccessor: v1318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = MOV [v257|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = MOV [v271|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v231|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v256|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v271|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v272|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:82] <|@ <|@
      nr   -1  <|@ instruction v273|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v273|DWORD, y: v273|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B223 -> B224 falseDestination: B223 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B225" 
    xhandlers
    flags 
    probability 4585291663706160091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1321  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B224 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B219" "B211" "B221" "B224" "B222" 
    successors "B226" 
    xhandlers
    flags 
    probability 4592924920330780472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1251 v1253 v1282 v1321 v3500 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1251 v1253 v1282 v1321 v3500 #next: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B225 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors 
    xhandlers
    flags 
    probability 4592924920330780472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:524) [bci: 88]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599280327465356464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:525) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1322 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1322  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 5
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B227 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3396 
=== Usages ===
=== Predecessor ===
v2561 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3396  <|@  <|@
f <@~|@floating>@ <|@
tid i3397 <|@
result int[-509459|0xfffffffffff839ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -509459
stableDimension: 0
stamp: i32 [-509459] ⇊00000000fff839ed ⇈00000000fff839ed
stampKind: i32
value: int[-509459|0xfffffffffff839ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-509459|0xfffffffffff839ed]] destination: B228 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3394 
=== Usages ===
=== Predecessor ===
v2556 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3394  <|@  <|@
f <@~|@floating>@ <|@
tid i3395 <|@
result int[-507155|0xfffffffffff842ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -507155
stableDimension: 0
stamp: i32 [-507155] ⇊00000000fff842ed ⇈00000000fff842ed
stampKind: i32
value: int[-507155|0xfffffffffff842ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-507155|0xfffffffffff842ed]] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3392 
=== Usages ===
=== Predecessor ===
v2551 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3392  <|@  <|@
f <@~|@floating>@ <|@
tid i3393 <|@
result int[-505875|0xfffffffffff847ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -505875
stableDimension: 0
stamp: i32 [-505875] ⇊00000000fff847ed ⇈00000000fff847ed
stampKind: i32
value: int[-505875|0xfffffffffff847ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-505875|0xfffffffffff847ed]] destination: B230 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3390 
=== Usages ===
=== Predecessor ===
v2546 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3390  <|@  <|@
f <@~|@floating>@ <|@
tid i3391 <|@
result int[-511003|0xfffffffffff833e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -511003
stableDimension: 0
stamp: i32 [-511003] ⇊00000000fff833e5 ⇈00000000fff833e5
stampKind: i32
value: int[-511003|0xfffffffffff833e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-511003|0xfffffffffff833e5]] destination: B231 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3384 
=== Usages ===
=== Predecessor ===
v2531 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3384  <|@  <|@
f <@~|@floating>@ <|@
tid i3385 <|@
result int[-503091|0xfffffffffff852cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -503091
stableDimension: 0
stamp: i32 [-503091] ⇊00000000fff852cd ⇈00000000fff852cd
stampKind: i32
value: int[-503091|0xfffffffffff852cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
v2530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-503091|0xfffffffffff852cd]] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B192" "B186" "B190" "B232" "B231" "B230" "B229" "B228" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3371 <|@
result v274|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-511003 - -491283] ⇊00000000fff800c5 ⇈00000000fff8fffd
valueDescription: i32
=== Inputs ===
merge: v3368 
values: i3375 i3379 i3383 i3385 i3391 i3393 i3395 i3397 
=== Succesors ===
=== Usages ===
v3373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3368 values: i3375 i3379 i3383 i3385 i3391 i3393 i3395 i3397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3374 v3378 v3382 v3384 v3390 v3392 v3394 v3396 
=== Succesors ===
next: v3373 
=== Usages ===
i3371 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3374 v3378 v3382 v3384 v3390 v3392 v3394 v3396 #next: v3373  <|@  <|@
f <@*|@fixed>@ <|@
tid v3373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?514 
actionAndReason: i3371 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3368 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?514 actionAndReason: i3371 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v274|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v274|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:55] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3452 
=== Usages ===
=== Predecessor ===
v2496 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3452  <|@  <|@
f <@~|@floating>@ <|@
tid i3453 <|@
result int[-480539|0xfffffffffff8aae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -480539
stableDimension: 0
stamp: i32 [-480539] ⇊00000000fff8aae5 ⇈00000000fff8aae5
stampKind: i32
value: int[-480539|0xfffffffffff8aae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-480539|0xfffffffffff8aae5]] destination: B234 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3450 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3450  <|@  <|@
f <@~|@floating>@ <|@
tid i3451 <|@
result int[-478995|0xfffffffffff8b0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -478995
stableDimension: 0
stamp: i32 [-478995] ⇊00000000fff8b0ed ⇈00000000fff8b0ed
stampKind: i32
value: int[-478995|0xfffffffffff8b0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-478995|0xfffffffffff8b0ed]] destination: B235 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3446 
=== Usages ===
=== Predecessor ===
v2481 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3446  <|@  <|@
f <@~|@floating>@ <|@
tid i3447 <|@
result int[-476691|0xfffffffffff8b9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -476691
stableDimension: 0
stamp: i32 [-476691] ⇊00000000fff8b9ed ⇈00000000fff8b9ed
stampKind: i32
value: int[-476691|0xfffffffffff8b9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-476691|0xfffffffffff8b9ed]] destination: B236 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3444 
=== Usages ===
=== Predecessor ===
v2476 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3444  <|@  <|@
f <@~|@floating>@ <|@
tid i3445 <|@
result int[-475411|0xfffffffffff8beed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -475411
stableDimension: 0
stamp: i32 [-475411] ⇊00000000fff8beed ⇈00000000fff8beed
stampKind: i32
value: int[-475411|0xfffffffffff8beed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-475411|0xfffffffffff8beed]] destination: B237 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3437 
=== Usages ===
=== Predecessor ===
v2466 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3437  <|@  <|@
f <@~|@floating>@ <|@
tid i3438 <|@
result int[-472627|0xfffffffffff8c9cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -472627
stableDimension: 0
stamp: i32 [-472627] ⇊00000000fff8c9cd ⇈00000000fff8c9cd
stampKind: i32
value: int[-472627|0xfffffffffff8c9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3436 
=== Predecessor ===
v2465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-472627|0xfffffffffff8c9cd]] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B173" "B237" "B236" "B177" "B235" "B234" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3439 <|@
result v275|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-480539 - -472627] ⇊00000000fff880c5 ⇈00000000fff8fffd
valueDescription: i32
=== Inputs ===
merge: v3436 
values: i3438 i3443 i3445 i3447 i3449 i3451 i3453 
=== Succesors ===
=== Usages ===
v3441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3436 values: i3438 i3443 i3445 i3447 i3449 i3451 i3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3437 v3442 v3444 v3446 v3448 v3450 v3452 
=== Succesors ===
next: v3441 
=== Usages ===
i3439 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3437 v3442 v3444 v3446 v3448 v3450 v3452 #next: v3441  <|@  <|@
tid ?1382 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractList.equals(Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 520
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1186 a484 - - i1386 
=== Succesors ===
=== Usages ===
v3441 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1186 a484 - - i1386  <|@  <|@
f <@*|@fixed>@ <|@
tid v3441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1382 
actionAndReason: i3439 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3436 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1382 actionAndReason: i3439 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v275|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v221|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3326 
=== Usages ===
=== Predecessor ===
v2368 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3326  <|@  <|@
f <@~|@floating>@ <|@
tid i3327 <|@
result int[-421427|0xfffffffffff991cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -421427
stableDimension: 0
stamp: i32 [-421427] ⇊00000000fff991cd ⇈00000000fff991cd
stampKind: i32
value: int[-421427|0xfffffffffff991cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3308 
=== Predecessor ===
v2367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-421427|0xfffffffffff991cd]] destination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$ListItr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v3320 
=== Usages ===
=== Predecessor ===
v2316 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v3320  <|@  <|@
f <@~|@floating>@ <|@
tid i3321 <|@
result int[-417075|0xfffffffffff9a2cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -417075
stableDimension: 0
stamp: i32 [-417075] ⇊00000000fff9a2cd ⇈00000000fff9a2cd
stampKind: i32
value: int[-417075|0xfffffffffff9a2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3308 
=== Predecessor ===
v2315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-417075|0xfffffffffff9a2cd]] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B76" "B241" "B240" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3311 <|@
result v276|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-423179 - -407563] ⇊00000000fff980c5 ⇈00000000fff9fffd
valueDescription: i32
=== Inputs ===
merge: v3308 
values: i3317 i3321 i3327 
=== Succesors ===
=== Usages ===
v3313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3308 values: i3317 i3321 i3327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3316 v3320 v3326 
=== Succesors ===
next: v3313 
=== Usages ===
i3311 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3316 v3320 v3326 #next: v3313  <|@  <|@
f <@*|@fixed>@ <|@
tid v3313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i3311 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3308 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i3311 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v276|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.AbstractList.equals(AbstractList.java:519) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3459 
=== Usages ===
=== Predecessor ===
v2272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3459  <|@  <|@
f <@~|@floating>@ <|@
tid i3461 <|@
result int[-516915|0xfffffffffff81ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -516915
stableDimension: 0
stamp: i32 [-516915] ⇊00000000fff81ccd ⇈00000000fff81ccd
stampKind: i32
value: int[-516915|0xfffffffffff81ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1410 
actionAndReason: i3461 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2271 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1410 actionAndReason: i3461 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -516915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v75|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=listIterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractList.equals(AbstractList.java:518) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3306 
=== Usages ===
=== Predecessor ===
v2264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3306  <|@  <|@
f <@~|@floating>@ <|@
tid i3307 <|@
result int[-514355|0xfffffffffff826cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -514355
stableDimension: 0
stamp: i32 [-514355] ⇊00000000fff826cd ⇈00000000fff826cd
stampKind: i32
value: int[-514355|0xfffffffffff826cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3295 
=== Predecessor ===
v2263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-514355|0xfffffffffff826cd]] destination: B244 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" "B244" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i3299 <|@
result v277|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-514355 - -405267] ⇊00000000fff800c5 ⇈00000000fff9fffd
valueDescription: i32
=== Inputs ===
merge: v3295 
values: i3297 i3305 i3307 
=== Succesors ===
=== Usages ===
v3301 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3295 values: i3297 i3305 i3307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3296 v3304 v3306 
=== Succesors ===
next: v3301 
=== Usages ===
i3299 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3296 v3304 v3306 #next: v3301  <|@  <|@
f <@*|@fixed>@ <|@
tid v3301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i3299 
speculation: a3298 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3295 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i3299 speculation: a3298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v277|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v277|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2609 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2609  <|@  <|@
f <@~|@floating>@ <|@
tid i2608 <|@
result v278|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: i32
=== Inputs ===
x: i2592 
y: i98 
=== Succesors ===
=== Usages ===
i2592 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2592 y: i98  <|@  <|@
f <@*|@fixed>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v2591 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2605 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2591  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v278|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v278|DWORD] destination: B246 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:193) [bci: 126]
at java.util.AbstractList.equals(AbstractList.java:515) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2591 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v2596 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2591 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.equals(AbstractList.java:516) [bci: 15]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2595 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@311f2cb7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [v2|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [v2|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B246" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v6|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v7|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v4|QWORD + v9|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v278|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v278|DWORD] destination: B246 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B246" 
    successors "B8" "B247" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5141586199414127 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v19|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4596828522603363643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v22|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*]], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*] + 20], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*] + 24], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[*] + 28], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B17" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v46|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4601121171491796793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v46|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors "B57" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v49|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*]], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 20], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 24], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 28], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.], v44|QWORD[.]] destination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" "B47" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD[.], v86|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV [v86|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV [v85|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B201" "B220" "B205" "B209" "B217" "B227" 
    successors "B59" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611999807685976702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6218287856696522 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v91|DWORD = MOV [v90|DWORD[.] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608192491734893793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = MOV [v90|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v94|DWORD = MOV [v93|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD] destination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606879592346181089
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604132708327177853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v92|DWORD v99|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v102|DWORD = MOV [v101|DWORD[.] * 8 + 8] size: DWORD state [bci:11, 32] <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v101|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v102|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603657884159349860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v100|DWORD, v104|QWORD[.]] destination: B69 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B69" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606992219884315274
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|DWORD, v125|DWORD, v126|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|DWORD[.] = MOV [v126|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v125|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v128|DWORD = MOV [v127|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD, v124|DWORD] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B95" "B98" "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324410
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|DWORD, v138|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|DWORD, y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|DWORD, y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607221057745120672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v138|DWORD v137|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v141|DWORD = MOV [v140|DWORD[.] * 8 + 12] size: DWORD state [bci:11, 41] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v141|DWORD, y: [v86|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOV [v140|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = INC v143|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = UNCOMPRESSPOINTER (input: v140|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v142|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604276656686636359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD, v143|DWORD, v139|DWORD, v145|QWORD[.]] destination: B108 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B108" 
    successors "B158" "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      LIR
      nr   -1  <|@ instruction [v197|DWORD, v198|DWORD, v199|DWORD, v200|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|DWORD[.] = MOV [v200|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v199|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction CMP (x: v198|DWORD, y: [v201|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 16], y: v198|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 12], y: v197|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD[.] = UNCOMPRESSPOINTER (input: v201|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v203|DWORD[.] = MOV [v202|QWORD[.] + v198|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD[.] = UNCOMPRESSPOINTER (input: v203|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|QWORD[.]] destination: B158 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B166" "B180" "B158" "B163" 
    successors "B182" "B193" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      LIR
      nr   -1  <|@ instruction [v231|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B181 -> B182 falseDestination: B181 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B192" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v232|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v233|DWORD = MOV [v232|DWORD[.] * 8 + 12] size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v233|DWORD, y: [v85|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B182 -> B183 falseDestination: B182 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = MOV [v232|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v235|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v236|DWORD = INC v235|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v234|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B183 -> B184 falseDestination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v237|DWORD[.] = MOV [v232|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction CMP (x: v235|DWORD, y: [v237|DWORD[.] * 8 + 12]) size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 16], y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 12], y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[.] = UNCOMPRESSPOINTER (input: v237|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v239|DWORD[.] = MOV [v238|QWORD[.] + v235|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v240|QWORD[.] = UNCOMPRESSPOINTER (input: v239|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v240|QWORD[.]] destination: B185 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B191" "B198" "B185" "B189" 
    successors "B200" "B203" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      LIR
      nr   -1  <|@ instruction [v256|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v231|QWORD[.], y: v231|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04052010885999391 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B204" "B207" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609046482132508958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|DWORD = MOV [v231|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: [v257|DWORD * 8 + 448]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6124803025527892 condition: = trueDestination: B203 -> B204 falseDestination: B203 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B205" "B206" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605975355817697406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v256|QWORD[.], y: v231|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8973841790104002 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605174938430272170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B205 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" "B241" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v110|DWORD = MOV [v109|DWORD[.] * 8 + 16] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B114" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603468868388755523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4600917829224813035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v121|DWORD = MOV [v120|DWORD[.] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = UNCOMPRESSPOINTER (input: v120|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v121|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4600340291367836747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|DWORD, v112|DWORD, v123|QWORD[.]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" "B223" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603110409192579518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v257|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3667859466493169 condition: = trueDestination: B207 -> B208 falseDestination: B207 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B224" "B227" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599921682799152171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = MOV [v257|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = MOV [v271|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v231|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v256|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v271|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v272|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:82] <|@ <|@
      nr   -1  <|@ instruction v273|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v273|DWORD, y: v273|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B223 -> B224 falseDestination: B223 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599280327465356464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B227 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B194" "B232" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B231" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v248|DWORD[.] = MOV [v247|DWORD[.] * 8 + 20] size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v249|DWORD = MOV [v248|DWORD[.] * 8 + 12] size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ instruction v250|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B230" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|DWORD = MOV [v247|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v251|DWORD, y: [v85|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B197" "B229" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v250|DWORD, y: [v247|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B196 -> B197 falseDestination: B196 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B228" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD = INC v250|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 12], y: v252|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 16], y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v253|QWORD[.] = UNCOMPRESSPOINTER (input: v248|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v254|DWORD[.] = MOV [v253|QWORD[.] + v250|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v255|QWORD[.] = UNCOMPRESSPOINTER (input: v254|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v255|QWORD[.]] destination: B198 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v92|DWORD v99|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v106|DWORD = MOV [v105|DWORD[.] * 8 + 16] size: DWORD state [bci:11, 32] <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v107|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v107|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598880901630742082
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|DWORD, v108|DWORD] destination: B74 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B74" 
    successors "B154" "B170" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602048976889610353
    begin_IR
      LIR
      nr   -1  <|@ instruction [v189|DWORD, v190|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B169" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v189|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v192|DWORD = MOV [v191|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v192|DWORD, y: [v86|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOV [v191|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = INC v194|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = UNCOMPRESSPOINTER (input: v191|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v193|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599298131621115601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, v194|DWORD, v190|DWORD, v196|QWORD[.]] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598726182345091718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v139|DWORD] destination: B111 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B111" 
    successors "B172" "B238" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v221|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B171 -> B172 falseDestination: B171 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B173" "B174" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v222|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v222|DWORD[.], y: v222|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B237" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOV [v222|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v223|DWORD, y: [v86|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B236" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v224|DWORD, y: [v222|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B177" "B178" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD[.] = MOV [v222|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v225|DWORD[.], y: v225|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" "B235" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|DWORD = MOV [v225|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v226|DWORD, y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B180" "B234" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v226|DWORD, y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B180 falseDestination: B179 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v227|DWORD = INC v224|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 12], y: v227|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 16], y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v228|QWORD[.] = UNCOMPRESSPOINTER (input: v225|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v229|DWORD[.] = MOV [v228|QWORD[.] + v224|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v230|QWORD[.] = UNCOMPRESSPOINTER (input: v229|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v230|QWORD[.]] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B209" "B210" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596408653117255331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v256|QWORD[.], y: v231|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" "B212" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v256|QWORD[.], y: v256|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B210 -> B211 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" "B222" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591180990207212844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v256|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B212 -> B213 falseDestination: B212 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B214" "B215" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v258|DWORD[.] = MOV [v231|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v258|DWORD[.] * 8] state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v259|DWORD[.] = MOV [v256|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v259|DWORD[.], y: v259|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B213 -> B214 falseDestination: B213 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B216" "B221" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = MOV [v259|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOV [v258|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v261|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B215 -> B216 falseDestination: B215 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B217" "B218" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582173790952471852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v261|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B216 -> B217 falseDestination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = UNCOMPRESSPOINTER (input: v258|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v263|QWORD[.] = UNCOMPRESSPOINTER (input: v259|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v264|DWORD = ARRAY_EQUALS (~array1Value: v262|QWORD[.], ~array2Value: v263|QWORD[.], ~lengthValue: v261|DWORD) {temp1: v265|QWORD[*], temp2: v266|QWORD[*], temp3: v267|QWORD, temp4: v268|QWORD, temp5: -, tempXMM: -, vectorTemp1: v269|DOUBLE, vectorTemp2: v270|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v264|DWORD, y: v264|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577001488191303057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B220 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B115" "B240" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B152" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v148|DWORD = MOV [v147|DWORD[.] * 8 + 16] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v148|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v148|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595504170808271966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD, v150|DWORD] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593829144217942789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v190|DWORD] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592304574260960305
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592185836443809187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOV [v90|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|DWORD] destination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B209 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" "B191" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v234|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v241|DWORD[.] = MOV [v232|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction CMP (x: v235|DWORD, y: [v241|DWORD[.] * 8 + 12]) size: DWORD state [bci:55] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 16], y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 12], y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|QWORD[.] = UNCOMPRESSPOINTER (input: v241|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v243|DWORD[.] = MOV [v242|QWORD[.] + v235|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[.] = UNCOMPRESSPOINTER (input: v243|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v244|QWORD[.]] destination: B189 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B201" "B202" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4588766096413004776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v256|QWORD[.], y: v256|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8223880597014925 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4587237696756455476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B201 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587758007721042323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v104|QWORD[.], v100|DWORD] destination: B70 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B70" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590773165433694024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD, v130|QWORD[.], v131|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOV [v130|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v132|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590678227680113359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOV [v130|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|DWORD, v129|DWORD] destination: B98 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587452961675709276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD, v143|DWORD, v145|QWORD[.], v139|DWORD] destination: B109 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B109" 
    successors "B162" "B165" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286631
    begin_IR
      LIR
      nr   -1  <|@ instruction [v205|DWORD, v206|DWORD, v207|QWORD[.], v208|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = MOV [v207|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v209|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B161 -> B162 falseDestination: B161 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|DWORD[.] = MOV [v207|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v208|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction CMP (x: v206|DWORD, y: [v210|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 16], y: v206|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 12], y: v205|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = UNCOMPRESSPOINTER (input: v210|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v212|DWORD[.] = MOV [v211|QWORD[.] + v206|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = UNCOMPRESSPOINTER (input: v212|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD[.]] destination: B163 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4584781123891604733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|DWORD, v123|QWORD[.], v112|DWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582381754285081060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, v194|DWORD, v196|QWORD[.], v190|DWORD] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B217 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[.] = MOV [v90|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v96|DWORD[.] * 8] state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v92|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 32] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B112" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v132|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[.] = MOV [v130|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v134|DWORD[.], y: v134|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = UNCOMPRESSPOINTER (input: v134|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v129|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 41] <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD, v129|DWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD[.] = UNCOMPRESSPOINTER (input: v232|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v245|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v235|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v85|QWORD[.] v235|DWORD - 
java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 58] <|@ <|@
      nr   -1  <|@ instruction v246|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 16], y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + 12], y: v236|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v246|QWORD[.]] destination: B191 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B166" "B167" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v209|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v214|DWORD[.] = MOV [v207|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v208|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v214|DWORD[.] * 8] state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v215|QWORD[.] = UNCOMPRESSPOINTER (input: v214|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v215|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
stack: v215|QWORD[.] 
locals: - v206|DWORD 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v86|QWORD[.] v206|DWORD - 
java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 50] <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = SUB (x: v216|DWORD, ~y: v206|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = DEC v217|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v215|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v218|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
locals: - - 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v86|QWORD[.] v206|DWORD - 
java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 50] <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 16], y: v206|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD[.] + 12], y: v205|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v219|QWORD[.]] destination: B166 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" "B244" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B39" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596406621125488950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v38|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE v41|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*]], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 20], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 24], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 28], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B80" 
    xhandlers
    flags 
    probability 4600227602964532941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|DWORD] destination: B66 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B66" 
    successors "B81" 
    xhandlers
    flags 
    probability 4603446753444729810
    begin_IR
      LIR
      nr   -1  <|@ instruction [v113|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B87" 
    xhandlers
    flags 
    probability 4603446753444729810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    probability 4599991815045550444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v113|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v115|DWORD = MOV [v114|DWORD[.] * 8 + 16] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: [v86|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4599227807522088194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B136" 
    xhandlers
    flags 
    probability 4595217470780851132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B121" "B84" 
    successors 
    xhandlers
    flags 
    probability 4599411145939086332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction v172|DWORD = MOV [v171|DWORD[.] * 8 + 16] size: DWORD state [bci:99] <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v173|DWORD, y: v172|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = XOR v174|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v175|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v113|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v117|DWORD = MOV [v116|DWORD[.] * 8 + 8] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v117|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B127" 
    xhandlers
    flags 
    probability 4596940622275050737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|DWORD, v119|QWORD[.]] destination: B89 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B89" 
    successors "B133" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|DWORD, v159|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|DWORD[.] = MOV [v159|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v161|DWORD = MOV [v160|DWORD[.] * 8 + 12] size: DWORD state [bci:93] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|DWORD, v158|DWORD] destination: B127 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" "B132" 
    successors "B134" "B149" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr   -1  <|@ instruction [v169|DWORD, v170|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|DWORD, y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B133 -> B134 falseDestination: B133 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B137" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" 
    xhandlers
    flags 
    probability 4593765787855561339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4597142189795094960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4596646706335347062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v25|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596486929903687710
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*]], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v29|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 20], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 24], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 28], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[.]] destination: B22 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B22" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v61|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4600788985385770935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v61|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE v64|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*]], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v64|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*] + 20], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*] + 24], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[*] + 28], y: v68|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.], v60|QWORD[.]] destination: B47 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B40" "B48" 
    xhandlers
    flags 
    probability 4596234818372127850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v54|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596083841613113168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*]], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v57|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 20], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 24], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 28], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B138" 
    xhandlers
    flags 
    probability 4594230945008584264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B122" "B85" 
    successors "B139" "B147" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|DWORD[.] = MOV [v85|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction v177|DWORD = MOV [v176|DWORD[.] * 8 + 8] size: DWORD state [bci:99] <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOV [v85|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v177|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B145" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|DWORD[.] = MOV [v176|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction v180|DWORD = MOV [v179|DWORD[.] * 8 + 12] size: DWORD state [bci:99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v180|DWORD] destination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B142" "B144" 
    successors 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr   -1  <|@ instruction [v185|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v178|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = XOR v186|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v187|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B138" 
    xhandlers
    flags 
    probability 4592360376218162154
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4591067759762566818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD * 8 + 24], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B117" 
    xhandlers
    flags 
    probability 4588098681682314043
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v139|DWORD] destination: B104 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B104" "B73" 
    successors "B118" 
    xhandlers
    flags 
    probability 4590463348771837277
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B124" 
    xhandlers
    flags 
    probability 4590463348771837277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    probability 4587113324401426233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v151|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v153|DWORD = MOV [v152|DWORD[.] * 8 + 16] size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v153|DWORD, y: [v86|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B136" 
    xhandlers
    flags 
    probability 4582311893304577533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B225" 
    xhandlers
    flags 
    probability 4586677390579842348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B222 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B219" "B211" "B221" "B224" "B222" 
    successors "B226" 
    xhandlers
    flags 
    probability 4592924920330780472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B225 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors 
    xhandlers
    flags 
    probability 4592924920330780472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B225" 
    xhandlers
    flags 
    probability 4585291663706160091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B224 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B151" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v87|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B124 -> B125 falseDestination: B124 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B128" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD[.] = MOV [v86|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v151|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction v155|DWORD = MOV [v154|DWORD[.] * 8 + 8] size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOV [v86|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = UNCOMPRESSPOINTER (input: v154|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B127" 
    xhandlers
    flags 
    probability 4584207438666858323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|DWORD, v157|QWORD[.]] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B225" 
    xhandlers
    flags 
    probability 4582173790952471852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B221 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4581782856717489067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v177|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 4581687656463207251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOV [v176|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v181|DWORD] destination: B142 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B138" 
    xhandlers
    flags 
    probability 4581226669887666333
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B129" 
    xhandlers
    flags 
    probability 4581042368272497659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|DWORD, v119|QWORD[.]] destination: B90 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B90" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4581782856717489066
    begin_IR
      LIR
      nr   -1  <|@ instruction [v162|DWORD, v163|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOV [v163|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v164|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581687656463207250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = MOV [v163|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|DWORD, v162|DWORD] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B117" 
    xhandlers
    flags 
    probability 4580209002611148875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD] destination: B73 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4577267220407250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B225" 
    xhandlers
    flags 
    probability 4576946128042429364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B211 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576690041658903912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|DWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4573373567577153376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4571465893878218462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v281|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v44|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571251147304625988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v280|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v280|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v60|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B129" 
    xhandlers
    flags 
    probability 4568070330086243707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|DWORD, v157|QWORD[.]] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567585755083831521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v33|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*]], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 20], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 24], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 28], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B26 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B26" 
    successors "B53" "B243" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v75|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v76|DWORD[.] * 8] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v77|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571939569334802726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v77|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [v15|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*]], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v80|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 20], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 24], y: v84|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v80|QWORD[*] + 28], y: v84|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.], v75|QWORD[.]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v69|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4567286184331032938
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE v72|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*]], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v72|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 20], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 24], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 28], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567098666445716554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v287|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4566877838841885647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v286|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v286|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566825922055979378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v284|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v284|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4566584490871567730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v283|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v283|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B225" 
    xhandlers
    flags 
    probability 4562992447969328341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B219 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B146" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v177|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|DWORD[.] = MOV [v176|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v182|DWORD[.] * 8] state [bci:99] <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = UNCOMPRESSPOINTER (input: v182|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v183|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v178|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 103] <|@ <|@
      nr   -1  <|@ instruction v184|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|DWORD] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v164|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|DWORD[.] = MOV [v163|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v166|DWORD[.] * 8] state [bci:93] <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = UNCOMPRESSPOINTER (input: v166|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v167|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: v162|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 94] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v168|DWORD, v162|DWORD] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4541963835258890812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v279|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v279|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v75|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.]] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4537653897532319400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v285|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4537266573730721232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v282|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v282|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-503091|0xfffffffffff852cd]] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B192" "B186" "B190" "B232" "B231" "B230" "B229" "B228" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v274|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v274|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: v231|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:55] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-494619|0xfffffffffff873e5]] destination: B186 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-478995|0xfffffffffff8b0ed]] destination: B235 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B173" "B237" "B236" "B177" "B235" "B234" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v275|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v221|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-473867|0xfffffffffff8c4f5]] destination: B173 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -457491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v189|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-513555|0xfffffffffff829ed]] destination: B12 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" "B244" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v277|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v277|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -435987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v138|DWORD v137|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:11, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-499739|0xfffffffffff85fe5]] destination: B190 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-507155|0xfffffffffff842ed]] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-505875|0xfffffffffff847ed]] destination: B230 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-480539|0xfffffffffff8aae5]] destination: B234 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-511003|0xfffffffffff833e5]] destination: B231 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-417075|0xfffffffffff9a2cd]] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B76" "B241" "B240" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v276|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -426803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v113|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-475411|0xfffffffffff8beed]] destination: B237 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -439603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v151|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-514355|0xfffffffffff826cd]] destination: B244 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -486411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: v256|QWORD[.] 
locals: - - v86|QWORD[.] v85|QWORD[.] v231|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -516915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v75|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-415027|0xfffffffffff9aacd]] destination: B76 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-476691|0xfffffffffff8b9ed]] destination: B236 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -460827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v199|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -515603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: v44|QWORD[.] 
locals: - v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-466715|0xfffffffffff8e0e5]] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v220|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v220|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: v208|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-431155|0xfffffffffff96bcd]] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: v131|DWORD 
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-432395|0xfffffffffff966f5]] destination: B101 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-405267|0xfffffffffff9d0ed]] destination: B1 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-491283|0xfffffffffff880ed]] destination: B192 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-509459|0xfffffffffff839ed]] destination: B228 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -443955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:93] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-477963|0xfffffffffff8b4f5]] destination: B177 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-421427|0xfffffffffff991cd]] destination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-448563|0xfffffffffff927cd]] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v188|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v188|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -409395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: v92|DWORD v99|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - v86|QWORD[.] v85|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:11, 32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-452915|0xfffffffffff916cd]] destination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-469811|0xfffffffffff8d4cd]] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-472627|0xfffffffffff8c9cd]] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_0       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #30         // java.util.List
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_0       
    17: invokevirtual #5          // listIterator:()java.util.ListIterator
    20: astore_2      
    21: aload_1       
    22: checkcast     #30         // java.util.List
    25: invokeinterface#23, 1      // java.util.List.listIterator:()java.util.ListIterator
    30: astore_3      
    31: aload_2       
    32: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
    37: ifeq          93
    40: aload_3       
    41: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
    46: ifeq          93
    49: aload_2       
    50: invokeinterface#7, 1       // java.util.ListIterator.next:()java.lang.Object
    55: astore        4
    57: aload_3       
    58: invokeinterface#7, 1       // java.util.ListIterator.next:()java.lang.Object
    63: astore        5
    65: aload         4
    67: ifnonnull     78
    70: aload         5
    72: ifnonnull     88
    75: goto          90
    78: aload         4
    80: aload         5
    82: invokevirtual #9          // java.lang.Object.equals:(java.lang.Object)boolean
    85: ifne          90
    88: iconst_0      
    89: ireturn       
    90: goto          31
    93: aload_2       
    94: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
    99: ifne          115
   102: aload_3       
   103: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
   108: ifne          115
   111: iconst_1      
   112: goto          116
   115: iconst_0      
   116: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@311f2cb7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: r14|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/List;, resolved>} <|@ <|@
      nr   28  <|@ instruction CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/List;, resolved>;compressed} <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV [rax|QWORD] size: DWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B246" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV [rax|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr 2486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 2490  <|@ instruction JUMP ~[] destination: B246 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B246" 
    successors "B8" "B247" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   92  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   94  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.5141586199414127 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction CMP [r13|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rbx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  114  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4596828522603363643
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  192  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B17" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4601121171491796793
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors "B57" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rbx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  518  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ instruction rbx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  526  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  528  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  530  <|@ instruction r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" "B47" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  844  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  854  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B201" "B220" "B205" "B209" "B217" "B227" 
    successors "B59" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611999807685976702
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  862  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.6218287856696522 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rbx|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rbx:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  872  <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  874  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608192491734893793
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  936  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdi|DWORD = SETCC condition: != <|@ <|@
      nr  940  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606879592346181089
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  950  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  952  <|@ instruction BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604132708327177853
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdx|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:11, 32] <|@ <|@
      nr  960  <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  966  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603657884159349860
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction JUMP ~[] destination: B69 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B69" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606992219884315274
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1166  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr 1168  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~[] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B95" "B98" "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324410
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1246  <|@ instruction CMP (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1248  <|@ instruction rdx|DWORD = SETCC condition: != <|@ <|@
      nr 1250  <|@ instruction CMP (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1252  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607221057745120672
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1264  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1270  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdi|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:11, 41] <|@ <|@
      nr 1272  <|@ instruction CMP (x: rax|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1280  <|@ instruction rax|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1282  <|@ instruction rdi|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr 1284  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1286  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1288  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604276656686636359
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1292  <|@ instruction JUMP ~[] destination: B108 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" "B108" 
    successors "B158" "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1684  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr 1686  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1690  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1694  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1696  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1698  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1700  <|@ instruction JUMP ~[] destination: B158 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B166" "B180" "B158" "B163" 
    successors "B182" "B193" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      LIR
      nr 1920  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1922  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1924  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B181 -> B182 falseDestination: B181 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B192" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      LIR
      nr 1926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1928  <|@ instruction rbx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1930  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:55] <|@ <|@
      nr 1932  <|@ instruction CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1934  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B182 -> B183 falseDestination: B182 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1940  <|@ instruction rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1942  <|@ instruction rax|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 1944  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1946  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B183 -> B184 falseDestination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      LIR
      nr 1948  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1950  <|@ instruction rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1952  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:55] <|@ <|@
      nr 1954  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1958  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1964  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1966  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1968  <|@ instruction JUMP ~[] destination: B185 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B191" "B198" "B185" "B189" 
    successors "B200" "B203" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2120  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 2122  <|@ instruction BRANCH trueDestinationProbability: 0.04052010885999391 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B204" "B207" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609046482132508958
    begin_IR
      LIR
      nr 2152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2154  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2156  <|@ instruction CMP (x: rcx|QWORD, y: [rbx|DWORD * 8 + 448]) size: QWORD <|@ <|@
      nr 2158  <|@ instruction BRANCH trueDestinationProbability: 0.6124803025527892 condition: = trueDestination: B203 -> B204 falseDestination: B203 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B205" "B206" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605975355817697406
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2162  <|@ instruction CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 2164  <|@ instruction BRANCH trueDestinationProbability: 0.8973841790104002 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605174938430272170
    begin_IR
      LIR
      nr 2166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2168  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2170  <|@ instruction JUMP ~[] destination: B205 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" "B241" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1032  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:31] <|@ <|@
      nr 1034  <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1036  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = SETCC condition: != <|@ <|@
      nr 1040  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1042  <|@ instruction BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B114" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603468868388755523
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1136  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1138  <|@ instruction BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4600917829224813035
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1142  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr 1146  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1150  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1152  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4600340291367836747
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" "B223" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603110409192579518
    begin_IR
      LIR
      nr 2178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2180  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2182  <|@ instruction BRANCH trueDestinationProbability: 0.3667859466493169 condition: = trueDestination: B207 -> B208 falseDestination: B207 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B224" "B227" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599921682799152171
    begin_IR
      LIR
      nr 2318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2320  <|@ instruction rbx|QWORD = MOV [rbx|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr 2322  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 2324  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:82] <|@ <|@
      nr 2326  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2328  <|@ instruction BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B223 -> B224 falseDestination: B223 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599280327465356464
    begin_IR
      LIR
      nr 2344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2346  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2348  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2350  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 2352  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2354  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2356  <|@ instruction JUMP ~[] destination: B227 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B194" "B232" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2064  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 2066  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B231" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2070  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2072  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD state [bci:55] <|@ <|@
      nr 2074  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:55] <|@ <|@
      nr 2076  <|@ instruction rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2078  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2080  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B230" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2084  <|@ instruction rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2086  <|@ instruction CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 2088  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B197" "B229" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2092  <|@ instruction CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 2094  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B196 -> B197 falseDestination: B196 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B228" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2098  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2100  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2104  <|@ instruction rdx|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2110  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2112  <|@ instruction rdx|DWORD[.] = MOV [rbx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2116  <|@ instruction JUMP ~[] destination: B198 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  986  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdx|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:11, 32] <|@ <|@
      nr  988  <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  990  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  992  <|@ instruction rbx|DWORD = SETCC condition: != <|@ <|@
      nr  994  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598880901630742082
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B74 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B74" 
    successors "B154" "B170" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602048976889610353
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1646  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1648  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B169" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1652  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1654  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr 1656  <|@ instruction CMP (x: rdx|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1658  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1662  <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1664  <|@ instruction rax|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1666  <|@ instruction rdi|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr 1668  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1670  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1672  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599298131621115601
    begin_IR
      LIR
      nr 1674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1676  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction JUMP ~[] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598726182345091718
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B111 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B111" 
    successors "B172" "B238" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1840  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1842  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1844  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B171 -> B172 falseDestination: B171 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B173" "B174" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1848  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1850  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1852  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B237" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1862  <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1864  <|@ instruction CMP (x: rbx|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1866  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B236" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1870  <|@ instruction rbx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1872  <|@ instruction CMP (x: rbx|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1874  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B177" "B178" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1878  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1880  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1882  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" "B235" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1892  <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1894  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1896  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B180" "B234" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1900  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1902  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B180 falseDestination: B179 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1906  <|@ instruction rdx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr 1908  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1910  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1912  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1914  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1916  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1918  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B209" "B210" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596408653117255331
    begin_IR
      LIR
      nr 2184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2186  <|@ instruction CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 2188  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" "B212" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 2210  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B210 -> B211 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" "B222" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591180990207212844
    begin_IR
      LIR
      nr 2216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2218  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2220  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B212 -> B213 falseDestination: B212 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B214" "B215" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      LIR
      nr 2222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2224  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2226  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:63] <|@ <|@
      nr 2228  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2230  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 2232  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B213 -> B214 falseDestination: B213 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B216" "B221" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      LIR
      nr 2246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2248  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2250  <|@ instruction r9|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2252  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2254  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B215 -> B216 falseDestination: B215 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B217" "B218" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582173790952471852
    begin_IR
      LIR
      nr 2256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2258  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2260  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B216 -> B217 falseDestination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2282  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2284  <|@ instruction r8|DWORD = ARRAY_EQUALS (~array1Value: r10|QWORD[.], ~array2Value: r11|QWORD[.], ~lengthValue: r9|DWORD) {temp1: rcx|QWORD[*], temp2: rbx|QWORD[*], temp3: rdi|QWORD, temp4: rax|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr 2286  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2288  <|@ instruction BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577001488191303057
    begin_IR
      LIR
      nr 2294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2296  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2300  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2302  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 2304  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2306  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2308  <|@ instruction JUMP ~[] destination: B220 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B115" "B240" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1328  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1330  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B152" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1336  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:31] <|@ <|@
      nr 1338  <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1340  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction rdi|DWORD = SETCC condition: != <|@ <|@
      nr 1344  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1346  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595504170808271966
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1636  <|@ instruction stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593829144217942789
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1838  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592304574260960305
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592185836443809187
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      LIR
      nr 2190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2192  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2194  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2196  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2198  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 2200  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2202  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction JUMP ~[] destination: B209 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" "B191" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286632
    begin_IR
      LIR
      nr 1978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1980  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1982  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 1988  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:55] <|@ <|@
      nr 1990  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      LIR
      nr 1992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1996  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1998  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2000  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2002  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2004  <|@ instruction JUMP ~[] destination: B189 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B201" "B202" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4588766096413004776
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2126  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 2128  <|@ instruction BRANCH trueDestinationProbability: 0.8223880597014925 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4587237696756455476
    begin_IR
      LIR
      nr 2130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2132  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2134  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2136  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2138  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 2140  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2144  <|@ instruction JUMP ~[] destination: B201 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587758007721042323
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B70 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B70" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590773165433694024
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1186  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1188  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590678227680113359
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1194  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction JUMP ~[] destination: B98 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587452961675709276
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction JUMP ~[] destination: B109 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B109" 
    successors "B162" "B165" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286631
    begin_IR
      LIR
      nr 1716  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1718  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1720  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1722  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B161 -> B162 falseDestination: B161 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1726  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1728  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr 1730  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1734  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1744  <|@ instruction JUMP ~[] destination: B163 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4584781123891604733
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582381754285081060
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1712  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1714  <|@ instruction JUMP ~[] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      LIR
      nr 2262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2264  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2266  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2268  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2270  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 2272  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2274  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2276  <|@ instruction JUMP ~[] destination: B217 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr  904  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction stack:40|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ st <@st|@reference-map: [rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:31] <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  916  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:40|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 32] <|@ <|@
      nr  918  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr  924  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B112" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1200  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr 1202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1208  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction stack:40|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1226  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:40|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 41] <|@ <|@
      nr 1228  <|@ instruction rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 1234  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1236  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010211
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2016  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2020  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2022  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2024  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 2026  <|@ instruction stack:40|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 2028  <|@ st <@st|@reference-map: [stack:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:48|QWORD[.] stack:40|DWORD - 
java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 58] <|@ <|@
      nr 2030  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2032  <|@ instruction rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 2034  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2036  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 2038  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2040  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2042  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2046  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2048  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2052  <|@ instruction JUMP ~[] destination: B191 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B166" "B167" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1754  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr 1756  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      LIR
      nr 1758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1760  <|@ instruction stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1762  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1766  <|@ st <@st|@reference-map: [rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:46] <|@ <|@
      nr 1768  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1770  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1772  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1774  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1776  <|@ st <@st|@reference-map: [stack:0, stack:16, stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
stack: stack:80|QWORD[.] 
locals: - stack:40|DWORD 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:64|QWORD[.] stack:40|DWORD - 
java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 50] <|@ <|@
      nr 1778  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr 1782  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1784  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1786  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
locals: - - 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:64|QWORD[.] stack:40|DWORD - 
java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 50] <|@ <|@
      nr 1788  <|@ instruction rsi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1796  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1798  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1800  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 1802  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1806  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction JUMP ~[] destination: B166 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" "B244" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B39" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  372  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596406621125488950
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  424  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  432  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  440  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B80" 
    xhandlers
    flags 
    probability 4600227602964532941
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction JUMP ~[] destination: B66 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B66" 
    successors "B81" 
    xhandlers
    flags 
    probability 4603446753444729810
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B87" 
    xhandlers
    flags 
    probability 4603446753444729810
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1058  <|@ instruction BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    probability 4599991815045550444
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:37] <|@ <|@
      nr 1066  <|@ instruction CMP (x: rax|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1068  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4599227807522088194
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B136" 
    xhandlers
    flags 
    probability 4595217470780851132
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~[] destination: B84 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B121" "B84" 
    successors 
    xhandlers
    flags 
    probability 4599411145939086332
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1502  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:99] <|@ <|@
      nr 1506  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1508  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr 1512  <|@ instruction rax|DWORD = XOR rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1514  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1098  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1104  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:37] <|@ <|@
      nr 1106  <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1108  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1110  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1112  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B127" 
    xhandlers
    flags 
    probability 4596940622275050737
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction JUMP ~[] destination: B89 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B89" 
    successors "B133" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1430  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:93] <|@ <|@
      nr 1432  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction JUMP ~[] destination: B127 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" "B132" 
    successors "B134" "B149" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1486  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B133 -> B134 falseDestination: B133 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B137" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1490  <|@ instruction CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1492  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" 
    xhandlers
    flags 
    probability 4593765787855561339
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4597142189795094960
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4596646706335347062
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rcx|QWORD + 32] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596486929903687710
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 224] instr: 0 <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B22 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B22" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  622  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4600788985385770935
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rbx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  668  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction rbx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  676  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B40" "B48" 
    xhandlers
    flags 
    probability 4596234818372127850
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596083841613113168
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  604  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  610  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  612  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr 2492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2494  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2496  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B138" 
    xhandlers
    flags 
    probability 4594230945008584264
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B85 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B122" "B85" 
    successors "B139" "B147" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1526  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1530  <|@ instruction r13|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1532  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - r10|QWORD[.] - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:99] <|@ <|@
      nr 1534  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1536  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1538  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B145" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1542  <|@ instruction rax|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1544  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:99] <|@ <|@
      nr 1546  <|@ instruction JUMP ~[] destination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B142" "B144" 
    successors 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1584  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1586  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr 1588  <|@ instruction rax|DWORD = XOR rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B138" 
    xhandlers
    flags 
    probability 4592360376218162154
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1518  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4591067759762566818
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2174  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|DWORD * 8 + 24], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B117" 
    xhandlers
    flags 
    probability 4588098681682314043
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B104 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B104" "B73" 
    successors "B118" 
    xhandlers
    flags 
    probability 4590463348771837277
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1356  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B124" 
    xhandlers
    flags 
    probability 4590463348771837277
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1362  <|@ instruction BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    probability 4587113324401426233
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1368  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rbx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:46] <|@ <|@
      nr 1370  <|@ instruction CMP (x: rax|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1378  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B136" 
    xhandlers
    flags 
    probability 4582311893304577533
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~[] destination: B121 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B225" 
    xhandlers
    flags 
    probability 4586677390579842348
    begin_IR
      LIR
      nr 2314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2316  <|@ instruction JUMP ~[] destination: B222 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B219" "B211" "B221" "B224" "B222" 
    successors "B226" 
    xhandlers
    flags 
    probability 4592924920330780472
    begin_IR
      LIR
      nr 2334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2336  <|@ instruction JUMP ~[] destination: B225 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" 
    successors 
    xhandlers
    flags 
    probability 4592924920330780472
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1092  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B225" 
    xhandlers
    flags 
    probability 4585291663706160091
    begin_IR
      LIR
      nr 2330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2332  <|@ instruction JUMP ~[] destination: B224 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1616  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B151" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1400  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1404  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B124 -> B125 falseDestination: B124 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B128" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rbx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:46] <|@ <|@
      nr 1412  <|@ instruction r13|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1414  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1416  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1418  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B127" 
    xhandlers
    flags 
    probability 4584207438666858323
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B225" 
    xhandlers
    flags 
    probability 4582173790952471852
    begin_IR
      LIR
      nr 2310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2312  <|@ instruction JUMP ~[] destination: B221 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4581782856717489067
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1552  <|@ instruction BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 4581687656463207251
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1556  <|@ instruction rax|DWORD = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1558  <|@ instruction JUMP ~[] destination: B142 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B138" 
    xhandlers
    flags 
    probability 4581226669887666333
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1388  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction JUMP ~[] destination: B122 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B129" 
    xhandlers
    flags 
    probability 4581042368272497659
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B90 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B90" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4581782856717489066
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1446  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1448  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1450  <|@ instruction BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581687656463207250
    begin_IR
      LIR
      nr 1452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1454  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1456  <|@ instruction JUMP ~[] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B117" 
    xhandlers
    flags 
    probability 4580209002611148875
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B73 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4577267220407250640
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2148  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B225" 
    xhandlers
    flags 
    probability 4576946128042429364
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2214  <|@ instruction JUMP ~[] destination: B211 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576690041658903912
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1350  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4573373567577153376
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4571465893878218462
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  480  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [stack:16, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: stack:64|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r9|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571251147304625988
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  632  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  634  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  636  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: r13|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  644  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B129" 
    xhandlers
    flags 
    probability 4568070330086243707
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1440  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567585755083831521
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 224] instr: 0 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B26 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B26" 
    successors "B53" "B243" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  764  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: rdx|QWORD[.] 
locals: - r10|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:20] <|@ <|@
      nr  776  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  778  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  780  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571939569334802726
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  808  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction r11|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr  822  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  824  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  832  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  696  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  698  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4567286184331032938
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  734  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  736  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  752  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567098666445716554
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:32, stack:44, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4566877838841885647
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [stack:32, stack:44, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  246  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566825922055979378
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  392  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  396  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  408  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4566584490871567730
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  564  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  570  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  580  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B225" 
    xhandlers
    flags 
    probability 4562992447969328341
    begin_IR
      LIR
      nr 2290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2292  <|@ instruction JUMP ~[] destination: B219 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B146" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1562  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr 1564  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1568  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rsi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1572  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:99] <|@ <|@
      nr 1574  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1576  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:40|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 103] <|@ <|@
      nr 1578  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1580  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1460  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr 1462  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction r8|DWORD[.] = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1470  <|@ st <@st|@reference-map: [r8:0, r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:93] <|@ <|@
      nr 1472  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1474  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1476  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:40|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
locals: - - - stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 94] <|@ <|@
      nr 1478  <|@ instruction rsi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4541963835258890812
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  792  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: stack:48|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr  796  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4537653897532319400
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  304  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  306  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:32, stack:44, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4537266573730721232
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  712  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  714  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  716  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  726  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2392  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2394  <|@ instruction r10|DWORD = MOVE input: int[-503091|0xfffffffffff852cd] <|@ <|@
      nr 2396  <|@ instruction JUMP ~[] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B192" "B186" "B190" "B232" "B231" "B230" "B229" "B228" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 2398  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2400  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2402  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2404  <|@ st <@st|@reference-map: [rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:55] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1972  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1974  <|@ instruction r10|DWORD = MOVE input: int[-494619|0xfffffffffff873e5] <|@ <|@
      nr 1976  <|@ instruction JUMP ~[] destination: B186 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2414  <|@ instruction r10|DWORD = MOVE input: int[-478995|0xfffffffffff8b0ed] <|@ <|@
      nr 2416  <|@ instruction JUMP ~[] destination: B235 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B173" "B237" "B236" "B177" "B235" "B234" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2436  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2438  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2440  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2442  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-473867|0xfffffffffff8c4f5] <|@ <|@
      nr 1858  <|@ instruction JUMP ~[] destination: B173 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1828  <|@ instruction MOV [r15|QWORD + 668] y: -457491 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r10|DWORD = MOVE input: int[-513555|0xfffffffffff829ed] <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B12 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" "B244" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2480  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2482  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2484  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction MOV [r15|QWORD + 668] y: -435987 size: DWORD <|@ <|@
      nr 1302  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1304  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdi|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:11, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2008  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2010  <|@ instruction r10|DWORD = MOVE input: int[-499739|0xfffffffffff85fe5] <|@ <|@
      nr 2012  <|@ instruction JUMP ~[] destination: B190 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2368  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2370  <|@ instruction r10|DWORD = MOVE input: int[-507155|0xfffffffffff842ed] <|@ <|@
      nr 2372  <|@ instruction JUMP ~[] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2376  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2378  <|@ instruction r10|DWORD = MOVE input: int[-505875|0xfffffffffff847ed] <|@ <|@
      nr 2380  <|@ instruction JUMP ~[] destination: B230 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2408  <|@ instruction r10|DWORD = MOVE input: int[-480539|0xfffffffffff8aae5] <|@ <|@
      nr 2410  <|@ instruction JUMP ~[] destination: B234 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2384  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2386  <|@ instruction r10|DWORD = MOVE input: int[-511003|0xfffffffffff833e5] <|@ <|@
      nr 2388  <|@ instruction JUMP ~[] destination: B231 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2452  <|@ instruction r10|DWORD = MOVE input: int[-417075|0xfffffffffff9a2cd] <|@ <|@
      nr 2454  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B76" "B241" "B240" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2456  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2458  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2460  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2462  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 668] y: -426803 size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1132  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2426  <|@ instruction r10|DWORD = MOVE input: int[-475411|0xfffffffffff8beed] <|@ <|@
      nr 2428  <|@ instruction JUMP ~[] destination: B237 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1628  <|@ instruction MOV [r15|QWORD + 668] y: -439603 size: DWORD <|@ <|@
      nr 1630  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1632  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rbx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2474  <|@ instruction r10|DWORD = MOVE input: int[-514355|0xfffffffffff826cd] <|@ <|@
      nr 2476  <|@ instruction JUMP ~[] destination: B244 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2236  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2238  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2240  <|@ instruction MOV [r15|QWORD + 668] y: -486411 size: DWORD <|@ <|@
      nr 2242  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2244  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - r11|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2466  <|@ instruction MOV [r15|QWORD + 668] y: -516915 size: DWORD <|@ <|@
      nr 2468  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2470  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-415027|0xfffffffffff9aacd] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B76 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2420  <|@ instruction r10|DWORD = MOVE input: int[-476691|0xfffffffffff8b9ed] <|@ <|@
      nr 2422  <|@ instruction JUMP ~[] destination: B236 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1704  <|@ instruction MOV [r15|QWORD + 668] y: -460827 size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction MOV [r15|QWORD + 668] y: -515603 size: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: r13|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1748  <|@ instruction r10|DWORD = MOVE input: int[-466715|0xfffffffffff8e0e5] <|@ <|@
      nr 1750  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction r10|DWORD = MOVE input: int[-431155|0xfffffffffff96bcd] <|@ <|@
      nr 1314  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1316  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1324  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction r10|DWORD = MOVE input: int[-432395|0xfffffffffff966f5] <|@ <|@
      nr 1216  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction JUMP ~[] destination: B101 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[-405267|0xfffffffffff9d0ed] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2056  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2058  <|@ instruction r10|DWORD = MOVE input: int[-491283|0xfffffffffff880ed] <|@ <|@
      nr 2060  <|@ instruction JUMP ~[] destination: B192 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2360  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2362  <|@ instruction r10|DWORD = MOVE input: int[-509459|0xfffffffffff839ed] <|@ <|@
      nr 2364  <|@ instruction JUMP ~[] destination: B228 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1620  <|@ instruction MOV [r15|QWORD + 668] y: -443955 size: DWORD <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1624  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:93] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1886  <|@ instruction r10|DWORD = MOVE input: int[-477963|0xfffffffffff8b4f5] <|@ <|@
      nr 1888  <|@ instruction JUMP ~[] destination: B177 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2446  <|@ instruction r10|DWORD = MOVE input: int[-421427|0xfffffffffff991cd] <|@ <|@
      nr 2448  <|@ instruction JUMP ~[] destination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction r10|DWORD = MOVE input: int[-448563|0xfffffffffff927cd] <|@ <|@
      nr 1602  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1606  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 668] y: -409395 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdx|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:11, 32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1594  <|@ instruction r10|DWORD = MOVE input: int[-452915|0xfffffffffff916cd] <|@ <|@
      nr 1596  <|@ instruction JUMP ~[] destination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction r10|DWORD = MOVE input: int[-469811|0xfffffffffff8d4cd] <|@ <|@
      nr 1816  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2432  <|@ instruction r10|DWORD = MOVE input: int[-472627|0xfffffffffff8c9cd] <|@ <|@
      nr 2434  <|@ instruction JUMP ~[] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_0       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #30         // java.util.List
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_0       
    17: invokevirtual #5          // listIterator:()java.util.ListIterator
    20: astore_2      
    21: aload_1       
    22: checkcast     #30         // java.util.List
    25: invokeinterface#23, 1      // java.util.List.listIterator:()java.util.ListIterator
    30: astore_3      
    31: aload_2       
    32: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
    37: ifeq          93
    40: aload_3       
    41: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
    46: ifeq          93
    49: aload_2       
    50: invokeinterface#7, 1       // java.util.ListIterator.next:()java.lang.Object
    55: astore        4
    57: aload_3       
    58: invokeinterface#7, 1       // java.util.ListIterator.next:()java.lang.Object
    63: astore        5
    65: aload         4
    67: ifnonnull     78
    70: aload         5
    72: ifnonnull     88
    75: goto          90
    78: aload         4
    80: aload         5
    82: invokevirtual #9          // java.lang.Object.equals:(java.lang.Object)boolean
    85: ifne          90
    88: iconst_0      
    89: ireturn       
    90: goto          31
    93: aload_2       
    94: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
    99: ifne          115
   102: aload_3       
   103: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
   108: ifne          115
   111: iconst_1      
   112: goto          116
   115: iconst_0      
   116: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@311f2cb7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: r14|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/List;, resolved>} <|@ <|@
      nr   28  <|@ instruction CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/List;, resolved>;compressed} <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B10 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = MOV [rax|QWORD] size: DWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B246" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOV [rax|QWORD + r11|QWORD * 1] size: QWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr 2486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 2490  <|@ instruction JUMP ~[] destination: B246 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B246" 
    successors "B8" "B247" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   92  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   94  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.5141586199414127 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction CMP [r13|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4601279903502346193
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rbx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  114  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4596828522603363643
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596905901414604332
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B17 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B17" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4601121171491796793
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors "B57" 
    xhandlers
    flags 
    probability 4601196419487492660
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction rbx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  514  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  518  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ instruction rbx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  526  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  528  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  530  <|@ instruction r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" "B47" "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  844  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  850  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  854  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B201" "B220" "B205" "B209" "B217" "B227" 
    successors "B59" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611999807685976702
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  862  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.6218287856696522 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rbx|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rbx:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  872  <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  874  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608192491734893793
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B64" 
    successors "B81" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608670001334756004
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  936  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction rdi|DWORD = SETCC condition: != <|@ <|@
      nr  940  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B65 -> B81 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606879592346181089
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  950  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  952  <|@ instruction BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B95" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604132708327177853
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdx|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:11, 32] <|@ <|@
      nr  960  <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  966  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B68 -> B95 falseDestination: B68 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" "B68" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4606992219884315274
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1164  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1166  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr 1168  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~[] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B95" "B98" "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324410
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1246  <|@ instruction CMP (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1248  <|@ instruction rdx|DWORD = SETCC condition: != <|@ <|@
      nr 1250  <|@ instruction CMP (x: rdi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1252  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607221057745120672
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1264  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1270  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdi|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:11, 41] <|@ <|@
      nr 1272  <|@ instruction CMP (x: rax|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B157" "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4604732415476631037
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1280  <|@ instruction rax|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1282  <|@ instruction rdi|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr 1284  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1286  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1288  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B107 -> B157 falseDestination: B107 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" "B107" 
    successors "B158" "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1684  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr 1686  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241200
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1690  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1694  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1696  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1698  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1700  <|@ instruction JUMP ~[] destination: B158 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B166" "B180" "B158" "B163" 
    successors "B182" "B193" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      LIR
      nr 1920  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1922  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1924  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B181 -> B182 falseDestination: B181 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B192" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      LIR
      nr 1926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1928  <|@ instruction rbx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1930  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:55] <|@ <|@
      nr 1932  <|@ instruction CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1934  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B182 -> B183 falseDestination: B182 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" "B187" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607469115890324411
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1940  <|@ instruction rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1942  <|@ instruction rax|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 1944  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1946  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B183 -> B184 falseDestination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B185" "B186" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      LIR
      nr 1948  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1950  <|@ instruction rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1952  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:55] <|@ <|@
      nr 1954  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607089912538241201
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1958  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1964  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1966  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1968  <|@ instruction JUMP ~[] destination: B185 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B191" "B198" "B185" "B189" 
    successors "B200" "B203" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609315396988046781
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2120  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 2122  <|@ instruction BRANCH trueDestinationProbability: 0.04052010885999391 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B204" "B207" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609046482132508958
    begin_IR
      LIR
      nr 2152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2154  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2156  <|@ instruction CMP (x: rcx|QWORD, y: [rbx|DWORD * 8 + 448]) size: QWORD <|@ <|@
      nr 2158  <|@ instruction BRANCH trueDestinationProbability: 0.6124803025527892 condition: = trueDestination: B203 -> B204 falseDestination: B203 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B205" "B206" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605975355817697406
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2162  <|@ instruction CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 2164  <|@ instruction BRANCH trueDestinationProbability: 0.8973841790104002 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605174938430272170
    begin_IR
      LIR
      nr 2166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2168  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2170  <|@ instruction JUMP ~[] destination: B205 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" "B241" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605462410764895407
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1032  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:31] <|@ <|@
      nr 1034  <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1036  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = SETCC condition: != <|@ <|@
      nr 1040  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1042  <|@ instruction BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B114" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603468868388755523
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1136  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1138  <|@ instruction BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4600917829224813035
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1142  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr 1146  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1150  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1156  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1158  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B93 -> B95 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" "B223" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603110409192579518
    begin_IR
      LIR
      nr 2178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2180  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2182  <|@ instruction BRANCH trueDestinationProbability: 0.3667859466493169 condition: = trueDestination: B207 -> B208 falseDestination: B207 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B226" "B227" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599921682799152171
    begin_IR
      LIR
      nr 2318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2320  <|@ instruction rbx|QWORD = MOV [rbx|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr 2322  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 2324  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:523) [bci: 82]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:82] <|@ <|@
      nr 2326  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2328  <|@ instruction BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B223 -> B226 falseDestination: B223 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599280327465356464
    begin_IR
      LIR
      nr 2344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2346  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2348  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2350  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 2352  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2354  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2356  <|@ instruction JUMP ~[] destination: B227 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B194" "B232" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2064  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 2066  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B231" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2070  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2072  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD state [bci:55] <|@ <|@
      nr 2074  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:55] <|@ <|@
      nr 2076  <|@ instruction rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2078  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2080  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B230" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2084  <|@ instruction rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2086  <|@ instruction CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 2088  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B197" "B229" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2092  <|@ instruction CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 2094  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B196 -> B197 falseDestination: B196 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B198" "B228" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2098  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2100  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795401
    begin_IR
      LIR
      nr 2102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2104  <|@ instruction rdx|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2110  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2112  <|@ instruction rdx|DWORD[.] = MOV [rbx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2116  <|@ instruction JUMP ~[] destination: B198 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B118" "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599165387955912391
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  986  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdx|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:11, 32] <|@ <|@
      nr  988  <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  990  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  992  <|@ instruction rbx|DWORD = SETCC condition: != <|@ <|@
      nr  994  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B72 -> B118 falseDestination: B72 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" "B72" 
    successors "B154" "B170" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602048976889610353
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1646  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1648  <|@ instruction BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B169" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1652  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1654  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:37] <|@ <|@
      nr 1656  <|@ instruction CMP (x: rdx|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1658  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B157" "B161" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599718414925906671
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1662  <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1664  <|@ instruction rax|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1666  <|@ instruction rdi|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr 1668  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1670  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1676  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1672  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B155 -> B157 falseDestination: B155 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B105" 
    successors "B172" "B238" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1840  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1842  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1844  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B171 -> B172 falseDestination: B171 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B173" "B174" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1848  <|@ instruction rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1850  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1852  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" "B237" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1862  <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1864  <|@ instruction CMP (x: rbx|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr 1866  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B236" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1870  <|@ instruction rbx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1872  <|@ instruction CMP (x: rbx|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1874  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B177" "B178" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1878  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1880  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1882  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" "B235" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1892  <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1894  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1896  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B180" "B234" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1900  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1902  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B180 falseDestination: B179 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601056744308795400
    begin_IR
      LIR
      nr 1904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1906  <|@ instruction rdx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr 1908  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1910  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1912  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1914  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1916  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1918  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B209" "B210" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596408653117255331
    begin_IR
      LIR
      nr 2184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2186  <|@ instruction CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 2188  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B226" "B212" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 2210  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B210 -> B226 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" "B226" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591180990207212844
    begin_IR
      LIR
      nr 2216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2218  <|@ instruction CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2220  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B212 -> B213 falseDestination: B212 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B214" "B215" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      LIR
      nr 2222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2224  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2226  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:63] <|@ <|@
      nr 2228  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2230  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 2232  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B213 -> B214 falseDestination: B213 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B216" "B226" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586677390579842348
    begin_IR
      LIR
      nr 2246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2248  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2250  <|@ instruction r9|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2252  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2254  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B215 -> B216 falseDestination: B215 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B217" "B218" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582173790952471852
    begin_IR
      LIR
      nr 2256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2258  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2260  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B216 -> B217 falseDestination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B226" "B220" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2282  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2284  <|@ instruction r8|DWORD = ARRAY_EQUALS (~array1Value: r10|QWORD[.], ~array2Value: r11|QWORD[.], ~lengthValue: r9|DWORD) {temp1: rcx|QWORD[*], temp2: rbx|QWORD[*], temp3: rdi|QWORD, temp4: rax|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr 2286  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2288  <|@ instruction BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B218 -> B226 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577001488191303057
    begin_IR
      LIR
      nr 2294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2296  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2300  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2302  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 2304  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2306  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2308  <|@ instruction JUMP ~[] destination: B220 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B115" "B240" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1328  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1330  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" "B152" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595850197050637621
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1336  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:31] <|@ <|@
      nr 1338  <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1340  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction rdi|DWORD = SETCC condition: != <|@ <|@
      nr 1344  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1346  <|@ instruction BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595504170808271966
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1636  <|@ instruction stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593829144217942789
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1838  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592304574260960305
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4592185836443809187
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction rbx|DWORD = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591905053489884835
    begin_IR
      LIR
      nr 2190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2192  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2194  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2200  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2202  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction JUMP ~[] destination: B209 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B188" "B191" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286632
    begin_IR
      LIR
      nr 1978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1980  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1982  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 1988  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:55] <|@ <|@
      nr 1990  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470704
    begin_IR
      LIR
      nr 1992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1996  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1998  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2000  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2002  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2004  <|@ instruction JUMP ~[] destination: B189 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" 
    successors "B201" "B202" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4588766096413004776
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2126  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 2128  <|@ instruction BRANCH trueDestinationProbability: 0.8223880597014925 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4587237696756455476
    begin_IR
      LIR
      nr 2130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2132  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2134  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2140  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2144  <|@ instruction JUMP ~[] destination: B201 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" "B68" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590773165433694024
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1186  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1188  <|@ instruction BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4590678227680113359
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1194  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction JUMP ~[] destination: B98 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B155" "B107" 
    successors "B162" "B165" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589991624202286631
    begin_IR
      LIR
      nr 1716  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1718  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1720  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1722  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B161 -> B162 falseDestination: B161 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      LIR
      nr 1724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1726  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1728  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr 1730  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589955107204470703
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1734  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1740  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1744  <|@ instruction JUMP ~[] destination: B163 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577670191325101356
    begin_IR
      LIR
      nr 2262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2264  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] rsi|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63] <|@ <|@
      nr 2266  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2268  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2270  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 2272  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2274  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2276  <|@ instruction JUMP ~[] destination: B217 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr  904  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565242043196613495
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction stack:40|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ st <@st|@reference-map: [rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:31] <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  916  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:40|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 32] <|@ <|@
      nr  918  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr  924  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B112" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1200  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr 1202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1208  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4563718839128104534
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction stack:40|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1226  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:40|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 41] <|@ <|@
      nr 1228  <|@ instruction rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 1234  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1236  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B199" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010211
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2016  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2020  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 2022  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2024  <|@ instruction rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 2026  <|@ instruction stack:40|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 2028  <|@ st <@st|@reference-map: [stack:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:48|QWORD[.] stack:40|DWORD - 
java.util.AbstractList.equals(AbstractList.java:522) [bci: 58]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 58] <|@ <|@
      nr 2030  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2032  <|@ instruction rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 2034  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2036  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 2038  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2040  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2042  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 2046  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2048  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2052  <|@ instruction JUMP ~[] destination: B191 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B166" "B167" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1754  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr 1756  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B181" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4557813398992010210
    begin_IR
      LIR
      nr 1758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1760  <|@ instruction stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1762  <|@ instruction stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1766  <|@ st <@st|@reference-map: [rsi:0, stack:16, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:46] <|@ <|@
      nr 1768  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1770  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1774  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1776  <|@ st <@st|@reference-map: [stack:0, stack:16, stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8]
stack: stack:80|QWORD[.] 
locals: - stack:40|DWORD 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:64|QWORD[.] stack:40|DWORD - 
java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 50] <|@ <|@
      nr 1778  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr 1782  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1784  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1786  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17]
locals: - - 
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:64|QWORD[.] stack:40|DWORD - 
java.util.AbstractList.equals(AbstractList.java:521) [bci: 50]
locals: - - stack:64|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 50] <|@ <|@
      nr 1788  <|@ instruction rsi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1790  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1796  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1798  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1800  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>} <|@ <|@
      nr 1802  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1806  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction JUMP ~[] destination: B166 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" "B244" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B39" 
    xhandlers
    flags 
    probability 4600860877966254419
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  372  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596406621125488950
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4596479738305639996
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  424  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  432  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" "B65" 
    successors "B82" "B87" 
    xhandlers
    flags 
    probability 4603446753444729810
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1058  <|@ instruction BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    probability 4599991815045550444
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:37] <|@ <|@
      nr 1066  <|@ instruction CMP (x: rax|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1068  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B136" "B138" 
    xhandlers
    flags 
    probability 4599227807522088194
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B83 -> B136 falseDestination: B83 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" "B120" "B83" 
    successors 
    xhandlers
    flags 
    probability 4599411145939086332
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1496  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:99] <|@ <|@
      nr 1506  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1508  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1510  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr 1512  <|@ instruction rax|DWORD = XOR rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1514  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1098  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B127" "B90" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1104  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:37] <|@ <|@
      nr 1106  <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1108  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1110  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1112  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B88 -> B127 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B88" 
    successors "B133" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1430  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:93] <|@ <|@
      nr 1432  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction JUMP ~[] destination: B127 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" "B132" 
    successors "B134" "B149" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1486  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B133 -> B134 falseDestination: B133 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B136" "B138" 
    xhandlers
    flags 
    probability 4597613765633059952
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1490  <|@ instruction CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1492  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B134 -> B136 falseDestination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4597142189795094960
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4596646706335347062
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rcx|QWORD + 32] size: QWORD <|@ <|@
      nr  204  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596486929903687710
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 224] instr: 0 <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596560858283618541
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B22 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B22" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  622  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4600788985385770935
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B57" 
    xhandlers
    flags 
    probability 4600860877966254420
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rbx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  668  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction rbx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  676  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B40" "B48" 
    xhandlers
    flags 
    probability 4596234818372127850
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596083841613113168
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596153698394149307
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rax|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  604  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  610  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr 2492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2494  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2496  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B134" "B120" "B83" 
    successors "B139" "B147" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1518  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1524  <|@ instruction CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1526  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1530  <|@ instruction r13|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1532  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - r10|QWORD[.] - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:99] <|@ <|@
      nr 1534  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1536  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1538  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B145" 
    xhandlers
    flags 
    probability 4598009399432355035
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1542  <|@ instruction rax|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1544  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - r10|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:99] <|@ <|@
      nr 1546  <|@ instruction JUMP ~[] destination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" "B142" "B144" 
    successors 
    xhandlers
    flags 
    probability 4598475161695632296
    begin_IR
      LIR
      nr 1582  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1584  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1586  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr 1588  <|@ instruction rax|DWORD = XOR rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1590  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4591067759762566818
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2174  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|DWORD * 8 + 24], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B118" 
    xhandlers
    flags 
    probability 4588098681682314043
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B104 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" "B104" "B72" 
    successors "B119" "B124" 
    xhandlers
    flags 
    probability 4590463348771837277
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1362  <|@ instruction BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    probability 4587113324401426233
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1368  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rbx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:46] <|@ <|@
      nr 1370  <|@ instruction CMP (x: rax|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B136" "B138" 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1378  <|@ instruction BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B120 -> B136 falseDestination: B120 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B218" "B210" "B215" "B223" "B212" 
    successors 
    xhandlers
    flags 
    probability 4592924920330780472
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 4586272881223492429
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1092  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1616  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B151" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr 1404  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B124 -> B125 falseDestination: B124 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B128" 
    xhandlers
    flags 
    probability 4584806173887507329
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rbx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:46] <|@ <|@
      nr 1412  <|@ instruction r13|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1414  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1416  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr 1418  <|@ instruction BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B127" 
    xhandlers
    flags 
    probability 4584207438666858323
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4581782856717489067
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1552  <|@ instruction BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 4581687656463207251
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1556  <|@ instruction rax|DWORD = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1558  <|@ instruction JUMP ~[] destination: B142 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B129" 
    xhandlers
    flags 
    probability 4581042368272497659
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B90 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B90" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4581782856717489066
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1446  <|@ instruction r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1448  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr 1450  <|@ instruction BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581687656463207250
    begin_IR
      LIR
      nr 1452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1454  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1456  <|@ instruction JUMP ~[] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4577267220407250640
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2148  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4576690041658903912
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1350  <|@ instruction rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1352  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 4573373567577153376
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4571465893878218462
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  476  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  478  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  480  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [stack:16, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: stack:64|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r9|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571251147304625988
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  632  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  634  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  636  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: r13|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  644  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B129" 
    xhandlers
    flags 
    probability 4568070330086243707
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567585755083831521
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 224] instr: 0 <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567640697836937774
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B26 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B26" 
    successors "B53" "B243" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  764  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  774  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: rdx|QWORD[.] 
locals: - r10|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:20] <|@ <|@
      nr  776  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  778  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  780  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571939569334802726
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  808  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4571992999104308986
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction r11|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr  822  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  824  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r11|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr  832  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  834  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  696  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  698  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4567286184331032938
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  734  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  736  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4567338101116939206
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed} <|@ <|@
      nr  752  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  756  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4567098666445716554
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:32, stack:44, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r9|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4566877838841885647
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  228  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [stack:32, stack:44, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  246  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4566825922055979378
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction r13|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  392  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  396  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  408  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4566584490871567730
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r14|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  564  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  570  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  580  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B146" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1562  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr 1564  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" 
    xhandlers
    flags 
    probability 4554728439918237161
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1568  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rsi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1572  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:99] <|@ <|@
      nr 1574  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1576  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:40|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:526) [bci: 103]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 103] <|@ <|@
      nr 1578  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1580  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" "B150" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1460  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed} <|@ <|@
      nr 1462  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" 
    xhandlers
    flags 
    probability 4554728439918237160
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction r8|DWORD[.] = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1470  <|@ st <@st|@reference-map: [r8:0, r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:93] <|@ <|@
      nr 1472  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3 <|@ <|@
      nr 1474  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1476  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4]
locals: - 
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8]
stack: stack:40|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:526) [bci: 94]
locals: - - - stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 94] <|@ <|@
      nr 1478  <|@ instruction rsi|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4541963835258890812
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  790  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  792  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:32, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: stack:48|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr  796  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4537653897532319400
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  304  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  306  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:32, stack:44, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4537266573730721232
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  712  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  714  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  716  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: stack:48|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>} <|@ <|@
      nr  726  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2392  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2394  <|@ instruction r10|DWORD = MOVE input: int[-503091|0xfffffffffff852cd] <|@ <|@
      nr 2396  <|@ instruction JUMP ~[] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B192" "B186" "B190" "B232" "B231" "B230" "B229" "B228" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 2398  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2400  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2402  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2404  <|@ st <@st|@reference-map: [rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:521) [bci: 55]
stack: rsi|QWORD[.] 
locals: - - r11|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:55] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1972  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1974  <|@ instruction r10|DWORD = MOVE input: int[-494619|0xfffffffffff873e5] <|@ <|@
      nr 1976  <|@ instruction JUMP ~[] destination: B186 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2414  <|@ instruction r10|DWORD = MOVE input: int[-478995|0xfffffffffff8b0ed] <|@ <|@
      nr 2416  <|@ instruction JUMP ~[] destination: B235 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B173" "B237" "B236" "B177" "B235" "B234" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2436  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2438  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2440  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2442  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1856  <|@ instruction r10|DWORD = MOVE input: int[-473867|0xfffffffffff8c4f5] <|@ <|@
      nr 1858  <|@ instruction JUMP ~[] destination: B173 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1828  <|@ instruction MOV [r15|QWORD + 668] y: -457491 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r10|DWORD = MOVE input: int[-513555|0xfffffffffff829ed] <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B12 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" "B244" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2480  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2482  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2484  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:513) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction MOV [r15|QWORD + 668] y: -435987 size: DWORD <|@ <|@
      nr 1302  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1304  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdi|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 41]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:11, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2008  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2010  <|@ instruction r10|DWORD = MOVE input: int[-499739|0xfffffffffff85fe5] <|@ <|@
      nr 2012  <|@ instruction JUMP ~[] destination: B190 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2368  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2370  <|@ instruction r10|DWORD = MOVE input: int[-507155|0xfffffffffff842ed] <|@ <|@
      nr 2372  <|@ instruction JUMP ~[] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2376  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2378  <|@ instruction r10|DWORD = MOVE input: int[-505875|0xfffffffffff847ed] <|@ <|@
      nr 2380  <|@ instruction JUMP ~[] destination: B230 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2408  <|@ instruction r10|DWORD = MOVE input: int[-480539|0xfffffffffff8aae5] <|@ <|@
      nr 2410  <|@ instruction JUMP ~[] destination: B234 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2384  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2386  <|@ instruction r10|DWORD = MOVE input: int[-511003|0xfffffffffff833e5] <|@ <|@
      nr 2388  <|@ instruction JUMP ~[] destination: B231 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2452  <|@ instruction r10|DWORD = MOVE input: int[-417075|0xfffffffffff9a2cd] <|@ <|@
      nr 2454  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B76" "B241" "B240" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2456  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2458  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2460  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2462  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 31]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 668] y: -426803 size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1132  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2426  <|@ instruction r10|DWORD = MOVE input: int[-475411|0xfffffffffff8beed] <|@ <|@
      nr 2428  <|@ instruction JUMP ~[] destination: B237 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1628  <|@ instruction MOV [r15|QWORD + 668] y: -439603 size: DWORD <|@ <|@
      nr 1630  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1632  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rbx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2474  <|@ instruction r10|DWORD = MOVE input: int[-514355|0xfffffffffff826cd] <|@ <|@
      nr 2476  <|@ instruction JUMP ~[] destination: B244 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2236  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2238  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2240  <|@ instruction MOV [r15|QWORD + 668] y: -486411 size: DWORD <|@ <|@
      nr 2242  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2244  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:522) [bci: 63]
stack: rdx|QWORD[.] 
locals: - - r11|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2466  <|@ instruction MOV [r15|QWORD + 668] y: -516915 size: DWORD <|@ <|@
      nr 2468  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2470  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-415027|0xfffffffffff9aacd] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B76 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2420  <|@ instruction r10|DWORD = MOVE input: int[-476691|0xfffffffffff8b9ed] <|@ <|@
      nr 2422  <|@ instruction JUMP ~[] destination: B236 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1704  <|@ instruction MOV [r15|QWORD + 668] y: -460827 size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction MOV [r15|QWORD + 668] y: -515603 size: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [r13:0, stack:48]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:518) [bci: 20]
stack: r13|QWORD[.] 
locals: - stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1748  <|@ instruction r10|DWORD = MOVE input: int[-466715|0xfffffffffff8e0e5] <|@ <|@
      nr 1750  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 46]
stack: rdx|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction r10|DWORD = MOVE input: int[-431155|0xfffffffffff96bcd] <|@ <|@
      nr 1316  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1314  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1324  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:520) [bci: 37]
stack: rdi|DWORD 
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction r10|DWORD = MOVE input: int[-432395|0xfffffffffff966f5] <|@ <|@
      nr 1218  <|@ instruction JUMP ~[] destination: B101 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B245" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[-405267|0xfffffffffff9d0ed] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2056  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2058  <|@ instruction r10|DWORD = MOVE input: int[-491283|0xfffffffffff880ed] <|@ <|@
      nr 2060  <|@ instruction JUMP ~[] destination: B192 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2360  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2362  <|@ instruction r10|DWORD = MOVE input: int[-509459|0xfffffffffff839ed] <|@ <|@
      nr 2364  <|@ instruction JUMP ~[] destination: B228 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1620  <|@ instruction MOV [r15|QWORD + 668] y: -443955 size: DWORD <|@ <|@
      nr 1622  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1624  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 93]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:93] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1886  <|@ instruction r10|DWORD = MOVE input: int[-477963|0xfffffffffff8b4f5] <|@ <|@
      nr 1888  <|@ instruction JUMP ~[] destination: B177 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B242" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2446  <|@ instruction r10|DWORD = MOVE input: int[-421427|0xfffffffffff991cd] <|@ <|@
      nr 2448  <|@ instruction JUMP ~[] destination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction r10|DWORD = MOVE input: int[-448563|0xfffffffffff927cd] <|@ <|@
      nr 1602  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B146" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1606  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1610  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.util.AbstractList.equals(AbstractList.java:526) [bci: 99]
stack: int[0|0x0] 
locals: - - - stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 668] y: -409395 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [r11:0, stack:32]
live-base-pointers: []
java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11]
stack: rdx|DWORD rbx|DWORD 
locals: - 
java.util.AbstractList.equals(AbstractList.java:520) [bci: 32]
locals: - - r11|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:11, 32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1594  <|@ instruction r10|DWORD = MOVE input: int[-452915|0xfffffffffff916cd] <|@ <|@
      nr 1596  <|@ instruction JUMP ~[] destination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1812  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1814  <|@ instruction r10|DWORD = MOVE input: int[-469811|0xfffffffffff8d4cd] <|@ <|@
      nr 1816  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B239" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2432  <|@ instruction r10|DWORD = MOVE input: int[-472627|0xfffffffffff8c9cd] <|@ <|@
      nr 2434  <|@ instruction JUMP ~[] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_0       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #30         // java.util.List
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_0       
    17: invokevirtual #5          // listIterator:()java.util.ListIterator
    20: astore_2      
    21: aload_1       
    22: checkcast     #30         // java.util.List
    25: invokeinterface#23, 1      // java.util.List.listIterator:()java.util.ListIterator
    30: astore_3      
    31: aload_2       
    32: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
    37: ifeq          93
    40: aload_3       
    41: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
    46: ifeq          93
    49: aload_2       
    50: invokeinterface#7, 1       // java.util.ListIterator.next:()java.lang.Object
    55: astore        4
    57: aload_3       
    58: invokeinterface#7, 1       // java.util.ListIterator.next:()java.lang.Object
    63: astore        5
    65: aload         4
    67: ifnonnull     78
    70: aload         5
    72: ifnonnull     88
    75: goto          90
    78: aload         4
    80: aload         5
    82: invokevirtual #9          // java.lang.Object.equals:(java.lang.Object)boolean
    85: ifne          90
    88: iconst_0      
    89: ireturn       
    90: goto          31
    93: aload_2       
    94: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
    99: ifne          115
   102: aload_3       
   103: invokeinterface#6, 1       // java.util.ListIterator.hasNext:()boolean
   108: ifne          115
   111: iconst_1      
   112: goto          116
   115: iconst_0      
   116: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@311f2cb7 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 59 12 CMP (x: r14|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 62 14 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 68 block B2 null  <||@
  Comment 68 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 24 rsi|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 68 [r13:0, r14:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 26 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/List;, resolved>}  <||@
  Comment 72 {meta{HotSpotType<Ljava/util/List;, resolved>}}  <||@
  Comment 82 28 CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 90 30 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4  <||@
  Comment 96 block B4 null  <||@
  Comment 96 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 38 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/List;, resolved>;compressed}  <||@
  Comment 96 {meta{HotSpotType<Ljava/util/List;, resolved>;compressed}}  <||@
  Comment 102 40 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B10 falseDestination: B4 -> B6  <||@
  Comment 108 block B6 null  <||@
  Comment 108 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 48 rax|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD  <||@
  Comment 116 50 rbx|DWORD = MOV [rax|QWORD] size: DWORD  <||@
  Comment 118 52 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 124 54 JUMP ~[] destination: B6 -> B7  <||@
  Comment 129 block B8 loop 0 depth 1 header:2591|LoopBegin  <||@
  Comment 129 62 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 144 64 r11|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 151 66 r11|DWORD = LEA [r11|DWORD + 8] size: DWORD  <||@
  Comment 155 68 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 158 70 r11|QWORD = MOV [rax|QWORD + r11|QWORD * 1] size: QWORD  <||@
  Comment 162 72 CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 165 74 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B246  <||@
  Comment 171 block B246 loop 0 depth 1 header:2591|LoopBegin  <||@
  Comment 171 2486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 171 2488 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 174 2490 JUMP ~[] destination: B246 -> B7  <||@
  Comment 174 block B7 loop 0 depth 1 header:2591|LoopBegin  <||@
  Comment 174 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 174 58 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 177 60 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B247  <||@
  Comment 184 block B10 null  <||@
  Comment 184 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 84 r10|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 188 86 rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 192 88 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 192 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 202 90 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 212 92 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 212 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 222 94 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 222 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 228 96 BRANCH trueDestinationProbability: 0.5141586199414127 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27  <||@
  Comment 234 block B11 null  <||@
  Comment 234 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 100 CMP [r13|QWORD[.] + 16] y: 0 size: DWORD  <||@
  Comment 239 102 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 245 block B13 null  <||@
  Comment 245 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 112 rbx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 249 114 rdi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 256 116 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 256 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 263 118 BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B18  <||@
  Comment 269 block B14 null  <||@
  Comment 269 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 122 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 273 124 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 277 126 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 281 128 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 287 block B16 null  <||@
  Comment 287 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 166 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 291 168 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 298 170 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 298 172 JUMP ~[] destination: B16 -> B17  <||@
  Comment 298 block B17 null  <||@
  Comment 298 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 298 176 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 301 178 rax|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 308 180 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 311 182 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 311 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 318 184 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 322 186 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 325 188 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 328 190 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 331 194 JUMP ~[] destination: B17 -> B33  <||@
  Comment 331 block B33 null  <||@
  Comment 331 444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 331 440 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 334 446 rsi|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 338 448 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 340 450 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 346 block B35 null  <||@
  Comment 346 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 462 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 350 464 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 354 466 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 358 468 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 364 block B37 null  <||@
  Comment 364 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 500 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 368 502 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 375 504 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 375 506 JUMP ~[] destination: B37 -> B38  <||@
  Comment 375 block B38 null  <||@
  Comment 375 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 375 510 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 378 512 rbx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 385 514 MOV (x: [rsi|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 388 516 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 388 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 395 518 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 399 520 rbx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 403 522 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 406 524 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 410 526 MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 414 528 MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 418 530 r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 421 532 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 424 534 JUMP ~[] destination: B38 -> B57  <||@
  Comment 424 block B57 null  <||@
  Comment 424 842 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 424 844 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 429 846 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 434 848 r8|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 438 850 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 443 852 r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 447 854 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 452 856 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 452 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 462 858 JUMP ~[] destination: B57 -> B58  <||@
  Comment 462 block B58 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 462 860 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 862 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 464 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 471 864 BRANCH trueDestinationProbability: 0.6218287856696522 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B77  <||@
  Comment 477 block B59 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 477 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 868 rbx|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 481 870 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 481 [rbx:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 481 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 488 872 rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 492 874 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 492 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 498 876 BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 504 block B60 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 504 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 504 880 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 511 882 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31]  <||@
  Comment 511 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 511 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 518 884 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 520 886 JUMP ~[] destination: B60 -> B65  <||@
  Comment 520 block B65 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 520 934 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 520 936 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 522 938 rdi|DWORD = SETCC condition: !=  <||@
  Comment 530 940 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 532 942 BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B65 -> B81 falseDestination: B65 -> B67  <||@
  Comment 538 block B67 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 538 948 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 950 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 538 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 545 952 BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B71  <||@
  Comment 551 block B68 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 551 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 551 956 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 555 958 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:11, 32]  <||@
  Comment 555 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdx|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32, duringCall: true, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 555 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 562 960 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 566 962 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 570 964 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 570 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 576 966 BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B68 -> B95 falseDestination: B68 -> B97  <||@
  Comment 582 block B95 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 582 1162 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 582 1164 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 585 1166 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:37]  <||@
  Comment 585 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |              |   |    <||@
  Comment 585 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 592 1168 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 594 1170 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 596 1172 JUMP ~[] destination: B95 -> B103  <||@
  Comment 596 block B103 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 596 1244 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 596 1246 CMP (x: rdi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 598 1248 rdx|DWORD = SETCC condition: !=  <||@
  Comment 604 1250 CMP (x: rdi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 606 1252 BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 612 block B105 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 612 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 1262 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 612 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 619 1264 BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B171  <||@
  Comment 625 block B106 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 625 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 1268 rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 629 1270 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:11, 41]  <||@
  Comment 629 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdi|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 629 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 636 1272 CMP (x: rax|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD  <||@
  Comment 640 1274 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B110  <||@
  Comment 646 block B107 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 646 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 646 1278 rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 653 1280 rax|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 657 1282 rdi|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 661 1284 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 665 1286 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 665 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 671 1288 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B107 -> B157 falseDestination: B107 -> B161  <||@
  Comment 677 block B157 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 677 1680 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 677 1682 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 680 1684 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46]  <||@
  Comment 680 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |              |   |    <||@
  Comment 680 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 687 1686 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B157 -> B158 falseDestination: B157 -> B159  <||@
  Comment 693 block B158 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 693 1688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 693 1690 MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 697 1692 MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 701 1694 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 705 1696 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 709 1698 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 713 1700 JUMP ~[] destination: B158 -> B181  <||@
  Comment 713 block B181 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 713 1920 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 713 1922 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 713 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 720 1924 BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B181 -> B182 falseDestination: B181 -> B193  <||@
  Comment 726 block B182 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 726 1926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 726 1928 rbx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 730 1930 rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:55]  <||@
  Comment 730 [rbx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 730 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 737 1932 CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 741 1934 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B182 -> B183 falseDestination: B182 -> B192  <||@
  Comment 747 block B183 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 747 1936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 747 1938 rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 754 1940 rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 758 1942 rax|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 762 1944 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 762 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 768 1946 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B183 -> B184 falseDestination: B183 -> B187  <||@
  Comment 774 block B184 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 774 1948 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 1950 rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 781 1952 CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:55]  <||@
  Comment 781 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 781 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 788 1954 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B184 -> B185 falseDestination: B184 -> B186  <||@
  Comment 794 block B185 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 794 1956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 1958 MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 798 1960 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 802 1962 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 806 1964 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 810 1966 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 814 1968 JUMP ~[] destination: B185 -> B199  <||@
  Comment 814 block B199 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 814 2118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 814 2120 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 817 2122 BRANCH trueDestinationProbability: 0.04052010885999391 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B203  <||@
  Comment 823 block B203 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 823 2152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 823 2154 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 826 2156 CMP (x: rcx|QWORD, y: [rbx|DWORD * 8 + 448]) size: QWORD  <||@
  Comment 834 2158 BRANCH trueDestinationProbability: 0.6124803025527892 condition: = trueDestination: B203 -> B204 falseDestination: B203 -> B207  <||@
  Comment 840 block B204 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 840 2160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 2162 CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 843 2164 BRANCH trueDestinationProbability: 0.8973841790104002 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B206  <||@
  Comment 849 block B205 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 849 2166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 2168 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 849 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4             |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |              |              |              |    <||@
  Comment 849 {infopoint: SAFEPOINT}  <||@
  Comment 849 11  <||@
  Comment 855 2170 JUMP ~[] destination: B205 -> B58  <||@
  Comment 860 block B77 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 860 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 1024 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 860 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 867 1026 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B241  <||@
  Comment 873 block B78 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 873 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 1030 rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 877 1032 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:31]  <||@
  Comment 877 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 877 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 884 1034 rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 888 1036 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 890 1038 rbx|DWORD = SETCC condition: !=  <||@
  Comment 896 1040 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 898 1042 BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B92  <||@
  Comment 904 block B92 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 904 1134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 904 1136 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 904 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 911 1138 BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B114  <||@
  Comment 917 block B93 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 917 1140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 1142 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 921 1144 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 921 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 921 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 928 1146 rax|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 932 1148 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 936 1150 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 936 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 942 1156 rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 944 1158 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 946 1152 BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B93 -> B95 falseDestination: B93 -> B97  <||@
  Comment 957 block B207 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 957 2178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 2180 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 957 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 963 2182 BRANCH trueDestinationProbability: 0.3667859466493169 condition: = trueDestination: B207 -> B208 falseDestination: B207 -> B223  <||@
  Comment 969 block B223 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 969 2318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 2320 rbx|QWORD = MOV [rbx|DWORD * 8 + 448] size: QWORD  <||@
  Comment 977 2322 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 981 2324 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:82]  <||@
  Comment 981 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 981 10  <||@
  Comment 983 [stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 984 2326 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 986 2328 BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B223 -> B226 falseDestination: B223 -> B227  <||@
  Comment 992 block B227 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 992 2344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 992 2346 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 992 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 1002 2348 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1007 2350 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1012 2352 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1017 2354 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1022 2356 JUMP ~[] destination: B227 -> B58  <||@
  Comment 1027 block B193 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1027 2062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1027 2064 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 1027 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 1034 2066 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B232  <||@
  Comment 1040 block B194 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1040 2068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1040 2070 rdx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1044 2072 rbx|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD state [bci:55]  <||@
  Comment 1044 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 1044 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1051 2074 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:55]  <||@
  Comment 1051 [rdx:0, rbx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 1051 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1058 2076 rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1062 2078 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1064 2080 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B231  <||@
  Comment 1070 block B195 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1070 2082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 2084 rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1077 2086 CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 1081 2088 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B230  <||@
  Comment 1087 block B196 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1087 2090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 2092 CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1094 2094 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B196 -> B197 falseDestination: B196 -> B229  <||@
  Comment 1100 block B197 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1100 2096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 2098 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1102 2100 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B228  <||@
  Comment 1108 block B198 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1108 2102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1108 2104 rdx|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 1112 2106 MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1116 2108 MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1120 2110 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1124 2112 rdx|DWORD[.] = MOV [rbx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1128 2114 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1132 2116 JUMP ~[] destination: B198 -> B199  <||@
  Comment 1137 block B71 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1137 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1137 978 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 1137 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 1144 980 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B75  <||@
  Comment 1150 block B72 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1150 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1150 984 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1154 986 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:11, 32]  <||@
  Comment 1154 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdx|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32, duringCall: true, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 1154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1161 988 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1165 990 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1167 992 rbx|DWORD = SETCC condition: !=  <||@
  Comment 1173 994 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1175 996 BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B72 -> B118 falseDestination: B72 -> B153  <||@
  Comment 1181 block B153 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1181 1644 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1181 1646 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 1181 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1188 1648 BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B170  <||@
  Comment 1194 block B154 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1194 1650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 1652 rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 1198 1654 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:37]  <||@
  Comment 1198 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |              |   |    <||@
  Comment 1198 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1205 1656 CMP (x: rdx|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD  <||@
  Comment 1209 1658 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B169  <||@
  Comment 1215 block B155 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1215 1660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 1662 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1222 1664 rax|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 1226 1666 rdi|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 1230 1668 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1234 1670 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 1234 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 1240 1676 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1242 1672 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B155 -> B157 falseDestination: B155 -> B161  <||@
  Comment 1253 block B171 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1253 1840 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1253 1842 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 1253 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 1260 1844 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B171 -> B172 falseDestination: B171 -> B238  <||@
  Comment 1266 block B172 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1266 1846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1266 1848 rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 1270 1850 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1272 1852 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174  <||@
  Comment 1278 block B174 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1278 1860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1278 1862 rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1285 1864 CMP (x: rbx|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD  <||@
  Comment 1289 1866 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B237  <||@
  Comment 1295 block B175 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1295 1868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1295 1870 rbx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 1299 1872 CMP (x: rbx|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1306 1874 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B236  <||@
  Comment 1312 block B176 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1312 1876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1312 1878 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1319 1880 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1321 1882 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B176 -> B177 falseDestination: B176 -> B178  <||@
  Comment 1327 block B178 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1327 1890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1327 1892 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1334 1894 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1336 1896 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B235  <||@
  Comment 1342 block B179 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1342 1898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 1900 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1344 1902 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B180 falseDestination: B179 -> B234  <||@
  Comment 1350 block B180 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1350 1904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1350 1906 rdx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1354 1908 MOV (x: [r11|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1358 1910 MOV (x: [r11|QWORD[.] + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1362 1912 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1366 1914 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1370 1916 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1374 1918 JUMP ~[] destination: B180 -> B181  <||@
  Comment 1379 block B208 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1379 2184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1379 2186 CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1382 2188 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B210  <||@
  Comment 1388 block B210 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1388 2206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1388 2208 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1391 2210 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B210 -> B226 falseDestination: B210 -> B212  <||@
  Comment 1397 block B212 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1397 2216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1397 2218 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1397 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1404 2220 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B212 -> B213 falseDestination: B212 -> B226  <||@
  Comment 1410 block B213 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1410 2222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1410 2224 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1414 2226 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:63]  <||@
  Comment 1414 [rdx:0, rsi:0, r10:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 1414 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1418 2228 r11|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1422 2230 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1425 2232 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B213 -> B214 falseDestination: B213 -> B215  <||@
  Comment 1431 block B215 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1431 2246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1431 2248 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1439 2250 r9|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1447 2252 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1450 2254 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B215 -> B216 falseDestination: B215 -> B226  <||@
  Comment 1456 block B216 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1456 2256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 2258 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1459 2260 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B216 -> B217 falseDestination: B216 -> B218  <||@
  Comment 1465 block B218 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1465 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1465 2280 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1469 2282 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1473 2284 r8|DWORD = ARRAY_EQUALS (~array1Value: r10|QWORD[.], ~array2Value: r11|QWORD[.], ~lengthValue: r9|DWORD) {temp1: rcx|QWORD[*], temp2: rbx|QWORD[*], temp3: rdi|QWORD, temp4: rax|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1731 2286 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1734 2288 BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B218 -> B226 falseDestination: B218 -> B220  <||@
  Comment 1740 block B220 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1740 2294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1740 2296 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 1740 [rdx:0, rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 1740 {infopoint: SAFEPOINT}  <||@
  Comment 1740 11  <||@
  Comment 1746 2298 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1746 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 1756 2300 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1761 2302 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1766 2304 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1771 2306 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1776 2308 JUMP ~[] destination: B220 -> B58  <||@
  Comment 1781 block B114 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1781 1326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1781 1328 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 1781 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 1788 1330 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B240  <||@
  Comment 1794 block B115 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1794 1332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1794 1334 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1798 1336 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:31]  <||@
  Comment 1798 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 1798 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1805 1338 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1809 1340 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1811 1342 rdi|DWORD = SETCC condition: !=  <||@
  Comment 1819 1344 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1821 1346 BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B152  <||@
  Comment 1827 block B152 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1827 1634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1827 1636 stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1831 1638 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1833 1640 rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1837 1642 JUMP ~[] destination: B152 -> B153  <||@
  Comment 1842 block B170 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1842 1834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1842 1836 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1844 1838 JUMP ~[] destination: B170 -> B171  <||@
  Comment 1849 block B61 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1849 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1849 890 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1849 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1855 892 BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1861 block B62 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1861 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1861 896 rbx|DWORD = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1868 898 JUMP ~[] destination: B62 -> B65  <||@
  Comment 1873 block B209 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1873 2190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1873 2192 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 1873 [rdx:0, rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 1873 {infopoint: SAFEPOINT}  <||@
  Comment 1873 11  <||@
  Comment 1879 2194 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1879 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 1889 2200 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1894 2202 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1899 2204 JUMP ~[] destination: B209 -> B58  <||@
  Comment 1904 block B187 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1904 1978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1904 1980 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1904 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1910 1982 BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B191  <||@
  Comment 1916 block B188 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1916 1984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1916 1986 rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1923 1988 CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:55]  <||@
  Comment 1923 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 1923 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1930 1990 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B188 -> B189 falseDestination: B188 -> B190  <||@
  Comment 1936 block B189 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1936 1992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1936 1994 MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1940 1996 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1944 1998 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1948 2000 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1952 2002 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1956 2004 JUMP ~[] destination: B189 -> B199  <||@
  Comment 1961 block B200 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1961 2124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 2126 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1964 2128 BRANCH trueDestinationProbability: 0.8223880597014925 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202  <||@
  Comment 1970 block B201 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1970 2130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1970 2132 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 1970 [rdx:0, rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 1970 {infopoint: SAFEPOINT}  <||@
  Comment 1970 11  <||@
  Comment 1976 2134 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1976 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 1986 2140 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1991 2142 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1996 2144 JUMP ~[] destination: B201 -> B58  <||@
  Comment 2001 block B97 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2001 1182 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 2001 1184 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 2004 1186 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 2004 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 2010 1188 BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 2016 block B98 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2016 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 1192 rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 2019 1194 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2021 1196 JUMP ~[] destination: B98 -> B103  <||@
  Comment 2026 block B161 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2026 1716 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2026 1718 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 2029 1720 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 2029 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 2035 1722 BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B161 -> B162 falseDestination: B161 -> B165  <||@
  Comment 2041 block B162 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2041 1724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2041 1726 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2044 1728 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46]  <||@
  Comment 2044 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |              |   |    <||@
  Comment 2044 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2051 1730 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B162 -> B163 falseDestination: B162 -> B164  <||@
  Comment 2057 block B163 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2057 1732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2057 1734 MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 2061 1736 MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 2065 1738 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2069 1740 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2073 1742 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2077 1744 JUMP ~[] destination: B163 -> B181  <||@
  Comment 2082 block B217 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2082 2262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2082 2264 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 2082 [rdx:0, rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 2082 {infopoint: SAFEPOINT}  <||@
  Comment 2082 11  <||@
  Comment 2088 2266 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2088 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2098 2268 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2103 2270 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2108 2272 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 2274 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2118 2276 JUMP ~[] destination: B217 -> B58  <||@
  Comment 2123 block B63 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2123 900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 902 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 2123 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 2129 904 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B76  <||@
  Comment 2135 block B64 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2135 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2135 908 stack:40|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2139 910 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2146 912 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:31]  <||@
  Comment 2146 [rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2146 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2150 914 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2154 916 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 32]  <||@
  Comment 2154 6  <||@
  Comment 2167 {HotSpotMethod<List.size()>}  <||@
  Comment 2172 [stack:16, stack:32]at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:40|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2173 918 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2175 920 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2179 922 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2179 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2189 924 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2194 926 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2199 928 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 930 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2209 932 JUMP ~[] destination: B64 -> B65  <||@
  Comment 2214 block B99 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2214 1198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2214 1200 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 2214 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 2220 1202 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B112  <||@
  Comment 2226 block B100 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2226 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2226 1206 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 2229 1208 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2231 1210 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 2237 block B102 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2237 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2237 1222 stack:40|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2241 1224 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2245 1226 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 41]  <||@
  Comment 2245 6  <||@
  Comment 2255 {HotSpotMethod<List.size()>}  <||@
  Comment 2260 [stack:16, stack:32]at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:40|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2261 1228 rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2265 1230 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2267 1232 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2267 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2277 1234 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2282 1236 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2287 1238 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2292 1240 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2297 1242 JUMP ~[] destination: B102 -> B103  <||@
  Comment 2302 block B191 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2302 2014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 2016 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2306 2018 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2310 2020 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2314 2022 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2317 2024 rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2319 2026 stack:40|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2323 2028 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 58]  <||@
  Comment 2323 7  <||@
  Comment 2335 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 2340 [stack:0, stack:16, stack:32]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD  |- 
  at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4                  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:80|QWORD[.]  |-   <||@
  Comment 2341 2030 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2346 2032 rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2350 2034 MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 2354 2036 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2358 2038 MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 2362 2040 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2365 2042 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2369 2044 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2369 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2379 2046 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2384 2048 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2389 2050 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2394 2052 JUMP ~[] destination: B191 -> B199  <||@
  Comment 2399 block B165 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2399 1752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2399 1754 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 2399 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 2405 1756 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167  <||@
  Comment 2411 block B166 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2411 1758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2411 1760 stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2415 1762 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2419 1764 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 2422 1766 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:46]  <||@
  Comment 2422 [rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2                  |3                  |4  |5 
     locals:  |-          |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |                   |                   |   |    <||@
  Comment 2422 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2426 1768 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2430 1770 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2433 1774 stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2437 1776 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 50]  <||@
  Comment 2437 6  <||@
  Comment 2447 {HotSpotMethod<List.size()>}  <||@
  Comment 2452 [stack:0, stack:16, stack:32]at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |-                  |stack:40|DWORD 
     stack:   |stack:80|QWORD[.]  |               
  at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:64|QWORD[.]  |stack:40|DWORD  |- 
  at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2453 1778 rax|DWORD = SUB (x: rax|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 2457 1780 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 2459 1782 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2463 1784 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2465 1786 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 50]  <||@
  Comment 2465 6  <||@
  Comment 2479 {HotSpotMethod<List.get(int)>}  <||@
  Comment 2484 [stack:16, stack:32]at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:64|QWORD[.]  |stack:40|DWORD  |- 
  at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2485 1788 rsi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2489 1790 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2494 1792 MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 2498 1794 rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2502 1796 MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 2506 1798 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2509 1800 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2509 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2519 1802 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2524 1804 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2529 1806 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2534 1808 JUMP ~[] destination: B166 -> B181  <||@
  Comment 2539 block B27 null  <||@
  Comment 2539 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2539 352 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 2539 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 2545 354 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B244  <||@
  Comment 2551 block B28 null  <||@
  Comment 2551 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2551 358 rbx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 2555 360 rdi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2562 362 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 2562 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 2569 364 BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B39  <||@
  Comment 2575 block B29 null  <||@
  Comment 2575 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2575 368 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2579 370 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 2583 372 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2587 374 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 2593 block B31 null  <||@
  Comment 2593 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2593 414 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2597 416 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 2604 418 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2604 420 JUMP ~[] destination: B31 -> B32  <||@
  Comment 2604 block B32 null  <||@
  Comment 2604 422 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2604 424 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2607 426 rax|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 2614 428 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 2617 430 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2617 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2624 432 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 2628 434 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 2631 436 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2634 438 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2637 442 JUMP ~[] destination: B32 -> B33  <||@
  Comment 2642 block B81 null  <||@
  Comment 2642 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2642 1056 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2642 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2650 1058 BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87  <||@
  Comment 2656 block B82 null  <||@
  Comment 2656 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2656 1062 rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 2660 1064 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:37]  <||@
  Comment 2660 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 2660 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2667 1066 CMP (x: rax|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2671 1068 BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86  <||@
  Comment 2677 block B83 null  <||@
  Comment 2677 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2677 1072 CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2677 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2685 1074 BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B83 -> B136 falseDestination: B83 -> B138  <||@
  Comment 2691 block B136 null  <||@
  Comment 2691 1500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2691 1496 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2696 1502 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2700 1504 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:99]  <||@
  Comment 2700 [r10:0]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3             |4  |5 
     locals:  |-           |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |              |   |    <||@
  Comment 2700 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2707 1506 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 2711 1508 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2713 1510 rax|DWORD = SETCC condition: !=  <||@
  Comment 2719 1512 rax|DWORD = XOR rax|DWORD y: 1 size: DWORD  <||@
  Comment 2722 1514 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2731 12  <||@
  Comment 2741 block B87 null  <||@
  Comment 2741 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2741 1096 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 2741 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 2749 1098 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91  <||@
  Comment 2755 block B88 null  <||@
  Comment 2755 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2755 1102 rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 2759 1104 rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:37]  <||@
  Comment 2759 [rax:0, r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 2759 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2766 1106 rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 2770 1108 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2774 1110 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 2774 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 2780 1112 BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B88 -> B127 falseDestination: B88 -> B90  <||@
  Comment 2786 block B127 null  <||@
  Comment 2786 1426 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2786 1428 rax|DWORD[.] = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 2789 1430 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:93]  <||@
  Comment 2789 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93, duringCall: false, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2789 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2796 1432 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2798 1434 JUMP ~[] destination: B127 -> B133  <||@
  Comment 2798 block B133 null  <||@
  Comment 2798 1482 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2798 1484 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2800 1486 BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B133 -> B134 falseDestination: B133 -> B149  <||@
  Comment 2806 block B134 null  <||@
  Comment 2806 1488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2806 1490 CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2806 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2814 1492 BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B134 -> B136 falseDestination: B134 -> B138  <||@
  Comment 2821 block B79 null  <||@
  Comment 2821 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2821 1046 rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2823 1048 JUMP ~[] destination: B79 -> B81  <||@
  Comment 2828 block B18 null  <||@
  Comment 2828 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2828 198 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2832 200 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2836 202 rsi|QWORD = LEA [rcx|QWORD + 32] size: QWORD  <||@
  Comment 2840 204 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 2840 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 2847 206 BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23  <||@
  Comment 2853 block B19 null  <||@
  Comment 2853 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2853 210 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2856 212 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 2862 block B21 null  <||@
  Comment 2862 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2862 252 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 2866 254 AMD64PREFETCH ~[rcx|QWORD + 224] instr: 0  <||@
  Comment 2873 256 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2876 258 JUMP ~[] destination: B21 -> B22  <||@
  Comment 2876 block B22 null  <||@
  Comment 2876 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2876 262 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2879 264 rax|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 2886 266 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 2889 268 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 2889 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 2896 270 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 2900 272 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 2903 274 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2906 276 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2909 280 JUMP ~[] destination: B22 -> B44  <||@
  Comment 2909 block B44 null  <||@
  Comment 2909 616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2909 612 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2912 618 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2916 620 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 2920 622 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2924 624 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 2930 block B46 null  <||@
  Comment 2930 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2930 650 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2934 652 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 2941 654 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2941 656 JUMP ~[] destination: B46 -> B47  <||@
  Comment 2941 block B47 null  <||@
  Comment 2941 658 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2941 660 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2944 662 rbx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 2951 664 MOV (x: [rsi|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 2954 666 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2954 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2961 668 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 2965 670 rbx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 2969 672 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 2972 674 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2976 676 MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 2980 678 MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 2984 680 r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2987 682 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2990 684 JUMP ~[] destination: B47 -> B57  <||@
  Comment 2995 block B39 null  <||@
  Comment 2995 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2995 538 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 2995 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 3002 540 BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B48  <||@
  Comment 3008 block B40 null  <||@
  Comment 3008 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3008 544 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3012 546 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 3016 548 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 3020 550 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 3026 block B42 null  <||@
  Comment 3026 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3026 586 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 3030 588 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 3037 590 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3037 592 JUMP ~[] destination: B42 -> B43  <||@
  Comment 3037 block B43 null  <||@
  Comment 3037 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3037 596 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3040 598 rax|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 3047 600 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 3050 602 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 3050 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 3057 604 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 3061 606 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 3064 608 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3067 610 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3070 614 JUMP ~[] destination: B43 -> B44  <||@
  Comment 3075 block B247 null  <||@
  Comment 3075 2492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3075 2494 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3080 2496 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3089 12  <||@
  Comment 3099 block B138 null  <||@
  Comment 3099 1522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3099 1518 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3104 1524 CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 3104 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 3112 1526 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B147  <||@
  Comment 3118 block B139 null  <||@
  Comment 3118 1528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3118 1530 r13|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 3122 1532 r14|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:99]  <||@
  Comment 3122 [r10:0, r13:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3             |4  |5 
     locals:  |-           |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |              |   |    <||@
  Comment 3122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3130 1534 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 3134 1536 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 3134 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 3141 1538 BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 3147 block B140 null  <||@
  Comment 3147 1540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3147 1542 rax|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3155 1544 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:99]  <||@
  Comment 3155 [r10:0]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3             |4  |5 
     locals:  |-           |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |              |   |    <||@
  Comment 3155 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3162 1546 JUMP ~[] destination: B140 -> B145  <||@
  Comment 3162 block B145 null  <||@
  Comment 3162 1582 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3162 1584 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3165 1586 rax|DWORD = SETCC condition: !=  <||@
  Comment 3171 1588 rax|DWORD = XOR rax|DWORD y: 1 size: DWORD  <||@
  Comment 3174 1590 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3183 12  <||@
  Comment 3193 block B206 null  <||@
  Comment 3193 2172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3193 2174 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3198 2176 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3207 12  <||@
  Comment 3217 block B9 null  <||@
  Comment 3217 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3217 78 MOV (x: [rsi|DWORD * 8 + 24], y: rdx|QWORD) size: QWORD  <||@
  Comment 3225 80 JUMP ~[] destination: B9 -> B10  <||@
  Comment 3230 block B104 null  <||@
  Comment 3230 1254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3230 1256 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3232 1258 JUMP ~[] destination: B104 -> B118  <||@
  Comment 3232 block B118 null  <||@
  Comment 3232 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3232 1360 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 3232 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 3240 1362 BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124  <||@
  Comment 3246 block B119 null  <||@
  Comment 3246 1364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3246 1366 rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 3250 1368 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:46]  <||@
  Comment 3250 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rbx|DWORD  |   |              |                   |   |    <||@
  Comment 3250 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3257 1370 CMP (x: rax|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD  <||@
  Comment 3261 1372 BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B123  <||@
  Comment 3267 block B120 null  <||@
  Comment 3267 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3267 1376 CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 3267 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 3275 1378 BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B120 -> B136 falseDestination: B120 -> B138  <||@
  Comment 3286 block B226 null  <||@
  Comment 3286 2338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3286 2340 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3291 2342 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3300 12  <||@
  Comment 3310 block B86 null  <||@
  Comment 3310 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3310 1090 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3315 1092 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3324 12  <||@
  Comment 3334 block B149 null  <||@
  Comment 3334 1612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3334 1614 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3339 1616 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3348 12  <||@
  Comment 3358 block B124 null  <||@
  Comment 3358 1398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3358 1402 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 3358 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 3365 1404 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B124 -> B125 falseDestination: B124 -> B151  <||@
  Comment 3371 block B125 null  <||@
  Comment 3371 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3371 1408 rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 3375 1410 rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:46]  <||@
  Comment 3375 [rax:0, r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rbx|DWORD  |   |              |                   |   |    <||@
  Comment 3375 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3382 1412 r13|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 3386 1414 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 3390 1416 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 3390 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 3396 1418 BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B128  <||@
  Comment 3402 block B126 null  <||@
  Comment 3402 1420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3402 1422 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3405 1424 JUMP ~[] destination: B126 -> B127  <||@
  Comment 3410 block B141 null  <||@
  Comment 3410 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3410 1550 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 3410 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 3417 1552 BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143  <||@
  Comment 3423 block B142 null  <||@
  Comment 3423 1554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3423 1556 rax|DWORD = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3431 1558 JUMP ~[] destination: B142 -> B145  <||@
  Comment 3436 block B90 null  <||@
  Comment 3436 1118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3436 1120 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3438 1124 JUMP ~[] destination: B90 -> B129  <||@
  Comment 3438 block B129 null  <||@
  Comment 3438 1444 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3438 1440 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3443 1446 r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 3447 1448 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 3447 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 3454 1450 BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131  <||@
  Comment 3460 block B130 null  <||@
  Comment 3460 1452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3460 1454 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 3463 1456 JUMP ~[] destination: B130 -> B133  <||@
  Comment 3468 block B202 null  <||@
  Comment 3468 2146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3468 2148 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3473 2150 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3482 12  <||@
  Comment 3492 block B116 null  <||@
  Comment 3492 1348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3492 1350 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3494 1352 JUMP ~[] destination: B116 -> B118  <||@
  Comment 3499 block B123 null  <||@
  Comment 3499 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3499 1394 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3504 1396 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3513 12  <||@
  Comment 3523 block B36 null  <||@
  Comment 3523 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3523 472 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3528 474 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3528 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3538 476 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 3543 478 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3548 480 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3551 482 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3554 484 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20]  <||@
  Comment 3554 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3559 [stack:16, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |-                  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:64|QWORD[.]  |                   |   |   |   |    <||@
  Comment 3560 486 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3563 488 r9|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 3566 490 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 3569 492 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3574 494 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 3579 496 JUMP ~[] destination: B36 -> B38  <||@
  Comment 3584 block B45 null  <||@
  Comment 3584 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3584 628 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3587 630 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3587 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3597 632 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 3602 634 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3607 636 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20]  <||@
  Comment 3607 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3612 [r13:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r13|QWORD[.]  |                   |   |   |   |    <||@
  Comment 3613 638 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3616 640 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 3619 642 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 3619 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 3629 644 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3634 646 JUMP ~[] destination: B45 -> B47  <||@
  Comment 3639 block B128 null  <||@
  Comment 3639 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3639 1438 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3642 1442 JUMP ~[] destination: B128 -> B129  <||@
  Comment 3647 block B23 null  <||@
  Comment 3647 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3647 284 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3652 286 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3655 288 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3658 290 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3661 292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 3667 block B25 null  <||@
  Comment 3667 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3667 322 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 3671 324 AMD64PREFETCH ~[rcx|QWORD + 224] instr: 0  <||@
  Comment 3678 326 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 3681 328 JUMP ~[] destination: B25 -> B26  <||@
  Comment 3681 block B26 null  <||@
  Comment 3681 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3681 332 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3684 334 rcx|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 3691 336 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 3694 338 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 3694 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 3701 340 MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD  <||@
  Comment 3705 342 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 3708 344 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3711 346 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3714 348 JUMP ~[] destination: B26 -> B52  <||@
  Comment 3714 block B52 null  <||@
  Comment 3714 762 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3714 764 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 3714 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 3721 766 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B243  <||@
  Comment 3727 block B53 null  <||@
  Comment 3727 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3727 770 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3732 772 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 3736 774 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:20]  <||@
  Comment 3736 [rdx:0, r10:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |-             |r10|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |              |   |   |   |    <||@
  Comment 3736 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3740 776 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3744 778 rcx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 3748 780 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 3752 782 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 3758 block B55 null  <||@
  Comment 3758 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3758 806 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 3762 808 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 3769 810 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3769 812 JUMP ~[] destination: B55 -> B56  <||@
  Comment 3769 block B56 null  <||@
  Comment 3769 814 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3769 816 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3772 818 r11|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 3779 820 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 3782 822 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 3782 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 3789 824 MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD  <||@
  Comment 3793 826 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 3797 828 MOV (x: [rsi|QWORD[*] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 3801 830 r14|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 3808 832 MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 3812 834 MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 3816 836 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3819 838 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3822 840 JUMP ~[] destination: B56 -> B57  <||@
  Comment 3827 block B48 null  <||@
  Comment 3827 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3827 688 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3832 690 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3835 692 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3838 694 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3842 696 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 3846 698 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 3850 700 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 3856 block B50 null  <||@
  Comment 3856 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3856 732 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 3860 734 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 3867 736 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3867 738 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 3867 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 3877 740 JUMP ~[] destination: B50 -> B51  <||@
  Comment 3877 block B51 null  <||@
  Comment 3877 742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3877 744 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3880 746 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 3887 748 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 3890 750 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 3890 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 3897 752 MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD  <||@
  Comment 3901 754 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 3904 756 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3907 758 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3910 760 JUMP ~[] destination: B51 -> B52  <||@
  Comment 3915 block B15 null  <||@
  Comment 3915 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3915 132 stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 3919 134 stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3923 136 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3928 138 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3931 140 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3934 142 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3934 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3944 144 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 3949 146 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3954 148 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3954 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3959 [stack:32, stack:44, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 3960 150 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3963 152 rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 3967 154 rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 3971 156 r9|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 3974 158 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 3977 160 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3982 162 JUMP ~[] destination: B15 -> B17  <||@
  Comment 3987 block B20 null  <||@
  Comment 3987 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3987 216 stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 3991 218 stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3995 220 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4000 222 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 4003 224 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4006 226 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4006 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4016 228 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4021 230 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4026 232 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4026 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4031 [stack:32, stack:44, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4032 234 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4035 236 rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 4039 238 rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4043 240 r9|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 4046 242 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 4049 244 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 4049 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 4059 246 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4064 248 JUMP ~[] destination: B20 -> B22  <||@
  Comment 4069 block B30 null  <||@
  Comment 4069 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4069 378 stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 4073 380 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4077 382 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4082 384 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 4085 386 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4088 388 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4088 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4098 390 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4103 392 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4108 394 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4108 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4113 [stack:32, stack:40, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4114 396 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4117 398 rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 4121 400 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 4125 402 r9|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 4128 404 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 4131 406 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 4131 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 4141 408 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4146 410 JUMP ~[] destination: B30 -> B32  <||@
  Comment 4151 block B41 null  <||@
  Comment 4151 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4151 554 stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 4155 556 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4159 558 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4164 560 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4167 562 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4167 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4177 564 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4182 566 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4187 568 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4187 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4192 [stack:32, stack:40, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4193 570 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4196 572 rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 4200 574 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 4204 576 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 4207 578 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 4207 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 4217 580 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4222 582 JUMP ~[] destination: B41 -> B43  <||@
  Comment 4227 block B143 null  <||@
  Comment 4227 1560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4227 1562 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 4227 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 4234 1564 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B146  <||@
  Comment 4240 block B144 null  <||@
  Comment 4240 1566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4240 1568 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4245 1570 rsi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4253 1572 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:99]  <||@
  Comment 4253 [rsi:0, r10:0]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3             |4  |5 
     locals:  |-           |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |              |   |    <||@
  Comment 4253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4257 1574 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 4261 1576 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 103]  <||@
  Comment 4261 6  <||@
  Comment 4271 {HotSpotMethod<List.size()>}  <||@
  Comment 4276 []at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:40|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 4277 1578 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4282 1580 JUMP ~[] destination: B144 -> B145  <||@
  Comment 4287 block B131 null  <||@
  Comment 4287 1458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4287 1460 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 4287 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 4294 1462 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B150  <||@
  Comment 4300 block B132 null  <||@
  Comment 4300 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4300 1466 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4304 1468 r8|DWORD[.] = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 4308 1470 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:93]  <||@
  Comment 4308 [r8:0, r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93, duringCall: false, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 4308 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4312 1472 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 4316 1474 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4319 1476 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 94]  <||@
  Comment 4319 6  <||@
  Comment 4335 {HotSpotMethod<List.size()>}  <||@
  Comment 4340 [stack:32]at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:40|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3                  |4  |5 
     locals:  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 4341 1478 rsi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4345 1480 JUMP ~[] destination: B132 -> B133  <||@
  Comment 4350 block B54 null  <||@
  Comment 4350 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4350 786 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4355 788 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4355 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4365 790 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4370 792 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4375 794 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20]  <||@
  Comment 4375 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4380 [stack:32, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |-                  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |                   |   |   |   |    <||@
  Comment 4381 796 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4384 798 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4389 800 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4394 802 JUMP ~[] destination: B54 -> B56  <||@
  Comment 4399 block B24 null  <||@
  Comment 4399 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4399 296 stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 4403 298 stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4407 300 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4412 302 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4412 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4422 304 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4427 306 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4432 308 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4432 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4437 [stack:32, stack:44, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4438 310 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4441 312 rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 4445 314 rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4449 316 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4454 318 JUMP ~[] destination: B24 -> B26  <||@
  Comment 4459 block B49 null  <||@
  Comment 4459 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4459 704 stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 4463 706 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4467 708 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4472 710 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4472 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4482 712 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4487 714 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4492 716 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4492 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4497 [stack:32, stack:40, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4498 718 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4501 720 rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 4505 722 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 4509 724 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 4509 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 4519 726 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4524 728 JUMP ~[] destination: B49 -> B51  <||@
  Comment 4529 block B232 null  <||@
  Comment 4529 2390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4529 2392 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4532 2394 r10|DWORD = MOVE input: int[-503091|0xfffffffffff852cd]  <||@
  Comment 4538 2396 JUMP ~[] destination: B232 -> B233  <||@
  Comment 4538 block B233 null  <||@
  Comment 4538 2398 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4538 2400 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4545 2402 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4552 2404 DEOPT info [bci:55]  <||@
  Comment 4552 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4557 [rsi:0, r8:0, r11:0]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3            |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r8|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |             |   |    <||@
  Comment 4558 block B186 null  <||@
  Comment 4558 1970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4558 1972 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4561 1974 r10|DWORD = MOVE input: int[-494619|0xfffffffffff873e5]  <||@
  Comment 4567 1976 JUMP ~[] destination: B186 -> B233  <||@
  Comment 4569 block B235 null  <||@
  Comment 4569 2412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4569 2414 r10|DWORD = MOVE input: int[-478995|0xfffffffffff8b0ed]  <||@
  Comment 4575 2416 JUMP ~[] destination: B235 -> B239  <||@
  Comment 4575 block B239 null  <||@
  Comment 4575 2436 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4575 2438 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4582 2440 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4589 2442 DEOPT info [bci:46]  <||@
  Comment 4589 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4594 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |                   |   |    <||@
  Comment 4595 block B173 null  <||@
  Comment 4595 1854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4595 1856 r10|DWORD = MOVE input: int[-473867|0xfffffffffff8c4f5]  <||@
  Comment 4601 1858 JUMP ~[] destination: B173 -> B239  <||@
  Comment 4603 block B169 null  <||@
  Comment 4603 1826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4603 1828 MOV [r15|QWORD + 668] y: -457491 size: DWORD  <||@
  Comment 4614 1830 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4621 1832 DEOPT info [bci:37]  <||@
  Comment 4621 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4626 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 4627 block B12 null  <||@
  Comment 4627 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4627 106 r10|DWORD = MOVE input: int[-513555|0xfffffffffff829ed]  <||@
  Comment 4633 108 JUMP ~[] destination: B12 -> B245  <||@
  Comment 4633 block B245 null  <||@
  Comment 4633 2478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4633 2480 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4640 2482 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4647 2484 DEOPT info [bci:0]  <||@
  Comment 4647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4652 [r13:0, r14:0]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4653 block B110 null  <||@
  Comment 4653 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4653 1300 MOV [r15|QWORD + 668] y: -435987 size: DWORD  <||@
  Comment 4664 1302 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4671 1304 DEOPT info [bci:11, 41]  <||@
  Comment 4671 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4676 [r11:0, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdi|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 4677 block B190 null  <||@
  Comment 4677 2006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4677 2008 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4680 2010 r10|DWORD = MOVE input: int[-499739|0xfffffffffff85fe5]  <||@
  Comment 4686 2012 JUMP ~[] destination: B190 -> B233  <||@
  Comment 4691 block B229 null  <||@
  Comment 4691 2366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4691 2368 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4694 2370 r10|DWORD = MOVE input: int[-507155|0xfffffffffff842ed]  <||@
  Comment 4700 2372 JUMP ~[] destination: B229 -> B233  <||@
  Comment 4705 block B230 null  <||@
  Comment 4705 2374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4705 2376 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4708 2378 r10|DWORD = MOVE input: int[-505875|0xfffffffffff847ed]  <||@
  Comment 4714 2380 JUMP ~[] destination: B230 -> B233  <||@
  Comment 4719 block B234 null  <||@
  Comment 4719 2406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4719 2408 r10|DWORD = MOVE input: int[-480539|0xfffffffffff8aae5]  <||@
  Comment 4725 2410 JUMP ~[] destination: B234 -> B239  <||@
  Comment 4730 block B231 null  <||@
  Comment 4730 2382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4730 2384 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4733 2386 r10|DWORD = MOVE input: int[-511003|0xfffffffffff833e5]  <||@
  Comment 4739 2388 JUMP ~[] destination: B231 -> B233  <||@
  Comment 4744 block B241 null  <||@
  Comment 4744 2450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4744 2452 r10|DWORD = MOVE input: int[-417075|0xfffffffffff9a2cd]  <||@
  Comment 4750 2454 JUMP ~[] destination: B241 -> B242  <||@
  Comment 4750 block B242 null  <||@
  Comment 4750 2456 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4750 2458 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4757 2460 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4764 2462 DEOPT info [bci:31]  <||@
  Comment 4764 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4769 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 4770 block B91 null  <||@
  Comment 4770 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4770 1128 MOV [r15|QWORD + 668] y: -426803 size: DWORD  <||@
  Comment 4781 1130 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4788 1132 DEOPT info [bci:37]  <||@
  Comment 4788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4793 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 4794 block B237 null  <||@
  Comment 4794 2424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4794 2426 r10|DWORD = MOVE input: int[-475411|0xfffffffffff8beed]  <||@
  Comment 4800 2428 JUMP ~[] destination: B237 -> B239  <||@
  Comment 4805 block B151 null  <||@
  Comment 4805 1626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4805 1628 MOV [r15|QWORD + 668] y: -439603 size: DWORD  <||@
  Comment 4816 1630 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4823 1632 DEOPT info [bci:46]  <||@
  Comment 4823 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4828 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rbx|DWORD  |   |              |                   |   |    <||@
  Comment 4829 block B244 null  <||@
  Comment 4829 2472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4829 2474 r10|DWORD = MOVE input: int[-514355|0xfffffffffff826cd]  <||@
  Comment 4835 2476 JUMP ~[] destination: B244 -> B245  <||@
  Comment 4840 block B214 null  <||@
  Comment 4840 2234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4840 2236 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4844 2238 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4849 2240 MOV [r15|QWORD + 668] y: -486411 size: DWORD  <||@
  Comment 4860 2242 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4867 2244 DEOPT info [bci:63]  <||@
  Comment 4867 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4872 [rdx:0, r11:0, stack:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2             |3                  |4                  |5 
     locals:  |-             |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |stack:80|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |              |                   |                   |    <||@
  Comment 4873 block B243 null  <||@
  Comment 4873 2464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4873 2466 MOV [r15|QWORD + 668] y: -516915 size: DWORD  <||@
  Comment 4884 2468 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4891 2470 DEOPT info [bci:20]  <||@
  Comment 4891 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4896 [rdx:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 4897 block B76 null  <||@
  Comment 4897 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4897 1016 r10|DWORD = MOVE input: int[-415027|0xfffffffffff9aacd]  <||@
  Comment 4903 1018 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4908 1020 JUMP ~[] destination: B76 -> B242  <||@
  Comment 4913 block B236 null  <||@
  Comment 4913 2418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4913 2420 r10|DWORD = MOVE input: int[-476691|0xfffffffffff8b9ed]  <||@
  Comment 4919 2422 JUMP ~[] destination: B236 -> B239  <||@
  Comment 4924 block B159 null  <||@
  Comment 4924 1702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4924 1704 MOV [r15|QWORD + 668] y: -460827 size: DWORD  <||@
  Comment 4935 1706 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4942 1708 DEOPT info [bci:46]  <||@
  Comment 4942 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4947 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |                   |   |    <||@
  Comment 4948 block B34 null  <||@
  Comment 4948 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4948 454 MOV [r15|QWORD + 668] y: -515603 size: DWORD  <||@
  Comment 4959 456 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4966 458 DEOPT info [bci:20]  <||@
  Comment 4966 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4971 [r13:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r13|QWORD[.]  |                   |   |   |   |    <||@
  Comment 4972 block B164 null  <||@
  Comment 4972 1746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4972 1748 r10|DWORD = MOVE input: int[-466715|0xfffffffffff8e0e5]  <||@
  Comment 4978 1750 JUMP ~[] destination: B164 -> B168  <||@
  Comment 4978 block B168 null  <||@
  Comment 4978 1818 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4978 1820 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4985 1822 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4992 1824 DEOPT info [bci:46]  <||@
  Comment 4992 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4997 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |                   |   |    <||@
  Comment 4998 block B112 null  <||@
  Comment 4998 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4998 1312 r10|DWORD = MOVE input: int[-431155|0xfffffffffff96bcd]  <||@
  Comment 5004 1316 JUMP ~[] destination: B112 -> B113  <||@
  Comment 5004 block B113 null  <||@
  Comment 5004 1318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5004 1314 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 5009 1320 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5016 1322 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5023 1324 DEOPT info [bci:37]  <||@
  Comment 5023 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5028 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 5029 block B101 null  <||@
  Comment 5029 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5029 1214 r10|DWORD = MOVE input: int[-432395|0xfffffffffff966f5]  <||@
  Comment 5035 1218 JUMP ~[] destination: B101 -> B113  <||@
  Comment 5037 block B1 null  <||@
  Comment 5037 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5037 18 r10|DWORD = MOVE input: int[-405267|0xfffffffffff9d0ed]  <||@
  Comment 5043 20 JUMP ~[] destination: B1 -> B245  <||@
  Comment 5048 block B192 null  <||@
  Comment 5048 2054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5048 2056 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5051 2058 r10|DWORD = MOVE input: int[-491283|0xfffffffffff880ed]  <||@
  Comment 5057 2060 JUMP ~[] destination: B192 -> B233  <||@
  Comment 5062 block B228 null  <||@
  Comment 5062 2358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5062 2360 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5065 2362 r10|DWORD = MOVE input: int[-509459|0xfffffffffff839ed]  <||@
  Comment 5071 2364 JUMP ~[] destination: B228 -> B233  <||@
  Comment 5076 block B150 null  <||@
  Comment 5076 1618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5076 1620 MOV [r15|QWORD + 668] y: -443955 size: DWORD  <||@
  Comment 5087 1622 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5094 1624 DEOPT info [bci:93]  <||@
  Comment 5094 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5099 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93, duringCall: false, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 5100 block B177 null  <||@
  Comment 5100 1884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5100 1886 r10|DWORD = MOVE input: int[-477963|0xfffffffffff8b4f5]  <||@
  Comment 5106 1888 JUMP ~[] destination: B177 -> B239  <||@
  Comment 5111 block B240 null  <||@
  Comment 5111 2444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5111 2446 r10|DWORD = MOVE input: int[-421427|0xfffffffffff991cd]  <||@
  Comment 5117 2448 JUMP ~[] destination: B240 -> B242  <||@
  Comment 5122 block B147 null  <||@
  Comment 5122 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5122 1600 r10|DWORD = MOVE input: int[-448563|0xfffffffffff927cd]  <||@
  Comment 5128 1602 JUMP ~[] destination: B147 -> B148  <||@
  Comment 5128 block B148 null  <||@
  Comment 5128 1604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5128 1606 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5135 1608 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5142 1610 DEOPT info [bci:99]  <||@
  Comment 5142 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5147 [stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3                  |4  |5 
     locals:  |-           |-  |-  |stack:48|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |                   |   |    <||@
  Comment 5148 block B75 null  <||@
  Comment 5148 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5148 1008 MOV [r15|QWORD + 668] y: -409395 size: DWORD  <||@
  Comment 5159 1010 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5166 1012 DEOPT info [bci:11, 32]  <||@
  Comment 5166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5171 [r11:0, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdx|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32, duringCall: true, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 5172 block B146 null  <||@
  Comment 5172 1592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5172 1594 r10|DWORD = MOVE input: int[-452915|0xfffffffffff916cd]  <||@
  Comment 5178 1596 JUMP ~[] destination: B146 -> B148  <||@
  Comment 5180 block B167 null  <||@
  Comment 5180 1810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5180 1812 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 5185 1814 r10|DWORD = MOVE input: int[-469811|0xfffffffffff8d4cd]  <||@
  Comment 5191 1816 JUMP ~[] destination: B167 -> B168  <||@
  Comment 5196 block B238 null  <||@
  Comment 5196 2430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5196 2432 r10|DWORD = MOVE input: int[-472627|0xfffffffffff8c9cd]  <||@
  Comment 5202 2434 JUMP ~[] destination: B238 -> B239  <||@
  Comment 5207 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 5207 4  <||@
  Comment 5213 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 5213 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9840[java.util.AbstractList.equals(Object)]"
  method "HotSpotCompilation-9840[java.util.AbstractList.equals(Object)]"
  date 1527005225065
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c329e0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@311f2cb7 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 59 12 CMP (x: r14|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 62 14 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 68 block B2 null  <||@
  Comment 68 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 24 rsi|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 68 [r13:0, r14:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 26 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/List;, resolved>}  <||@
  Comment 72 {meta{HotSpotType<Ljava/util/List;, resolved>}}  <||@
  Comment 82 28 CMP (x: rdx|QWORD, y: [rsi|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 90 30 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B10 falseDestination: B2 -> B4  <||@
  Comment 96 block B4 null  <||@
  Comment 96 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 38 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/List;, resolved>;compressed}  <||@
  Comment 96 {meta{HotSpotType<Ljava/util/List;, resolved>;compressed}}  <||@
  Comment 102 40 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B10 falseDestination: B4 -> B6  <||@
  Comment 108 block B6 null  <||@
  Comment 108 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 48 rax|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD  <||@
  Comment 116 50 rbx|DWORD = MOV [rax|QWORD] size: DWORD  <||@
  Comment 118 52 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 124 54 JUMP ~[] destination: B6 -> B7  <||@
  Comment 129 block B8 loop 0 depth 1 header:2591|LoopBegin  <||@
  Comment 129 62 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 144 64 r11|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 151 66 r11|DWORD = LEA [r11|DWORD + 8] size: DWORD  <||@
  Comment 155 68 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 158 70 r11|QWORD = MOV [rax|QWORD + r11|QWORD * 1] size: QWORD  <||@
  Comment 162 72 CMP (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 165 74 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B246  <||@
  Comment 171 block B246 loop 0 depth 1 header:2591|LoopBegin  <||@
  Comment 171 2486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 171 2488 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 174 2490 JUMP ~[] destination: B246 -> B7  <||@
  Comment 174 block B7 loop 0 depth 1 header:2591|LoopBegin  <||@
  Comment 174 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 174 58 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 177 60 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B247  <||@
  Comment 184 block B10 null  <||@
  Comment 184 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 84 r10|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 188 86 rsi|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 192 88 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 192 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 202 90 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 212 92 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 212 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 222 94 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 222 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 228 96 BRANCH trueDestinationProbability: 0.5141586199414127 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B27  <||@
  Comment 234 block B11 null  <||@
  Comment 234 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 100 CMP [r13|QWORD[.] + 16] y: 0 size: DWORD  <||@
  Comment 239 102 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 245 block B13 null  <||@
  Comment 245 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 112 rbx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 249 114 rdi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 256 116 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 256 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 263 118 BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B18  <||@
  Comment 269 block B14 null  <||@
  Comment 269 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 122 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 273 124 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 277 126 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 281 128 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 287 block B16 null  <||@
  Comment 287 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 166 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 291 168 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 298 170 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 298 172 JUMP ~[] destination: B16 -> B17  <||@
  Comment 298 block B17 null  <||@
  Comment 298 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 298 176 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 301 178 rax|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 308 180 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 311 182 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 311 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 318 184 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 322 186 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 325 188 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 328 190 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 331 194 JUMP ~[] destination: B17 -> B33  <||@
  Comment 331 block B33 null  <||@
  Comment 331 444 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 331 440 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 334 446 rsi|DWORD = MOV [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 338 448 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 340 450 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 346 block B35 null  <||@
  Comment 346 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 462 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 350 464 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 354 466 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 358 468 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 364 block B37 null  <||@
  Comment 364 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 500 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 368 502 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 375 504 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 375 506 JUMP ~[] destination: B37 -> B38  <||@
  Comment 375 block B38 null  <||@
  Comment 375 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 375 510 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 378 512 rbx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 385 514 MOV (x: [rsi|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 388 516 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 388 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 395 518 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 399 520 rbx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 403 522 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 406 524 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 410 526 MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 414 528 MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 418 530 r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 421 532 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 424 534 JUMP ~[] destination: B38 -> B57  <||@
  Comment 424 block B57 null  <||@
  Comment 424 842 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 424 844 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 429 846 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 434 848 r8|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 438 850 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 443 852 r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 447 854 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 452 856 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 452 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 462 858 JUMP ~[] destination: B57 -> B58  <||@
  Comment 462 block B58 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 462 860 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 862 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 464 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 471 864 BRANCH trueDestinationProbability: 0.6218287856696522 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B77  <||@
  Comment 477 block B59 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 477 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 868 rbx|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 481 870 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 481 [rbx:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 481 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 488 872 rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 492 874 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 492 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 498 876 BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 504 block B60 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 504 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 504 880 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 511 882 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31]  <||@
  Comment 511 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 511 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 518 884 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 520 886 JUMP ~[] destination: B60 -> B65  <||@
  Comment 520 block B65 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 520 934 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 520 936 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 522 938 rdi|DWORD = SETCC condition: !=  <||@
  Comment 530 940 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 532 942 BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B65 -> B81 falseDestination: B65 -> B67  <||@
  Comment 538 block B67 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 538 948 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 950 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 538 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 545 952 BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B71  <||@
  Comment 551 block B68 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 551 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 551 956 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 555 958 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:11, 32]  <||@
  Comment 555 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdx|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32, duringCall: true, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 555 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 562 960 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 566 962 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 570 964 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 570 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 576 966 BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B68 -> B95 falseDestination: B68 -> B97  <||@
  Comment 582 block B95 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 582 1162 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 582 1164 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 585 1166 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:37]  <||@
  Comment 585 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |              |   |    <||@
  Comment 585 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 592 1168 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 594 1170 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 596 1172 JUMP ~[] destination: B95 -> B103  <||@
  Comment 596 block B103 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 596 1244 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 596 1246 CMP (x: rdi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 598 1248 rdx|DWORD = SETCC condition: !=  <||@
  Comment 604 1250 CMP (x: rdi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 606 1252 BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 612 block B105 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 612 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 1262 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 612 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 619 1264 BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B171  <||@
  Comment 625 block B106 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 625 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 1268 rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 629 1270 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:11, 41]  <||@
  Comment 629 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdi|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 629 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 636 1272 CMP (x: rax|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD  <||@
  Comment 640 1274 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B110  <||@
  Comment 646 block B107 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 646 1276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 646 1278 rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 653 1280 rax|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 657 1282 rdi|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 661 1284 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 665 1286 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 665 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 671 1288 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B107 -> B157 falseDestination: B107 -> B161  <||@
  Comment 677 block B157 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 677 1680 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 677 1682 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 680 1684 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46]  <||@
  Comment 680 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |              |   |    <||@
  Comment 680 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 687 1686 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B157 -> B158 falseDestination: B157 -> B159  <||@
  Comment 693 block B158 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 693 1688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 693 1690 MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 697 1692 MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 701 1694 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 705 1696 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 709 1698 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 713 1700 JUMP ~[] destination: B158 -> B181  <||@
  Comment 713 block B181 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 713 1920 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 713 1922 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 713 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 720 1924 BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B181 -> B182 falseDestination: B181 -> B193  <||@
  Comment 726 block B182 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 726 1926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 726 1928 rbx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 730 1930 rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:55]  <||@
  Comment 730 [rbx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 730 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 737 1932 CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 741 1934 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B182 -> B183 falseDestination: B182 -> B192  <||@
  Comment 747 block B183 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 747 1936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 747 1938 rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 754 1940 rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 758 1942 rax|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 762 1944 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 762 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 768 1946 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B183 -> B184 falseDestination: B183 -> B187  <||@
  Comment 774 block B184 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 774 1948 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 1950 rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 781 1952 CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:55]  <||@
  Comment 781 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 781 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 788 1954 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B184 -> B185 falseDestination: B184 -> B186  <||@
  Comment 794 block B185 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 794 1956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 1958 MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 798 1960 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 802 1962 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 806 1964 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 810 1966 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 814 1968 JUMP ~[] destination: B185 -> B199  <||@
  Comment 814 block B199 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 814 2118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 814 2120 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 817 2122 BRANCH trueDestinationProbability: 0.04052010885999391 condition: = trueDestination: B199 -> B200 falseDestination: B199 -> B203  <||@
  Comment 823 block B203 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 823 2152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 823 2154 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 826 2156 CMP (x: rcx|QWORD, y: [rbx|DWORD * 8 + 448]) size: QWORD  <||@
  Comment 834 2158 BRANCH trueDestinationProbability: 0.6124803025527892 condition: = trueDestination: B203 -> B204 falseDestination: B203 -> B207  <||@
  Comment 840 block B204 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 840 2160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 2162 CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 843 2164 BRANCH trueDestinationProbability: 0.8973841790104002 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B206  <||@
  Comment 849 block B205 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 849 2166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 2168 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 849 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4             |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |              |              |              |    <||@
  Comment 849 {infopoint: SAFEPOINT}  <||@
  Comment 849 11  <||@
  Comment 855 2170 JUMP ~[] destination: B205 -> B58  <||@
  Comment 860 block B77 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 860 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 1024 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 860 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 867 1026 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B241  <||@
  Comment 873 block B78 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 873 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 1030 rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 877 1032 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:31]  <||@
  Comment 877 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 877 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 884 1034 rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 888 1036 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 890 1038 rbx|DWORD = SETCC condition: !=  <||@
  Comment 896 1040 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 898 1042 BRANCH trueDestinationProbability: 0.2735680066652781 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B92  <||@
  Comment 904 block B92 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 904 1134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 904 1136 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 904 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 911 1138 BRANCH trueDestinationProbability: 0.6844248193600183 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B114  <||@
  Comment 917 block B93 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 917 1140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 1142 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 921 1144 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 921 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 921 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 928 1146 rax|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 932 1148 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 936 1150 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 936 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 942 1156 rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 944 1158 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 946 1152 BRANCH trueDestinationProbability: 0.9202979333724495 condition: = trueDestination: B93 -> B95 falseDestination: B93 -> B97  <||@
  Comment 957 block B207 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 957 2178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 2180 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 957 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 963 2182 BRANCH trueDestinationProbability: 0.3667859466493169 condition: = trueDestination: B207 -> B208 falseDestination: B207 -> B223  <||@
  Comment 969 block B223 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 969 2318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 2320 rbx|QWORD = MOV [rbx|DWORD * 8 + 448] size: QWORD  <||@
  Comment 977 2322 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 981 2324 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:82]  <||@
  Comment 981 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 981 10  <||@
  Comment 983 [stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:523) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 984 2326 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 986 2328 BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B223 -> B226 falseDestination: B223 -> B227  <||@
  Comment 992 block B227 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 992 2344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 992 2346 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 992 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 1002 2348 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1007 2350 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1012 2352 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1017 2354 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1022 2356 JUMP ~[] destination: B227 -> B58  <||@
  Comment 1027 block B193 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1027 2062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1027 2064 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 1027 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 1034 2066 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B232  <||@
  Comment 1040 block B194 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1040 2068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1040 2070 rdx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1044 2072 rbx|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD state [bci:55]  <||@
  Comment 1044 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 1044 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1051 2074 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:55]  <||@
  Comment 1051 [rdx:0, rbx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 1051 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1058 2076 rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1062 2078 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1064 2080 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B231  <||@
  Comment 1070 block B195 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1070 2082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 2084 rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1077 2086 CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 1081 2088 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B230  <||@
  Comment 1087 block B196 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1087 2090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 2092 CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1094 2094 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B196 -> B197 falseDestination: B196 -> B229  <||@
  Comment 1100 block B197 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1100 2096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 2098 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1102 2100 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B228  <||@
  Comment 1108 block B198 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1108 2102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1108 2104 rdx|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 1112 2106 MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1116 2108 MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1120 2110 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1124 2112 rdx|DWORD[.] = MOV [rbx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1128 2114 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1132 2116 JUMP ~[] destination: B198 -> B199  <||@
  Comment 1137 block B71 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1137 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1137 978 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 1137 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 1144 980 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B75  <||@
  Comment 1150 block B72 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1150 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1150 984 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1154 986 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:11, 32]  <||@
  Comment 1154 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdx|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32, duringCall: true, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 1154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1161 988 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1165 990 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1167 992 rbx|DWORD = SETCC condition: !=  <||@
  Comment 1173 994 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1175 996 BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B72 -> B118 falseDestination: B72 -> B153  <||@
  Comment 1181 block B153 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1181 1644 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1181 1646 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 1181 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1188 1648 BRANCH trueDestinationProbability: 0.7218022376776535 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B170  <||@
  Comment 1194 block B154 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1194 1650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 1652 rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 1198 1654 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:37]  <||@
  Comment 1198 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |              |   |    <||@
  Comment 1198 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1205 1656 CMP (x: rdx|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD  <||@
  Comment 1209 1658 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B169  <||@
  Comment 1215 block B155 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1215 1660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 1662 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1222 1664 rax|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 1226 1666 rdi|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 1230 1668 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1234 1670 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 1234 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 1240 1676 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1242 1672 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B155 -> B157 falseDestination: B155 -> B161  <||@
  Comment 1253 block B171 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1253 1840 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1253 1842 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 1253 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 1260 1844 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B171 -> B172 falseDestination: B171 -> B238  <||@
  Comment 1266 block B172 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1266 1846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1266 1848 rsi|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 1270 1850 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1272 1852 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174  <||@
  Comment 1278 block B174 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1278 1860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1278 1862 rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1285 1864 CMP (x: rbx|DWORD, y: [r11|QWORD[.] + 20]) size: DWORD  <||@
  Comment 1289 1866 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B237  <||@
  Comment 1295 block B175 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1295 1868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1295 1870 rbx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 1299 1872 CMP (x: rbx|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1306 1874 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B236  <||@
  Comment 1312 block B176 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1312 1876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1312 1878 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1319 1880 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1321 1882 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B176 -> B177 falseDestination: B176 -> B178  <||@
  Comment 1327 block B178 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1327 1890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1327 1892 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1334 1894 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1336 1896 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B235  <||@
  Comment 1342 block B179 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1342 1898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 1900 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1344 1902 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B179 -> B180 falseDestination: B179 -> B234  <||@
  Comment 1350 block B180 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1350 1904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1350 1906 rdx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1354 1908 MOV (x: [r11|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1358 1910 MOV (x: [r11|QWORD[.] + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1362 1912 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1366 1914 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1370 1916 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1374 1918 JUMP ~[] destination: B180 -> B181  <||@
  Comment 1379 block B208 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1379 2184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1379 2186 CMP (x: rdx|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1382 2188 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B210  <||@
  Comment 1388 block B210 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1388 2206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1388 2208 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1391 2210 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B210 -> B226 falseDestination: B210 -> B212  <||@
  Comment 1397 block B212 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1397 2216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1397 2218 CMP [rdx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1397 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1404 2220 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B212 -> B213 falseDestination: B212 -> B226  <||@
  Comment 1410 block B213 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1410 2222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1410 2224 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1414 2226 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:63]  <||@
  Comment 1414 [rdx:0, rsi:0, r10:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 1414 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1418 2228 r11|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1422 2230 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1425 2232 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B213 -> B214 falseDestination: B213 -> B215  <||@
  Comment 1431 block B215 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1431 2246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1431 2248 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1439 2250 r9|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1447 2252 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1450 2254 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B215 -> B216 falseDestination: B215 -> B226  <||@
  Comment 1456 block B216 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1456 2256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 2258 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1459 2260 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B216 -> B217 falseDestination: B216 -> B218  <||@
  Comment 1465 block B218 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1465 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1465 2280 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1469 2282 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1473 2284 r8|DWORD = ARRAY_EQUALS (~array1Value: r10|QWORD[.], ~array2Value: r11|QWORD[.], ~lengthValue: r9|DWORD) {temp1: rcx|QWORD[*], temp2: rbx|QWORD[*], temp3: rdi|QWORD, temp4: rax|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1731 2286 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1734 2288 BRANCH trueDestinationProbability: 0.10261582098959976 condition: = trueDestination: B218 -> B226 falseDestination: B218 -> B220  <||@
  Comment 1740 block B220 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1740 2294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1740 2296 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 1740 [rdx:0, rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 1740 {infopoint: SAFEPOINT}  <||@
  Comment 1740 11  <||@
  Comment 1746 2298 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1746 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 1756 2300 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1761 2302 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1766 2304 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1771 2306 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1776 2308 JUMP ~[] destination: B220 -> B58  <||@
  Comment 1781 block B114 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1781 1326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1781 1328 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 1781 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 1788 1330 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B240  <||@
  Comment 1794 block B115 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1794 1332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1794 1334 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1798 1336 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:31]  <||@
  Comment 1798 [r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3             |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |-   <||@
  Comment 1798 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1805 1338 rdx|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1809 1340 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1811 1342 rdi|DWORD = SETCC condition: !=  <||@
  Comment 1819 1344 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1821 1346 BRANCH trueDestinationProbability: 0.051783461406124554 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B152  <||@
  Comment 1827 block B152 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1827 1634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1827 1636 stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1831 1638 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1833 1640 rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1837 1642 JUMP ~[] destination: B152 -> B153  <||@
  Comment 1842 block B170 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1842 1834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1842 1836 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1844 1838 JUMP ~[] destination: B170 -> B171  <||@
  Comment 1849 block B61 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1849 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1849 890 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1849 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1855 892 BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1861 block B62 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1861 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1861 896 rbx|DWORD = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1868 898 JUMP ~[] destination: B62 -> B65  <||@
  Comment 1873 block B209 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1873 2190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1873 2192 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 1873 [rdx:0, rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 1873 {infopoint: SAFEPOINT}  <||@
  Comment 1873 11  <||@
  Comment 1879 2194 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1879 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 1889 2200 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1894 2202 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1899 2204 JUMP ~[] destination: B209 -> B58  <||@
  Comment 1904 block B187 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1904 1978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1904 1980 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1904 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1910 1982 BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B191  <||@
  Comment 1916 block B188 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1916 1984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1916 1986 rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1923 1988 CMP (x: rdi|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:55]  <||@
  Comment 1923 [rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3             |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |              |   |    <||@
  Comment 1923 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1930 1990 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B188 -> B189 falseDestination: B188 -> B190  <||@
  Comment 1936 block B189 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1936 1992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1936 1994 MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1940 1996 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1944 1998 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1948 2000 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1952 2002 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 1956 2004 JUMP ~[] destination: B189 -> B199  <||@
  Comment 1961 block B200 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1961 2124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 2126 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1964 2128 BRANCH trueDestinationProbability: 0.8223880597014925 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202  <||@
  Comment 1970 block B201 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 1970 2130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1970 2132 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 1970 [rdx:0, rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 1970 {infopoint: SAFEPOINT}  <||@
  Comment 1970 11  <||@
  Comment 1976 2134 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1976 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 1986 2140 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1991 2142 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1996 2144 JUMP ~[] destination: B201 -> B58  <||@
  Comment 2001 block B97 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2001 1182 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 2001 1184 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 2004 1186 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 2004 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 2010 1188 BRANCH trueDestinationProbability: 0.9844587133450589 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 2016 block B98 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2016 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 1192 rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 2019 1194 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2021 1196 JUMP ~[] destination: B98 -> B103  <||@
  Comment 2026 block B161 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2026 1716 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2026 1718 rbx|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 2029 1720 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 2029 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 2035 1722 BRANCH trueDestinationProbability: 0.9931451844203519 condition: = trueDestination: B161 -> B162 falseDestination: B161 -> B165  <||@
  Comment 2041 block B162 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2041 1724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2041 1726 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2044 1728 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46]  <||@
  Comment 2044 [rsi:0, r10:0, r11:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |              |   |    <||@
  Comment 2044 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2051 1730 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B162 -> B163 falseDestination: B162 -> B164  <||@
  Comment 2057 block B163 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2057 1732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2057 1734 MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 2061 1736 MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 2065 1738 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2069 1740 rsi|DWORD[.] = MOV [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2073 1742 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2077 1744 JUMP ~[] destination: B163 -> B181  <||@
  Comment 2082 block B217 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2082 2262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2082 2264 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:63]  <||@
  Comment 2082 [rdx:0, rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2                  |3                  |4             |5 
     locals:  |-             |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rsi|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |                   |                   |              |    <||@
  Comment 2082 {infopoint: SAFEPOINT}  <||@
  Comment 2082 11  <||@
  Comment 2088 2266 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2088 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2098 2268 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2103 2270 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2108 2272 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 2274 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2118 2276 JUMP ~[] destination: B217 -> B58  <||@
  Comment 2123 block B63 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2123 900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 902 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 2123 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 2129 904 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B76  <||@
  Comment 2135 block B64 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2135 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2135 908 stack:40|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2139 910 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2146 912 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:31]  <||@
  Comment 2146 [rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2146 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2150 914 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2154 916 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 32]  <||@
  Comment 2154 6  <||@
  Comment 2167 {HotSpotMethod<List.size()>}  <||@
  Comment 2172 [stack:16, stack:32]at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:40|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2173 918 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2175 920 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2179 922 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2179 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2189 924 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2194 926 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2199 928 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 930 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2209 932 JUMP ~[] destination: B64 -> B65  <||@
  Comment 2214 block B99 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2214 1198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2214 1200 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 2214 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 2220 1202 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B112  <||@
  Comment 2226 block B100 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2226 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2226 1206 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 2229 1208 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2231 1210 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 2237 block B102 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2237 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2237 1222 stack:40|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2241 1224 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2245 1226 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 41]  <||@
  Comment 2245 6  <||@
  Comment 2255 {HotSpotMethod<List.size()>}  <||@
  Comment 2260 [stack:16, stack:32]at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:40|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2261 1228 rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2265 1230 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2267 1232 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2267 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2277 1234 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2282 1236 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2287 1238 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2292 1240 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2297 1242 JUMP ~[] destination: B102 -> B103  <||@
  Comment 2302 block B191 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2302 2014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 2016 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2306 2018 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2310 2020 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2314 2022 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2317 2024 rdx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2319 2026 stack:40|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2323 2028 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 58]  <||@
  Comment 2323 7  <||@
  Comment 2335 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 2340 [stack:0, stack:16, stack:32]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD  |- 
  at java.util.AbstractList.equals(AbstractList.java:522) [bci: 58, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4                  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:80|QWORD[.]  |-   <||@
  Comment 2341 2030 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2346 2032 rdi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2350 2034 MOV (x: [r10|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 2354 2036 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2358 2038 MOV (x: [r10|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 2362 2040 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2365 2042 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2369 2044 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2369 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2379 2046 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2384 2048 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2389 2050 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2394 2052 JUMP ~[] destination: B191 -> B199  <||@
  Comment 2399 block B165 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2399 1752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2399 1754 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 2399 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 2405 1756 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B167  <||@
  Comment 2411 block B166 loop 1 depth 1 header:28|LoopBegin  <||@
  Comment 2411 1758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2411 1760 stack:40|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2415 1762 stack:68|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2419 1764 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 2422 1766 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:46]  <||@
  Comment 2422 [rsi:0, stack:16, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2                  |3                  |4  |5 
     locals:  |-          |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |                   |                   |   |    <||@
  Comment 2422 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2426 1768 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2430 1770 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2433 1774 stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2437 1776 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:8, 14, 50]  <||@
  Comment 2437 6  <||@
  Comment 2447 {HotSpotMethod<List.size()>}  <||@
  Comment 2452 [stack:0, stack:16, stack:32]at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |-                  |stack:40|DWORD 
     stack:   |stack:80|QWORD[.]  |               
  at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:64|QWORD[.]  |stack:40|DWORD  |- 
  at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2453 1778 rax|DWORD = SUB (x: rax|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 2457 1780 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 2459 1782 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2463 1784 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2465 1786 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<List.get(int)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 14, 50]  <||@
  Comment 2465 6  <||@
  Comment 2479 {HotSpotMethod<List.get(int)>}  <||@
  Comment 2484 [stack:16, stack:32]at org.graalvm.compiler.core.common.util.ReversedList.get(ReversedList.java:44) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:64|QWORD[.]  |stack:40|DWORD  |- 
  at java.util.AbstractList.equals(AbstractList.java:521) [bci: 50, duringCall: true, rethrow: false]
              |0  |1  |2                  |3                  |4  |5 
     locals:  |-  |-  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2485 1788 rsi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2489 1790 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2494 1792 MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 2498 1794 rdi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2502 1796 MOV (x: [r11|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 2506 1798 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2509 1800 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 2509 {meta{HotSpotMethod<Object.equals(Object)>}}  <||@
  Comment 2519 1802 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2524 1804 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2529 1806 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2534 1808 JUMP ~[] destination: B166 -> B181  <||@
  Comment 2539 block B27 null  <||@
  Comment 2539 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2539 352 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 2539 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 2545 354 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B244  <||@
  Comment 2551 block B28 null  <||@
  Comment 2551 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2551 358 rbx|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 2555 360 rdi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2562 362 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 2562 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 2569 364 BRANCH trueDestinationProbability: 0.5085168709992406 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B39  <||@
  Comment 2575 block B29 null  <||@
  Comment 2575 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2575 368 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2579 370 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 2583 372 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2587 374 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 2593 block B31 null  <||@
  Comment 2593 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2593 414 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2597 416 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 2604 418 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2604 420 JUMP ~[] destination: B31 -> B32  <||@
  Comment 2604 block B32 null  <||@
  Comment 2604 422 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2604 424 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2607 426 rax|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 2614 428 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 2617 430 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2617 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2624 432 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 2628 434 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 2631 436 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2634 438 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2637 442 JUMP ~[] destination: B32 -> B33  <||@
  Comment 2642 block B81 null  <||@
  Comment 2642 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2642 1056 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2642 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2650 1058 BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87  <||@
  Comment 2656 block B82 null  <||@
  Comment 2656 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2656 1062 rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 2660 1064 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:37]  <||@
  Comment 2660 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 2660 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2667 1066 CMP (x: rax|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2671 1068 BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86  <||@
  Comment 2677 block B83 null  <||@
  Comment 2677 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2677 1072 CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2677 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2685 1074 BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B83 -> B136 falseDestination: B83 -> B138  <||@
  Comment 2691 block B136 null  <||@
  Comment 2691 1500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2691 1496 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2696 1502 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2700 1504 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:99]  <||@
  Comment 2700 [r10:0]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3             |4  |5 
     locals:  |-           |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |              |   |    <||@
  Comment 2700 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2707 1506 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 2711 1508 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2713 1510 rax|DWORD = SETCC condition: !=  <||@
  Comment 2719 1512 rax|DWORD = XOR rax|DWORD y: 1 size: DWORD  <||@
  Comment 2722 1514 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2731 12  <||@
  Comment 2741 block B87 null  <||@
  Comment 2741 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2741 1096 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 2741 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 2749 1098 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B91  <||@
  Comment 2755 block B88 null  <||@
  Comment 2755 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2755 1102 rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 2759 1104 rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:37]  <||@
  Comment 2759 [rax:0, r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 2759 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2766 1106 rdx|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 2770 1108 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2774 1110 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 2774 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 2780 1112 BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B88 -> B127 falseDestination: B88 -> B90  <||@
  Comment 2786 block B127 null  <||@
  Comment 2786 1426 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2786 1428 rax|DWORD[.] = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 2789 1430 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:93]  <||@
  Comment 2789 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93, duringCall: false, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 2789 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2796 1432 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2798 1434 JUMP ~[] destination: B127 -> B133  <||@
  Comment 2798 block B133 null  <||@
  Comment 2798 1482 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2798 1484 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2800 1486 BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B133 -> B134 falseDestination: B133 -> B149  <||@
  Comment 2806 block B134 null  <||@
  Comment 2806 1488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2806 1490 CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2806 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2814 1492 BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B134 -> B136 falseDestination: B134 -> B138  <||@
  Comment 2821 block B79 null  <||@
  Comment 2821 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2821 1046 rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2823 1048 JUMP ~[] destination: B79 -> B81  <||@
  Comment 2828 block B18 null  <||@
  Comment 2828 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2828 198 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2832 200 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2836 202 rsi|QWORD = LEA [rcx|QWORD + 32] size: QWORD  <||@
  Comment 2840 204 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 2840 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 2847 206 BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23  <||@
  Comment 2853 block B19 null  <||@
  Comment 2853 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2853 210 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2856 212 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 2862 block B21 null  <||@
  Comment 2862 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2862 252 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 2866 254 AMD64PREFETCH ~[rcx|QWORD + 224] instr: 0  <||@
  Comment 2873 256 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2876 258 JUMP ~[] destination: B21 -> B22  <||@
  Comment 2876 block B22 null  <||@
  Comment 2876 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2876 262 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2879 264 rax|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 2886 266 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 2889 268 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 2889 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 2896 270 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 2900 272 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 2903 274 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2906 276 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 2909 280 JUMP ~[] destination: B22 -> B44  <||@
  Comment 2909 block B44 null  <||@
  Comment 2909 616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2909 612 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2912 618 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2916 620 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 2920 622 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2924 624 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 2930 block B46 null  <||@
  Comment 2930 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2930 650 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2934 652 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 2941 654 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2941 656 JUMP ~[] destination: B46 -> B47  <||@
  Comment 2941 block B47 null  <||@
  Comment 2941 658 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2941 660 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2944 662 rbx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 2951 664 MOV (x: [rsi|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 2954 666 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 2954 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 2961 668 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 2965 670 rbx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 2969 672 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 2972 674 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 2976 676 MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 2980 678 MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 2984 680 r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2987 682 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2990 684 JUMP ~[] destination: B47 -> B57  <||@
  Comment 2995 block B39 null  <||@
  Comment 2995 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2995 538 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 2995 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 3002 540 BRANCH trueDestinationProbability: 0.9885209713024284 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B48  <||@
  Comment 3008 block B40 null  <||@
  Comment 3008 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3008 544 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3012 546 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 3016 548 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 3020 550 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 3026 block B42 null  <||@
  Comment 3026 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3026 586 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 3030 588 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 3037 590 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3037 592 JUMP ~[] destination: B42 -> B43  <||@
  Comment 3037 block B43 null  <||@
  Comment 3037 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3037 596 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3040 598 rax|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 3047 600 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 3050 602 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 3050 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 3057 604 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 3061 606 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 3064 608 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3067 610 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3070 614 JUMP ~[] destination: B43 -> B44  <||@
  Comment 3075 block B247 null  <||@
  Comment 3075 2492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3075 2494 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3080 2496 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3089 12  <||@
  Comment 3099 block B138 null  <||@
  Comment 3099 1522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3099 1518 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3104 1524 CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 3104 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 3112 1526 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B147  <||@
  Comment 3118 block B139 null  <||@
  Comment 3118 1528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3118 1530 r13|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 3122 1532 r14|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:99]  <||@
  Comment 3122 [r10:0, r13:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3             |4  |5 
     locals:  |-           |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |              |   |    <||@
  Comment 3122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3130 1534 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 3134 1536 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 3134 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 3141 1538 BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 3147 block B140 null  <||@
  Comment 3147 1540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3147 1542 rax|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3155 1544 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:99]  <||@
  Comment 3155 [r10:0]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3             |4  |5 
     locals:  |-           |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |              |   |    <||@
  Comment 3155 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3162 1546 JUMP ~[] destination: B140 -> B145  <||@
  Comment 3162 block B145 null  <||@
  Comment 3162 1582 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3162 1584 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3165 1586 rax|DWORD = SETCC condition: !=  <||@
  Comment 3171 1588 rax|DWORD = XOR rax|DWORD y: 1 size: DWORD  <||@
  Comment 3174 1590 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3183 12  <||@
  Comment 3193 block B206 null  <||@
  Comment 3193 2172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3193 2174 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3198 2176 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3207 12  <||@
  Comment 3217 block B9 null  <||@
  Comment 3217 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3217 78 MOV (x: [rsi|DWORD * 8 + 24], y: rdx|QWORD) size: QWORD  <||@
  Comment 3225 80 JUMP ~[] destination: B9 -> B10  <||@
  Comment 3230 block B104 null  <||@
  Comment 3230 1254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3230 1256 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3232 1258 JUMP ~[] destination: B104 -> B118  <||@
  Comment 3232 block B118 null  <||@
  Comment 3232 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3232 1360 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 3232 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 3240 1362 BRANCH trueDestinationProbability: 0.5994645247657295 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124  <||@
  Comment 3246 block B119 null  <||@
  Comment 3246 1364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3246 1366 rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 3250 1368 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:46]  <||@
  Comment 3250 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rbx|DWORD  |   |              |                   |   |    <||@
  Comment 3250 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3257 1370 CMP (x: rax|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD  <||@
  Comment 3261 1372 BRANCH trueDestinationProbability: 0.8791164658634538 condition: = trueDestination: B119 -> B120 falseDestination: B119 -> B123  <||@
  Comment 3267 block B120 null  <||@
  Comment 3267 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3267 1376 CMP stack:36|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 3267 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 3275 1378 BRANCH trueDestinationProbability: 0.5443886097152428 condition: = trueDestination: B120 -> B136 falseDestination: B120 -> B138  <||@
  Comment 3286 block B226 null  <||@
  Comment 3286 2338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3286 2340 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3291 2342 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3300 12  <||@
  Comment 3310 block B86 null  <||@
  Comment 3310 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3310 1090 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3315 1092 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3324 12  <||@
  Comment 3334 block B149 null  <||@
  Comment 3334 1612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3334 1614 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3339 1616 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3348 12  <||@
  Comment 3358 block B124 null  <||@
  Comment 3358 1398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3358 1402 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 3358 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 3365 1404 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B124 -> B125 falseDestination: B124 -> B151  <||@
  Comment 3371 block B125 null  <||@
  Comment 3371 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3371 1408 rax|DWORD[.] = MOV [r11|QWORD[.] + 24] size: DWORD  <||@
  Comment 3375 1410 rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:46]  <||@
  Comment 3375 [rax:0, r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rbx|DWORD  |   |              |                   |   |    <||@
  Comment 3375 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3382 1412 r13|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 3386 1414 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 3390 1416 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 3390 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 3396 1418 BRANCH trueDestinationProbability: 0.9202979333724494 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B128  <||@
  Comment 3402 block B126 null  <||@
  Comment 3402 1420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3402 1422 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3405 1424 JUMP ~[] destination: B126 -> B127  <||@
  Comment 3410 block B141 null  <||@
  Comment 3410 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3410 1550 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 3410 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 3417 1552 BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143  <||@
  Comment 3423 block B142 null  <||@
  Comment 3423 1554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3423 1556 rax|DWORD = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3431 1558 JUMP ~[] destination: B142 -> B145  <||@
  Comment 3436 block B90 null  <||@
  Comment 3436 1118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3436 1120 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3438 1124 JUMP ~[] destination: B90 -> B129  <||@
  Comment 3438 block B129 null  <||@
  Comment 3438 1444 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3438 1440 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3443 1446 r8|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 3447 1448 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 3447 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 3454 1450 BRANCH trueDestinationProbability: 0.984458713345058 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131  <||@
  Comment 3460 block B130 null  <||@
  Comment 3460 1452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3460 1454 rax|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 3463 1456 JUMP ~[] destination: B130 -> B133  <||@
  Comment 3468 block B202 null  <||@
  Comment 3468 2146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3468 2148 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3473 2150 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3482 12  <||@
  Comment 3492 block B116 null  <||@
  Comment 3492 1348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3492 1350 rbx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3494 1352 JUMP ~[] destination: B116 -> B118  <||@
  Comment 3499 block B123 null  <||@
  Comment 3499 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3499 1394 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3504 1396 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3513 12  <||@
  Comment 3523 block B36 null  <||@
  Comment 3523 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3523 472 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3528 474 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3528 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3538 476 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 3543 478 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3548 480 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3551 482 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3554 484 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20]  <||@
  Comment 3554 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3559 [stack:16, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |-                  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:64|QWORD[.]  |                   |   |   |   |    <||@
  Comment 3560 486 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3563 488 r9|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 3566 490 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 3569 492 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3574 494 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 3579 496 JUMP ~[] destination: B36 -> B38  <||@
  Comment 3584 block B45 null  <||@
  Comment 3584 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3584 628 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3587 630 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3587 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3597 632 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 3602 634 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3607 636 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20]  <||@
  Comment 3607 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3612 [r13:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r13|QWORD[.]  |                   |   |   |   |    <||@
  Comment 3613 638 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3616 640 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 3619 642 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 3619 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 3629 644 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3634 646 JUMP ~[] destination: B45 -> B47  <||@
  Comment 3639 block B128 null  <||@
  Comment 3639 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3639 1438 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3642 1442 JUMP ~[] destination: B128 -> B129  <||@
  Comment 3647 block B23 null  <||@
  Comment 3647 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3647 284 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3652 286 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3655 288 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3658 290 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3661 292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 3667 block B25 null  <||@
  Comment 3667 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3667 322 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 3671 324 AMD64PREFETCH ~[rcx|QWORD + 224] instr: 0  <||@
  Comment 3678 326 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 3681 328 JUMP ~[] destination: B25 -> B26  <||@
  Comment 3681 block B26 null  <||@
  Comment 3681 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3681 332 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3684 334 rcx|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 3691 336 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 3694 338 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 3694 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 3701 340 MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD  <||@
  Comment 3705 342 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 3708 344 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3711 346 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3714 348 JUMP ~[] destination: B26 -> B52  <||@
  Comment 3714 block B52 null  <||@
  Comment 3714 762 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3714 764 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 3714 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 3721 766 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B243  <||@
  Comment 3727 block B53 null  <||@
  Comment 3727 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3727 770 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3732 772 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 3736 774 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:20]  <||@
  Comment 3736 [rdx:0, r10:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |-             |r10|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |              |   |   |   |    <||@
  Comment 3736 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3740 776 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3744 778 rcx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 3748 780 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 3752 782 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 3758 block B55 null  <||@
  Comment 3758 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3758 806 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 3762 808 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 3769 810 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3769 812 JUMP ~[] destination: B55 -> B56  <||@
  Comment 3769 block B56 null  <||@
  Comment 3769 814 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3769 816 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3772 818 r11|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 3779 820 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 3782 822 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 3782 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 3789 824 MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD  <||@
  Comment 3793 826 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 3797 828 MOV (x: [rsi|QWORD[*] + 20], y: r11|DWORD) size: DWORD  <||@
  Comment 3801 830 r14|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 3808 832 MOV (x: [rsi|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 3812 834 MOV (x: [rsi|QWORD[*] + 28], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 3816 836 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3819 838 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3822 840 JUMP ~[] destination: B56 -> B57  <||@
  Comment 3827 block B48 null  <||@
  Comment 3827 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3827 688 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3832 690 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3835 692 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3838 694 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3842 696 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 3846 698 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 3850 700 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 3856 block B50 null  <||@
  Comment 3856 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3856 732 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 3860 734 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 3867 736 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3867 738 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 3867 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 3877 740 JUMP ~[] destination: B50 -> B51  <||@
  Comment 3877 block B51 null  <||@
  Comment 3877 742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3877 744 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3880 746 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 3887 748 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 3890 750 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}  <||@
  Comment 3890 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>;compressed}}  <||@
  Comment 3897 752 MOV (x: [rsi|QWORD[*] + 12], y: r14|QWORD) size: QWORD  <||@
  Comment 3901 754 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 3904 756 MOV (x: [rsi|QWORD[*] + 24], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3907 758 MOV (x: [rsi|QWORD[*] + 28], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3910 760 JUMP ~[] destination: B51 -> B52  <||@
  Comment 3915 block B15 null  <||@
  Comment 3915 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3915 132 stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 3919 134 stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3923 136 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3928 138 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3931 140 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3934 142 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3934 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3944 144 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 3949 146 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3954 148 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3954 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3959 [stack:32, stack:44, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 3960 150 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3963 152 rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 3967 154 rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 3971 156 r9|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 3974 158 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 3977 160 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3982 162 JUMP ~[] destination: B15 -> B17  <||@
  Comment 3987 block B20 null  <||@
  Comment 3987 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3987 216 stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 3991 218 stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3995 220 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4000 222 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 4003 224 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4006 226 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4006 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4016 228 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4021 230 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4026 232 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4026 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4031 [stack:32, stack:44, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4032 234 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4035 236 rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 4039 238 rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4043 240 r9|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 4046 242 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 4049 244 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 4049 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 4059 246 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4064 248 JUMP ~[] destination: B20 -> B22  <||@
  Comment 4069 block B30 null  <||@
  Comment 4069 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4069 378 stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 4073 380 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4077 382 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4082 384 r13|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 4085 386 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4088 388 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4088 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4098 390 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4103 392 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4108 394 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4108 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4113 [stack:32, stack:40, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4114 396 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4117 398 rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 4121 400 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 4125 402 r9|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 4128 404 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 4131 406 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 4131 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 4141 408 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4146 410 JUMP ~[] destination: B30 -> B32  <||@
  Comment 4151 block B41 null  <||@
  Comment 4151 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4151 554 stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 4155 556 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4159 558 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4164 560 r14|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4167 562 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4167 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4177 564 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4182 566 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4187 568 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4187 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4192 [stack:32, stack:40, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4193 570 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4196 572 rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 4200 574 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 4204 576 r8|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 4207 578 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 4207 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 4217 580 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4222 582 JUMP ~[] destination: B41 -> B43  <||@
  Comment 4227 block B143 null  <||@
  Comment 4227 1560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4227 1562 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 4227 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 4234 1564 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B146  <||@
  Comment 4240 block B144 null  <||@
  Comment 4240 1566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4240 1568 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4245 1570 rsi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4253 1572 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:99]  <||@
  Comment 4253 [rsi:0, r10:0]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3             |4  |5 
     locals:  |-           |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |              |   |    <||@
  Comment 4253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4257 1574 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 4261 1576 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 103]  <||@
  Comment 4261 6  <||@
  Comment 4271 {HotSpotMethod<List.size()>}  <||@
  Comment 4276 []at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:40|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:526) [bci: 103, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 4277 1578 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4282 1580 JUMP ~[] destination: B144 -> B145  <||@
  Comment 4287 block B131 null  <||@
  Comment 4287 1458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4287 1460 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}  <||@
  Comment 4287 {meta{HotSpotType<Lorg/graalvm/compiler/core/common/util/ReversedList;, resolved>;compressed}}  <||@
  Comment 4294 1462 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B150  <||@
  Comment 4300 block B132 null  <||@
  Comment 4300 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4300 1466 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4304 1468 r8|DWORD[.] = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 4308 1470 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:93]  <||@
  Comment 4308 [r8:0, r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93, duringCall: false, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 4308 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4312 1472 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@244c41d5 encoding: base: 0 shift: 3  <||@
  Comment 4316 1474 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4319 1476 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List.size()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 8, 94]  <||@
  Comment 4319 6  <||@
  Comment 4335 {HotSpotMethod<List.size()>}  <||@
  Comment 4340 [stack:32]at org.graalvm.compiler.core.common.util.ReversedList.size(ReversedList.java:49) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 8, duringCall: true, rethrow: false]
              |0              
     locals:  |-              
     stack:   |stack:40|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:526) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3                  |4  |5 
     locals:  |-  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 4341 1478 rsi|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4345 1480 JUMP ~[] destination: B132 -> B133  <||@
  Comment 4350 block B54 null  <||@
  Comment 4350 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4350 786 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4355 788 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4355 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4365 790 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4370 792 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4375 794 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20]  <||@
  Comment 4375 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4380 [stack:32, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |-                  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |                   |   |   |   |    <||@
  Comment 4381 796 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4384 798 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4389 800 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4394 802 JUMP ~[] destination: B54 -> B56  <||@
  Comment 4399 block B24 null  <||@
  Comment 4399 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4399 296 stack:36|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 4403 298 stack:40|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4407 300 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4412 302 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4412 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4422 304 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4427 306 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4432 308 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4432 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4437 [stack:32, stack:44, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4438 310 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4441 312 rdi|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 4445 314 rbx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 4449 316 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4454 318 JUMP ~[] destination: B24 -> B26  <||@
  Comment 4459 block B49 null  <||@
  Comment 4459 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4459 704 stack:40|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 4463 706 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4467 708 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4472 710 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4472 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4482 712 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 4487 714 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4492 716 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4492 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4497 [stack:32, stack:40, stack:48]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4498 718 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4501 720 rdi|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 4505 722 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 4509 724 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}  <||@
  Comment 4509 {meta{HotSpotType<Ljava/util/ArrayList$ListItr;, resolved>}}  <||@
  Comment 4519 726 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4524 728 JUMP ~[] destination: B49 -> B51  <||@
  Comment 4529 block B232 null  <||@
  Comment 4529 2390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4529 2392 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4532 2394 r10|DWORD = MOVE input: int[-503091|0xfffffffffff852cd]  <||@
  Comment 4538 2396 JUMP ~[] destination: B232 -> B233  <||@
  Comment 4538 block B233 null  <||@
  Comment 4538 2398 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4538 2400 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4545 2402 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4552 2404 DEOPT info [bci:55]  <||@
  Comment 4552 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4557 [rsi:0, r8:0, r11:0]at java.util.AbstractList.equals(AbstractList.java:521) [bci: 55, duringCall: false, rethrow: false]
              |0             |1  |2             |3            |4  |5 
     locals:  |-             |-  |r11|QWORD[.]  |r8|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |   |              |             |   |    <||@
  Comment 4558 block B186 null  <||@
  Comment 4558 1970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4558 1972 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4561 1974 r10|DWORD = MOVE input: int[-494619|0xfffffffffff873e5]  <||@
  Comment 4567 1976 JUMP ~[] destination: B186 -> B233  <||@
  Comment 4569 block B235 null  <||@
  Comment 4569 2412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4569 2414 r10|DWORD = MOVE input: int[-478995|0xfffffffffff8b0ed]  <||@
  Comment 4575 2416 JUMP ~[] destination: B235 -> B239  <||@
  Comment 4575 block B239 null  <||@
  Comment 4575 2436 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4575 2438 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4582 2440 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4589 2442 DEOPT info [bci:46]  <||@
  Comment 4589 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4594 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |                   |   |    <||@
  Comment 4595 block B173 null  <||@
  Comment 4595 1854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4595 1856 r10|DWORD = MOVE input: int[-473867|0xfffffffffff8c4f5]  <||@
  Comment 4601 1858 JUMP ~[] destination: B173 -> B239  <||@
  Comment 4603 block B169 null  <||@
  Comment 4603 1826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4603 1828 MOV [r15|QWORD + 668] y: -457491 size: DWORD  <||@
  Comment 4614 1830 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4621 1832 DEOPT info [bci:37]  <||@
  Comment 4621 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4626 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 4627 block B12 null  <||@
  Comment 4627 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4627 106 r10|DWORD = MOVE input: int[-513555|0xfffffffffff829ed]  <||@
  Comment 4633 108 JUMP ~[] destination: B12 -> B245  <||@
  Comment 4633 block B245 null  <||@
  Comment 4633 2478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4633 2480 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4640 2482 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4647 2484 DEOPT info [bci:0]  <||@
  Comment 4647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4652 [r13:0, r14:0]at java.util.AbstractList.equals(AbstractList.java:513) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4653 block B110 null  <||@
  Comment 4653 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4653 1300 MOV [r15|QWORD + 668] y: -435987 size: DWORD  <||@
  Comment 4664 1302 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4671 1304 DEOPT info [bci:11, 41]  <||@
  Comment 4671 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4676 [r11:0, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdi|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 4677 block B190 null  <||@
  Comment 4677 2006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4677 2008 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4680 2010 r10|DWORD = MOVE input: int[-499739|0xfffffffffff85fe5]  <||@
  Comment 4686 2012 JUMP ~[] destination: B190 -> B233  <||@
  Comment 4691 block B229 null  <||@
  Comment 4691 2366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4691 2368 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4694 2370 r10|DWORD = MOVE input: int[-507155|0xfffffffffff842ed]  <||@
  Comment 4700 2372 JUMP ~[] destination: B229 -> B233  <||@
  Comment 4705 block B230 null  <||@
  Comment 4705 2374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4705 2376 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4708 2378 r10|DWORD = MOVE input: int[-505875|0xfffffffffff847ed]  <||@
  Comment 4714 2380 JUMP ~[] destination: B230 -> B233  <||@
  Comment 4719 block B234 null  <||@
  Comment 4719 2406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4719 2408 r10|DWORD = MOVE input: int[-480539|0xfffffffffff8aae5]  <||@
  Comment 4725 2410 JUMP ~[] destination: B234 -> B239  <||@
  Comment 4730 block B231 null  <||@
  Comment 4730 2382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4730 2384 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4733 2386 r10|DWORD = MOVE input: int[-511003|0xfffffffffff833e5]  <||@
  Comment 4739 2388 JUMP ~[] destination: B231 -> B233  <||@
  Comment 4744 block B241 null  <||@
  Comment 4744 2450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4744 2452 r10|DWORD = MOVE input: int[-417075|0xfffffffffff9a2cd]  <||@
  Comment 4750 2454 JUMP ~[] destination: B241 -> B242  <||@
  Comment 4750 block B242 null  <||@
  Comment 4750 2456 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4750 2458 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4757 2460 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4764 2462 DEOPT info [bci:31]  <||@
  Comment 4764 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4769 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 4770 block B91 null  <||@
  Comment 4770 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4770 1128 MOV [r15|QWORD + 668] y: -426803 size: DWORD  <||@
  Comment 4781 1130 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4788 1132 DEOPT info [bci:37]  <||@
  Comment 4788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4793 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 4794 block B237 null  <||@
  Comment 4794 2424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4794 2426 r10|DWORD = MOVE input: int[-475411|0xfffffffffff8beed]  <||@
  Comment 4800 2428 JUMP ~[] destination: B237 -> B239  <||@
  Comment 4805 block B151 null  <||@
  Comment 4805 1626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4805 1628 MOV [r15|QWORD + 668] y: -439603 size: DWORD  <||@
  Comment 4816 1630 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4823 1632 DEOPT info [bci:46]  <||@
  Comment 4823 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4828 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rbx|DWORD  |   |              |                   |   |    <||@
  Comment 4829 block B244 null  <||@
  Comment 4829 2472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4829 2474 r10|DWORD = MOVE input: int[-514355|0xfffffffffff826cd]  <||@
  Comment 4835 2476 JUMP ~[] destination: B244 -> B245  <||@
  Comment 4840 block B214 null  <||@
  Comment 4840 2234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4840 2236 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4844 2238 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4849 2240 MOV [r15|QWORD + 668] y: -486411 size: DWORD  <||@
  Comment 4860 2242 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4867 2244 DEOPT info [bci:63]  <||@
  Comment 4867 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4872 [rdx:0, r11:0, stack:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:522) [bci: 63, duringCall: false, rethrow: false]
              |0             |1  |2             |3                  |4                  |5 
     locals:  |-             |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |stack:80|QWORD[.]  |- 
     stack:   |rdx|QWORD[.]  |   |              |                   |                   |    <||@
  Comment 4873 block B243 null  <||@
  Comment 4873 2464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4873 2466 MOV [r15|QWORD + 668] y: -516915 size: DWORD  <||@
  Comment 4884 2468 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4891 2470 DEOPT info [bci:20]  <||@
  Comment 4891 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4896 [rdx:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 4897 block B76 null  <||@
  Comment 4897 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4897 1016 r10|DWORD = MOVE input: int[-415027|0xfffffffffff9aacd]  <||@
  Comment 4903 1018 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4908 1020 JUMP ~[] destination: B76 -> B242  <||@
  Comment 4913 block B236 null  <||@
  Comment 4913 2418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4913 2420 r10|DWORD = MOVE input: int[-476691|0xfffffffffff8b9ed]  <||@
  Comment 4919 2422 JUMP ~[] destination: B236 -> B239  <||@
  Comment 4924 block B159 null  <||@
  Comment 4924 1702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4924 1704 MOV [r15|QWORD + 668] y: -460827 size: DWORD  <||@
  Comment 4935 1706 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4942 1708 DEOPT info [bci:46]  <||@
  Comment 4942 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4947 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |                   |   |    <||@
  Comment 4948 block B34 null  <||@
  Comment 4948 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4948 454 MOV [r15|QWORD + 668] y: -515603 size: DWORD  <||@
  Comment 4959 456 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4966 458 DEOPT info [bci:20]  <||@
  Comment 4966 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4971 [r13:0, stack:48]at java.util.AbstractList.equals(AbstractList.java:518) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r13|QWORD[.]  |                   |   |   |   |    <||@
  Comment 4972 block B164 null  <||@
  Comment 4972 1746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4972 1748 r10|DWORD = MOVE input: int[-466715|0xfffffffffff8e0e5]  <||@
  Comment 4978 1750 JUMP ~[] destination: B164 -> B168  <||@
  Comment 4978 block B168 null  <||@
  Comment 4978 1818 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4978 1820 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4985 1822 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4992 1824 DEOPT info [bci:46]  <||@
  Comment 4992 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4997 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 46, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdx|DWORD  |   |              |                   |   |    <||@
  Comment 4998 block B112 null  <||@
  Comment 4998 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4998 1312 r10|DWORD = MOVE input: int[-431155|0xfffffffffff96bcd]  <||@
  Comment 5004 1316 JUMP ~[] destination: B112 -> B113  <||@
  Comment 5004 block B113 null  <||@
  Comment 5004 1318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5004 1314 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 5009 1320 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5016 1322 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5023 1324 DEOPT info [bci:37]  <||@
  Comment 5023 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5028 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:520) [bci: 37, duringCall: false, rethrow: false]
              |0          |1  |2             |3                  |4  |5 
     locals:  |-          |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
     stack:   |rdi|DWORD  |   |              |                   |   |    <||@
  Comment 5029 block B101 null  <||@
  Comment 5029 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5029 1214 r10|DWORD = MOVE input: int[-432395|0xfffffffffff966f5]  <||@
  Comment 5035 1218 JUMP ~[] destination: B101 -> B113  <||@
  Comment 5037 block B1 null  <||@
  Comment 5037 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5037 18 r10|DWORD = MOVE input: int[-405267|0xfffffffffff9d0ed]  <||@
  Comment 5043 20 JUMP ~[] destination: B1 -> B245  <||@
  Comment 5048 block B192 null  <||@
  Comment 5048 2054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5048 2056 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5051 2058 r10|DWORD = MOVE input: int[-491283|0xfffffffffff880ed]  <||@
  Comment 5057 2060 JUMP ~[] destination: B192 -> B233  <||@
  Comment 5062 block B228 null  <||@
  Comment 5062 2358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5062 2360 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5065 2362 r10|DWORD = MOVE input: int[-509459|0xfffffffffff839ed]  <||@
  Comment 5071 2364 JUMP ~[] destination: B228 -> B233  <||@
  Comment 5076 block B150 null  <||@
  Comment 5076 1618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5076 1620 MOV [r15|QWORD + 668] y: -443955 size: DWORD  <||@
  Comment 5087 1622 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5094 1624 DEOPT info [bci:93]  <||@
  Comment 5094 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5099 [r11:0, stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 93, duringCall: false, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 5100 block B177 null  <||@
  Comment 5100 1884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5100 1886 r10|DWORD = MOVE input: int[-477963|0xfffffffffff8b4f5]  <||@
  Comment 5106 1888 JUMP ~[] destination: B177 -> B239  <||@
  Comment 5111 block B240 null  <||@
  Comment 5111 2444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5111 2446 r10|DWORD = MOVE input: int[-421427|0xfffffffffff991cd]  <||@
  Comment 5117 2448 JUMP ~[] destination: B240 -> B242  <||@
  Comment 5122 block B147 null  <||@
  Comment 5122 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5122 1600 r10|DWORD = MOVE input: int[-448563|0xfffffffffff927cd]  <||@
  Comment 5128 1602 JUMP ~[] destination: B147 -> B148  <||@
  Comment 5128 block B148 null  <||@
  Comment 5128 1604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5128 1606 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5135 1608 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5142 1610 DEOPT info [bci:99]  <||@
  Comment 5142 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5147 [stack:32]at java.util.AbstractList.equals(AbstractList.java:526) [bci: 99, duringCall: false, rethrow: false]
              |0           |1  |2  |3                  |4  |5 
     locals:  |-           |-  |-  |stack:48|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |   |   |                   |   |    <||@
  Comment 5148 block B75 null  <||@
  Comment 5148 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5148 1008 MOV [r15|QWORD + 668] y: -409395 size: DWORD  <||@
  Comment 5159 1010 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5166 1012 DEOPT info [bci:11, 32]  <||@
  Comment 5166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5171 [r11:0, stack:32]at java.util.AbstractList$Itr.hasNext(AbstractList.java:351) [bci: 11, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |-          |          
     stack:   |rdx|DWORD  |rbx|DWORD 
  at java.util.AbstractList.equals(AbstractList.java:520) [bci: 32, duringCall: true, rethrow: false]
              |0  |1  |2             |3                  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 5172 block B146 null  <||@
  Comment 5172 1592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5172 1594 r10|DWORD = MOVE input: int[-452915|0xfffffffffff916cd]  <||@
  Comment 5178 1596 JUMP ~[] destination: B146 -> B148  <||@
  Comment 5180 block B167 null  <||@
  Comment 5180 1810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5180 1812 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 5185 1814 r10|DWORD = MOVE input: int[-469811|0xfffffffffff8d4cd]  <||@
  Comment 5191 1816 JUMP ~[] destination: B167 -> B168  <||@
  Comment 5196 block B238 null  <||@
  Comment 5196 2430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5196 2432 r10|DWORD = MOVE input: int[-472627|0xfffffffffff8c9cd]  <||@
  Comment 5202 2434 JUMP ~[] destination: B238 -> B239  <||@
  Comment 5207 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 5207 4  <||@
  Comment 5213 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 5213 5  <||@
  HexCodeFile>>> <|@
end_nmethod
