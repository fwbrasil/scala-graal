begin_compilation
  name " HotSpotCompilation-5583[org.graalvm.collections.EconomicMapImpl.put(Object, Object)]"
  method "HotSpotCompilation-5583[org.graalvm.collections.EconomicMapImpl.put(Object, Object)]"
  date 1527005149614
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1560 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1560  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?126 ?504 v758 v849 v1513 ?647 v841 v1508 ?1164 ?291 v863 v823 v1517 v816 v807 ?57 ?58 v1509 v1510 ?277 ?466 ?65 ?379 v856 j1366 v1563 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 v108 v109 v634 v624 v481 v585 v586 a1208 v1178 a1195 ?4 v1186 a1195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?504 a834 ?126 ?1164 ?466 ?647 ?57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 407
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a5 a3 - - - 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a5 a3 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v752 v1560 ?126 ?504 ?1164 v856 ?647 a773 ?57 ?58 v849 ?65 ?466 v816 v823 ?291 v758 ?277 ?379 v347 v748 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a2 
=== Succesors ===
next: a1476 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a2 #next: a1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1476 a1492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
=== Succesors ===
next: v117 
=== Usages ===
v951 
=== Predecessor ===
v1560 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1508 #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
value: a1476 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1476  <|@  <|@
f <@~|@floating>@ <|@
tid a834 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v835 v932 v1309 v1420 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1406 j1475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1390 a1275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1452 j1439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 v1303 v1451 v1414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1253 v1314 v1321 v1370 v1425 v1432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1248 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1249 j1311 j1318 j1367 j1422 j1429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1528 v1534 v1535 v1541 v1549 v1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1436 v1360 v1450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1275 a1336 a1390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 ?647 v510 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a954 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v955 v965 v1471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1481 a1498 a1495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 73]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 i55 i63 i628 i85 i230 i197 i1172 i404 i621 i298 i631 i403 i478 i638 a1275 a1336 a1390 i1464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - 
=== Succesors ===
=== Usages ===
?302 ?1163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:423) [bci: 85]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 i478 i276 v292 i621 i631 ?291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1478 i1482 i1484 v802 v836 i1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1477 a1483 a1501 a1485 v858 a1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6524607172388934
=== Inputs ===
condition: v951 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
a1476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v951 #trueSuccessor: v115 #falseSuccessor: v116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604052063231338350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
tid ?302 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 240
stackSize: 0
=== Inputs ===
outerFrameState: ?126 
values: - - 
=== Succesors ===
=== Usages ===
?277 ?379 ?291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?126 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608650423607859211
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i276 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v275 
values: i48 i298 i298 i298 
=== Succesors ===
=== Usages ===
?277 v279 i507 ?291 v12 i298 ?379 i404 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v275 values: i48 i298 i298 i298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v274 
=== Succesors ===
next: a1477 
=== Usages ===
i276 v281 v294 v299 v462 v555 v1039 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v274 #next: a1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: i1478 
=== Usages ===
a757 v1511 
=== Predecessor ===
v275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: i1478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: v283 
=== Usages ===
v279 i649 
=== Predecessor ===
a1477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i276 
y: i1478 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i276 y: i1478  <|@  <|@
f <@~|@floating>@ <|@
tid a757 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1477 
=== Succesors ===
=== Usages ===
a650 v1512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1477  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
i1478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v280 #falseSuccessor: v281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1479 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1479  <|@  <|@
tid ?277 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?302 
values: a1 a2 i276 - 
=== Succesors ===
=== Usages ===
v1024 v1025 v1186 i1479 v1561 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?302 values: a1 a2 i276 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1477 
=== Succesors ===
=== Usages ===
i1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?277 
guard: - 
address: v1511 
=== Succesors ===
next: v1040 
=== Usages ===
v731 
=== Predecessor ===
v280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?277 guard: - address: v1511 #next: v1040  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i276 
y: i36 
=== Succesors ===
=== Usages ===
i1171 v1512 v731 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i276 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i1479 
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i404 y: i1479  <|@  <|@
f <@*|@fixed>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v731 
=== Succesors ===
trueSuccessor: v1036 
falseSuccessor: v1039 
=== Usages ===
=== Predecessor ===
i1479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v731 #trueSuccessor: v1036 #falseSuccessor: v1039  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1480 
=== Usages ===
a1480 
=== Predecessor ===
v1040 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a757 
index: i404 
=== Succesors ===
=== Usages ===
a1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a757 index: i404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1036 
address: v1512 
=== Succesors ===
next: v1561 
=== Usages ===
a741 v1561 
=== Predecessor ===
v1036 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1036 address: v1512 #next: v1561  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
object: a1480 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
a1480 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?277 object: a1480 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid a741 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
v748 v752 v347 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1480  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a741 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a741  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v348 #falseSuccessor: v349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589699631723408879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604123076867509053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1481 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
=== Succesors ===
next: v356 
=== Usages ===
a746 v749 v955 v957 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1513 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: i32
=== Inputs ===
x: i276 
y: i36 
=== Succesors ===
=== Usages ===
i276 i276 i276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i276 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v749 
=== Succesors ===
trueSuccessor: v354 
falseSuccessor: v355 
=== Usages ===
=== Predecessor ===
a1481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v749 #trueSuccessor: v354 #falseSuccessor: v355  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603960533368020962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?277 #next: v462  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v275 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580858613392042834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid a956 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1481 
y: a956 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1481 y: a956  <|@  <|@
tid ?379 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?302 
values: a1 a2 i276 - 
=== Succesors ===
=== Usages ===
?1162 ?1161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?302 values: a1 a2 i276 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v957 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v957 #trueSuccessor: v365 #falseSuccessor: v359  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578554611009701057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i369 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i369  <|@  <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@35d301a1
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a741 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a741  <|@  <|@
tid ?1161 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?379 
values: - - - 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?379 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v748 
stateDuring: ?1161 
=== Succesors ===
next: v383 
=== Usages ===
i382 
=== Predecessor ===
v365 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v748 stateDuring: ?1161 #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
i369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572653611630863302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1481 
y: a954 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1481 y: a954  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v955 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v955 #trueSuccessor: v360 #falseSuccessor: v366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533361476810115399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?277 #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v275 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572639463483787585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i374 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i374  <|@  <|@
f <@~|@floating>@ <|@
tid a746 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@62e17eab
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a746 a2 a741 
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a746 a2 a741  <|@  <|@
tid ?1162 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?379 
values: - - - 
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?379 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v752 
stateDuring: ?1162 
=== Succesors ===
next: v384 
=== Usages ===
i382 
=== Predecessor ===
v366 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v752 stateDuring: ?1162 #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
i374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580855076355273905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i382 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v380 
values: i369 i374 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i369 i374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v383 v384 
=== Succesors ===
next: v297 
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v383 v384 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i382 
y: i48 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i382 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v293 #falseSuccessor: v450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580451329060005732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
tid ?291 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?302 
values: a1 a2 i276 - i48 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?302 values: a1 a2 i276 - i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?291 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?291 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v275 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564102779623232727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589800568547225922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v528 v530 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v528 v530 #next: v294  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589800568547225922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v275 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v275 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i276 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i276 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
stamp: void
trueSuccessorProbability: 0.6968056199593498
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587318614456906479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1482 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: a1483 
=== Usages ===
i649 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: a1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v645 
=== Usages ===
a755 
=== Predecessor ===
i1482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid a755 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1483 
=== Succesors ===
=== Usages ===
a650 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1483  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
a1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B66" 
    xhandlers
    flags 
    probability 4581886226102443819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v275 
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v275 #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid i1188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -187419
stableDimension: 0
stamp: i32 [-187419] ⇊00000000fffd23e5 ⇈00000000fffd23e5
stampKind: i32
value: int[-187419|0xfffffffffffd23e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
actionAndReason: i1188 
speculation: a5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?277 actionAndReason: i1188 speculation: a5  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603541169710937883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v275 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v275 #next: v648  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B65" 
    xhandlers
    flags 
    probability 4599932331055264036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i119 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i119  <|@  <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3e24a96f
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a2 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2  <|@  <|@
tid ?1163 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?126 
values: - - 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?126 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v758 
stateDuring: ?1163 
=== Succesors ===
next: v513 
=== Usages ===
v510 i507 i403 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v758 stateDuring: ?1163 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i11 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i119 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
stamp: void
trueSuccessorProbability: 0.6968056199593498
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
i119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v511 #falseSuccessor: v512  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597893017701441879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1484 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: a1485 
=== Usages ===
i649 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: a1485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v664 
=== Usages ===
a761 
=== Predecessor ===
i1484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid a761 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1485 
=== Succesors ===
=== Usages ===
a650 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1485  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
a1485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i649 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v646 
values: i1482 i1478 i1484 
=== Succesors ===
=== Usages ===
i469 i37 i469 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v646 values: i1482 i1478 i1484  <|@  <|@
f <@~|@floating>@ <|@
tid a650 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v646 
values: a755 a757 a761 
=== Succesors ===
=== Usages ===
v25 v1521 a468 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v646 values: a755 a757 a761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v645 v648 v664 
=== Succesors ===
next: v28 
=== Usages ===
i649 a650 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v645 v648 v664 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
stamp: void
=== Inputs ===
value: a650 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a650  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 55]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1459 i1470 v1356 a1336 i1458 i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
stamp: void
trueSuccessorProbability: 0.15757821508043224
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v26 #falseSuccessor: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1325 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1325 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1340 
=== Usages ===
v1536 v1537 
=== Predecessor ===
v26 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1340  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1325 
index: - 
=== Succesors ===
=== Usages ===
j1340 v1342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1536 
=== Succesors ===
next: j1341 
=== Usages ===
j1445 j1346 v1554 
=== Predecessor ===
j1325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1536 #next: j1341  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1325 
index: - 
=== Succesors ===
=== Usages ===
j1341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1537 
=== Succesors ===
next: v1333 
=== Usages ===
v1330 
=== Predecessor ===
j1340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1537 #next: v1333  <|@  <|@
f <@~|@floating>@ <|@
tid j1444 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1445 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1340 
y: j1444 
=== Succesors ===
=== Usages ===
v1330 v1342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1340 y: j1444  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1341 
y: j1445 
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1341 y: j1445  <|@  <|@
f <@*|@fixed>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1330 
=== Succesors ===
trueSuccessor: v1331 
falseSuccessor: v1332 
=== Usages ===
=== Predecessor ===
j1341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1330 #trueSuccessor: v1331 #falseSuccessor: v1332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564092838890823290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1336 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1336  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - i11 
=== Succesors ===
=== Usages ===
a1336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1336 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?647 
arguments: v1261 i29 i36 
=== Succesors ===
next: j1337 
=== Usages ===
j1337 
=== Predecessor ===
v1331 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?647 arguments: v1261 i29 i36 #next: j1337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1337 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1336 
=== Succesors ===
next: v1347 
=== Usages ===
j1346 
=== Predecessor ===
a1336 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1336 #next: v1347  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
j1337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594156704534256142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1536 
value: j1445 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1339 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1536 value: j1445 stateAfter: - lastLocationAccess: - #next: v1339  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1340 
index: - 
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1340 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1554 
=== Succesors ===
next: v1345 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1554 #next: v1345  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1346 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1344 
values: j1340 j1337 
=== Succesors ===
=== Usages ===
v1540 v1539 a1120 v1538 v1555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1344 values: j1340 j1337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1345 v1347 
=== Succesors ===
next: a1120 
=== Usages ===
j1346 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1345 v1347 #next: a1120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1120 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1346 
=== Succesors ===
next: v1356 
=== Usages ===
a1126 
=== Predecessor ===
v1344 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1346 #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1346 
index: - 
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1538 
value: i29 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
a1120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1538 value: i29 stateAfter: - lastLocationAccess: - #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1346 
index: - 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1539 
value: j1352 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1539 value: j1352 stateAfter: - lastLocationAccess: - #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1346 
index: - 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
value: v1435 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1540 value: v1435 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1346 
index: - 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1555 
value: v1363 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1126 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1555 value: v1363 stateAfter: - lastLocationAccess: - #next: a1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1126 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1120 
=== Succesors ===
next: v1127 
=== Usages ===
a857 a468 
=== Predecessor ===
v1365 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1120 #next: v1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
a1126 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid a857 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
op: Compress
stamp: n -
=== Inputs ===
value: a1126 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
value: a857 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1366 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1510 value: a857 stateAfter: - lastLocationAccess: - #next: j1366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1370 
=== Usages ===
j1367 
=== Predecessor ===
v858 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1370  <|@  <|@
f <@~|@floating>@ <|@
tid j1367 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1366 
y: i1248 
=== Succesors ===
=== Usages ===
v1541 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1366 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1367 
index: j1252 
=== Succesors ===
=== Usages ===
v1370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1367 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
j1366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1541 value: i1254 stateAfter: - lastLocationAccess: - #next: v522  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v1370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604910012404069677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1486 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a650 
index: - 
=== Succesors ===
=== Usages ===
i1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a650 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 70]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
=== Succesors ===
next: v44 
=== Usages ===
v38 
=== Predecessor ===
v27 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1521 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 74]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i649 
y: i36 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i649 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i1486 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i37 y: i1486  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
stamp: void
trueSuccessorProbability: 0.06568048735113552
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
i1486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v39 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4587238332670586250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4c99aa97
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.grow()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1164 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 421
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
bci: 79
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.grow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v863 
stateDuring: ?1164 
=== Succesors ===
next: i1487 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v863 stateDuring: ?1164 #next: i1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:425) [bci: 111]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: a1488 
=== Usages ===
i469 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: a1488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v464 
=== Usages ===
a866 
=== Predecessor ===
i1487 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid a866 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1488 
=== Succesors ===
=== Usages ===
a468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
a1488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604467667926895188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" "B28" 
    successors "B33" "B63" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a468 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v465 
values: a866 a650 a1126 
=== Succesors ===
=== Usages ===
v1520 v1514 v1527 v1515 v1519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v465 values: a866 a650 a1126  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v465 
values: i1487 i649 i649 
=== Succesors ===
=== Usages ===
i55 ?57 ?58 v856 v849 ?65 ?466 v816 v823 i63 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v465 values: i1487 i649 i649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v464 v467 v522 
=== Succesors ===
next: v1489 
=== Usages ===
a468 i469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v464 v467 v522 #next: v1489  <|@  <|@
tid ?466 <|@
d <@d|@=== Debug Properties ===
bci: 116
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - i469 - 
=== Succesors ===
=== Usages ===
v1196 v1489 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - i469 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a468 
index: - 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?466 
guard: - 
address: v1527 
=== Succesors ===
next: v1053 
=== Usages ===
v1436 
=== Predecessor ===
v465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?466 guard: - address: v1527 #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1489 
y: v1435 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1489 y: v1435  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v1050 
falseSuccessor: v1052 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v1050 #falseSuccessor: v1052  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B62" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1490 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a468 
index: - 
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1519 
=== Succesors ===
next: v1057 
=== Usages ===
v766 v635 v575 v827 v1460 v1461 
=== Predecessor ===
v1050 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1519 #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i469 
y: i36 
=== Succesors ===
=== Usages ===
v1514 i230 v766 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i469 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i1490 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i55 y: i1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v1054 
falseSuccessor: v1056 
=== Usages ===
=== Predecessor ===
i1490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v1054 #falseSuccessor: v1056  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B61" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1061 
=== Usages ===
v774 
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i55 
y: i36 
=== Succesors ===
=== Usages ===
v1520 v827 v1515 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i55 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i230 
y: i1490 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i230 y: i1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v1058 
falseSuccessor: v1060 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v1058 #falseSuccessor: v1060  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
v801 a1491 v835 
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a468 
index: i55 
=== Succesors ===
=== Usages ===
v774 j1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: i55  <|@  <|@
f <@~|@floating>@ <|@
tid a773 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1054 
address: v1514 
value: a773 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1247 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1054 address: v1514 value: a773 stateAfter: - lastLocationAccess: - #next: j1247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1514 
=== Succesors ===
next: v1253 
=== Usages ===
j1249 
=== Predecessor ===
v774 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1514 #next: v1253  <|@  <|@
f <@~|@floating>@ <|@
tid j1249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1247 
y: i1248 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1247 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1249 
index: j1252 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1249 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1528 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1491 
=== Usages ===
=== Predecessor ===
j1247 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1528 value: i1254 stateAfter: - lastLocationAccess: - #next: a1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a468 
index: i230 
=== Succesors ===
=== Usages ===
a1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: i230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1058 
address: v1515 
=== Succesors ===
next: a1492 
=== Usages ===
v1529 v785 v1516 
=== Predecessor ===
v1253 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1058 address: v1515 #next: a1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 141]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
=== Succesors ===
next: v1094 
=== Usages ===
v843 v1518 v1562 
=== Predecessor ===
a1491 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1508 #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
value: a1492 
=== Succesors ===
=== Usages ===
v423 v72 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1492  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
value: a1491 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1491  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 136]
stamp: i32
=== Inputs ===
x: i469 
y: i36 
=== Succesors ===
=== Usages ===
v802 v580 i627 v836 i1465 v1467 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i469 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a468 
index: i230 
=== Succesors ===
=== Usages ===
v835 v801 j1310 j1317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: i230  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 v1460 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v575 v1461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 i1470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v785 
=== Succesors ===
trueSuccessor: v1093 
falseSuccessor: v1092 
=== Usages ===
=== Predecessor ===
a1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v785 #trueSuccessor: v1093 #falseSuccessor: v1092  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591060069948930994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1227 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B50" 
    xhandlers
    flags 
    probability 4605370324991763242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1491 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
=== Succesors ===
next: v1232 
=== Usages ===
v1438 
=== Predecessor ===
v1092 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1529 #next: v1232  <|@  <|@
f <@~|@floating>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1493 
y: v1437 
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1493 y: v1437  <|@  <|@
f <@*|@fixed>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
trueSuccessorProbability: 0.028170283262457074
=== Inputs ===
condition: v1438 
=== Succesors ===
trueSuccessor: v1230 
falseSuccessor: v1229 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1438 #trueSuccessor: v1230 #falseSuccessor: v1229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1263 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1263 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1282 
=== Usages ===
v1530 v1531 
=== Predecessor ===
v1230 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1263 
index: - 
=== Succesors ===
=== Usages ===
j1282 v1284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1263 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
=== Succesors ===
next: j1283 
=== Usages ===
j1439 j1288 v1551 
=== Predecessor ===
j1263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1530 #next: j1283  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1263 
index: - 
=== Succesors ===
=== Usages ===
j1283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1263 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1531 
=== Succesors ===
next: v1271 
=== Usages ===
v1268 
=== Predecessor ===
j1282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1531 #next: v1271  <|@  <|@
f <@~|@floating>@ <|@
tid j1439 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1282 
y: j722 
=== Succesors ===
=== Usages ===
v1268 v1284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1282 y: j722  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1283 
y: j1439 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1283 y: j1439  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v1269 
falseSuccessor: v1270 
=== Usages ===
=== Predecessor ===
j1283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v1269 #falseSuccessor: v1270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4552434130990251284
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1275 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1275  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 120
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - i469 - 
=== Succesors ===
=== Usages ===
?58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - i469 -  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setKey(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: ?57 
values: a1 i469 a2 
=== Succesors ===
=== Usages ===
a1275 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?57 values: a1 i469 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1275 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?58 
arguments: v1261 i735 i36 
=== Succesors ===
next: j1276 
=== Usages ===
j1276 
=== Predecessor ===
v1269 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?58 arguments: v1261 i735 i36 #next: j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1276 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1275 
=== Succesors ===
next: v1289 
=== Usages ===
j1288 
=== Predecessor ===
a1275 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1275 #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
j1276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582078382270679096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1284 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
value: j1439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1280 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1530 value: j1439 stateAfter: - lastLocationAccess: - #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1282 
index: - 
=== Succesors ===
=== Usages ===
v1280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1282 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1551 
=== Succesors ===
next: v1287 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1551 #next: v1287  <|@  <|@
f <@*|@fixed>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
v1280 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B45" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1288 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1286 
values: j1282 j1276 
=== Succesors ===
=== Usages ===
v1533 v1532 a1111 v1552 v1553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1286 values: j1282 j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1287 v1289 
=== Succesors ===
next: a1111 
=== Usages ===
j1288 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1287 v1289 #next: a1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1111 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1288 
=== Succesors ===
next: j1299 
=== Usages ===
a1116 
=== Predecessor ===
v1286 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1288 #next: j1299  <|@  <|@
f <@~|@floating>@ <|@
tid j1475 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1090 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1475 
index: - 
=== Succesors ===
=== Usages ===
j1299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1559 
=== Succesors ===
next: v1300 
=== Usages ===
v1300 
=== Predecessor ===
a1111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1559 #next: v1300  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1288 
index: - 
=== Succesors ===
=== Usages ===
v1300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: j1299 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
j1299 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: j1299 stateAfter: - lastLocationAccess: - #next: v1303  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1288 
index: - 
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1533 
value: v1437 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1494 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1533 value: v1437 stateAfter: - lastLocationAccess: - #next: i1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1491 
=== Succesors ===
=== Usages ===
i1494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1516 
=== Succesors ===
next: v1307 
=== Usages ===
v1307 
=== Predecessor ===
v1303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1516 #next: v1307  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1288 
index: - 
=== Succesors ===
=== Usages ===
v1307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1552 
value: i1494 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1309 
=== Usages ===
=== Predecessor ===
i1494 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1552 value: i1494 stateAfter: - lastLocationAccess: - #next: v1309  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1288 
index: - 
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
value: a834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1116 
=== Usages ===
=== Predecessor ===
v1307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1553 value: a834 stateAfter: - lastLocationAccess: - #next: a1116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1116 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1111 
=== Succesors ===
next: v1117 
=== Usages ===
a800 
=== Predecessor ===
v1309 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1111 #next: v1117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
a1116 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid a800 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
op: Compress
stamp: n -
=== Inputs ===
value: a1116 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1058 
address: v1520 
value: a800 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1310 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1058 address: v1520 value: a800 stateAfter: - lastLocationAccess: - #next: j1310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1520 
=== Succesors ===
next: v1314 
=== Usages ===
j1311 
=== Predecessor ===
v801 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1520 #next: v1314  <|@  <|@
f <@~|@floating>@ <|@
tid j1311 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1310 
y: i1248 
=== Succesors ===
=== Usages ===
v1534 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1310 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1311 
index: j1252 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1311 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
j1310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: i1254 stateAfter: - lastLocationAccess: - #next: v802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
value: i63 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v1314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1509 value: i63 stateAfter: - lastLocationAccess: - #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
stamp: void
trueSuccessorProbability: 0.4540134600818152
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v70 #falseSuccessor: v71  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4577043103520072424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1495 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
=== Succesors ===
next: v101 
=== Usages ===
v1469 v1471 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1513 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: void
=== Inputs ===
value: a1495 
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1495  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1495 
y: a954 
=== Succesors ===
=== Usages ===
i1470 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1495 y: a954  <|@  <|@
f <@~|@floating>@ <|@
tid i1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1471 
trueValue: i29 
falseValue: i211 
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1471 trueValue: i29 falseValue: i211  <|@  <|@
f <@~|@floating>@ <|@
tid i1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1469 
trueValue: i29 
falseValue: i1470 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1469 trueValue: i29 falseValue: i1470  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1468 
y: i63 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1468 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
stamp: void
trueSuccessorProbability: 0.04553349332106027
=== Inputs ===
condition: v1467 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
a1495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1467 #trueSuccessor: v96 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4557217021321901035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@616a64ac
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1167 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v807 
stateDuring: ?1167 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v807 stateDuring: ?1167 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4576774934842644297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4578236182188004476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1496 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1496  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1492 
=== Succesors ===
=== Usages ===
i1496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
=== Succesors ===
next: i1497 
=== Usages ===
i197 v477 
=== Predecessor ===
v71 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1518 #next: i1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1563 
=== Succesors ===
next: v186 
=== Usages ===
i1465 
=== Predecessor ===
i1496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1563 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i1465 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
stamp: i32
=== Inputs ===
x: i63 
y: i1497 
=== Succesors ===
=== Usages ===
i1463 i1464 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i63 y: i1497  <|@  <|@
f <@~|@floating>@ <|@
tid i1464 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1465 
y: i36 
=== Succesors ===
=== Usages ===
i1463 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1465 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i1463 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
stamp: i32
=== Inputs ===
x: i1464 
y: i1465 
=== Succesors ===
=== Usages ===
v477 v84 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1464 y: i1465  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1490 
y: i182 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1490 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v1461 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
i1497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1461 #trueSuccessor: v184 #falseSuccessor: v185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4576448992352594219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1496 
y: i1463 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1496 y: i1463  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v477 
trueValue: i36 
falseValue: i48 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v477 trueValue: i36 falseValue: i48  <|@  <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@8174a0c
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i469 i478 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i469 i478  <|@  <|@
tid ?1169 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v816 
stateDuring: ?1169 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v816 stateDuring: ?1169 #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1069 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1490 
y: i192 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1490 y: i192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1460 
=== Succesors ===
trueSuccessor: v1066 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1460 #trueSuccessor: v1066 #falseSuccessor: v1068  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1496 
y: i36 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1496 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i1463 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i197 y: i1463  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v84 
trueValue: i36 
falseValue: i48 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v84 trueValue: i36 falseValue: i48  <|@  <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@13e3e5b0
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i469 i85 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i469 i85  <|@  <|@
tid ?1170 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v823 
stateDuring: ?1170 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v823 stateDuring: ?1170 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1179  <|@  <|@
f <@~|@floating>@ <|@
tid i1180 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -209171
stableDimension: 0
stamp: i32 [-209171] ⇊00000000fffcceed ⇈00000000fffcceed
stampKind: i32
value: int[-209171|0xfffffffffffcceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605167636833232460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1227 
=== Predecessor ===
v1229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B36" "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4605967092993953218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1102 v1233 
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1102 v1233 #next: v835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1058 
address: v1520 
value: a834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1317 
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1058 address: v1520 value: a834 stateAfter: - lastLocationAccess: - #next: j1317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1520 
=== Succesors ===
next: v1321 
=== Usages ===
j1318 
=== Predecessor ===
v835 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1520 #next: v1321  <|@  <|@
f <@~|@floating>@ <|@
tid j1318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1317 
y: i1248 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1317 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1318 
index: j1252 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1318 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
j1317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1535 value: i1254 stateAfter: - lastLocationAccess: - #next: v836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
value: i63 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1509 value: i63 stateAfter: - lastLocationAccess: - #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
stamp: void
trueSuccessorProbability: 0.4540134600818152
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v421 #falseSuccessor: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600746850767812682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1498 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
=== Succesors ===
next: v583 
=== Usages ===
v964 v965 
=== Predecessor ===
v421 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1513 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: void
=== Inputs ===
value: a1498 
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1498  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1498 
y: a954 
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1498 y: a954  <|@  <|@
f <@~|@floating>@ <|@
tid i1458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v965 
trueValue: i29 
falseValue: i211 
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v965 trueValue: i29 falseValue: i211  <|@  <|@
f <@~|@floating>@ <|@
tid i1459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v964 
trueValue: i29 
falseValue: i1458 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v964 trueValue: i29 falseValue: i1458  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1459 
y: i63 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1459 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
stamp: void
trueSuccessorProbability: 0.04553349332106027
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
a1498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v581 #falseSuccessor: v582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4580811781034810962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@122f3849
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1165 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v841 
stateDuring: ?1165 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v841 stateDuring: ?1165 #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600424690791163493
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602180135965352762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1499 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1499  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1492 
=== Succesors ===
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1562 
=== Succesors ===
next: i1500 
=== Usages ===
i638 v620 
=== Predecessor ===
v422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1562 #next: i1500  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1517 
=== Succesors ===
next: v578 
=== Usages ===
i627 
=== Predecessor ===
i1499 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1517 #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i627 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
stamp: i32
=== Inputs ===
x: i63 
y: i1500 
=== Succesors ===
=== Usages ===
i628 i629 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i63 y: i1500  <|@  <|@
f <@~|@floating>@ <|@
tid i628 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i627 
y: i36 
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i627 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
stamp: i32
=== Inputs ===
x: i627 
y: i628 
=== Succesors ===
=== Usages ===
v630 v620 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i627 y: i628  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1490 
y: i182 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1490 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v575 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v577 
=== Usages ===
=== Predecessor ===
i1500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v575 #trueSuccessor: v576 #falseSuccessor: v577  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4600033125206433134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1499 
y: i629 
=== Succesors ===
=== Usages ===
i621 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1499 y: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v620 
trueValue: i36 
falseValue: i48 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v620 trueValue: i36 falseValue: i48  <|@  <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@20d271a4
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i469 i621 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i469 i621  <|@  <|@
tid ?1166 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v849 
stateDuring: ?1166 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v849 stateDuring: ?1166 #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1490 
y: i192 
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1490 y: i192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v1070 
falseSuccessor: v1072 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v1070 #falseSuccessor: v1072  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1499 
y: i36 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1499 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i638 
y: i629 
=== Succesors ===
=== Usages ===
i631 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i638 y: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v630 
trueValue: i36 
falseValue: i48 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v630 trueValue: i36 falseValue: i48  <|@  <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@12a70898
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i469 i631 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i469 i631  <|@  <|@
tid ?1168 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v856 
stateDuring: ?1168 
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v856 stateDuring: ?1168 #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1174  <|@  <|@
f <@~|@floating>@ <|@
tid i1175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -217619
stableDimension: 0
stamp: i32 [-217619] ⇊00000000fffcaded ⇈00000000fffcaded
stampKind: i32
value: int[-217619|0xfffffffffffcaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
v1072 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1176 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-217619 - -209171] ⇊00000000fffc8ced ⇈00000000fffcefed
valueDescription: i32
=== Inputs ===
merge: v1173 
values: i1175 i1180 
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1173 values: i1175 i1180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1174 v1179 
=== Succesors ===
next: v1178 
=== Usages ===
i1176 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1174 v1179 #next: v1178  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i469 - 
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i469 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?65 
actionAndReason: i1176 
speculation: a5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1173 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?65 actionAndReason: i1176 speculation: a5  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1202  <|@  <|@
f <@~|@floating>@ <|@
tid i1203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -198939
stableDimension: 0
stamp: i32 [-198939] ⇊00000000fffcf6e5 ⇈00000000fffcf6e5
stampKind: i32
value: int[-198939|0xfffffffffffcf6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
v1060 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1200 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid i1201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -196379
stableDimension: 0
stamp: i32 [-196379] ⇊00000000fffd00e5 ⇈00000000fffd00e5
stampKind: i32
value: int[-196379|0xfffffffffffd00e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid a1199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@76223066
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@76223066]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -195388
stableDimension: 0
stamp: i32 [-195388] ⇊00000000fffd04c4 ⇈00000000fffd04c4
stampKind: i32
value: int[-195388|0xfffffffffffd04c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
v1052 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1194 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-198939 - -195083] ⇊00000000fffc00c4 ⇈00000000fffdf7f5
valueDescription: i32
=== Inputs ===
merge: v1191 
values: i1198 i1201 i1203 
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1191 values: i1198 i1201 i1203  <|@  <|@
f <@~|@floating>@ <|@
tid a1195 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1191 
values: a1199 a5 a5 
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1191 values: a1199 a5 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1197 v1200 v1202 
=== Succesors ===
next: v1196 
=== Usages ===
i1194 a1195 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1197 v1200 v1202 #next: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?466 
actionAndReason: i1194 
speculation: a1195 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?466 actionAndReason: i1194 speculation: a1195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592257270390784481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i119 
y: i36 
=== Succesors ===
=== Usages ===
i1171 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i119 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
v512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B19" "B65" 
    successors "B67" "B78" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i507 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v502 
values: i276 i119 
=== Succesors ===
=== Usages ===
?504 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v502 values: i276 i119  <|@  <|@
f <@~|@floating>@ <|@
tid i1171 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v502 
values: i404 i403 
=== Succesors ===
=== Usages ===
i1172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v502 values: i404 i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v503 v505 
=== Succesors ===
next: a1501 
=== Usages ===
i507 i1171 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v503 v505 #next: a1501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v1502 
=== Usages ===
a868 v1542 v1522 
=== Predecessor ===
v502 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v1502  <|@  <|@
tid ?504 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - i507 
=== Succesors ===
=== Usages ===
v1209 a1390 v1502 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - i507  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1501 
=== Succesors ===
=== Usages ===
v1502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?504 
guard: - 
address: v1542 
=== Succesors ===
next: v1081 
=== Usages ===
v1450 
=== Predecessor ===
a1501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?504 guard: - address: v1542 #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1502 
y: v1435 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1502 y: v1435  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1450 
=== Succesors ===
trueSuccessor: v1078 
falseSuccessor: v1080 
=== Usages ===
=== Predecessor ===
v1502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1450 #trueSuccessor: v1078 #falseSuccessor: v1080  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B77" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1503 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1503  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1501 
=== Succesors ===
=== Usages ===
i1503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1522 
=== Succesors ===
next: v1085 
=== Usages ===
v912 
=== Predecessor ===
v1078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1522 #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid i1172 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1171 
y: i36 
=== Succesors ===
=== Usages ===
v912 v1525 v1523 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1171 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1172 
y: i1503 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1172 y: i1503  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v1082 
falseSuccessor: v1084 
=== Usages ===
=== Predecessor ===
i1503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v1082 #falseSuccessor: v1084  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1504 
=== Usages ===
v932 a1504 v950 
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1504  <|@  <|@
f <@~|@floating>@ <|@
tid a868 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1501 
=== Succesors ===
=== Usages ===
v1525 v1523 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1501  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a868 
index: i1172 
=== Succesors ===
=== Usages ===
a1504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a868 index: i1172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1082 
address: v1523 
=== Succesors ===
next: v1131 
=== Usages ===
a882 v883 v1524 v1526 v1543 
=== Predecessor ===
v1082 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1082 address: v1523 #next: v1131  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
value: a1504 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1504  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a868 
index: i1172 
=== Succesors ===
=== Usages ===
v932 v950 j1428 j1421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a868 index: i1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v883 
=== Succesors ===
trueSuccessor: v1130 
falseSuccessor: v1129 
=== Usages ===
=== Predecessor ===
a1504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v883 #trueSuccessor: v1130 #falseSuccessor: v1129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" 
    xhandlers
    flags 
    probability 4578473702501953058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B75" 
    xhandlers
    flags 
    probability 4592899511474177000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1505  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1504 
=== Succesors ===
=== Usages ===
v1505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1543 
=== Succesors ===
next: v1222 
=== Usages ===
v1451 
=== Predecessor ===
v1129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1543 #next: v1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1505 
y: v1437 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1505 y: v1437  <|@  <|@
f <@*|@fixed>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
trueSuccessorProbability: 0.08246620256962045
=== Inputs ===
condition: v1451 
=== Succesors ===
trueSuccessor: v1220 
falseSuccessor: v1219 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1451 #trueSuccessor: v1220 #falseSuccessor: v1219  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1379 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1379 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1394 
=== Usages ===
v1544 v1545 
=== Predecessor ===
v1220 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1394  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1379 
index: - 
=== Succesors ===
=== Usages ===
j1394 v1396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
=== Succesors ===
next: j1395 
=== Usages ===
j1452 j1400 v1556 
=== Predecessor ===
j1379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1544 #next: j1395  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1379 
index: - 
=== Succesors ===
=== Usages ===
j1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
=== Succesors ===
next: v1387 
=== Usages ===
v1384 
=== Predecessor ===
j1394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1545 #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1394 
y: j722 
=== Succesors ===
=== Usages ===
v1384 v1396 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1394 y: j722  <|@  <|@
f <@~|@floating>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1395 
y: j1452 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1395 y: j1452  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1384 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
j1395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1384 #trueSuccessor: v1385 #falseSuccessor: v1386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4546582579059541423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1390 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1390 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?504 
arguments: v1261 i735 i36 
=== Succesors ===
next: j1391 
=== Usages ===
j1391 
=== Predecessor ===
v1385 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?504 arguments: v1261 i735 i36 #next: j1391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1391 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1390 
=== Succesors ===
next: v1401 
=== Usages ===
j1400 
=== Predecessor ===
a1390 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1390 #next: v1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
j1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4576532225783694561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
value: j1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1544 value: j1452 stateAfter: - lastLocationAccess: - #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1394 
index: - 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1556 
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1556 #next: v1399  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
v1393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1400 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1398 
values: j1394 j1391 
=== Succesors ===
=== Usages ===
v1548 v1547 a1147 v1557 v1558 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1398 values: j1394 j1391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1399 v1401 
=== Succesors ===
next: a1147 
=== Usages ===
j1400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1399 v1401 #next: a1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1147 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1400 
=== Succesors ===
next: j1410 
=== Usages ===
a1152 
=== Predecessor ===
v1398 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1400 #next: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid j1406 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1090 
=== Succesors ===
=== Usages ===
v1546 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: - 
=== Succesors ===
=== Usages ===
j1410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
=== Succesors ===
next: v1411 
=== Usages ===
v1411 
=== Predecessor ===
a1147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1546 #next: v1411  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1400 
index: - 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1547 
value: j1410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
j1410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1547 value: j1410 stateAfter: - lastLocationAccess: - #next: v1414  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1400 
index: - 
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1548 
value: v1437 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1506 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1548 value: v1437 stateAfter: - lastLocationAccess: - #next: i1506  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1504 
=== Succesors ===
=== Usages ===
i1506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
=== Succesors ===
next: v1418 
=== Usages ===
v1418 
=== Predecessor ===
v1414 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1526 #next: v1418  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1400 
index: - 
=== Succesors ===
=== Usages ===
v1418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1557 
value: i1506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1420 
=== Usages ===
=== Predecessor ===
i1506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1557 value: i1506 stateAfter: - lastLocationAccess: - #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1400 
index: - 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1558 
value: a834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1152 
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1558 value: a834 stateAfter: - lastLocationAccess: - #next: a1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1152 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1147 
=== Succesors ===
next: v1153 
=== Usages ===
a949 
=== Predecessor ===
v1420 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1147 #next: v1153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
a1152 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid a949 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
op: Compress
stamp: n -
=== Inputs ===
value: a1152 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1082 
address: v1525 
value: a949 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1421 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1082 address: v1525 value: a949 stateAfter: - lastLocationAccess: - #next: j1421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1525 
=== Succesors ===
next: v1425 
=== Usages ===
j1422 
=== Predecessor ===
v950 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1525 #next: v1425  <|@  <|@
f <@~|@floating>@ <|@
tid j1422 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1421 
y: i1248 
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1421 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1422 
index: j1252 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1422 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1549 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1507 
=== Usages ===
=== Predecessor ===
j1421 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1549 value: i1254 stateAfter: - lastLocationAccess: - #next: a1507  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1504 
=== Succesors ===
=== Usages ===
a1507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
=== Succesors ===
next: v387 
=== Usages ===
a888 
=== Predecessor ===
v1425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1524 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid a888 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1507 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a888 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a1507 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a888 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B76" 
    xhandlers
    flags 
    probability 4592220394807176859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
v1219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B75" 
    successors 
    xhandlers
    flags 
    probability 4593135404897289311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1139 v1223 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1139 v1223 #next: v932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1082 
address: v1525 
value: a834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1428 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1082 address: v1525 value: a834 stateAfter: - lastLocationAccess: - #next: j1428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1525 
=== Succesors ===
next: v1432 
=== Usages ===
j1429 
=== Predecessor ===
v932 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1525 #next: v1432  <|@  <|@
f <@~|@floating>@ <|@
tid j1429 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1428 
y: i1248 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1428 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: j1252 
=== Succesors ===
=== Usages ===
v1432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1550 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
j1428 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1550 value: i1254 stateAfter: - lastLocationAccess: - #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid a882 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1504 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1504  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a882 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1432 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a882 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1213 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1213  <|@  <|@
f <@~|@floating>@ <|@
tid i1214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -224027
stableDimension: 0
stamp: i32 [-224027] ⇊00000000fffc94e5 ⇈00000000fffc94e5
stampKind: i32
value: int[-224027|0xfffffffffffc94e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid a1212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1976624103
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1976624103]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1211 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -261692
stableDimension: 0
stamp: i32 [-261692] ⇊00000000fffc01c4 ⇈00000000fffc01c4
stampKind: i32
value: int[-261692|0xfffffffffffc01c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1207 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-261692 - -222731] ⇊00000000fffc00c4 ⇈00000000fffc9df5
valueDescription: i32
=== Inputs ===
merge: v1204 
values: i1211 i1214 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1204 values: i1211 i1214  <|@  <|@
f <@~|@floating>@ <|@
tid a1208 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1204 
values: a1212 a5 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1204 values: a1212 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1210 v1213 
=== Succesors ===
next: v1209 
=== Usages ===
i1207 a1208 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1210 v1213 #next: v1209  <|@  <|@
f <@*|@fixed>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?504 
actionAndReason: i1207 
speculation: a1208 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?504 actionAndReason: i1207 speculation: a1208  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1560 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1560  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?126 ?504 v758 v849 v1513 ?647 v841 v1508 ?1164 ?291 v863 v823 v1517 v816 v807 ?57 ?58 v1509 v1510 ?277 ?466 ?65 ?379 v856 j1366 v1563 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 v108 v109 v634 v624 v481 v585 v586 a1208 v1178 a1195 ?4 v1186 a1195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?504 a834 ?126 ?1164 ?466 ?647 ?57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 407
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a5 a3 - - - 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a5 a3 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v752 v1560 ?126 ?504 ?1164 v856 ?647 a773 ?57 ?58 v849 ?65 ?466 v816 v823 ?291 v758 ?277 ?379 v347 v748 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a2 
=== Succesors ===
next: a1476 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a2 #next: a1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1476 a1492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1476 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
=== Succesors ===
next: v117 
=== Usages ===
v951 
=== Predecessor ===
v1560 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1508 #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
value: a1476 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1476  <|@  <|@
f <@~|@floating>@ <|@
tid a834 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v835 v932 v1309 v1420 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1406 j1475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1390 a1275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1452 j1439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 v1303 v1451 v1414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1254 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1253 v1314 v1321 v1370 v1425 v1432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1248 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1249 j1311 j1318 j1367 j1422 j1429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1252 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1528 v1534 v1535 v1541 v1549 v1550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1436 v1360 v1450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1275 a1336 a1390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 ?647 v510 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a954 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v955 v965 v1471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1481 a1498 a1495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 73]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 i55 i63 i628 i85 i230 i197 i1172 i404 i621 i298 i631 i403 i478 i638 a1275 a1336 a1390 i1464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - 
=== Succesors ===
=== Usages ===
?302 ?1163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:423) [bci: 85]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 i478 i276 v292 i621 i631 ?291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1478 i1482 i1484 v802 v836 i1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1477 a1483 a1501 a1485 v858 a1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6524607172388934
=== Inputs ===
condition: v951 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
a1476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v951 #trueSuccessor: v115 #falseSuccessor: v116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e65b119 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6524607172388934 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604052063231338350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
tid ?302 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 240
stackSize: 0
=== Inputs ===
outerFrameState: ?126 
values: - - 
=== Succesors ===
=== Usages ===
?277 ?379 ?291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?126 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608650423607859211
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i276 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v275 
values: i48 i298 i298 i298 
=== Succesors ===
=== Usages ===
?277 v279 i507 ?291 v12 i298 ?379 i404 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v275 values: i48 i298 i298 i298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v274 
=== Succesors ===
next: a1477 
=== Usages ===
i276 v281 v294 v299 v462 v555 v1039 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v274 #next: a1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1477 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: i1478 
=== Usages ===
a757 v1511 
=== Predecessor ===
v275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: i1478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1478 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: v283 
=== Usages ===
v279 i649 
=== Predecessor ===
a1477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i276 
y: i1478 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i276 y: i1478  <|@  <|@
f <@~|@floating>@ <|@
tid a757 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1477 
=== Succesors ===
=== Usages ===
a650 v1512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1477  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
i1478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v280 #falseSuccessor: v281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1479 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1479  <|@  <|@
tid ?277 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?302 
values: a1 a2 i276 - 
=== Succesors ===
=== Usages ===
v1024 v1025 v1186 i1479 v1561 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?302 values: a1 a2 i276 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
result [v9|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1477 
=== Succesors ===
=== Usages ===
i1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1479 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?277 
guard: - 
address: v1511 
=== Succesors ===
next: v1040 
=== Usages ===
v731 
=== Predecessor ===
v280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?277 guard: - address: v1511 #next: v1040  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i276 
y: i36 
=== Succesors ===
=== Usages ===
i1171 v1512 v731 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i276 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i1479 
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i404 y: i1479  <|@  <|@
f <@*|@fixed>@ <|@
tid v1040 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v731 
=== Succesors ===
trueSuccessor: v1036 
falseSuccessor: v1039 
=== Usages ===
=== Predecessor ===
i1479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v731 #trueSuccessor: v1036 #falseSuccessor: v1039  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v12|DWORD, y: [v9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1480 
=== Usages ===
a1480 
=== Predecessor ===
v1040 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
result [v11|QWORD[.] + v12|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a757 
index: i404 
=== Succesors ===
=== Usages ===
a1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a757 index: i404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1480 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1036 
address: v1512 
=== Succesors ===
next: v1561 
=== Usages ===
a741 v1561 
=== Predecessor ===
v1036 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1036 address: v1512 #next: v1561  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
object: a1480 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
a1480 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?277 object: a1480 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid a741 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
v748 v752 v347 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1480  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a741 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a741  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v348 #falseSuccessor: v349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v11|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v13|DWORD[.] * 8] state [bci:2, 15, 16] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589699631723408879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604123076867509053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1481 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1481 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
=== Succesors ===
next: v356 
=== Usages ===
a746 v749 v955 v957 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1513 #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: i32
=== Inputs ===
x: i276 
y: i36 
=== Succesors ===
=== Usages ===
i276 i276 i276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i276 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v749 
=== Succesors ===
trueSuccessor: v354 
falseSuccessor: v355 
=== Usages ===
=== Predecessor ===
a1481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v749 #trueSuccessor: v354 #falseSuccessor: v355  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603960533368020962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?277 #next: v462  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v275 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580858613392042834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid a956 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1481 
y: a956 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1481 y: a956  <|@  <|@
tid ?379 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?302 
values: a1 a2 i276 - 
=== Succesors ===
=== Usages ===
?1162 ?1161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?302 values: a1 a2 i276 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v957 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v957 #trueSuccessor: v365 #falseSuccessor: v359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578554611009701057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i369 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i369  <|@  <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@35d301a1
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a741 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a741  <|@  <|@
tid ?1161 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?379 
values: - - - 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?379 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v748 
stateDuring: ?1161 
=== Succesors ===
next: v383 
=== Usages ===
i382 
=== Predecessor ===
v365 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v748 stateDuring: ?1161 #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
i369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572653611630863302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1481 
y: a954 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1481 y: a954  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v955 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v955 #trueSuccessor: v360 #falseSuccessor: v366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533361476810115399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?277 #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v275 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572639463483787585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i374 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i374  <|@  <|@
f <@~|@floating>@ <|@
tid a746 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@62e17eab
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a746 a2 a741 
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a746 a2 a741  <|@  <|@
tid ?1162 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?379 
values: - - - 
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?379 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i374 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v752 
stateDuring: ?1162 
=== Succesors ===
next: v384 
=== Usages ===
i382 
=== Predecessor ===
v366 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v752 stateDuring: ?1162 #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
i374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580855076355273905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i382 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v380 
values: i369 i374 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i369 i374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v383 v384 
=== Succesors ===
next: v297 
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v383 v384 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i382 
y: i48 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i382 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v293 #falseSuccessor: v450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580451329060005732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
tid ?291 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?302 
values: a1 a2 i276 - i48 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?302 values: a1 a2 i276 - i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?291 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?291 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v275 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564102779623232727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589800568547225922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v528 v530 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v528 v530 #next: v294  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589800568547225922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v275 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v275 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i276 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i276 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
stamp: void
trueSuccessorProbability: 0.6968056199593498
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587318614456906479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1482 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1482 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: a1483 
=== Usages ===
i649 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: a1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1483 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v645 
=== Usages ===
a755 
=== Predecessor ===
i1482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid a755 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1483 
=== Succesors ===
=== Usages ===
a650 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1483  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
a1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD, v23|QWORD[.]] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B66" 
    xhandlers
    flags 
    probability 4581886226102443819
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v12|DWORD] destination: B19 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v275 
=== Succesors ===
next: v1186 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v275 #next: v1186  <|@  <|@
f <@~|@floating>@ <|@
tid i1188 <|@
result int[-187419|0xfffffffffffd23e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -187419
stableDimension: 0
stamp: i32 [-187419] ⇊00000000fffd23e5 ⇈00000000fffd23e5
stampKind: i32
value: int[-187419|0xfffffffffffd23e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
actionAndReason: i1188 
speculation: a5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?277 actionAndReason: i1188 speculation: a5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -187419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603541169710937883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v275 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v275 #next: v648  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v11|QWORD[.]] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B65" 
    xhandlers
    flags 
    probability 4599932331055264036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i119 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i119  <|@  <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3e24a96f
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a2 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2  <|@  <|@
tid ?1163 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?126 
values: - - 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?126 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i119 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v758 
stateDuring: ?1163 
=== Succesors ===
next: v513 
=== Usages ===
v510 i507 i403 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v758 stateDuring: ?1163 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i11 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i119 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
stamp: void
trueSuccessorProbability: 0.6968056199593498
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
i119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v511 #falseSuccessor: v512  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597893017701441879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1484 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1484 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: a1485 
=== Usages ===
i649 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: a1485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1485 <|@
result v26|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v664 
=== Usages ===
a761 
=== Predecessor ===
i1484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid a761 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1485 
=== Succesors ===
=== Usages ===
a650 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1485  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
a1485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v27|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i649 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v646 
values: i1482 i1478 i1484 
=== Succesors ===
=== Usages ===
i469 i37 i469 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v646 values: i1482 i1478 i1484  <|@  <|@
f <@~|@floating>@ <|@
tid a650 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v646 
values: a755 a757 a761 
=== Succesors ===
=== Usages ===
v25 v1521 a468 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v646 values: a755 a757 a761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v645 v648 v664 
=== Succesors ===
next: v28 
=== Usages ===
i649 a650 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v645 v648 v664 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
stamp: void
=== Inputs ===
value: a650 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a650  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 55]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1459 i1470 v1356 a1336 i1458 i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
stamp: void
trueSuccessorProbability: 0.15757821508043224
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v26 #falseSuccessor: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|QWORD[.], y: v29|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.15757821508043224 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1325 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1325 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1340 
=== Usages ===
v1536 v1537 
=== Predecessor ===
v26 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1340  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1325 
index: - 
=== Succesors ===
=== Usages ===
j1340 v1342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1340 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1536 
=== Succesors ===
next: j1341 
=== Usages ===
j1445 j1346 v1554 
=== Predecessor ===
j1325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1536 #next: j1341  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1325 
index: - 
=== Succesors ===
=== Usages ===
j1341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1341 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1537 
=== Succesors ===
next: v1333 
=== Usages ===
v1330 
=== Predecessor ===
j1340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1537 #next: v1333  <|@  <|@
f <@~|@floating>@ <|@
tid j1444 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1445 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1340 
y: j1444 
=== Succesors ===
=== Usages ===
v1330 v1342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1340 y: j1444  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1341 
y: j1445 
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1341 y: j1445  <|@  <|@
f <@*|@fixed>@ <|@
tid v1333 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1330 
=== Succesors ===
trueSuccessor: v1331 
falseSuccessor: v1332 
=== Usages ===
=== Predecessor ===
j1341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1330 #trueSuccessor: v1331 #falseSuccessor: v1332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v30|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564092838890823290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1336 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1336  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - i11 
=== Succesors ===
=== Usages ===
a1336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1336 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?647 
arguments: v1261 i29 i36 
=== Succesors ===
next: j1337 
=== Usages ===
j1337 
=== Predecessor ===
v1331 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?647 arguments: v1261 i29 i36 #next: j1337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1337 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1336 
=== Succesors ===
next: v1347 
=== Usages ===
j1346 
=== Predecessor ===
a1336 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1336 #next: v1347  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
j1337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594156704534256142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1536 
value: j1445 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1339 
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1536 value: j1445 stateAfter: - lastLocationAccess: - #next: v1339  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
result [v30|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1340 
index: - 
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1340 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1554 
=== Succesors ===
next: v1345 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1554 #next: v1345  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1346 <|@
result v33|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1344 
values: j1340 j1337 
=== Succesors ===
=== Usages ===
v1540 v1539 a1120 v1538 v1555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1344 values: j1340 j1337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1345 v1347 
=== Succesors ===
next: a1120 
=== Usages ===
j1346 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1345 v1347 #next: a1120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1120 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1346 
=== Succesors ===
next: v1356 
=== Usages ===
a1126 
=== Predecessor ===
v1344 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1346 #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
result [v33|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1346 
index: - 
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1538 
value: i29 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
a1120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1538 value: i29 stateAfter: - lastLocationAccess: - #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
result [v33|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1346 
index: - 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1352 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1539 
value: j1352 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1539 value: j1352 stateAfter: - lastLocationAccess: - #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
result [v33|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1346 
index: - 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
value: v1435 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1540 value: v1435 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
result [v33|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1346 
index: - 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1363 <|@
result v35|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1555 
value: v1363 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1126 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1555 value: v1363 stateAfter: - lastLocationAccess: - #next: a1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1126 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1120 
=== Succesors ===
next: v1127 
=== Usages ===
a857 a468 
=== Predecessor ===
v1365 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1120 #next: v1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
a1126 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid a857 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
op: Compress
stamp: n -
=== Inputs ===
value: a1126 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
value: a857 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1366 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1510 value: a857 stateAfter: - lastLocationAccess: - #next: j1366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1366 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1370 
=== Usages ===
j1367 
=== Predecessor ===
v858 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1370  <|@  <|@
f <@~|@floating>@ <|@
tid j1367 <|@
result v37|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1366 
y: i1248 
=== Succesors ===
=== Usages ===
v1541 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1366 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
result [v37|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1367 
index: j1252 
=== Succesors ===
=== Usages ===
v1370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1367 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
j1366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1541 value: i1254 stateAfter: - lastLocationAccess: - #next: v522  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v1370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v33|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v35|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[*] + 16], input: v35|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = COMPRESSPOINTER (input: v34|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.], v28|DWORD] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604910012404069677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1486 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
result [v29|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a650 
index: - 
=== Succesors ===
=== Usages ===
i1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a650 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1486 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 70]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
=== Succesors ===
next: v44 
=== Usages ===
v38 
=== Predecessor ===
v27 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1521 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 74]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i649 
y: i36 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i649 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i1486 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i37 y: i1486  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
stamp: void
trueSuccessorProbability: 0.06568048735113552
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
i1486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v39 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: [v29|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06568048735113552 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4587238332670586250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4c99aa97
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.grow()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1164 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 421
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
bci: 79
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.grow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v863 
stateDuring: ?1164 
=== Succesors ===
next: i1487 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v863 stateDuring: ?1164 #next: i1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1487 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:425) [bci: 111]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: a1488 
=== Usages ===
i469 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: a1488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1488 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v464 
=== Usages ===
a866 
=== Predecessor ===
i1487 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid a866 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1488 
=== Succesors ===
=== Usages ===
a468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
a1488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.grow()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:79] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD[.], v39|DWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604467667926895188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.], v28|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" "B28" 
    successors "B33" "B63" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a468 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v465 
values: a866 a650 a1126 
=== Succesors ===
=== Usages ===
v1520 v1514 v1527 v1515 v1519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v465 values: a866 a650 a1126  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v465 
values: i1487 i649 i649 
=== Succesors ===
=== Usages ===
i55 ?57 ?58 v856 v849 ?65 ?466 v816 v823 i63 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v465 values: i1487 i649 i649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v464 v467 v522 
=== Succesors ===
next: v1489 
=== Usages ===
a468 i469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v464 v467 v522 #next: v1489  <|@  <|@
tid ?466 <|@
d <@d|@=== Debug Properties ===
bci: 116
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - i469 - 
=== Succesors ===
=== Usages ===
v1196 v1489 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - i469 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
result [v42|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a468 
index: - 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?466 
guard: - 
address: v1527 
=== Succesors ===
next: v1053 
=== Usages ===
v1436 
=== Predecessor ===
v465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?466 guard: - address: v1527 #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1489 
y: v1435 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1489 y: v1435  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v1050 
falseSuccessor: v1052 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v1050 #falseSuccessor: v1052  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.], v43|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - v43|DWORD - 
>@ <|@ instruction CMP [v42|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B62" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1490 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
result [v42|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a468 
index: - 
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1490 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1519 
=== Succesors ===
next: v1057 
=== Usages ===
v766 v635 v575 v827 v1460 v1461 
=== Predecessor ===
v1050 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1519 #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i469 
y: i36 
=== Succesors ===
=== Usages ===
v1514 i230 v766 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i469 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i1490 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i55 y: i1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v1054 
falseSuccessor: v1056 
=== Usages ===
=== Predecessor ===
i1490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v1054 #falseSuccessor: v1056  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v42|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHL v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B61" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1061 
=== Usages ===
v774 
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i55 
y: i36 
=== Succesors ===
=== Usages ===
v1520 v827 v1515 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i55 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i230 
y: i1490 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i230 y: i1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v1058 
falseSuccessor: v1060 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v1058 #falseSuccessor: v1060  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
v801 a1491 v835 
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
result [v42|QWORD[.] + v45|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a468 
index: i55 
=== Succesors ===
=== Usages ===
v774 j1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: i55  <|@  <|@
f <@~|@floating>@ <|@
tid a773 <|@
result v47|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1054 
address: v1514 
value: a773 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1247 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1054 address: v1514 value: a773 stateAfter: - lastLocationAccess: - #next: j1247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1247 <|@
result [v42|QWORD[.] + v45|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1514 
=== Succesors ===
next: v1253 
=== Usages ===
j1249 
=== Predecessor ===
v774 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1514 #next: v1253  <|@  <|@
f <@~|@floating>@ <|@
tid j1249 <|@
result v48|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1247 
y: i1248 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1247 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
result [v48|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1249 
index: j1252 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1249 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1528 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1491 
=== Usages ===
=== Predecessor ===
j1247 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1528 value: i1254 stateAfter: - lastLocationAccess: - #next: a1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
result [v42|QWORD[.] + v46|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a468 
index: i230 
=== Succesors ===
=== Usages ===
a1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: i230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1491 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1058 
address: v1515 
=== Succesors ===
next: a1492 
=== Usages ===
v1529 v785 v1516 
=== Predecessor ===
v1253 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1058 address: v1515 #next: a1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1492 <|@
result v51|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 141]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
=== Succesors ===
next: v1094 
=== Usages ===
v843 v1518 v1562 
=== Predecessor ===
a1491 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1508 #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
value: a1492 
=== Succesors ===
=== Usages ===
v423 v72 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1492  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
value: a1491 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1491  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 136]
stamp: i32
=== Inputs ===
x: i469 
y: i36 
=== Succesors ===
=== Usages ===
v802 v580 i627 v836 i1465 v1467 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i469 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
result [v42|QWORD[.] + v46|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a468 
index: i230 
=== Succesors ===
=== Usages ===
v835 v801 j1310 j1317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a468 index: i230  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 v1460 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v575 v1461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1458 i1470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v785 
=== Succesors ===
trueSuccessor: v1093 
falseSuccessor: v1092 
=== Usages ===
=== Predecessor ===
a1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v785 #trueSuccessor: v1093 #falseSuccessor: v1092  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v45|DWORD * 4 + 16], y: v47|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LEA [v42|QWORD[.] + v45|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = SHR v49|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v48|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v42|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = INC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v50|DWORD[.], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591060069948930994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1227 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B50" 
    xhandlers
    flags 
    probability 4605370324991763242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
result [v50|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1491 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
=== Succesors ===
next: v1232 
=== Usages ===
v1438 
=== Predecessor ===
v1092 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1529 #next: v1232  <|@  <|@
f <@~|@floating>@ <|@
tid v1438 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1493 
y: v1437 
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1493 y: v1437  <|@  <|@
f <@*|@fixed>@ <|@
tid v1232 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
trueSuccessorProbability: 0.028170283262457074
=== Inputs ===
condition: v1438 
=== Succesors ===
trueSuccessor: v1230 
falseSuccessor: v1229 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1438 #trueSuccessor: v1230 #falseSuccessor: v1229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v50|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1263 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1263 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1282 
=== Usages ===
v1530 v1531 
=== Predecessor ===
v1230 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1263 
index: - 
=== Succesors ===
=== Usages ===
j1282 v1284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1263 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1282 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
=== Succesors ===
next: j1283 
=== Usages ===
j1439 j1288 v1551 
=== Predecessor ===
j1263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1530 #next: j1283  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1263 
index: - 
=== Succesors ===
=== Usages ===
j1283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1263 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1283 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1531 
=== Succesors ===
next: v1271 
=== Usages ===
v1268 
=== Predecessor ===
j1282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1531 #next: v1271  <|@  <|@
f <@~|@floating>@ <|@
tid j1439 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1282 
y: j722 
=== Succesors ===
=== Usages ===
v1268 v1284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1282 y: j722  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1283 
y: j1439 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1283 y: j1439  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v1269 
falseSuccessor: v1270 
=== Usages ===
=== Predecessor ===
j1283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v1269 #falseSuccessor: v1270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v53|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4552434130990251284
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1275 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1275  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 120
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - i469 - 
=== Succesors ===
=== Usages ===
?58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - i469 -  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setKey(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: ?57 
values: a1 i469 a2 
=== Succesors ===
=== Usages ===
a1275 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?57 values: a1 i469 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1275 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?58 
arguments: v1261 i735 i36 
=== Succesors ===
next: j1276 
=== Usages ===
j1276 
=== Predecessor ===
v1269 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?58 arguments: v1261 i735 i36 #next: j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1276 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1275 
=== Succesors ===
next: v1289 
=== Usages ===
j1288 
=== Predecessor ===
a1275 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1275 #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
j1276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: v0|QWORD[.] v43|DWORD v1|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - v43|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582078382270679096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1284 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
value: j1439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1280 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1530 value: j1439 stateAfter: - lastLocationAccess: - #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid v1551 <|@
result [v53|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1282 
index: - 
=== Succesors ===
=== Usages ===
v1280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1282 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1551 
=== Succesors ===
next: v1287 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1551 #next: v1287  <|@  <|@
f <@*|@fixed>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
v1280 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v53|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B45" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1288 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1286 
values: j1282 j1276 
=== Succesors ===
=== Usages ===
v1533 v1532 a1111 v1552 v1553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1286 values: j1282 j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1287 v1289 
=== Succesors ===
next: a1111 
=== Usages ===
j1288 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1287 v1289 #next: a1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1111 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1288 
=== Succesors ===
next: j1299 
=== Usages ===
a1116 
=== Predecessor ===
v1286 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1288 #next: j1299  <|@  <|@
f <@~|@floating>@ <|@
tid j1475 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1090 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
result [v5|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1475 
index: - 
=== Succesors ===
=== Usages ===
j1299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1299 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1559 
=== Succesors ===
next: v1300 
=== Usages ===
v1300 
=== Predecessor ===
a1111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1559 #next: v1300  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
result [v56|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1288 
index: - 
=== Succesors ===
=== Usages ===
v1300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: j1299 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1303 
=== Usages ===
=== Predecessor ===
j1299 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: j1299 stateAfter: - lastLocationAccess: - #next: v1303  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
result [v56|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1288 
index: - 
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1533 
value: v1437 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1494 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1533 value: v1437 stateAfter: - lastLocationAccess: - #next: i1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
result [v50|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1491 
=== Succesors ===
=== Usages ===
i1494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1494 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1516 
=== Succesors ===
next: v1307 
=== Usages ===
v1307 
=== Predecessor ===
v1303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1516 #next: v1307  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
result [v56|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1288 
index: - 
=== Succesors ===
=== Usages ===
v1307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1552 
value: i1494 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1309 
=== Usages ===
=== Predecessor ===
i1494 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1552 value: i1494 stateAfter: - lastLocationAccess: - #next: v1309  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
result [v56|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1288 
index: - 
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
value: a834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1116 
=== Usages ===
=== Predecessor ===
v1307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1553 value: a834 stateAfter: - lastLocationAccess: - #next: a1116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1116 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1111 
=== Succesors ===
next: v1117 
=== Usages ===
a800 
=== Predecessor ===
v1309 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1111 #next: v1117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
a1116 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid a800 <|@
result v60|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
op: Compress
stamp: n -
=== Inputs ===
value: a1116 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1058 
address: v1520 
value: a800 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1310 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1058 address: v1520 value: a800 stateAfter: - lastLocationAccess: - #next: j1310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1310 <|@
result [v42|QWORD[.] + v46|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1520 
=== Succesors ===
next: v1314 
=== Usages ===
j1311 
=== Predecessor ===
v801 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1520 #next: v1314  <|@  <|@
f <@~|@floating>@ <|@
tid j1311 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1310 
y: i1248 
=== Succesors ===
=== Usages ===
v1534 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1310 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
result [v61|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1311 
index: j1252 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1311 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
j1310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: i1254 stateAfter: - lastLocationAccess: - #next: v802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
value: i63 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v1314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1509 value: i63 stateAfter: - lastLocationAccess: - #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
stamp: void
trueSuccessorProbability: 0.4540134600818152
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v70 #falseSuccessor: v71  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[*]], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v50|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[*] + 12], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[*] + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = COMPRESSPOINTER (input: v57|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v46|DWORD * 4 + 16], y: v60|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v42|QWORD[.] + v46|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v61|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD[.], y: v51|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4577043103520072424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1495 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1495 <|@
result v63|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
=== Succesors ===
next: v101 
=== Usages ===
v1469 v1471 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1513 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: void
=== Inputs ===
value: a1495 
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1495  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1495 
y: a954 
=== Succesors ===
=== Usages ===
i1470 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1495 y: a954  <|@  <|@
f <@~|@floating>@ <|@
tid i1470 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1471 
trueValue: i29 
falseValue: i211 
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1471 trueValue: i29 falseValue: i211  <|@  <|@
f <@~|@floating>@ <|@
tid i1468 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1469 
trueValue: i29 
falseValue: i1470 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1469 trueValue: i29 falseValue: i1470  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1468 
y: i63 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1468 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
stamp: void
trueSuccessorProbability: 0.04553349332106027
=== Inputs ===
condition: v1467 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
a1495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1467 #trueSuccessor: v96 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v63|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v65|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD[.], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = CMOVE (falseValue: v64|DWORD, ~trueValue: v67|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4557217021321901035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@616a64ac
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1167 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v807 
stateDuring: ?1167 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v807 stateDuring: ?1167 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4576774934842644297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4578236182188004476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1496 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1496  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
result [v51|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1492 
=== Succesors ===
=== Usages ===
i1496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1496 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
=== Succesors ===
next: i1497 
=== Usages ===
i197 v477 
=== Predecessor ===
v71 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1518 #next: i1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1497 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1563 
=== Succesors ===
next: v186 
=== Usages ===
i1465 
=== Predecessor ===
i1496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1563 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i1465 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
stamp: i32
=== Inputs ===
x: i63 
y: i1497 
=== Succesors ===
=== Usages ===
i1463 i1464 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i63 y: i1497  <|@  <|@
f <@~|@floating>@ <|@
tid i1464 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1465 
y: i36 
=== Succesors ===
=== Usages ===
i1463 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1465 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i1463 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
stamp: i32
=== Inputs ===
x: i1464 
y: i1465 
=== Succesors ===
=== Usages ===
v477 v84 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1464 y: i1465  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1490 
y: i182 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1490 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v1461 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
i1497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1461 #trueSuccessor: v184 #falseSuccessor: v185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV [v51|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v52|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SAR v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = ADD (x: v70|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v44|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4576448992352594219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1496 
y: i1463 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1496 y: i1463  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v477 
trueValue: i36 
falseValue: i48 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v477 trueValue: i36 falseValue: i48  <|@  <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@8174a0c
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i469 i478 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i469 i478  <|@  <|@
tid ?1169 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v816 
stateDuring: ?1169 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v816 stateDuring: ?1169 #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1069 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1490 
y: i192 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1490 y: i192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1460 
=== Succesors ===
trueSuccessor: v1066 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1460 #trueSuccessor: v1066 #falseSuccessor: v1068  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v44|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1496 
y: i36 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1496 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i1463 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i197 y: i1463  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v84 
trueValue: i36 
falseValue: i48 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v84 trueValue: i36 falseValue: i48  <|@  <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@13e3e5b0
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i469 i85 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i469 i85  <|@  <|@
tid ?1170 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v823 
stateDuring: ?1170 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v823 stateDuring: ?1170 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHR v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v74|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1179  <|@  <|@
f <@~|@floating>@ <|@
tid i1180 <|@
result int[-209171|0xfffffffffffcceed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -209171
stableDimension: 0
stamp: i32 [-209171] ⇊00000000fffcceed ⇈00000000fffcceed
stampKind: i32
value: int[-209171|0xfffffffffffcceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-209171|0xfffffffffffcceed]] destination: B49 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605167636833232460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1227 
=== Predecessor ===
v1229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B36" "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4605967092993953218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1102 v1233 
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1102 v1233 #next: v835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1058 
address: v1520 
value: a834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1317 
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1058 address: v1520 value: a834 stateAfter: - lastLocationAccess: - #next: j1317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1317 <|@
result [v42|QWORD[.] + v46|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1520 
=== Succesors ===
next: v1321 
=== Usages ===
j1318 
=== Predecessor ===
v835 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1520 #next: v1321  <|@  <|@
f <@~|@floating>@ <|@
tid j1318 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1317 
y: i1248 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1317 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
result [v75|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1318 
index: j1252 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1318 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
j1317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1535 value: i1254 stateAfter: - lastLocationAccess: - #next: v836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
value: i63 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1509 value: i63 stateAfter: - lastLocationAccess: - #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
stamp: void
trueSuccessorProbability: 0.4540134600818152
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v421 #falseSuccessor: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v46|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = LEA [v42|QWORD[.] + v46|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = SHR v76|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v75|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD[.], y: v51|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600746850767812682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1498 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1498 <|@
result v77|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
=== Succesors ===
next: v583 
=== Usages ===
v964 v965 
=== Predecessor ===
v421 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1513 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: void
=== Inputs ===
value: a1498 
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1498  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1498 
y: a954 
=== Succesors ===
=== Usages ===
i1458 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1498 y: a954  <|@  <|@
f <@~|@floating>@ <|@
tid i1458 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v965 
trueValue: i29 
falseValue: i211 
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v965 trueValue: i29 falseValue: i211  <|@  <|@
f <@~|@floating>@ <|@
tid i1459 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v964 
trueValue: i29 
falseValue: i1458 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v964 trueValue: i29 falseValue: i1458  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1459 
y: i63 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1459 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
stamp: void
trueSuccessorProbability: 0.04553349332106027
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
a1498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v581 #falseSuccessor: v582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v77|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v79|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: v78|DWORD, ~trueValue: v81|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4580811781034810962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@122f3849
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1165 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v841 
stateDuring: ?1165 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v841 stateDuring: ?1165 #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600424690791163493
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602180135965352762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1499 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1499  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
result [v51|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1492 
=== Succesors ===
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1499 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1562 
=== Succesors ===
next: i1500 
=== Usages ===
i638 v620 
=== Predecessor ===
v422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1562 #next: i1500  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1500 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1517 
=== Succesors ===
next: v578 
=== Usages ===
i627 
=== Predecessor ===
i1499 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1517 #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i627 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
stamp: i32
=== Inputs ===
x: i63 
y: i1500 
=== Succesors ===
=== Usages ===
i628 i629 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i63 y: i1500  <|@  <|@
f <@~|@floating>@ <|@
tid i628 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i627 
y: i36 
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i627 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
stamp: i32
=== Inputs ===
x: i627 
y: i628 
=== Succesors ===
=== Usages ===
v630 v620 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i627 y: i628  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1490 
y: i182 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1490 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v575 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v577 
=== Usages ===
=== Predecessor ===
i1500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v575 #trueSuccessor: v576 #falseSuccessor: v577  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOV [v51|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v52|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SAR v83|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v44|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4600033125206433134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1499 
y: i629 
=== Succesors ===
=== Usages ===
i621 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1499 y: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i621 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v620 
trueValue: i36 
falseValue: i48 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v620 trueValue: i36 falseValue: i48  <|@  <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@20d271a4
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i469 i621 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i469 i621  <|@  <|@
tid ?1166 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v849 
stateDuring: ?1166 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v849 stateDuring: ?1166 #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v86|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1490 
y: i192 
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1490 y: i192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v1070 
falseSuccessor: v1072 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v1070 #falseSuccessor: v1072  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v44|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1499 
y: i36 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1499 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i638 
y: i629 
=== Succesors ===
=== Usages ===
i631 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i638 y: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v630 
trueValue: i36 
falseValue: i48 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v630 trueValue: i36 falseValue: i48  <|@  <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@12a70898
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i469 i631 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i469 i631  <|@  <|@
tid ?1168 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v856 
stateDuring: ?1168 
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v856 stateDuring: ?1168 #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SHR v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1174  <|@  <|@
f <@~|@floating>@ <|@
tid i1175 <|@
result int[-217619|0xfffffffffffcaded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -217619
stableDimension: 0
stamp: i32 [-217619] ⇊00000000fffcaded ⇈00000000fffcaded
stampKind: i32
value: int[-217619|0xfffffffffffcaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
v1072 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-217619|0xfffffffffffcaded]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1176 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-217619 - -209171] ⇊00000000fffc8ced ⇈00000000fffcefed
valueDescription: i32
=== Inputs ===
merge: v1173 
values: i1175 i1180 
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1173 values: i1175 i1180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1174 v1179 
=== Succesors ===
next: v1178 
=== Usages ===
i1176 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1174 v1179 #next: v1178  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i469 - 
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i469 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?65 
actionAndReason: i1176 
speculation: a5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1173 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?65 actionAndReason: i1176 speculation: a5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v1|QWORD[.] - - v43|DWORD - 
>@ <|@ instruction DEOPT info [bci:140] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1202  <|@  <|@
f <@~|@floating>@ <|@
tid i1203 <|@
result int[-198939|0xfffffffffffcf6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -198939
stableDimension: 0
stamp: i32 [-198939] ⇊00000000fffcf6e5 ⇈00000000fffcf6e5
stampKind: i32
value: int[-198939|0xfffffffffffcf6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
v1060 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198939|0xfffffffffffcf6e5], Object[null]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1200 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid i1201 <|@
result int[-196379|0xfffffffffffd00e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -196379
stableDimension: 0
stamp: i32 [-196379] ⇊00000000fffd00e5 ⇈00000000fffd00e5
stampKind: i32
value: int[-196379|0xfffffffffffd00e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196379|0xfffffffffffd00e5], Object[null]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid a1199 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@76223066
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@76223066]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1198 <|@
result int[-195388|0xfffffffffffd04c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -195388
stableDimension: 0
stamp: i32 [-195388] ⇊00000000fffd04c4 ⇈00000000fffd04c4
stampKind: i32
value: int[-195388|0xfffffffffffd04c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1191 
=== Predecessor ===
v1052 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@76223066] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195388|0xfffffffffffd04c4], v90|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1194 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-198939 - -195083] ⇊00000000fffc00c4 ⇈00000000fffdf7f5
valueDescription: i32
=== Inputs ===
merge: v1191 
values: i1198 i1201 i1203 
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1191 values: i1198 i1201 i1203  <|@  <|@
f <@~|@floating>@ <|@
tid a1195 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1191 
values: a1199 a5 a5 
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1191 values: a1199 a5 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1197 v1200 v1202 
=== Succesors ===
next: v1196 
=== Usages ===
i1194 a1195 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1197 v1200 v1202 #next: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?466 
actionAndReason: i1194 
speculation: a1195 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1191 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?466 actionAndReason: i1194 speculation: a1195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD, v92|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v92|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - v43|DWORD - 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592257270390784481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i119 
y: i36 
=== Succesors ===
=== Usages ===
i1171 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i119 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
v512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SHL v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v93|DWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B19" "B65" 
    successors "B67" "B78" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i507 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v502 
values: i276 i119 
=== Succesors ===
=== Usages ===
?504 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v502 values: i276 i119  <|@  <|@
f <@~|@floating>@ <|@
tid i1171 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v502 
values: i404 i403 
=== Succesors ===
=== Usages ===
i1172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v502 values: i404 i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v503 v505 
=== Succesors ===
next: a1501 
=== Usages ===
i507 i1171 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v503 v505 #next: a1501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1501 <|@
result v96|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v1502 
=== Usages ===
a868 v1542 v1522 
=== Predecessor ===
v502 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v1502  <|@  <|@
tid ?504 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - i507 
=== Succesors ===
=== Usages ===
v1209 a1390 v1502 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - i507  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
result [v96|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1501 
=== Succesors ===
=== Usages ===
v1502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1502 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?504 
guard: - 
address: v1542 
=== Succesors ===
next: v1081 
=== Usages ===
v1450 
=== Predecessor ===
a1501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?504 guard: - address: v1542 #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1502 
y: v1435 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1502 y: v1435  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1450 
=== Succesors ===
trueSuccessor: v1078 
falseSuccessor: v1080 
=== Usages ===
=== Predecessor ===
v1502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1450 #trueSuccessor: v1078 #falseSuccessor: v1080  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction CMP [v96|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B77" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1503 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1503  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
result [v96|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1501 
=== Succesors ===
=== Usages ===
i1503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1503 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1522 
=== Succesors ===
next: v1085 
=== Usages ===
v912 
=== Predecessor ===
v1078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1522 #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid i1172 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1171 
y: i36 
=== Succesors ===
=== Usages ===
v912 v1525 v1523 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1171 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1172 
y: i1503 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1172 y: i1503  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v1082 
falseSuccessor: v1084 
=== Usages ===
=== Predecessor ===
i1503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v1082 #falseSuccessor: v1084  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = INC v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|DWORD, y: [v96|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1504 
=== Usages ===
v932 a1504 v950 
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1504  <|@  <|@
f <@~|@floating>@ <|@
tid a868 <|@
result v98|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1501 
=== Succesors ===
=== Usages ===
v1525 v1523 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1501  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
result [v98|QWORD[.] + v97|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a868 
index: i1172 
=== Succesors ===
=== Usages ===
a1504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a868 index: i1172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1504 <|@
result v99|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1082 
address: v1523 
=== Succesors ===
next: v1131 
=== Usages ===
a882 v883 v1524 v1526 v1543 
=== Predecessor ===
v1082 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1082 address: v1523 #next: v1131  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
value: a1504 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1504  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
result [v98|QWORD[.] + v97|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a868 
index: i1172 
=== Succesors ===
=== Usages ===
v932 v950 j1428 j1421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a868 index: i1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v883 
=== Succesors ===
trueSuccessor: v1130 
falseSuccessor: v1129 
=== Usages ===
=== Predecessor ===
a1504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v883 #trueSuccessor: v1130 #falseSuccessor: v1129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = MOV [v98|QWORD[.] + v97|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v99|DWORD[.], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" 
    xhandlers
    flags 
    probability 4578473702501953058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B75" 
    xhandlers
    flags 
    probability 4592899511474177000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1505  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
result [v99|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1504 
=== Succesors ===
=== Usages ===
v1505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1505 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1543 
=== Succesors ===
next: v1222 
=== Usages ===
v1451 
=== Predecessor ===
v1129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1543 #next: v1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1451 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1505 
y: v1437 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1505 y: v1437  <|@  <|@
f <@*|@fixed>@ <|@
tid v1222 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
trueSuccessorProbability: 0.08246620256962045
=== Inputs ===
condition: v1451 
=== Succesors ===
trueSuccessor: v1220 
falseSuccessor: v1219 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1451 #trueSuccessor: v1220 #falseSuccessor: v1219  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v99|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08246620256962045 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1379 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1379 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1394 
=== Usages ===
v1544 v1545 
=== Predecessor ===
v1220 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1394  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1379 
index: - 
=== Succesors ===
=== Usages ===
j1394 v1396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1394 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
=== Succesors ===
next: j1395 
=== Usages ===
j1452 j1400 v1556 
=== Predecessor ===
j1379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1544 #next: j1395  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1379 
index: - 
=== Succesors ===
=== Usages ===
j1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1395 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
=== Succesors ===
next: v1387 
=== Usages ===
v1384 
=== Predecessor ===
j1394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1545 #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1394 
y: j722 
=== Succesors ===
=== Usages ===
v1384 v1396 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1394 y: j722  <|@  <|@
f <@~|@floating>@ <|@
tid v1384 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1395 
y: j1452 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1395 y: j1452  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1384 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
j1395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1384 #trueSuccessor: v1385 #falseSuccessor: v1386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = LEA [v100|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4546582579059541423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1390 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1390 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?504 
arguments: v1261 i735 i36 
=== Succesors ===
next: j1391 
=== Usages ===
j1391 
=== Predecessor ===
v1385 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?504 arguments: v1261 i735 i36 #next: j1391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1391 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1390 
=== Succesors ===
next: v1401 
=== Usages ===
j1400 
=== Predecessor ===
a1390 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1390 #next: v1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
j1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4576532225783694561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
value: j1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1544 value: j1452 stateAfter: - lastLocationAccess: - #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
result [v100|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1394 
index: - 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1556 
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1556 #next: v1399  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
v1393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v100|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|QWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1400 <|@
result v103|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1398 
values: j1394 j1391 
=== Succesors ===
=== Usages ===
v1548 v1547 a1147 v1557 v1558 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1398 values: j1394 j1391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1399 v1401 
=== Succesors ===
next: a1147 
=== Usages ===
j1400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1399 v1401 #next: a1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1147 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1400 
=== Succesors ===
next: j1410 
=== Usages ===
a1152 
=== Predecessor ===
v1398 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1400 #next: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid j1406 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1090 
=== Succesors ===
=== Usages ===
v1546 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
result [v5|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1406 
index: - 
=== Succesors ===
=== Usages ===
j1410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1406 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1410 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
=== Succesors ===
next: v1411 
=== Usages ===
v1411 
=== Predecessor ===
a1147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1546 #next: v1411  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
result [v103|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1400 
index: - 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1547 
value: j1410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
j1410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1547 value: j1410 stateAfter: - lastLocationAccess: - #next: v1414  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
result [v103|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1400 
index: - 
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1548 
value: v1437 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1506 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1548 value: v1437 stateAfter: - lastLocationAccess: - #next: i1506  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
result [v99|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1504 
=== Succesors ===
=== Usages ===
i1506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1506 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
=== Succesors ===
next: v1418 
=== Usages ===
v1418 
=== Predecessor ===
v1414 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1526 #next: v1418  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
result [v103|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1400 
index: - 
=== Succesors ===
=== Usages ===
v1418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1557 
value: i1506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1420 
=== Usages ===
=== Predecessor ===
i1506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1557 value: i1506 stateAfter: - lastLocationAccess: - #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v1558 <|@
result [v103|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1400 
index: - 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1558 
value: a834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1152 
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1558 value: a834 stateAfter: - lastLocationAccess: - #next: a1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1152 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1147 
=== Succesors ===
next: v1153 
=== Usages ===
a949 
=== Predecessor ===
v1420 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1147 #next: v1153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
a1152 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid a949 <|@
result v107|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
op: Compress
stamp: n -
=== Inputs ===
value: a1152 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1082 
address: v1525 
value: a949 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1421 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1082 address: v1525 value: a949 stateAfter: - lastLocationAccess: - #next: j1421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1421 <|@
result [v98|QWORD[.] + v97|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1525 
=== Succesors ===
next: v1425 
=== Usages ===
j1422 
=== Predecessor ===
v950 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1525 #next: v1425  <|@  <|@
f <@~|@floating>@ <|@
tid j1422 <|@
result v108|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1421 
y: i1248 
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1421 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
result [v108|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1422 
index: j1252 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1422 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1549 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1507 
=== Usages ===
=== Predecessor ===
j1421 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1549 value: i1254 stateAfter: - lastLocationAccess: - #next: a1507  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
result [v99|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1504 
=== Succesors ===
=== Usages ===
a1507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1507 <|@
result v110|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
=== Succesors ===
next: v387 
=== Usages ===
a888 
=== Predecessor ===
v1425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1524 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid a888 <|@
result v111|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1507 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a888 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a1507 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a888 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE v103|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[*]], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v103|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v99|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[*] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[*] + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[.] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[.] + v97|DWORD * 4 + 16], y: v107|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = LEA [v98|QWORD[.] + v97|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[*] = SHR v109|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v108|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[.] = MOV [v99|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v111|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B76" 
    xhandlers
    flags 
    probability 4592220394807176859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
v1219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B75" 
    successors 
    xhandlers
    flags 
    probability 4593135404897289311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1139 v1223 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1139 v1223 #next: v932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1082 
address: v1525 
value: a834 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1428 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1082 address: v1525 value: a834 stateAfter: - lastLocationAccess: - #next: j1428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1428 <|@
result [v98|QWORD[.] + v97|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1525 
=== Succesors ===
next: v1432 
=== Usages ===
j1429 
=== Predecessor ===
v932 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1525 #next: v1432  <|@  <|@
f <@~|@floating>@ <|@
tid j1429 <|@
result v112|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1428 
y: i1248 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1428 y: i1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1550 <|@
result [v112|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1429 
index: j1252 
=== Succesors ===
=== Usages ===
v1432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1429 index: j1252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1550 
value: i1254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
j1428 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1550 value: i1254 stateAfter: - lastLocationAccess: - #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid a882 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1504 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1504  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a882 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1432 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a882 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[.] + v97|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = LEA [v98|QWORD[.] + v97|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = SHR v113|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v112|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v99|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1213 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1213  <|@  <|@
f <@~|@floating>@ <|@
tid i1214 <|@
result int[-224027|0xfffffffffffc94e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -224027
stableDimension: 0
stamp: i32 [-224027] ⇊00000000fffc94e5 ⇈00000000fffc94e5
stampKind: i32
value: int[-224027|0xfffffffffffc94e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-224027|0xfffffffffffc94e5], Object[null]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid a1212 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1976624103
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1976624103]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1211 <|@
result int[-261692|0xfffffffffffc01c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -261692
stableDimension: 0
stamp: i32 [-261692] ⇊00000000fffc01c4 ⇈00000000fffc01c4
stampKind: i32
value: int[-261692|0xfffffffffffc01c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976624103] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-261692|0xfffffffffffc01c4], v115|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1207 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-261692 - -222731] ⇊00000000fffc00c4 ⇈00000000fffc9df5
valueDescription: i32
=== Inputs ===
merge: v1204 
values: i1211 i1214 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1204 values: i1211 i1214  <|@  <|@
f <@~|@floating>@ <|@
tid a1208 <|@
result v117|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1204 
values: a1212 a5 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1204 values: a1212 a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1210 v1213 
=== Succesors ===
next: v1209 
=== Usages ===
i1207 a1208 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1210 v1213 #next: v1209  <|@  <|@
f <@*|@fixed>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?504 
actionAndReason: i1207 
speculation: a1208 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?504 actionAndReason: i1207 speculation: a1208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD, v117|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v117|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e65b119 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6524607172388934 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604052063231338350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608650423607859211
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v12|DWORD, y: [v9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v11|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v13|DWORD[.] * 8] state [bci:2, 15, 16] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604123076867509053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603960533368020962
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580858613392042834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578554611009701057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580855076355273905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580451329060005732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572653611630863302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572639463483787585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533361476810115399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603541169710937883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD, v11|QWORD[.]] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|QWORD[.], y: v29|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.15757821508043224 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604910012404069677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: [v29|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06568048735113552 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604467667926895188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.], v28|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" "B28" 
    successors "B33" "B63" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.], v43|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - v43|DWORD - 
>@ <|@ instruction CMP [v42|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B62" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v42|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHL v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B61" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v45|DWORD * 4 + 16], y: v47|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LEA [v42|QWORD[.] + v45|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = SHR v49|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v48|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v42|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = INC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v50|DWORD[.], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B50" 
    xhandlers
    flags 
    probability 4605370324991763242
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v50|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605167636833232460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B36" "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4605967092993953218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v46|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = LEA [v42|QWORD[.] + v46|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = SHR v76|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v75|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD[.], y: v51|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602180135965352762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOV [v51|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v52|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SAR v83|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = ADD (x: v84|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v44|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4600033125206433134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v86|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600746850767812682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v77|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v79|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: v78|DWORD, ~trueValue: v81|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600424690791163493
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B65" 
    xhandlers
    flags 
    probability 4599932331055264036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597893017701441879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v27|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v30|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594156704534256142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v33|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v35|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v33|QWORD[*] + 16], input: v35|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = COMPRESSPOINTER (input: v34|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.], v28|DWORD] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v44|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SHR v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v88|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592257270390784481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SHL v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v93|DWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B19" "B65" 
    successors "B67" "B78" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction CMP [v96|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B77" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = INC v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|DWORD, y: [v96|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = UNCOMPRESSPOINTER (input: v96|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = MOV [v98|QWORD[.] + v97|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v99|DWORD[.], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B75" 
    xhandlers
    flags 
    probability 4592899511474177000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v99|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08246620256962045 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B76" 
    xhandlers
    flags 
    probability 4592220394807176859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B75" 
    successors 
    xhandlers
    flags 
    probability 4593135404897289311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[.] + v97|DWORD * 4 + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = LEA [v98|QWORD[.] + v97|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = SHR v113|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v112|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v99|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591060069948930994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589699631723408879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589800568547225922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589800568547225922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587318614456906479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD, v23|QWORD[.]] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4587238332670586250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.grow()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:79] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD[.], v39|DWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v53|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582078382270679096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v53|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B45" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV [v119|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[*]], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v50|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[*] + 12], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[*] + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = COMPRESSPOINTER (input: v57|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v46|DWORD * 4 + 16], y: v60|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v42|QWORD[.] + v46|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v61|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD[.], y: v51|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4578236182188004476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV [v51|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v52|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SAR v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = ADD (x: v70|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v44|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4576448992352594219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B66" 
    xhandlers
    flags 
    probability 4581886226102443819
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v12|DWORD] destination: B19 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4580811781034810962
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" 
    xhandlers
    flags 
    probability 4578473702501953058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4577043103520072424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v63|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v65|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD[.], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = CMOVE (falseValue: v64|DWORD, ~trueValue: v67|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4576774934842644297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = LEA [v100|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4576532225783694561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v100|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|QWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE v103|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [v118|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[*]], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v103|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOV [v99|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[*] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v103|QWORD[*] + 16], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[.] = COMPRESSPOINTER (input: v104|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[.] + v97|DWORD * 4 + 16], y: v107|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = LEA [v98|QWORD[.] + v97|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[*] = SHR v109|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v108|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[.] = MOV [v99|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v111|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v44|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHR v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v43|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v74|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564102779623232727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564092838890823290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v122|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4557217021321901035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4552434130990251284
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: v0|QWORD[.] v43|DWORD v1|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - v43|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4546582579059541423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-209171|0xfffffffffffcceed]] destination: B49 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v1|QWORD[.] - - v43|DWORD - 
>@ <|@ instruction DEOPT info [bci:140] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196379|0xfffffffffffd00e5], Object[null]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD, v92|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v92|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - v43|DWORD - 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976624103] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-261692|0xfffffffffffc01c4], v115|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|DWORD, v117|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v117|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v94|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@76223066] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195388|0xfffffffffffd04c4], v90|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -187419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-224027|0xfffffffffffc94e5], Object[null]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-217619|0xfffffffffffcaded]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198939|0xfffffffffffcf6e5], Object[null]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     14
     4: new           #58         // java.lang.UnsupportedOperationException
     7: dup           
     8: ldc           #59         // "null not supported as key!"
    10: invokespecial #49         // java.lang.UnsupportedOperationException.<init>:(java.lang.String)void
    13: athrow        
    14: aload_0       
    15: aload_1       
    16: invokespecial #27         // find:(java.lang.Object)int
    19: istore_3      
    20: iload_3       
    21: iconst_m1     
    22: if_icmpeq     41
    25: aload_0       
    26: iload_3       
    27: invokespecial #0          // getValue:(int)java.lang.Object
    30: astore        4
    32: aload_0       
    33: iload_3       
    34: aload_2       
    35: invokespecial #50         // setValue:(int, java.lang.Object)void
    38: aload         4
    40: areturn       
    41: aload_0       
    42: getfield      #5          // totalEntries:int
    45: istore        4
    47: aload_0       
    48: getfield      #22         // entries:java.lang.Object[]
    51: ifnonnull     66
    54: aload_0       
    55: bipush        8
    57: anewarray     #32         // java.lang.Object
    60: putfield      #22         // entries:java.lang.Object[]
    63: goto          116
    66: aload_0       
    67: getfield      #22         // entries:java.lang.Object[]
    70: arraylength   
    71: iload         4
    73: iconst_1      
    74: ishl          
    75: if_icmpne     116
    78: aload_0       
    79: invokespecial #51         // grow:()void
    82: getstatic     #52         // $assertionsDisabled:boolean
    85: ifne          110
    88: aload_0       
    89: getfield      #22         // entries:java.lang.Object[]
    92: arraylength   
    93: aload_0       
    94: getfield      #5          // totalEntries:int
    97: iconst_1      
    98: ishl          
    99: if_icmpgt     110
   102: new           #64         // java.lang.AssertionError
   105: dup           
   106: invokespecial #53         // java.lang.AssertionError.<init>:()void
   109: athrow        
   110: aload_0       
   111: getfield      #5          // totalEntries:int
   114: istore        4
   116: aload_0       
   117: iload         4
   119: aload_1       
   120: invokespecial #54         // setKey:(int, java.lang.Object)void
   123: aload_0       
   124: iload         4
   126: aload_2       
   127: invokespecial #50         // setValue:(int, java.lang.Object)void
   130: aload_0       
   131: dup           
   132: getfield      #5          // totalEntries:int
   135: iconst_1      
   136: iadd          
   137: putfield      #5          // totalEntries:int
   140: aload_0       
   141: invokespecial #4          // hasHashArray:()boolean
   144: ifeq          184
   147: aload_0       
   148: invokespecial #48         // getHashTableSize:()int
   151: aload_0       
   152: invokevirtual #55         // size:()int
   155: aload_0       
   156: invokevirtual #55         // size:()int
   159: iconst_1      
   160: ishr          
   161: iadd          
   162: if_icmpge     169
   165: iconst_1      
   166: goto          170
   169: iconst_0      
   170: istore        5
   172: aload_0       
   173: aload_1       
   174: iload         4
   176: iload         5
   178: invokespecial #56         // putHashEntry:(java.lang.Object, int, boolean)void
   181: goto          199
   184: aload_0       
   185: getfield      #5          // totalEntries:int
   188: aload_0       
   189: invokespecial #57         // getHashThreshold:()int
   192: if_icmple     199
   195: aload_0       
   196: invokespecial #58         // createHash:()void
   199: aconst_null   
   200: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e65b119 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   14  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction stack:52|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.6524607172388934 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604052063231338350
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608650423607859211
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   34  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rbx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16] <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD[.] = MOV [rdi|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:2, 15, 16] <|@ <|@
      nr   58  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction CMP (x: r9|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604123076867509053
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   76  <|@ instruction rax|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603960533368020962
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16] <|@ <|@
      nr   86  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580858613392042834
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578554611009701057
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16] <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580855076355273905
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580451329060005732
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572653611630863302
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572639463483787585
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533361476810115399
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16] <|@ <|@
      nr  130  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603541169710937883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r11|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.15757821508043224 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604910012404069677
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: r10|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.06568048735113552 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604467667926895188
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" "B28" 
    successors "B33" "B63" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:28, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - r10|DWORD - 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116] <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B62" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B61" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  416  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[.] = MOV [r13|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction rdi|DWORD[.] = MOV [r14|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B50" 
    xhandlers
    flags 
    probability 4605370324991763242
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605167636833232460
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B36" "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4605967092993953218
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction MOV (x: [r13|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  646  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  648  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602180135965352762
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction r8|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  694  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = SAR rax|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4600033125206433134
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr  716  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  718  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600746850767812682
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  658  <|@ instruction CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  660  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rdx|DWORD) condition: = <|@ <|@
      nr  664  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  666  <|@ instruction rsi|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  668  <|@ instruction rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: = <|@ <|@
      nr  670  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600424690791163493
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B65" 
    xhandlers
    flags 
    probability 4599932331055264036
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16] <|@ <|@
      nr  240  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597893017701441879
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  250  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = LEA [r10|QWORD + 48] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594156704534256142
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 240] instr: 0 <|@ <|@
      nr  300  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  308  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction MOV [r10|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr  312  <|@ instruction MOV [r10|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  318  <|@ instruction J (address: [r10|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  320  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction MOVB (x: [r10|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction r8|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr  730  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  734  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr  740  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  742  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592257270390784481
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  816  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  820  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B19" "B65" 
    successors "B67" "B78" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  832  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r14:0, stack:28, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: r14|QWORD[.] rdx|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19] <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B77" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  842  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  848  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  850  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B75" 
    xhandlers
    flags 
    probability 4592899511474177000
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  862  <|@ instruction BRANCH trueDestinationProbability: 0.08246620256962045 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B76" 
    xhandlers
    flags 
    probability 4592220394807176859
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B75" 
    successors 
    xhandlers
    flags 
    probability 4593135404897289311
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  958  <|@ instruction rax|QWORD[.] = LEA [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  962  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  964  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591060069948930994
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B36 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589699631723408879
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589800568547225922
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589800568547225922
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP stack:60|DWORD y: -1 size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587318614456906479
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  192  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4587238332670586250
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.grow()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:79] <|@ <|@
      nr  352  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction rdx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582078382270679096
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B45" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  514  <|@ instruction rcx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [r13|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  528  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  530  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4578236182188004476
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r10|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  578  <|@ instruction rsi|DWORD = SAR rax|DWORD size: DWORD <|@ <|@
      nr  580  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4576448992352594219
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr  598  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  600  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B66" 
    xhandlers
    flags 
    probability 4581886226102443819
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r13|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  206  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B19 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4580811781034810962
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196] <|@ <|@
      nr  680  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  682  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" 
    xhandlers
    flags 
    probability 4578473702501953058
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B69 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4577043103520072424
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  540  <|@ instruction CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  542  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  544  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rdx|DWORD) condition: = <|@ <|@
      nr  546  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  548  <|@ instruction rsi|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  550  <|@ instruction rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: = <|@ <|@
      nr  552  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4576774934842644297
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  870  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4576532225783694561
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  910  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  912  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  920  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction rdx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  930  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  938  <|@ instruction rax|QWORD[.] = LEA [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  942  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  944  <|@ instruction rax|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  946  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  948  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction r10|DWORD = SHR r10|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  616  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564102779623232727
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564092838890823290
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [r14:0, stack:28, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr  286  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4557217021321901035
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196] <|@ <|@
      nr  562  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4552434130990251284
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:64|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:12, stack:16, stack:28, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: r14|QWORD[.] stack:60|DWORD stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - stack:60|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120] <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  486  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4546582579059541423
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  884  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  888  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  890  <|@ st <@st|@reference-map: [r14:0, stack:20, stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr  892  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  902  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r10|DWORD = MOVE input: int[-209171|0xfffffffffffcceed] <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B49 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  756  <|@ st <@st|@reference-map: [r14:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: r14|QWORD[.] stack:40|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction DEOPT info [bci:140] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  776  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-196379|0xfffffffffffd00e5] <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r14:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: r14|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976624103] <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction r10|DWORD = MOVE input: int[-261692|0xfffffffffffc01c4] <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  992  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [r14:0, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@76223066] <|@ <|@
      nr  790  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|DWORD = MOVE input: int[-195388|0xfffffffffffd04c4] <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 668] y: -187419 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [r14:0, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: r14|QWORD[.] stack:40|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  974  <|@ instruction r10|DWORD = MOVE input: int[-224027|0xfffffffffffc94e5] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r10|DWORD = MOVE input: int[-217619|0xfffffffffffcaded] <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  762  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r10|DWORD = MOVE input: int[-198939|0xfffffffffffcf6e5] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     14
     4: new           #58         // java.lang.UnsupportedOperationException
     7: dup           
     8: ldc           #59         // "null not supported as key!"
    10: invokespecial #49         // java.lang.UnsupportedOperationException.<init>:(java.lang.String)void
    13: athrow        
    14: aload_0       
    15: aload_1       
    16: invokespecial #27         // find:(java.lang.Object)int
    19: istore_3      
    20: iload_3       
    21: iconst_m1     
    22: if_icmpeq     41
    25: aload_0       
    26: iload_3       
    27: invokespecial #0          // getValue:(int)java.lang.Object
    30: astore        4
    32: aload_0       
    33: iload_3       
    34: aload_2       
    35: invokespecial #50         // setValue:(int, java.lang.Object)void
    38: aload         4
    40: areturn       
    41: aload_0       
    42: getfield      #5          // totalEntries:int
    45: istore        4
    47: aload_0       
    48: getfield      #22         // entries:java.lang.Object[]
    51: ifnonnull     66
    54: aload_0       
    55: bipush        8
    57: anewarray     #32         // java.lang.Object
    60: putfield      #22         // entries:java.lang.Object[]
    63: goto          116
    66: aload_0       
    67: getfield      #22         // entries:java.lang.Object[]
    70: arraylength   
    71: iload         4
    73: iconst_1      
    74: ishl          
    75: if_icmpne     116
    78: aload_0       
    79: invokespecial #51         // grow:()void
    82: getstatic     #52         // $assertionsDisabled:boolean
    85: ifne          110
    88: aload_0       
    89: getfield      #22         // entries:java.lang.Object[]
    92: arraylength   
    93: aload_0       
    94: getfield      #5          // totalEntries:int
    97: iconst_1      
    98: ishl          
    99: if_icmpgt     110
   102: new           #64         // java.lang.AssertionError
   105: dup           
   106: invokespecial #53         // java.lang.AssertionError.<init>:()void
   109: athrow        
   110: aload_0       
   111: getfield      #5          // totalEntries:int
   114: istore        4
   116: aload_0       
   117: iload         4
   119: aload_1       
   120: invokespecial #54         // setKey:(int, java.lang.Object)void
   123: aload_0       
   124: iload         4
   126: aload_2       
   127: invokespecial #50         // setValue:(int, java.lang.Object)void
   130: aload_0       
   131: dup           
   132: getfield      #5          // totalEntries:int
   135: iconst_1      
   136: iadd          
   137: putfield      #5          // totalEntries:int
   140: aload_0       
   141: invokespecial #4          // hasHashArray:()boolean
   144: ifeq          184
   147: aload_0       
   148: invokespecial #48         // getHashTableSize:()int
   151: aload_0       
   152: invokevirtual #55         // size:()int
   155: aload_0       
   156: invokevirtual #55         // size:()int
   159: iconst_1      
   160: ishr          
   161: iadd          
   162: if_icmpge     169
   165: iconst_1      
   166: goto          170
   169: iconst_0      
   170: istore        5
   172: aload_0       
   173: aload_1       
   174: iload         4
   176: iload         5
   178: invokespecial #56         // putHashEntry:(java.lang.Object, int, boolean)void
   181: goto          199
   184: aload_0       
   185: getfield      #5          // totalEntries:int
   188: aload_0       
   189: invokespecial #57         // getHashThreshold:()int
   192: if_icmple     199
   195: aload_0       
   196: invokespecial #58         // createHash:()void
   199: aconst_null   
   200: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e65b119 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   14  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction stack:52|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.6524607172388934 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604052063231338350
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608650423607859211
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   34  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rbx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16] <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604752478250039547
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD[.] = MOV [rdi|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:2, 15, 16] <|@ <|@
      nr   58  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr   60  <|@ instruction CMP (x: r9|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604123076867509053
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   76  <|@ instruction rax|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603960533368020962
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16] <|@ <|@
      nr   86  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580858613392042834
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   98  <|@ instruction stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578554611009701057
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16] <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580855076355273905
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580451329060005732
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572653611630863302
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572639463483787585
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533361476810115399
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16] <|@ <|@
      nr  130  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603541169710937883
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r11|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.15757821508043224 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604910012404069677
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: r10|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.06568048735113552 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4604467667926895188
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" "B31" "B28" 
    successors "B33" "B63" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:28, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - r10|DWORD - 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116] <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B62" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  388  <|@ instruction rsi|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B61" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" "B37" 
    xhandlers
    flags 
    probability 4606169781152484000
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  416  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  418  <|@ instruction rbx|DWORD[.] = MOV [r13|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  420  <|@ instruction rdi|DWORD[.] = MOV [r14|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B51 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B51" 
    xhandlers
    flags 
    probability 4605370324991763242
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4605967092993953218
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r13|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  646  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  648  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602180135965352762
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction r8|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  694  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = SAR rax|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4600033125206433134
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr  716  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  718  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4600746850767812682
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  658  <|@ instruction CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  660  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rdx|DWORD) condition: = <|@ <|@
      nr  664  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  666  <|@ instruction rsi|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  668  <|@ instruction rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: = <|@ <|@
      nr  670  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600424690791163493
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B65" 
    xhandlers
    flags 
    probability 4599932331055264036
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16] <|@ <|@
      nr  240  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4597893017701441879
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  250  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = LEA [r10|QWORD + 48] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594156704534256142
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 240] instr: 0 <|@ <|@
      nr  300  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594207095284192715
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  308  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction MOV [r10|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr  312  <|@ instruction MOV [r10|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  318  <|@ instruction J (address: [r10|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  320  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction MOVB (x: [r10|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4593252463698843440
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction r8|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr  730  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  734  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr  740  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  742  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592257270390784481
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction r10|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  816  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B19" "B65" 
    successors "B67" "B78" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  206  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  832  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r14:0, stack:28, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: r14|QWORD[.] rdx|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19] <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B77" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  840  <|@ instruction CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  842  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B76" "B70" 
    xhandlers
    flags 
    probability 4593743070741097686
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  848  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  850  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B76 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B76" 
    xhandlers
    flags 
    probability 4592899511474177000
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  862  <|@ instruction BRANCH trueDestinationProbability: 0.08246620256962045 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors 
    xhandlers
    flags 
    probability 4593135404897289311
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  958  <|@ instruction rax|QWORD[.] = LEA [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  960  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  962  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  964  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589699631723408879
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4589800568547225922
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP stack:60|DWORD y: -1 size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4587318614456906479
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  192  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4587238332670586250
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.grow()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:79] <|@ <|@
      nr  352  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction rdx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  446  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  448  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582078382270679096
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B45" 
    xhandlers
    flags 
    probability 4582143242481408946
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  514  <|@ instruction rcx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  522  <|@ instruction MOV (x: [r13|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  528  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  530  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4578236182188004476
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r10|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  576  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  578  <|@ instruction rsi|DWORD = SAR rax|DWORD size: DWORD <|@ <|@
      nr  580  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4576448992352594219
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr  598  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  600  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B66" 
    xhandlers
    flags 
    probability 4581886226102443819
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r13|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B19 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4580811781034810962
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196] <|@ <|@
      nr  680  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  682  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4577043103520072424
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  540  <|@ instruction CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  542  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  544  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rdx|DWORD) condition: = <|@ <|@
      nr  546  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  548  <|@ instruction rsi|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  550  <|@ instruction rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: = <|@ <|@
      nr  552  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4576774934842644297
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  570  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  870  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4576532225783694561
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  910  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  912  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors 
    xhandlers
    flags 
    probability 4576586555117054572
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  920  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction rdx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  930  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  938  <|@ instruction rax|QWORD[.] = LEA [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  942  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  944  <|@ instruction rax|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  946  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3 <|@ <|@
      nr  948  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 4569295181867953477
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction r10|DWORD = SHR r10|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  616  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178] <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  624  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4564102779623232727
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564092838890823290
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [r14:0, stack:28, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr  286  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 4557217021321901035
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196] <|@ <|@
      nr  562  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4552434130990251284
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:64|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:12, stack:16, stack:28, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: r14|QWORD[.] stack:60|DWORD stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - stack:60|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120] <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  486  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4546582579059541423
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  884  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  888  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  890  <|@ st <@st|@reference-map: [r14:0, stack:20, stack:28, stack:32, stack:40, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19] <|@ <|@
      nr  892  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  902  <|@ instruction rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r10|DWORD = MOVE input: int[-209171|0xfffffffffffcceed] <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B49 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  756  <|@ st <@st|@reference-map: [r14:0, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: r14|QWORD[.] stack:40|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction DEOPT info [bci:140] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  776  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-196379|0xfffffffffffd00e5] <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r14:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: r14|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:116] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976624103] <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction r10|DWORD = MOVE input: int[-261692|0xfffffffffffc01c4] <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  990  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  992  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [r14:0, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@76223066] <|@ <|@
      nr  790  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|DWORD = MOVE input: int[-195388|0xfffffffffffd04c4] <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 668] y: -187419 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [r14:0, stack:32, stack:40]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: r14|QWORD[.] stack:40|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: r14|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  974  <|@ instruction r10|DWORD = MOVE input: int[-224027|0xfffffffffffc94e5] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r10|DWORD = MOVE input: int[-217619|0xfffffffffffcaded] <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  762  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r10|DWORD = MOVE input: int[-198939|0xfffffffffffcf6e5] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     14
     4: new           #58         // java.lang.UnsupportedOperationException
     7: dup           
     8: ldc           #59         // "null not supported as key!"
    10: invokespecial #49         // java.lang.UnsupportedOperationException.<init>:(java.lang.String)void
    13: athrow        
    14: aload_0       
    15: aload_1       
    16: invokespecial #27         // find:(java.lang.Object)int
    19: istore_3      
    20: iload_3       
    21: iconst_m1     
    22: if_icmpeq     41
    25: aload_0       
    26: iload_3       
    27: invokespecial #0          // getValue:(int)java.lang.Object
    30: astore        4
    32: aload_0       
    33: iload_3       
    34: aload_2       
    35: invokespecial #50         // setValue:(int, java.lang.Object)void
    38: aload         4
    40: areturn       
    41: aload_0       
    42: getfield      #5          // totalEntries:int
    45: istore        4
    47: aload_0       
    48: getfield      #22         // entries:java.lang.Object[]
    51: ifnonnull     66
    54: aload_0       
    55: bipush        8
    57: anewarray     #32         // java.lang.Object
    60: putfield      #22         // entries:java.lang.Object[]
    63: goto          116
    66: aload_0       
    67: getfield      #22         // entries:java.lang.Object[]
    70: arraylength   
    71: iload         4
    73: iconst_1      
    74: ishl          
    75: if_icmpne     116
    78: aload_0       
    79: invokespecial #51         // grow:()void
    82: getstatic     #52         // $assertionsDisabled:boolean
    85: ifne          110
    88: aload_0       
    89: getfield      #22         // entries:java.lang.Object[]
    92: arraylength   
    93: aload_0       
    94: getfield      #5          // totalEntries:int
    97: iconst_1      
    98: ishl          
    99: if_icmpgt     110
   102: new           #64         // java.lang.AssertionError
   105: dup           
   106: invokespecial #53         // java.lang.AssertionError.<init>:()void
   109: athrow        
   110: aload_0       
   111: getfield      #5          // totalEntries:int
   114: istore        4
   116: aload_0       
   117: iload         4
   119: aload_1       
   120: invokespecial #54         // setKey:(int, java.lang.Object)void
   123: aload_0       
   124: iload         4
   126: aload_2       
   127: invokespecial #50         // setValue:(int, java.lang.Object)void
   130: aload_0       
   131: dup           
   132: getfield      #5          // totalEntries:int
   135: iconst_1      
   136: iadd          
   137: putfield      #5          // totalEntries:int
   140: aload_0       
   141: invokespecial #4          // hasHashArray:()boolean
   144: ifeq          184
   147: aload_0       
   148: invokespecial #48         // getHashTableSize:()int
   151: aload_0       
   152: invokevirtual #55         // size:()int
   155: aload_0       
   156: invokevirtual #55         // size:()int
   159: iconst_1      
   160: ishr          
   161: iadd          
   162: if_icmpge     169
   165: iconst_1      
   166: goto          170
   169: iconst_0      
   170: istore        5
   172: aload_0       
   173: aload_1       
   174: iload         4
   176: iload         5
   178: invokespecial #56         // putHashEntry:(java.lang.Object, int, boolean)void
   181: goto          199
   184: aload_0       
   185: getfield      #5          // totalEntries:int
   188: aload_0       
   189: invokespecial #57         // getHashThreshold:()int
   192: if_icmple     199
   195: aload_0       
   196: invokespecial #58         // createHash:()void
   199: aconst_null   
   200: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404889742430488954242848894c24208502448b561c4c8bd949c1eb0344895c241c49b800e01b17010000004585d20f856c02000041ba00000000660f1f440000448b4e188b5e0c418bf948c1e703413bda0f8ee0000000418bdad1e3423b1ccd0c0000000f83cd070000448b4c9f10438504cc49c1e1034c3bca0f84a70300008b7e20418bc2ffc085ff0f850b000000850500000000448bd0eba581ffaddeadde89442410895c241844895424140f853b000000488bf2498bd148b8ffffffffffffffff666690e8000000009085c00f85b5050000850500000000448b542410488b542428488b742430e951ffffff81ffaddeadde0f842400000048c1e703488bf7488b542428498bc948b8ffffffffffffffff666690e80000000090ebae850500000000448bd0488b542428488b742430e909ffffff4c8bdf448beb4d85db0f8491010000458bd541d1e2453b530c0f84f9020000458bd54d8beb4c8bf6448954241441817d08addeadde0f85a1060000458b5d0c418bf2d1e6443bde0f8637060000448bc641ffc0453bd80f86dc06000049b900e01b1701000000488b542428488bca48c1e90341894cb510498d74b51048c1ee094688240e438b5c8510418b7e1c418bc2ffc085db0f8411000000813cdd08000000addeadde0f84970200008b6c241c43896c85104b8d74851048c1ee094688240e4189460c85ff0f8456000000448b04fd0c000000412b46108bf0d1fe03f04181fb000200000f8324010000413bf0410f9fc0450fb6c0498bf6418bca666690e8000000009048b80000000000000000488b6c24404883c448850500000000c5f877c3418b762081feaddeaddeba08000000b9040000000f44ca85f6be080000000f44ce3bc10f8fce02000048b80000000000000000488b6c24404883c448850500000000c5f877c3488b742430488b5424280f1f440000e8000000009083f8ff488b7424300f85cf000000448b560c448b5e1849c1e303458beae966feffff4d8b57604d8d5a304d3b5f700f87ab0300004d895f60410f1882f000000049b800e01b17010000004d8bda41c7420c0800000049c7020100000041c74208addeaddec5f9efc0c4c17e7f42104d8bd349c1ea03448956184c8bd649c1ea0947882402458bd54d8beb4c8bf6e918feffff4181fb000002000f831005000041d1e8413bf0410f9fc0450fb6c0498bf6418bca0f1f8000000000e8000000009048b80000000000000000488b6c24404883c448850500000000c5f877c3448bd041d1e2448be849b900e01b17010000008b6c241c488b5424284c8bf6418b7618813cf508000000addeadde0f852604000041ffc2443b14f50c0000000f837b04000048c1e603468b5c96104585db0f841200000042813cdd08000000addeadde0f84c501000042896c96104a8d44961048c1e8094688240849c1e303498bc3488b6c24404883c448850500000000c5f877c3895c24184489542414837c2414ff0f8507010000448b560c448b5e1849c1e303458beae9eefcffff4c8bd60f1f440000e800000000904c8b742430418b760c418b561848c1e203448bd64c8beae9e6fcffff8b6c241c498b7760488d4e18493b4f700f876302000049894f600f1886d800000048b9addeaddeaddeadde4c8bd6488b89a800000048890ec74608addeadde8b0cdd0c000000894e0c896e1049c1ea0347895485104b8d74851048c1ee094688240e4189460c85ff0f8493000000448b14fd0c000000412b46108bf0d1fe03f04181fb000200000f8338010000413bf2410f9fc0450fb6c0498bf68b4c24140f1f8000000000e8000000009048b80000000000000000488b6c24404883c448850500000000c5f877c3448b542418448b6c2414e94afeffff498bf6666690e8000000009048b80000000000000000488b6c24404883c448850500000000c5f877c3418b762081feaddeaddeba08000000b9040000000f44ca85f6be080000000f44ce3bc10f8f2301000048b80000000000000000488b6c24404883c448850500000000c5f877c3498b4760488d4818493b4f700f878101000049894f600f1880d800000048baaddeaddeaddeadde488bc8488b92a8000000488910c74008addeadde428b14dd0c00000089500c89681048c1e90342894c96104a8d44961048c1e80946882408428b04dd1000000048c1e003488b6c24404883c448850500000000c5f877c34181fb000002000f83560100008b4c241441d1ea413bf2410f9fc0450fb6c0498bf60f1f8000000000e8000000009048b80000000000000000488b6c24404883c448850500000000c5f877c3488b742430e99cfdffff4c8bf648beaddeaddeaddeaddeba08000000b901000000e800000000904c8bd049b800e01b1701000000498bf6e939fcffff498bf6660f1f440000e8000000009048b80000000000000000488b6c24404883c448850500000000c5f877c389442418897c2410895c240c448944240844895c240448beaddeaddeaddeaddeba02000000b901000000e80000000090488bf08b4424188b7c24108b5c240c448b442408448b5c240449b900e01b17010000008b6c241c488b542428e947fdffff44895c24144889742430448954240448baaddeaddeaddeadde488bf2ba02000000b901000000e80000000090448b5c2414488b742430448b54240449b900e01b17010000008b6c241ce93cfeffff41baedcefcff4589979c0200004d89a7a8020000e8000000009049bb0000000000000000458bc2488b4c2420488b54242841bae500fdff4589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bac401fcff4589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bac404fdff448b442414488b4c2420488b542428eba14c8bf641c7879c020000e523fdff4d89a7a8020000e8000000009049bb000000000000000041bae594fcffeb9b41baedadfcffe938ffffff49bb0000000000000000458bc2488b4c2420488b54242841bae5f6fcffe947ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e65b119 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 63 [rcx:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 63 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 14 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 69 16 r11|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 76 18 stack:52|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 81 20 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 91 22 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 94 24 BRANCH trueDestinationProbability: 0.6524607172388934 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22  <||@
  Comment 100 block B1 null  <||@
  Comment 100 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 28 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 106 30 JUMP ~[] destination: B1 -> B2  <||@
  Comment 106 block B2 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 106 32 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 112 34 r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 116 36 rbx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 119 38 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 126 40 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 129 42 BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21  <||@
  Comment 135 block B3 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 135 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 46 rbx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 140 48 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16]  <||@
  Comment 140 [rdx:0, rsi:0, rdi:0, stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 148 50 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20  <||@
  Comment 154 block B4 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 154 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 54 r9|DWORD[.] = MOV [rdi|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 159 56 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:2, 15, 16]  <||@
  Comment 159 [rdx:0, rsi:0, r9:0, stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 159 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 58 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 167 60 CMP (x: r9|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 170 62 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 176 block B6 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 176 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 74 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 179 76 rax|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 184 78 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 186 80 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 192 block B7 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 192 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 84 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16]  <||@
  Comment 192 [rdx:0, rsi:0, stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 192 {infopoint: SAFEPOINT}  <||@
  Comment 192 11  <||@
  Comment 198 86 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 201 88 JUMP ~[] destination: B7 -> B2  <||@
  Comment 203 block B8 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 203 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 92 CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 203 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 209 98 stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 213 100 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 217 102 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 222 94 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 228 block B9 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 228 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 228 104 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 231 106 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 234 108 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16]  <||@
  Comment 234 7  <||@
  Comment 247 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 252 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 253 110 JUMP ~[] destination: B9 -> B13  <||@
  Comment 253 block B13 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 253 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 253 154 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 255 156 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 261 block B14 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 261 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 160 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16]  <||@
  Comment 261 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 261 {infopoint: SAFEPOINT}  <||@
  Comment 261 11  <||@
  Comment 267 162 r10|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 272 164 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 277 166 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 282 168 JUMP ~[] destination: B14 -> B2  <||@
  Comment 287 block B10 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 287 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 120 CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 287 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 293 122 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 299 block B12 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 299 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 140 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 303 142 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 306 144 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 311 146 rcx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 314 148 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16]  <||@
  Comment 314 7  <||@
  Comment 327 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 332 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 333 150 JUMP ~[] destination: B12 -> B13  <||@
  Comment 335 block B11 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 335 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 128 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16]  <||@
  Comment 335 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 335 {infopoint: SAFEPOINT}  <||@
  Comment 335 11  <||@
  Comment 341 130 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 344 132 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 349 134 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 354 136 JUMP ~[] destination: B11 -> B2  <||@
  Comment 359 block B21 null  <||@
  Comment 359 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 359 226 r11|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 362 228 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 365 230 JUMP ~[] destination: B21 -> B24  <||@
  Comment 365 block B24 null  <||@
  Comment 365 258 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 365 260 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 368 262 BRANCH trueDestinationProbability: 0.15757821508043224 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29  <||@
  Comment 374 block B29 null  <||@
  Comment 374 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 338 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 380 340 CMP (x: r10|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD  <||@
  Comment 384 342 BRANCH trueDestinationProbability: 0.06568048735113552 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 390 block B31 null  <||@
  Comment 390 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 368 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 393 370 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 396 372 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 399 374 JUMP ~[] destination: B31 -> B32  <||@
  Comment 399 block B32 null  <||@
  Comment 399 376 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 399 378 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 404 380 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116]  <||@
  Comment 404 [r13:0, r14:0, stack:28, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4          |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |r10|DWORD  |-   <||@
  Comment 404 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 404 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 412 382 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B63  <||@
  Comment 418 block B33 null  <||@
  Comment 418 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 386 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 422 388 rsi|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 427 390 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 430 392 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B62  <||@
  Comment 436 block B34 null  <||@
  Comment 436 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 396 r8|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 442 398 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 445 400 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B61  <||@
  Comment 451 block B35 null  <||@
  Comment 451 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 404 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 461 406 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 466 408 rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 473 410 MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 478 412 rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 483 414 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 487 416 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 491 418 rbx|DWORD[.] = MOV [r13|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 496 420 rdi|DWORD[.] = MOV [r14|QWORD[.] + 28] size: DWORD  <||@
  Comment 500 422 rax|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 505 424 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 507 426 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B51 falseDestination: B35 -> B37  <||@
  Comment 513 block B37 null  <||@
  Comment 513 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 436 CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 513 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 524 438 BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B51  <||@
  Comment 530 block B51 null  <||@
  Comment 530 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 430 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 534 640 MOV (x: [r13|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 539 642 rsi|QWORD[.] = LEA [r13|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 544 644 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 548 646 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 552 648 MOV (x: [r14|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 556 650 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 558 652 BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 564 block B55 null  <||@
  Comment 564 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 692 r8|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 572 694 rax|DWORD = SUB (x: rax|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD  <||@
  Comment 576 696 rsi|DWORD = SAR rax|DWORD size: DWORD  <||@
  Comment 580 698 rsi|DWORD = ADD (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 582 700 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 589 702 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 595 block B56 null  <||@
  Comment 595 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 595 706 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 598 708 r8|DWORD = SETCC condition: >  <||@
  Comment 606 710 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 609 712 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 612 714 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178]  <||@
  Comment 612 9  <||@
  Comment 615 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 620 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 621 716 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 631 718 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 640 12  <||@
  Comment 650 block B52 null  <||@
  Comment 650 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 656 rsi|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 654 658 CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 654 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 660 660 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 665 662 rcx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rdx|DWORD) condition: =  <||@
  Comment 673 664 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 675 666 rsi|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 680 668 rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: =  <||@
  Comment 683 670 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 685 672 BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 691 block B54 null  <||@
  Comment 691 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 691 686 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 701 688 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 710 12  <||@
  Comment 720 block B22 null  <||@
  Comment 720 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 234 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 725 236 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 730 238 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16]  <||@
  Comment 730 9  <||@
  Comment 735 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 740 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 741 240 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 744 246 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 749 242 BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B65  <||@
  Comment 755 block B23 null  <||@
  Comment 755 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 755 248 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 759 250 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 763 252 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 767 254 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 770 256 JUMP ~[] destination: B23 -> B24  <||@
  Comment 775 block B25 null  <||@
  Comment 775 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 775 266 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 779 268 r11|QWORD = LEA [r10|QWORD + 48] size: QWORD  <||@
  Comment 783 270 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 787 272 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 793 block B27 null  <||@
  Comment 793 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 793 296 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 797 298 AMD64PREFETCH ~[r10|QWORD + 240] instr: 0  <||@
  Comment 805 300 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 805 302 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 815 304 JUMP ~[] destination: B27 -> B28  <||@
  Comment 815 block B28 null  <||@
  Comment 815 306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 815 308 r11|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 818 310 MOV [r10|QWORD[*] + 12] y: 8 size: DWORD  <||@
  Comment 826 312 MOV [r10|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 833 314 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 833 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 841 316 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 845 318 J (address: [r10|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 851 320 r10|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 858 322 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 862 324 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 869 326 MOVB (x: [r10|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 873 328 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 876 330 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 879 332 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 882 334 JUMP ~[] destination: B28 -> B32  <||@
  Comment 887 block B57 null  <||@
  Comment 887 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 722 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 894 724 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 900 block B58 null  <||@
  Comment 900 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 900 728 r8|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 903 730 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 906 732 r8|DWORD = SETCC condition: >  <||@
  Comment 914 734 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 917 736 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 920 738 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178]  <||@
  Comment 920 9  <||@
  Comment 927 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 932 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 933 740 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 943 742 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 952 12  <||@
  Comment 962 block B65 null  <||@
  Comment 962 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 962 814 r10|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 968 816 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 971 826 JUMP ~[] destination: B65 -> B66  <||@
  Comment 971 block B66 null  <||@
  Comment 971 828 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 971 204 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 981 206 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 985 208 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 990 210 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 993 830 rsi|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD  <||@
  Comment 997 832 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19]  <||@
  Comment 997 [rdx:0, rbp:0, rsi:0, r14:0, stack:28, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]  |rdx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |              |                   |   |   |    <||@
  Comment 997 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 997 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1008 834 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B78  <||@
  Comment 1014 block B67 null  <||@
  Comment 1014 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1014 838 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1017 840 CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1025 842 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B77  <||@
  Comment 1031 block B68 null  <||@
  Comment 1031 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1031 846 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1035 848 r11|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1040 850 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1043 852 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B76 falseDestination: B68 -> B70  <||@
  Comment 1049 block B70 null  <||@
  Comment 1049 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 860 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1049 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1061 862 BRANCH trueDestinationProbability: 0.08246620256962045 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B76  <||@
  Comment 1067 block B76 null  <||@
  Comment 1067 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1067 956 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1072 958 rax|QWORD[.] = LEA [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1077 960 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1081 962 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1085 964 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1089 966 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1092 968 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1101 12  <||@
  Comment 1111 block B5 null  <||@
  Comment 1111 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1111 66 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1115 68 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1120 70 JUMP ~[] destination: B5 -> B17  <||@
  Comment 1120 block B17 null  <||@
  Comment 1120 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1120 182 CMP stack:60|DWORD y: -1 size: DWORD  <||@
  Comment 1125 184 BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 1131 block B18 null  <||@
  Comment 1131 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1131 188 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1135 190 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1139 192 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1143 194 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1146 196 JUMP ~[] destination: B18 -> B24  <||@
  Comment 1151 block B30 null  <||@
  Comment 1151 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1151 346 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 350 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.grow()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:79]  <||@
  Comment 1154 9  <||@
  Comment 1159 {HotSpotMethod<EconomicMapImpl.grow()>}  <||@
  Comment 1164 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 1165 352 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 354 rsi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 1174 356 rdx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD  <||@
  Comment 1178 358 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1182 360 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1185 362 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1188 364 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1193 block B38 null  <||@
  Comment 1193 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1193 442 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1197 444 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1201 446 rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1205 448 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1209 450 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1215 block B40 null  <||@
  Comment 1215 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 494 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1219 496 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1226 498 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1226 500 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1226 block B41 null  <||@
  Comment 1226 502 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1226 504 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1226 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1236 506 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1239 508 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 1246 510 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1249 512 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1249 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1256 514 rcx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1263 516 MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 1266 518 MOV (x: [rsi|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1269 520 r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1273 522 MOV (x: [r13|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1278 524 rsi|QWORD[.] = LEA [r13|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1283 526 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1287 528 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1291 530 MOV (x: [r14|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1295 532 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 1297 534 BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B45  <||@
  Comment 1303 block B45 null  <||@
  Comment 1303 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 574 r10|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1311 576 rax|DWORD = SUB (x: rax|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD  <||@
  Comment 1315 578 rsi|DWORD = SAR rax|DWORD size: DWORD  <||@
  Comment 1319 580 rsi|DWORD = ADD (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1321 582 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 1328 584 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47  <||@
  Comment 1334 block B46 null  <||@
  Comment 1334 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1334 588 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1337 590 r8|DWORD = SETCC condition: >  <||@
  Comment 1345 592 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1348 594 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1352 596 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178]  <||@
  Comment 1352 9  <||@
  Comment 1359 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 1364 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1365 598 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1375 600 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1384 12  <||@
  Comment 1394 block B19 null  <||@
  Comment 1394 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 200 r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1399 202 r13|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1404 212 JUMP ~[] destination: B19 -> B66  <||@
  Comment 1409 block B53 null  <||@
  Comment 1409 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1409 676 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1412 678 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196]  <||@
  Comment 1412 9  <||@
  Comment 1415 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1420 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1421 680 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1431 682 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1440 12  <||@
  Comment 1450 block B42 null  <||@
  Comment 1450 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1450 538 rsi|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 1454 540 CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 1454 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 1460 542 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1465 544 rcx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rdx|DWORD) condition: =  <||@
  Comment 1473 546 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1475 548 rsi|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1480 550 rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: =  <||@
  Comment 1483 552 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1485 554 BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 1491 block B44 null  <||@
  Comment 1491 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 568 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1501 570 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1510 12  <||@
  Comment 1520 block B71 null  <||@
  Comment 1520 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1520 866 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1524 868 rcx|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1528 870 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1532 872 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 1538 block B73 null  <||@
  Comment 1538 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 908 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1542 910 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1549 912 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1549 914 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1549 block B74 null  <||@
  Comment 1549 916 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1549 918 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1549 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1559 920 rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1562 922 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1569 924 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1572 926 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1572 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1579 928 rdx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1587 930 MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1590 932 MOV (x: [rax|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1593 934 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1597 936 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1602 938 rax|QWORD[.] = LEA [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1607 940 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1611 942 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1615 944 rax|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1623 946 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1627 948 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1636 12  <||@
  Comment 1646 block B47 null  <||@
  Comment 1646 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1646 604 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 1653 606 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49  <||@
  Comment 1659 block B48 null  <||@
  Comment 1659 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 610 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1663 612 r10|DWORD = SHR r10|DWORD size: DWORD  <||@
  Comment 1666 614 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1669 616 r8|DWORD = SETCC condition: >  <||@
  Comment 1677 618 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1680 620 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178]  <||@
  Comment 1680 9  <||@
  Comment 1687 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 1692 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1693 622 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1703 624 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1712 12  <||@
  Comment 1722 block B15 null  <||@
  Comment 1722 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1722 172 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1727 174 JUMP ~[] destination: B15 -> B17  <||@
  Comment 1732 block B26 null  <||@
  Comment 1732 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1732 276 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1735 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1735 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1745 280 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1750 282 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1755 284 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19]  <||@
  Comment 1755 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1760 [r14:0, stack:28, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                           |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]                |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |                   |                   |   |   |    <||@
  Comment 1761 286 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1764 288 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1774 290 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1777 292 JUMP ~[] destination: B26 -> B28  <||@
  Comment 1782 block B43 null  <||@
  Comment 1782 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1782 558 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1785 560 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196]  <||@
  Comment 1785 9  <||@
  Comment 1791 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1796 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1797 562 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1807 564 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1816 12  <||@
  Comment 1826 block B39 null  <||@
  Comment 1826 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1826 454 stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1830 456 stack:64|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 1834 458 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1838 460 stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1843 462 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1848 464 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1848 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1858 466 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1863 468 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1868 470 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120]  <||@
  Comment 1868 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1873 [r13:0, r14:0, stack:12, stack:16, stack:28, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9, duringCall: false, rethrow: false]
              |0             |1               |2                 
     locals:  |r14|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120, duringCall: true, rethrow: false]
              |0             |1                  |2                  |3  |4               |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |stack:60|DWORD  |-   <||@
  Comment 1874 472 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1877 474 rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1881 476 rdi|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1885 478 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1889 480 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1894 482 r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1899 484 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1909 486 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1913 488 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1918 490 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1923 block B72 null  <||@
  Comment 1923 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1923 876 stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1928 878 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1933 880 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1938 882 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1938 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1948 884 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1951 886 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1956 888 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1961 890 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19]  <||@
  Comment 1961 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1966 [r14:0, stack:20, stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |                   |                   |   |   |    <||@
  Comment 1967 892 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1967 894 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1972 896 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1977 898 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1982 900 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1992 902 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1996 904 JUMP ~[] destination: B72 -> B74  <||@
  Comment 2001 block B49 null  <||@
  Comment 2001 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2001 628 r10|DWORD = MOVE input: int[-209171|0xfffffffffffcceed]  <||@
  Comment 2007 630 JUMP ~[] destination: B49 -> B60  <||@
  Comment 2007 block B60 null  <||@
  Comment 2007 750 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2007 752 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2014 754 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2021 756 DEOPT info [bci:140]  <||@
  Comment 2021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2026 [r14:0, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4               |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 2027 block B62 null  <||@
  Comment 2027 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2027 774 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2037 776 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2040 778 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2045 780 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2050 782 r10|DWORD = MOVE input: int[-196379|0xfffffffffffd00e5]  <||@
  Comment 2056 784 JUMP ~[] destination: B62 -> B64  <||@
  Comment 2056 block B64 null  <||@
  Comment 2056 802 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2056 804 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2063 806 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2070 808 DEOPT info [bci:116]  <||@
  Comment 2070 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2075 [rcx:0, rdx:0, r14:0]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4         |5 
     locals:  |r14|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |r8|DWORD  |-   <||@
  Comment 2076 block B78 null  <||@
  Comment 2076 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2076 980 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976624103]  <||@
  Comment 2076 {Object[d.a@1976624103]}  <||@
  Comment 2086 982 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2089 984 r10|DWORD = MOVE input: int[-261692|0xfffffffffffc01c4]  <||@
  Comment 2095 986 JUMP ~[] destination: B78 -> B79  <||@
  Comment 2095 block B79 null  <||@
  Comment 2095 988 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2095 990 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2102 992 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2109 994 DEOPT info [bci:19]  <||@
  Comment 2109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2114 [r14:0, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |                   |                   |   |   |    <||@
  Comment 2115 block B63 null  <||@
  Comment 2115 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2115 788 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@76223066]  <||@
  Comment 2115 {Object[d.a@76223066]}  <||@
  Comment 2125 790 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2128 792 r10|DWORD = MOVE input: int[-195388|0xfffffffffffd04c4]  <||@
  Comment 2134 794 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2139 796 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2144 798 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2149 800 JUMP ~[] destination: B63 -> B64  <||@
  Comment 2151 block B20 null  <||@
  Comment 2151 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2151 216 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2154 218 MOV [r15|QWORD + 668] y: -187419 size: DWORD  <||@
  Comment 2165 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2172 222 DEOPT info [bci:2, 15, 16]  <||@
  Comment 2172 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2177 [r14:0, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1                  |2          |3 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 2178 block B77 null  <||@
  Comment 2178 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2178 972 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2188 974 r10|DWORD = MOVE input: int[-224027|0xfffffffffffc94e5]  <||@
  Comment 2194 976 JUMP ~[] destination: B77 -> B79  <||@
  Comment 2196 block B59 null  <||@
  Comment 2196 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2196 746 r10|DWORD = MOVE input: int[-217619|0xfffffffffffcaded]  <||@
  Comment 2202 748 JUMP ~[] destination: B59 -> B60  <||@
  Comment 2207 block B61 null  <||@
  Comment 2207 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2207 760 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2217 762 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2220 764 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2225 766 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2230 768 r10|DWORD = MOVE input: int[-198939|0xfffffffffffcf6e5]  <||@
  Comment 2236 770 JUMP ~[] destination: B61 -> B64  <||@
  Comment 2241 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2241 4  <||@
  Comment 2247 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2247 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5583[org.graalvm.collections.EconomicMapImpl.put(Object, Object)]"
  method "HotSpotCompilation-5583[org.graalvm.collections.EconomicMapImpl.put(Object, Object)]"
  date 1527005150171
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078e6e40 448b560849c1e203493bc20f850ff0f1fe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404889742430488954242848894c24208502448b561c4c8bd949c1eb0344895c241c49b800e01b17010000004585d20f856c02000041ba00000000660f1f440000448b4e188b5e0c418bf948c1e703413bda0f8ee0000000418bdad1e3423b1ccd0c0000000f83cd070000448b4c9f10438504cc49c1e1034c3bca0f84a70300008b7e20418bc2ffc085ff0f850b00000085050081fafc448bd0eba581ff750300d889442410895c241844895424140f853b000000488bf2498bd148b8ffffffffffffffff666690e8a4f3f1fe9085c00f85b50500008505bb80fafc448b542410488b542428488b742430e951ffffff81ff770300d80f842400000048c1e703488bf7488b542428498bc948b8ffffffffffffffff666690e854f3f1fe90ebae85057180fafc448bd0488b542428488b742430e909ffffff4c8bdf448beb4d85db0f8491010000458bd541d1e2453b530c0f84f9020000458bd54d8beb4c8bf6448954241441817d08f52200f80f85a1060000458b5d0c418bf2d1e6443bde0f8637060000448bc641ffc0453bd80f86dc06000049b900e01b1701000000488b542428488bca48c1e90341894cb510498d74b51048c1ee094688240e438b5c8510418b7e1c418bc2ffc085db0f8411000000813cdd08000000bc3e01f80f84970200008b6c241c43896c85104b8d74851048c1ee094688240e4189460c85ff0f8456000000448b04fd0c000000412b46108bf0d1fe03f04181fb000200000f8324010000413bf0410f9fc0450fb6c0498bf6418bca666690e8f4eff1fe9048b80000000000000000488b6c24404883c4488505407ffafcc5f877c3418b762081fe770300d8ba08000000b9040000000f44ca85f6be080000000f44ce3bc10f8fce02000048b80000000000000000488b6c24404883c4488505fa7efafcc5f877c3488b742430488b5424280f1f440000e87ceff1fe9083f8ff488b7424300f85cf000000448b560c448b5e1849c1e303458beae966feffff4d8b57604d8d5a304d3b5f700f87ab0300004d895f60410f1882f000000049b800e01b17010000004d8bda41c7420c0800000049c7020100000041c74208f52200f8c5f9efc0c4c17e7f42104d8bd349c1ea03448956184c8bd649c1ea0947882402458bd54d8beb4c8bf6e918feffff4181fb000002000f831005000041d1e8413bf0410f9fc0450fb6c0498bf6418bca0f1f8000000000e8bceef1fe9048b80000000000000000488b6c24404883c4488505087efafcc5f877c3448bd041d1e2448be849b900e01b17010000008b6c241c488b5424284c8bf6418b7618813cf508000000f52200f80f852604000041ffc2443b14f50c0000000f837b04000048c1e603468b5c96104585db0f841200000042813cdd08000000bc3e01f80f84c501000042896c96104a8d44961048c1e8094688240849c1e303498bc3488b6c24404883c4488505737dfafcc5f877c3895c24184489542414837c2414ff0f8507010000448b560c448b5e1849c1e303458beae9eefcffff4c8bd60f1f440000e8d4edf1fe904c8b742430418b760c418b561848c1e203448bd64c8beae9e6fcffff8b6c241c498b7760488d4e18493b4f700f876302000049894f600f1886d800000048b9e0f509c0070000004c8bd6488b89a800000048890ec74608bc3e01f88b0cdd0c000000894e0c896e1049c1ea0347895485104b8d74851048c1ee094688240e4189460c85ff0f8493000000448b14fd0c000000412b46108bf0d1fe03f04181fb000200000f8338010000413bf2410f9fc0450fb6c0498bf68b4c24140f1f8000000000e80cedf1fe9048b80000000000000000488b6c24404883c4488505587cfafcc5f877c3448b542418448b6c2414e94afeffff498bf6666690e8d4ecf1fe9048b80000000000000000488b6c24404883c4488505207cfafcc5f877c3418b762081fe770300d8ba08000000b9040000000f44ca85f6be080000000f44ce3bc10f8f2301000048b80000000000000000488b6c24404883c4488505da7bfafcc5f877c3498b4760488d4818493b4f700f878101000049894f600f1880d800000048bae0f509c007000000488bc8488b92a8000000488910c74008bc3e01f8428b14dd0c00000089500c89681048c1e90342894c96104a8d44961048c1e80946882408428b04dd1000000048c1e003488b6c24404883c44885055c7bfafcc5f877c34181fb000002000f83560100008b4c241441d1ea413bf2410f9fc0450fb6c0498bf60f1f8000000000e8c4ebf1fe9048b80000000000000000488b6c24404883c4488505107bfafcc5f877c3488b742430e99cfdffff4c8bf648be680b00c007000000ba08000000b901000000e8c0f86aff904c8bd049b800e01b1701000000498bf6e939fcffff498bf6660f1f440000e85cebf1fe9048b80000000000000000488b6c24404883c4488505a87afafcc5f877c389442418897c2410895c240c448944240844895c240448be680b00c007000000ba02000000b901000000e84ff86aff90488bf08b4424188b7c24108b5c240c448b442408448b5c240449b900e01b17010000008b6c241c488b542428e947fdffff44895c24144889742430448954240448ba680b00c007000000488bf2ba02000000b901000000e8f2f76aff90448b5c2414488b742430448b54240449b900e01b17010000008b6c241ce93cfeffff41baedcefcff4589979c0200004d89a7a8020000e8d4fff1fe9049bb0000000000000000458bc2488b4c2420488b54242841bae500fdff4589979c0200004d899fa8020000e8a3fff1fe9049bad8addbbe070000004d8bda41bac401fcff4589979c0200004d899fa8020000e87cfff1fe9049baa8addbbe070000004d8bda41bac404fdff448b442414488b4c2420488b542428eba14c8bf641c7879c020000e523fdff4d89a7a8020000e83dfff1fe9049bb000000000000000041bae594fcffeb9b41baedadfcffe938ffffff49bb0000000000000000458bc2488b4c2420488b54242841bae5f6fcffe947ffffffe81a2f36ff90e8f4fdf1fe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e65b119 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 63 [rcx:0, rdx:0, rsi:0, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 63 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 14 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 69 16 r11|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 76 18 stack:52|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 81 20 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 91 22 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 94 24 BRANCH trueDestinationProbability: 0.6524607172388934 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B22  <||@
  Comment 100 block B1 null  <||@
  Comment 100 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 28 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 106 30 JUMP ~[] destination: B1 -> B2  <||@
  Comment 106 block B2 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 106 32 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 112 34 r9|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 116 36 rbx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 119 38 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 126 40 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 129 42 BRANCH trueDestinationProbability: 0.5507111845837876 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21  <||@
  Comment 135 block B3 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 135 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 46 rbx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 140 48 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16]  <||@
  Comment 140 [rdx:0, rsi:0, rdi:0, stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 148 50 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20  <||@
  Comment 154 block B4 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 154 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 54 r9|DWORD[.] = MOV [rdi|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 159 56 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:2, 15, 16]  <||@
  Comment 159 [rdx:0, rsi:0, r9:0, stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 159 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 163 58 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 167 60 CMP (x: r9|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 170 62 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 176 block B6 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 176 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 74 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 179 76 rax|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 184 78 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 186 80 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 192 block B7 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 192 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 84 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16]  <||@
  Comment 192 [rdx:0, rsi:0, stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 192 {infopoint: SAFEPOINT}  <||@
  Comment 192 11  <||@
  Comment 198 86 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 201 88 JUMP ~[] destination: B7 -> B2  <||@
  Comment 203 block B8 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 203 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 92 CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 203 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 209 98 stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 213 100 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 217 102 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 222 94 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 228 block B9 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 228 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 228 104 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 231 106 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 234 108 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16]  <||@
  Comment 234 7  <||@
  Comment 247 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 252 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 253 110 JUMP ~[] destination: B9 -> B13  <||@
  Comment 253 block B13 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 253 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 253 154 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 255 156 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 261 block B14 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 261 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 160 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16]  <||@
  Comment 261 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 261 {infopoint: SAFEPOINT}  <||@
  Comment 261 11  <||@
  Comment 267 162 r10|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 272 164 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 277 166 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 282 168 JUMP ~[] destination: B14 -> B2  <||@
  Comment 287 block B10 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 287 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 120 CMP rdi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 287 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 293 122 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 299 block B12 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 299 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 140 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 303 142 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 306 144 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 311 146 rcx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 314 148 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16]  <||@
  Comment 314 7  <||@
  Comment 327 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 332 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 333 150 JUMP ~[] destination: B12 -> B13  <||@
  Comment 335 block B11 loop 0 depth 1 header:275|LoopBegin  <||@
  Comment 335 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 128 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16]  <||@
  Comment 335 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 335 {infopoint: SAFEPOINT}  <||@
  Comment 335 11  <||@
  Comment 341 130 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 344 132 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 349 134 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 354 136 JUMP ~[] destination: B11 -> B2  <||@
  Comment 359 block B21 null  <||@
  Comment 359 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 359 226 r11|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 362 228 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 365 230 JUMP ~[] destination: B21 -> B24  <||@
  Comment 365 block B24 null  <||@
  Comment 365 258 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 365 260 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 368 262 BRANCH trueDestinationProbability: 0.15757821508043224 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B29  <||@
  Comment 374 block B29 null  <||@
  Comment 374 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 338 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 380 340 CMP (x: r10|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD  <||@
  Comment 384 342 BRANCH trueDestinationProbability: 0.06568048735113552 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 390 block B31 null  <||@
  Comment 390 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 368 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 393 370 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 396 372 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 399 374 JUMP ~[] destination: B31 -> B32  <||@
  Comment 399 block B32 null  <||@
  Comment 399 376 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 399 378 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 404 380 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116]  <||@
  Comment 404 [r13:0, r14:0, stack:28, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4          |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |r10|DWORD  |-   <||@
  Comment 404 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 404 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 412 382 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B63  <||@
  Comment 418 block B33 null  <||@
  Comment 418 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 386 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 422 388 rsi|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 427 390 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 430 392 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B62  <||@
  Comment 436 block B34 null  <||@
  Comment 436 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 396 r8|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 442 398 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 445 400 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B61  <||@
  Comment 451 block B35 null  <||@
  Comment 451 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 404 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 461 406 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 466 408 rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 473 410 MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 478 412 rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 483 414 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 487 416 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 491 418 rbx|DWORD[.] = MOV [r13|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 496 420 rdi|DWORD[.] = MOV [r14|QWORD[.] + 28] size: DWORD  <||@
  Comment 500 422 rax|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 505 424 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 507 426 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B51 falseDestination: B35 -> B37  <||@
  Comment 513 block B37 null  <||@
  Comment 513 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 436 CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 513 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 524 438 BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B51  <||@
  Comment 530 block B51 null  <||@
  Comment 530 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 430 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 534 640 MOV (x: [r13|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 539 642 rsi|QWORD[.] = LEA [r13|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 544 644 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 548 646 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 552 648 MOV (x: [r14|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 556 650 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 558 652 BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 564 block B55 null  <||@
  Comment 564 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 692 r8|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 572 694 rax|DWORD = SUB (x: rax|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD  <||@
  Comment 576 696 rsi|DWORD = SAR rax|DWORD size: DWORD  <||@
  Comment 580 698 rsi|DWORD = ADD (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 582 700 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 589 702 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 595 block B56 null  <||@
  Comment 595 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 595 706 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 598 708 r8|DWORD = SETCC condition: >  <||@
  Comment 606 710 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 609 712 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 612 714 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178]  <||@
  Comment 612 9  <||@
  Comment 615 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 620 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 621 716 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 631 718 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 640 12  <||@
  Comment 650 block B52 null  <||@
  Comment 650 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 656 rsi|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 654 658 CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 654 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 660 660 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 665 662 rcx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rdx|DWORD) condition: =  <||@
  Comment 673 664 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 675 666 rsi|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 680 668 rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: =  <||@
  Comment 683 670 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 685 672 BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 691 block B54 null  <||@
  Comment 691 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 691 686 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 701 688 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 710 12  <||@
  Comment 720 block B22 null  <||@
  Comment 720 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 234 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 725 236 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 730 238 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16]  <||@
  Comment 730 9  <||@
  Comment 735 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 740 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 741 240 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 744 246 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 749 242 BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B65  <||@
  Comment 755 block B23 null  <||@
  Comment 755 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 755 248 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 759 250 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 763 252 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 767 254 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 770 256 JUMP ~[] destination: B23 -> B24  <||@
  Comment 775 block B25 null  <||@
  Comment 775 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 775 266 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 779 268 r11|QWORD = LEA [r10|QWORD + 48] size: QWORD  <||@
  Comment 783 270 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 787 272 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 793 block B27 null  <||@
  Comment 793 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 793 296 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 797 298 AMD64PREFETCH ~[r10|QWORD + 240] instr: 0  <||@
  Comment 805 300 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 805 302 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 815 304 JUMP ~[] destination: B27 -> B28  <||@
  Comment 815 block B28 null  <||@
  Comment 815 306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 815 308 r11|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 818 310 MOV [r10|QWORD[*] + 12] y: 8 size: DWORD  <||@
  Comment 826 312 MOV [r10|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 833 314 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 833 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 841 316 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 845 318 J (address: [r10|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 851 320 r10|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 858 322 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 862 324 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 869 326 MOVB (x: [r10|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 873 328 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 876 330 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 879 332 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 882 334 JUMP ~[] destination: B28 -> B32  <||@
  Comment 887 block B57 null  <||@
  Comment 887 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 722 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 894 724 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 900 block B58 null  <||@
  Comment 900 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 900 728 r8|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 903 730 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 906 732 r8|DWORD = SETCC condition: >  <||@
  Comment 914 734 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 917 736 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 920 738 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178]  <||@
  Comment 920 9  <||@
  Comment 927 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 932 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 933 740 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 943 742 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 952 12  <||@
  Comment 962 block B65 null  <||@
  Comment 962 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 962 814 r10|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 968 816 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 971 826 JUMP ~[] destination: B65 -> B66  <||@
  Comment 971 block B66 null  <||@
  Comment 971 828 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 971 204 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 981 206 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 985 208 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 990 210 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 993 830 rsi|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD  <||@
  Comment 997 832 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19]  <||@
  Comment 997 [rdx:0, rbp:0, rsi:0, r14:0, stack:28, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]  |rdx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |              |                   |   |   |    <||@
  Comment 997 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 997 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1008 834 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B78  <||@
  Comment 1014 block B67 null  <||@
  Comment 1014 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1014 838 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1017 840 CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1025 842 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B67 -> B68 falseDestination: B67 -> B77  <||@
  Comment 1031 block B68 null  <||@
  Comment 1031 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1031 846 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1035 848 r11|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1040 850 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1043 852 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B76 falseDestination: B68 -> B70  <||@
  Comment 1049 block B70 null  <||@
  Comment 1049 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 860 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1049 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1061 862 BRANCH trueDestinationProbability: 0.08246620256962045 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B76  <||@
  Comment 1067 block B76 null  <||@
  Comment 1067 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1067 956 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1072 958 rax|QWORD[.] = LEA [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1077 960 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1081 962 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1085 964 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1089 966 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1092 968 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1101 12  <||@
  Comment 1111 block B5 null  <||@
  Comment 1111 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1111 66 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1115 68 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1120 70 JUMP ~[] destination: B5 -> B17  <||@
  Comment 1120 block B17 null  <||@
  Comment 1120 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1120 182 CMP stack:60|DWORD y: -1 size: DWORD  <||@
  Comment 1125 184 BRANCH trueDestinationProbability: 0.6968056199593498 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 1131 block B18 null  <||@
  Comment 1131 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1131 188 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1135 190 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1139 192 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1143 194 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1146 196 JUMP ~[] destination: B18 -> B24  <||@
  Comment 1151 block B30 null  <||@
  Comment 1151 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1151 346 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 350 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.grow()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:79]  <||@
  Comment 1154 9  <||@
  Comment 1159 {HotSpotMethod<EconomicMapImpl.grow()>}  <||@
  Comment 1164 [stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 1165 352 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 354 rsi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 1174 356 rdx|DWORD[.] = MOV [r14|QWORD[.] + 24] size: DWORD  <||@
  Comment 1178 358 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1182 360 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1185 362 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1188 364 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1193 block B38 null  <||@
  Comment 1193 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1193 442 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1197 444 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1201 446 rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1205 448 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1209 450 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1215 block B40 null  <||@
  Comment 1215 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 494 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1219 496 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1226 498 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1226 500 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1226 block B41 null  <||@
  Comment 1226 502 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1226 504 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1226 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1236 506 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1239 508 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 1246 510 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1249 512 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1249 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1256 514 rcx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1263 516 MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 1266 518 MOV (x: [rsi|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1269 520 r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1273 522 MOV (x: [r13|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1278 524 rsi|QWORD[.] = LEA [r13|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1283 526 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1287 528 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1291 530 MOV (x: [r14|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1295 532 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 1297 534 BRANCH trueDestinationProbability: 0.4540134600818152 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B45  <||@
  Comment 1303 block B45 null  <||@
  Comment 1303 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 574 r10|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1311 576 rax|DWORD = SUB (x: rax|DWORD, ~y: [r14|QWORD[.] + 16]) size: DWORD  <||@
  Comment 1315 578 rsi|DWORD = SAR rax|DWORD size: DWORD  <||@
  Comment 1319 580 rsi|DWORD = ADD (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1321 582 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 1328 584 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47  <||@
  Comment 1334 block B46 null  <||@
  Comment 1334 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1334 588 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1337 590 r8|DWORD = SETCC condition: >  <||@
  Comment 1345 592 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1348 594 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1352 596 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178]  <||@
  Comment 1352 9  <||@
  Comment 1359 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 1364 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1365 598 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1375 600 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1384 12  <||@
  Comment 1394 block B19 null  <||@
  Comment 1394 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 200 r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1399 202 r13|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1404 212 JUMP ~[] destination: B19 -> B66  <||@
  Comment 1409 block B53 null  <||@
  Comment 1409 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1409 676 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1412 678 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196]  <||@
  Comment 1412 9  <||@
  Comment 1415 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1420 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1421 680 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1431 682 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1440 12  <||@
  Comment 1450 block B42 null  <||@
  Comment 1450 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1450 538 rsi|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 1454 540 CMP rsi|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 1454 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 1460 542 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1465 544 rcx|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rdx|DWORD) condition: =  <||@
  Comment 1473 546 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1475 548 rsi|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1480 550 rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: =  <||@
  Comment 1483 552 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1485 554 BRANCH trueDestinationProbability: 0.04553349332106027 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 1491 block B44 null  <||@
  Comment 1491 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 568 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1501 570 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1510 12  <||@
  Comment 1520 block B71 null  <||@
  Comment 1520 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1520 866 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1524 868 rcx|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1528 870 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1532 872 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 1538 block B73 null  <||@
  Comment 1538 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1538 908 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1542 910 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1549 912 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1549 914 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1549 block B74 null  <||@
  Comment 1549 916 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1549 918 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1549 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1559 920 rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1562 922 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1569 924 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1572 926 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1572 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1579 928 rdx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1587 930 MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1590 932 MOV (x: [rax|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1593 934 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1597 936 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1602 938 rax|QWORD[.] = LEA [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1607 940 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1611 942 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1615 944 rax|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1623 946 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@75e33fec encoding: base: 0 shift: 3  <||@
  Comment 1627 948 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1636 12  <||@
  Comment 1646 block B47 null  <||@
  Comment 1646 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1646 604 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 1653 606 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49  <||@
  Comment 1659 block B48 null  <||@
  Comment 1659 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 610 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1663 612 r10|DWORD = SHR r10|DWORD size: DWORD  <||@
  Comment 1666 614 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1669 616 r8|DWORD = SETCC condition: >  <||@
  Comment 1677 618 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1680 620 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178]  <||@
  Comment 1680 9  <||@
  Comment 1687 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 1692 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1693 622 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1703 624 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1712 12  <||@
  Comment 1722 block B15 null  <||@
  Comment 1722 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1722 172 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1727 174 JUMP ~[] destination: B15 -> B17  <||@
  Comment 1732 block B26 null  <||@
  Comment 1732 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1732 276 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1735 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1735 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1745 280 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1750 282 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1755 284 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19]  <||@
  Comment 1755 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1760 [r14:0, stack:28, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                           |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]                |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |                   |                   |   |   |    <||@
  Comment 1761 286 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1764 288 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1774 290 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1777 292 JUMP ~[] destination: B26 -> B28  <||@
  Comment 1782 block B43 null  <||@
  Comment 1782 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1782 558 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1785 560 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196]  <||@
  Comment 1785 9  <||@
  Comment 1791 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1796 []at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1797 562 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1807 564 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1816 12  <||@
  Comment 1826 block B39 null  <||@
  Comment 1826 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1826 454 stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1830 456 stack:64|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 1834 458 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1838 460 stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1843 462 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1848 464 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1848 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1858 466 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1863 468 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1868 470 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120]  <||@
  Comment 1868 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1873 [r13:0, r14:0, stack:12, stack:16, stack:28, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9, duringCall: false, rethrow: false]
              |0             |1               |2                 
     locals:  |r14|QWORD[.]  |stack:60|DWORD  |stack:40|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120, duringCall: true, rethrow: false]
              |0             |1                  |2                  |3  |4               |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |stack:60|DWORD  |-   <||@
  Comment 1874 472 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1877 474 rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1881 476 rdi|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1885 478 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1889 480 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1894 482 r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1899 484 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1909 486 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1913 488 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1918 490 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1923 block B72 null  <||@
  Comment 1923 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1923 876 stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1928 878 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1933 880 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1938 882 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1938 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1948 884 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1951 886 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1956 888 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1961 890 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19]  <||@
  Comment 1961 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1966 [r14:0, stack:20, stack:28, stack:32, stack:40, stack:48]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |                   |                   |   |   |    <||@
  Comment 1967 892 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1967 894 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1972 896 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1977 898 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1982 900 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1992 902 rbp|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1996 904 JUMP ~[] destination: B72 -> B74  <||@
  Comment 2001 block B49 null  <||@
  Comment 2001 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2001 628 r10|DWORD = MOVE input: int[-209171|0xfffffffffffcceed]  <||@
  Comment 2007 630 JUMP ~[] destination: B49 -> B60  <||@
  Comment 2007 block B60 null  <||@
  Comment 2007 750 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2007 752 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2014 754 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2021 756 DEOPT info [bci:140]  <||@
  Comment 2021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2026 [r14:0, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4               |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 2027 block B62 null  <||@
  Comment 2027 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2027 774 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2037 776 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2040 778 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2045 780 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2050 782 r10|DWORD = MOVE input: int[-196379|0xfffffffffffd00e5]  <||@
  Comment 2056 784 JUMP ~[] destination: B62 -> B64  <||@
  Comment 2056 block B64 null  <||@
  Comment 2056 802 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2056 804 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2063 806 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2070 808 DEOPT info [bci:116]  <||@
  Comment 2070 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2075 [rcx:0, rdx:0, r14:0]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4         |5 
     locals:  |r14|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |r8|DWORD  |-   <||@
  Comment 2076 block B78 null  <||@
  Comment 2076 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2076 980 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1976624103]  <||@
  Comment 2076 {Object[d.a@1976624103]}  <||@
  Comment 2086 982 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2089 984 r10|DWORD = MOVE input: int[-261692|0xfffffffffffc01c4]  <||@
  Comment 2095 986 JUMP ~[] destination: B78 -> B79  <||@
  Comment 2095 block B79 null  <||@
  Comment 2095 988 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2095 990 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2102 992 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2109 994 DEOPT info [bci:19]  <||@
  Comment 2109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2114 [r14:0, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |                   |                   |   |   |    <||@
  Comment 2115 block B63 null  <||@
  Comment 2115 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2115 788 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@76223066]  <||@
  Comment 2115 {Object[d.a@76223066]}  <||@
  Comment 2125 790 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2128 792 r10|DWORD = MOVE input: int[-195388|0xfffffffffffd04c4]  <||@
  Comment 2134 794 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2139 796 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2144 798 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2149 800 JUMP ~[] destination: B63 -> B64  <||@
  Comment 2151 block B20 null  <||@
  Comment 2151 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2151 216 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2154 218 MOV [r15|QWORD + 668] y: -187419 size: DWORD  <||@
  Comment 2165 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2172 222 DEOPT info [bci:2, 15, 16]  <||@
  Comment 2172 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2177 [r14:0, stack:32, stack:40]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1                  |2          |3 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                  |2                  |3  |4  |5 
     locals:  |r14|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 2178 block B77 null  <||@
  Comment 2178 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2178 972 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2188 974 r10|DWORD = MOVE input: int[-224027|0xfffffffffffc94e5]  <||@
  Comment 2194 976 JUMP ~[] destination: B77 -> B79  <||@
  Comment 2196 block B59 null  <||@
  Comment 2196 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2196 746 r10|DWORD = MOVE input: int[-217619|0xfffffffffffcaded]  <||@
  Comment 2202 748 JUMP ~[] destination: B59 -> B60  <||@
  Comment 2207 block B61 null  <||@
  Comment 2207 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2207 760 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2217 762 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2220 764 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2225 766 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2230 768 r10|DWORD = MOVE input: int[-198939|0xfffffffffffcf6e5]  <||@
  Comment 2236 770 JUMP ~[] destination: B61 -> B64  <||@
  Comment 2241 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2241 4  <||@
  Comment 2247 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2247 5  <||@
  HexCodeFile>>> <|@
end_nmethod
