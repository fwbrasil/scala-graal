begin_compilation
  name " HotSpotCompilation-2355[java.nio.DirectByteBuffer.putChar(char)]"
  method "HotSpotCompilation-2355[java.nio.DirectByteBuffer.putChar(char)]"
  date 1527005140974
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i82 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i82  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/nio/DirectByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v15 v86 v87 v89 v88 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
=== Succesors ===
next: i83 
=== Usages ===
i18 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 #next: i83  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i83 v48 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 5]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
=== Succesors ===
next: v68 
=== Usages ===
i18 i26 j9 
=== Predecessor ===
i82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v87 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 8]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: i32
=== Inputs ===
x: i82 
y: i83 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i82 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 3]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 v19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i4 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [0 - 65535] ⇈000000000000ffff
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i32 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
i83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12051
stableDimension: 0
stamp: i32 [-12051] ⇊00000000ffffd0ed ⇈00000000ffffd0ed
stampKind: i32
value: int[-12051|0xffffffffffffd0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i84 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i84  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
displacement: 42
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.nativeByteOrder
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 14]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v89 
=== Succesors ===
next: v72 
=== Usages ===
i55 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v89 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 14]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i84 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:510) [bci: 3]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 17]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i28 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i55 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 17]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
i84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v69 #falseSuccessor: v71  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 17]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:529) [bci: 32]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: i32
=== Inputs ===
x: i83 
y: i4 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i83 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:529) [bci: 33]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
value: i26 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j85 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v87 value: i26 stateAfter: - lastLocationAccess: - #next: j85  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j85 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j85 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.address
nodeSourcePosition: at java.nio.DirectByteBuffer.ix(DirectByteBuffer.java:245) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v88 
=== Succesors ===
next: v60 
=== Usages ===
v90 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v88 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at java.nio.DirectByteBuffer.ix(DirectByteBuffer.java:245) [bci: 5]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 7]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i83 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i83  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j9 
index: j85 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j9 index: j85  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.reverseBytes(char) [bci: -1]
at java.nio.Bits.swap(Bits.java:53) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 27]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: i32 [-2147483648 - 2147418112] ⇈00000000ffff0000
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@ReverseBytes|@org.graalvm.compiler.replacements.nodes.ReverseBytesNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.reverseBytes(char) [bci: -1]
at java.nio.Bits.swap(Bits.java:53) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 27]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.lang.Character.reverseBytes(char) [bci: -1]
at java.nio.Bits.swap(Bits.java:53) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 27]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i32 
y: i33 
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i32 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.lang.Character.reverseBytes(char) [bci: -1]
at java.nio.Bits.swap(Bits.java:53) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 27]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
resultBits: 16
stamp: i16
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: OFF_HEAP_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.putChar(long, char) [bci: -1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 30]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v90 
value: i35 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
j85 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v90 value: i35 stateAfter: - lastLocationAccess: - #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:525) [bci: 16]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 17]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14355
stableDimension: 0
stamp: i32 [-14355] ⇊00000000ffffc7ed ⇈00000000ffffc7ed
stampKind: i32
value: int[-14355|0xffffffffffffc7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-14355 - -12051] ⇊00000000ffffc0ed ⇈00000000ffffd7ed
valueDescription: i32
=== Inputs ===
merge: v73 
values: i75 i81 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v73 values: i75 i81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v80 
=== Succesors ===
next: v79 
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v80 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<DirectByteBuffer.putChar(char)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: DirectByteBuffer.java
sourceLine: 524
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i77 
speculation: a76 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i77 speculation: a76  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i82 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i82  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/nio/DirectByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v15 v86 v87 v89 v88 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i82 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
=== Succesors ===
next: i83 
=== Usages ===
i18 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 #next: i83  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i83 v48 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i83 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 5]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
=== Succesors ===
next: v68 
=== Usages ===
i18 i26 j9 
=== Predecessor ===
i82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v87 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 8]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: i32
=== Inputs ===
x: i82 
y: i83 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i82 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 3]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 v19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i4 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [0 - 65535] ⇈000000000000ffff
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i32 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
i83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2be0ff34 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v2|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result int[-12051|0xffffffffffffd0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12051
stableDimension: 0
stamp: i32 [-12051] ⇊00000000ffffd0ed ⇈00000000ffffd0ed
stampKind: i32
value: int[-12051|0xffffffffffffd0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12051|0xffffffffffffd0ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:526) [bci: 10]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i84 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i84  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
result [v0|QWORD[.] + 42] <|@
d <@d|@=== Debug Properties ===
displacement: 42
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i84 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.nativeByteOrder
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 14]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v89 
=== Succesors ===
next: v72 
=== Usages ===
i55 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v89 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 14]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i84 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:510) [bci: 3]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 17]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i28 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i55 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 17]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
i84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v69 #falseSuccessor: v71  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZXB [v0|QWORD[.] + 42] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 17]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:529) [bci: 32]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
stamp: i32
=== Inputs ===
x: i83 
y: i4 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i83 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:529) [bci: 33]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
value: i26 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j85 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v87 value: i26 stateAfter: - lastLocationAccess: - #next: j85  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j85 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j85 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.address
nodeSourcePosition: at java.nio.DirectByteBuffer.ix(DirectByteBuffer.java:245) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v88 
=== Succesors ===
next: v60 
=== Usages ===
v90 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v88 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at java.nio.DirectByteBuffer.ix(DirectByteBuffer.java:245) [bci: 5]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 7]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i83 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i83  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
result [v8|QWORD + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j9 
index: j85 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j9 index: j85  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.reverseBytes(char) [bci: -1]
at java.nio.Bits.swap(Bits.java:53) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 27]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: i32 [-2147483648 - 2147418112] ⇈00000000ffff0000
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@ReverseBytes|@org.graalvm.compiler.replacements.nodes.ReverseBytesNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.reverseBytes(char) [bci: -1]
at java.nio.Bits.swap(Bits.java:53) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 27]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.lang.Character.reverseBytes(char) [bci: -1]
at java.nio.Bits.swap(Bits.java:53) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 27]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i32 
y: i33 
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i32 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.lang.Character.reverseBytes(char) [bci: -1]
at java.nio.Bits.swap(Bits.java:53) [bci: 1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 27]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
resultBits: 16
stamp: i16
=== Inputs ===
value: i34 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: OFF_HEAP_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.putChar(long, char) [bci: -1]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 30]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v90 
value: i35 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
j85 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v90 value: i35 stateAfter: - lastLocationAccess: - #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:525) [bci: 16]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA [v3|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = BSWAP v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SAR v9|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD + v7|QWORD * 1], y: v10|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:512) [bci: 17]
at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result int[-14355|0xffffffffffffc7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14355
stableDimension: 0
stamp: i32 [-14355] ⇊00000000ffffc7ed ⇈00000000ffffc7ed
stampKind: i32
value: int[-14355|0xffffffffffffc7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14355|0xffffffffffffc7ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i77 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-14355 - -12051] ⇊00000000ffffc0ed ⇈00000000ffffd7ed
valueDescription: i32
=== Inputs ===
merge: v73 
values: i75 i81 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v73 values: i75 i81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v80 
=== Succesors ===
next: v79 
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v80 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<DirectByteBuffer.putChar(char)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: DirectByteBuffer.java
sourceLine: 524
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i77 
speculation: a76 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i77 speculation: a76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2be0ff34 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v2|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVZXB [v0|QWORD[.] + 42] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LEA [v3|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = BSWAP v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SAR v9|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD + v7|QWORD * 1], y: v10|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12051|0xffffffffffffd0ed]] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14355|0xffffffffffffc7ed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_0       
     3: iconst_2      
     4: invokevirtual #61         // java.nio.Buffer.nextPutIndex:(int)int
     7: invokespecial #25         // ix:(int)long
    10: iload_1       
    11: invokespecial #62         // putChar:(long, char)java.nio.ByteBuffer
    14: pop           
    15: aload_0       
    16: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2be0ff34 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP rax|DWORD y: 2 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + 42] size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rdx|DWORD = BSWAP rdx|DWORD <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 16 size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD + rax|QWORD * 1], y: rdx|DWORD) size: WORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12051|0xffffffffffffd0ed] // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14355|0xffffffffffffc7ed] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_0       
     3: iconst_2      
     4: invokevirtual #61         // java.nio.Buffer.nextPutIndex:(int)int
     7: invokespecial #25         // ix:(int)long
    10: iload_1       
    11: invokespecial #62         // putChar:(long, char)java.nio.ByteBuffer
    14: pop           
    15: aload_0       
    16: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2be0ff34 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP rax|DWORD y: 2 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + 42] size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rax|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rdx|DWORD = BSWAP rdx|DWORD <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 16 size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD + rax|QWORD * 1], y: rdx|DWORD) size: WORD <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12051|0xffffffffffffd0ed] // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14355|0xffffffffffffc7ed] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: aload_0       
     3: iconst_2      
     4: invokevirtual #61         // java.nio.Buffer.nextPutIndex:(int)int
     7: invokespecial #25         // ix:(int)long
    10: iload_1       
    11: invokespecial #62         // putChar:(long, char)java.nio.ByteBuffer
    14: pop           
    15: aload_0       
    16: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b5618412bc283f8020f8c3a0000000fb6462a85c00f8548000000418d4202894618488b46104d63d20fcac1fa106641891402488bc6488b6c24104883c418850500000000c5f877c341baedd0ffff4589979c0200004d89a7a8020000e8000000009041baedc7ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2be0ff34 slotKind: QWORD  <||@
  Comment 48 10 rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 12 r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 55 14 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 58 16 CMP rax|DWORD y: 2 size: DWORD  <||@
  Comment 61 18 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 22 rax|DWORD = MOVZXB [rsi|QWORD[.] + 42] size: DWORD  <||@
  Comment 71 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 73 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 79 block B3 null  <||@
  Comment 79 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 30 rax|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 83 32 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 86 34 rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 90 36 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 93 38 rdx|DWORD = BSWAP rdx|DWORD  <||@
  Comment 95 40 rdx|DWORD = SAR rdx|DWORD y: 16 size: DWORD  <||@
  Comment 98 42 MOV (x: [r10|QWORD + rax|QWORD * 1], y: rdx|DWORD) size: WORD  <||@
  Comment 103 44 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 106 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 115 12  <||@
  Comment 125 block B1 null  <||@
  Comment 125 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 -1 r10|DWORD = MOVE input: int[-12051|0xffffffffffffd0ed]  <||@
  Comment 131 50 JUMP ~[] destination: B1 -> B5  <||@
  Comment 131 block B5 null  <||@
  Comment 131 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 131 58 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 138 60 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 145 62 DEOPT info [bci:0]  <||@
  Comment 145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 150 [rsi:0]at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 151 block B4 null  <||@
  Comment 151 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 -1 r10|DWORD = MOVE input: int[-14355|0xffffffffffffc7ed]  <||@
  Comment 157 54 JUMP ~[] destination: B4 -> B5  <||@
  Comment 159 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 159 4  <||@
  Comment 165 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 165 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2355[java.nio.DirectByteBuffer.putChar(char)]"
  method "HotSpotCompilation-2355[java.nio.DirectByteBuffer.putChar(char)]"
  date 1527005141018
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078068a0 448b560849c1e203493bc20f85aff5fffe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b5618412bc283f8020f8c3a0000000fb6462a85c00f8548000000418d4202894618488b46104d63d20fcac1fa106641891402488bc6488b6c24104883c4188505ed8608fdc5f877c341baedd0ffff4589979c0200004d89a7a8020000e8c80c00ff9041baedc7ffffebe4e8dc3c44ff90e8b60b00ff90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2be0ff34 slotKind: QWORD  <||@
  Comment 48 10 rax|DWORD = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 12 r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 55 14 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 58 16 CMP rax|DWORD y: 2 size: DWORD  <||@
  Comment 61 18 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 22 rax|DWORD = MOVZXB [rsi|QWORD[.] + 42] size: DWORD  <||@
  Comment 71 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 73 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 79 block B3 null  <||@
  Comment 79 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 30 rax|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 83 32 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 86 34 rax|QWORD = MOV [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 90 36 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 93 38 rdx|DWORD = BSWAP rdx|DWORD  <||@
  Comment 95 40 rdx|DWORD = SAR rdx|DWORD y: 16 size: DWORD  <||@
  Comment 98 42 MOV (x: [r10|QWORD + rax|QWORD * 1], y: rdx|DWORD) size: WORD  <||@
  Comment 103 44 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 106 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 115 12  <||@
  Comment 125 block B1 null  <||@
  Comment 125 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 -1 r10|DWORD = MOVE input: int[-12051|0xffffffffffffd0ed]  <||@
  Comment 131 50 JUMP ~[] destination: B1 -> B5  <||@
  Comment 131 block B5 null  <||@
  Comment 131 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 131 58 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 138 60 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 145 62 DEOPT info [bci:0]  <||@
  Comment 145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 150 [rsi:0]at java.nio.DirectByteBuffer.putChar(DirectByteBuffer.java:524) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 151 block B4 null  <||@
  Comment 151 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 -1 r10|DWORD = MOVE input: int[-14355|0xffffffffffffc7ed]  <||@
  Comment 157 54 JUMP ~[] destination: B4 -> B5  <||@
  Comment 159 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 159 4  <||@
  Comment 165 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 165 5  <||@
  HexCodeFile>>> <|@
end_nmethod
