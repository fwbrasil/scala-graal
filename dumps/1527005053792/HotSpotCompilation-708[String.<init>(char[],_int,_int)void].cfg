begin_compilation
  name " HotSpotCompilation-708[java.lang.String.<init>(char[], int, int)]"
  method "HotSpotCompilation-708[java.lang.String.<init>(char[], int, int)]"
  date 1527005111631
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v543 j161 j237 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v545 v544 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v17 v27 j112 i98 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v10 v14 i26 j245 a197 v99 i122 v224 i173 v182 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.<init>(char[], int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 190
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v146 a197 i537 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v14 a197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v63 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9235
stableDimension: 0
stamp: i32 [-9235] ⇊00000000ffffdbed ⇈00000000ffffdbed
stampKind: i32
value: int[-9235|0xffffffffffffdbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i537 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i537  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v544 
=== Succesors ===
next: v13 
=== Usages ===
i26 i98 v17 
=== Predecessor ===
v61 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v544 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i537 
y: i3 
=== Succesors ===
=== Usages ===
v76 v96 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i537 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 v241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j163 j238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 v557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v47 v55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i9 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
stamp: void
trueSuccessorProbability: 0.09332045294092528
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
i537 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i6 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v71 #falseSuccessor: v69  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9491
stableDimension: 0
stamp: i32 [-9491] ⇊00000000ffffdaed ⇈00000000ffffdaed
stampKind: i32
value: int[-9491|0xffffffffffffdaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v75 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11283
stableDimension: 0
stamp: i32 [-11283] ⇊00000000ffffd3ed ⇈00000000ffffd3ed
stampKind: i32
value: int[-11283|0xffffffffffffd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:199) [bci: 46]
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: String.value
nodeSourcePosition: at java.lang.String.<init>(String.java:199) [bci: 46]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: a57 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j161 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: a57 stateAfter: - lastLocationAccess: - #next: j161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.String.<init>(String.java:199) [bci: 46]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v167 
=== Usages ===
j163 
=== Predecessor ===
v47 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid j163 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j161 
y: i162 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j161 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j163 
index: j166 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j163 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
j161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 value: i168 stateAfter: - lastLocationAccess: - #next: v48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.String.<init>(String.java:200) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:200) [bci: 49]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
stamp: i32
=== Inputs ===
x: i537 
y: i4 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i537 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i3 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i26 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v79 #falseSuccessor: v77  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13587
stableDimension: 0
stamp: i32 [-13587] ⇊00000000ffffcaed ⇈00000000ffffcaed
stampKind: i32
value: int[-13587|0xffffffffffffcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v95 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24929
stableDimension: 0
stamp: i32 [-24929] ⇊00000000ffff9e9f ⇈00000000ffff9e9f
stampKind: i32
value: int[-24929|0xffffffffffff9e9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" "B6" "B11" 
    successors 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-24929 - -9235] ⇊00000000ffff8285 ⇈00000000ffffdfff
valueDescription: i32
=== Inputs ===
merge: v140 
values: i142 i150 i152 i154 i156 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v140 values: i142 i150 i152 i154 i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v141 v149 v151 v153 v157 
=== Succesors ===
next: v146 
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v141 v149 v151 v153 v157 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid a143 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i144 
speculation: a143 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i144 speculation: a143  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j176 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j176 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j221 
=== Usages ===
v548 v549 
=== Predecessor ===
v93 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j221  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: - 
=== Succesors ===
=== Usages ===
j221 v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
=== Succesors ===
next: j222 
=== Usages ===
j180 v550 v551 a196 v556 v552 v553 v554 v555 
=== Predecessor ===
j176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v548 #next: j222  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: - 
=== Succesors ===
=== Usages ===
j222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
=== Succesors ===
next: v185 
=== Usages ===
v186 
=== Predecessor ===
j221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v549 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v225 v256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i181 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i181  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
j222 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v184 #falseSuccessor: v183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605524463553879224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i4 
y: i9 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i4 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i173 
y: i204 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i205 
y: i174 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i205 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i175 
=== Succesors ===
=== Usages ===
j180 v552 v553 v554 v555 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i175  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i64
=== Inputs ===
x: j179 
y: j221 
=== Succesors ===
=== Usages ===
v186 v223 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j179 y: j221  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j222 
y: j180 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j222 y: j180  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v191 #falseSuccessor: v190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575857137946559241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4605450971113793196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
value: j180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 value: j180 stateAfter: - lastLocationAccess: - #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j179 
index: j221 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j179 index: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
address: v552 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v552 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j179 
index: j221 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j179 index: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
address: v553 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v553 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j179 
index: j221 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j179 index: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
address: v554 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v554 #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j179 
index: j221 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j179 index: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
address: v555 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v555 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j221 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j221 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 value: i4 stateAfter: - lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j221 
index: - 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j221 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
value: j172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 value: j172 stateAfter: - lastLocationAccess: - #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j221 
index: - 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j221 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
value: v244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v556 value: v244 stateAfter: - lastLocationAccess: - #next: v195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: a196 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j221 
=== Succesors ===
next: v198 
=== Usages ===
a201 
=== Predecessor ===
v195 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j221 #next: v198  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
a196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591197082004145200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591785021524833425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v189 
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v189 #next: a197  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v171 i4 i6 
=== Succesors ===
next: v200 
=== Usages ===
a201 
=== Predecessor ===
v188 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v171 i4 i6 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
a197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v199 
values: a196 a197 
=== Succesors ===
=== Usages ===
v558 a126 v546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: a196 a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v198 v200 
=== Succesors ===
next: v387 
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v198 v200 #next: v387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v259 
=== Usages ===
j388 j390 
=== Predecessor ===
v199 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 3]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i32
=== Inputs ===
x: i537 
y: i3 
=== Succesors ===
=== Usages ===
v99 i122 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i537 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i98 
y: i4 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i98 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v99 
trueValue: i98 
falseValue: i4 
=== Succesors ===
=== Usages ===
j246 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v99 trueValue: i98 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i122 
=== Succesors ===
=== Usages ===
j452 v558 j250 v256 v384 j434 j440 j444 j448 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i122  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j246 
y: j172 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j246 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j452 j503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j407 j470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j448 j500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j416 j476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j444 j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j482 j424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j440 j494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j488 j432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j434 j489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j477 v490 j417 j425 v435 j483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v258 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v257 #falseSuccessor: v258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a201 
index: - 
=== Succesors ===
=== Usages ===
j390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a201 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j390 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v387 
address: v546 
=== Succesors ===
=== Usages ===
v559 v561 v563 v565 v567 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v387 address: v546  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: j112 
=== Succesors ===
=== Usages ===
j388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j112  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v387 
address: v545 
=== Succesors ===
=== Usages ===
v560 v562 v564 v566 v568 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v387 address: v545  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j246 
y: j433 
=== Succesors ===
=== Usages ===
v435 v437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j434 
y: j208 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j434 y: j208  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v260 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v260 #falseSuccessor: v261  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B59" 
    successors "B25" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j425 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v264 
values: j208 j432 
=== Succesors ===
=== Usages ===
v568 j432 v567 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: j208 j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v263 
=== Succesors ===
next: v538 
=== Usages ===
v538 v268 v269 j425 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v263 #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j425 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v264 
address: v568 
=== Succesors ===
next: v521 
=== Usages ===
v521 
=== Predecessor ===
v264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v264 address: v568 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j425 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
value: v538 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 value: v538 stateAfter: - lastLocationAccess: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j425 
y: j114 
=== Succesors ===
=== Usages ===
j417 j425 v437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j425 y: j114  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j434 
y: j432 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j434 y: j432  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v437 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v437 #trueSuccessor: v268 #falseSuccessor: v270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v264 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v264 #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v268 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v273 
values: j208 j432 
=== Succesors ===
=== Usages ===
v566 j424 j408 v441 v565 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v273 values: j208 j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v272 v274 
=== Succesors ===
next: v297 
=== Usages ===
j417 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v272 v274 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j246 
y: j439 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j440 
y: j417 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j440 y: j417  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v296 #falseSuccessor: v295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
v539 
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j417 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v295 
address: v566 
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v295 address: v566 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j417 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
value: v539 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v565 value: v539 stateAfter: - lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid j424 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j417 
y: j227 
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v284 
values: j424 j417 
=== Succesors ===
=== Usages ===
v564 j416 j400 v445 v563 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v284 values: j424 j417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v300 
=== Succesors ===
next: v303 
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v300 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j246 
y: j443 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j444 
y: j408 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j444 y: j408  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v302 #falseSuccessor: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
v540 
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j408 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v301 
address: v564 
=== Succesors ===
next: v517 
=== Usages ===
v517 
=== Predecessor ===
v301 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v301 address: v564 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j408 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
value: v540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v563 value: v540 stateAfter: - lastLocationAccess: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid j416 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j408 
y: j415 
=== Succesors ===
=== Usages ===
j400 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j408 y: j415  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v288 
values: j416 j408 
=== Succesors ===
=== Usages ===
v562 j407 j391 v449 v561 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v288 values: j416 j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v287 v306 
=== Succesors ===
next: v309 
=== Usages ===
j400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v306 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j246 
y: j447 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j448 
y: j400 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j448 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v308 #falseSuccessor: v307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
v541 
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j400 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v307 
address: v562 
=== Succesors ===
next: v515 
=== Usages ===
v515 
=== Predecessor ===
v307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v307 address: v562 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j400 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
value: v541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v561 value: v541 stateAfter: - lastLocationAccess: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid j407 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j400 
y: j393 
=== Succesors ===
=== Usages ===
j391 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j400 y: j393  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v292 
values: j407 j400 
=== Succesors ===
=== Usages ===
v560 v453 v559 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v292 values: j407 j400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v291 v312 
=== Succesors ===
next: v315 
=== Usages ===
j391 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v291 v312 #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j246 
y: j451 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j451  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j452 
y: j391 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j452 y: j391  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v453 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v313 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v453 #trueSuccessor: v314 #falseSuccessor: v313  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
v314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i542 
=== Usages ===
i542 
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i542  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j391 
=== Succesors ===
=== Usages ===
i542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i542 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v313 
address: v560 
=== Succesors ===
next: v513 
=== Usages ===
v513 
=== Predecessor ===
v313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v313 address: v560 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j391 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
value: i542 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
i542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 value: i542 stateAfter: - lastLocationAccess: - #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
v513 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v276 v294 v318 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v276 v294 v318 #next: v456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v325 
=== Usages ===
j458 
=== Predecessor ===
v277 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid j245 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
j250 v384 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j246 
y: j245 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j246 y: j245  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v324 #falseSuccessor: v323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a201 
index: j246 
=== Succesors ===
=== Usages ===
j458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a201 index: j246  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v456 
address: v558 
=== Succesors ===
=== Usages ===
v569 v570 v571 v572 v573 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v456 address: v558  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j245 
y: j246 
=== Succesors ===
=== Usages ===
j503 j489 j494 j497 j500 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j245 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j250 
y: j433 
=== Succesors ===
=== Usages ===
v490 v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j489 
y: j208 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j489 y: j208  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v326 #falseSuccessor: v327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j483 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v330 
values: j208 j488 
=== Succesors ===
=== Usages ===
v573 j488 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v330 values: j208 j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v329 
=== Succesors ===
next: v531 
=== Usages ===
j483 v333 v334 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v329 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j483 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
value: v532 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v573 value: v532 stateAfter: - lastLocationAccess: - #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j483 
y: j114 
=== Succesors ===
=== Usages ===
j477 j483 v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j483 y: j114  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j489 
y: j488 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j489 y: j488  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v333 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v333 #falseSuccessor: v335  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v330 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v330 #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v333 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j477 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v338 
values: j208 j488 
=== Succesors ===
=== Usages ===
v572 j482 j471 v495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: j208 j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v339 
=== Succesors ===
next: v360 
=== Usages ===
j477 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v339 #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j250 
y: j439 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j477 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j494 y: j477  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v358 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v359 #falseSuccessor: v358  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j477 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j477  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
value: v536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 value: v536 stateAfter: - lastLocationAccess: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j477 
y: j227 
=== Succesors ===
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j477 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v349 
values: j482 j477 
=== Succesors ===
=== Usages ===
v571 j476 j465 v498 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: j482 j477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v348 v363 
=== Succesors ===
next: v366 
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v348 v363 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j250 
y: j443 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j497 
y: j471 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j497 y: j471  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j471 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
value: v535 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 value: v535 stateAfter: - lastLocationAccess: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j471 
y: j415 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j471 y: j415  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v528 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j465 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v352 
values: j476 j471 
=== Succesors ===
=== Usages ===
v570 j470 j459 v501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v352 values: j476 j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v351 v369 
=== Succesors ===
next: v372 
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v351 v369 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid j500 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j250 
y: j447 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j500 
y: j465 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j500 y: j465  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v371 #falseSuccessor: v370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j465 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
value: v534 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 value: v534 stateAfter: - lastLocationAccess: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid j470 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j465 
y: j393 
=== Succesors ===
=== Usages ===
j459 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j465 y: j393  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j459 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v355 
values: j470 j465 
=== Succesors ===
=== Usages ===
v569 v504 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: j470 j465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v375 
=== Succesors ===
next: v378 
=== Usages ===
j459 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v375 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j250 
y: j451 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j451  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j503 
y: j459 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j503 y: j459  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v377 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j459 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j459  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
value: i533 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v569 value: i533 stateAfter: - lastLocationAccess: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v330 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v341 v357 v381 
=== Succesors ===
next: a126 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v341 v357 v381 #next: a126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a201 
=== Succesors ===
next: v55 
=== Usages ===
a54 
=== Predecessor ===
v342 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a201 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.<init>(String.java:207) [bci: 78]
op: Compress
stamp: n! -
=== Inputs ===
value: a126 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: String.value
nodeSourcePosition: at java.lang.String.<init>(String.java:207) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: a54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j237 
=== Usages ===
=== Predecessor ===
a126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: a54 stateAfter: - lastLocationAccess: - #next: j237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.String.<init>(String.java:207) [bci: 78]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v241 
=== Usages ===
j238 
=== Predecessor ===
v55 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid j238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:207) [bci: 78]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j237 
y: i162 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j237 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j238 
index: j166 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j238 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:207) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
j237 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v557 value: i168 stateAfter: - lastLocationAccess: - #next: v56  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.String.<init>(String.java:208) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:208) [bci: 81]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v264 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v264  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v543 j161 j237 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v545 v544 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v17 v27 j112 i98 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v10 v14 i26 j245 a197 v99 i122 v224 i173 v182 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.<init>(char[], int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 190
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v146 a197 i537 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v14 a197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v63 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@ee6695c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result int[-9235|0xffffffffffffdbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9235
stableDimension: 0
stamp: i32 [-9235] ⇊00000000ffffdbed ⇈00000000ffffdbed
stampKind: i32
value: int[-9235|0xffffffffffffdbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9235|0xffffffffffffdbed]] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:191) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i537 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i537  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i537 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v544 
=== Succesors ===
next: v13 
=== Usages ===
i26 i98 v17 
=== Predecessor ===
v61 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v544 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i537 
y: i3 
=== Succesors ===
=== Usages ===
v76 v96 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i537 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v167 v241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j163 j238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j166 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 v557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v47 v55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i9 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
stamp: void
trueSuccessorProbability: 0.09332045294092528
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
i537 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:190) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09332045294092528 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i6 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v71 #falseSuccessor: v69  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result int[-9491|0xffffffffffffdaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9491
stableDimension: 0
stamp: i32 [-9491] ⇊00000000ffffdaed ⇈00000000ffffdaed
stampKind: i32
value: int[-9491|0xffffffffffffdaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9491|0xffffffffffffdaed]] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v75 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result int[-11283|0xffffffffffffd3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11283
stableDimension: 0
stamp: i32 [-11283] ⇊00000000ffffd3ed ⇈00000000ffffd3ed
stampKind: i32
value: int[-11283|0xffffffffffffd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11283|0xffffffffffffd3ed]] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:199) [bci: 46]
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: String.value
nodeSourcePosition: at java.lang.String.<init>(String.java:199) [bci: 46]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: a57 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j161 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: a57 stateAfter: - lastLocationAccess: - #next: j161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j161 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.String.<init>(String.java:199) [bci: 46]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v167 
=== Usages ===
j163 
=== Predecessor ===
v47 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid j163 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j161 
y: i162 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j161 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v6|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j163 
index: j166 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j163 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:199) [bci: 46]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
j161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 value: i168 stateAfter: - lastLocationAccess: - #next: v48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.String.<init>(String.java:200) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:200) [bci: 49]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
stamp: i32
=== Inputs ===
x: i537 
y: i4 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i537 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i3 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i26 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v79 #falseSuccessor: v77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
result int[-13587|0xffffffffffffcaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13587
stableDimension: 0
stamp: i32 [-13587] ⇊00000000ffffcaed ⇈00000000ffffcaed
stampKind: i32
value: int[-13587|0xffffffffffffcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13587|0xffffffffffffcaed]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v95 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result int[-24929|0xffffffffffff9e9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24929
stableDimension: 0
stamp: i32 [-24929] ⇊00000000ffff9e9f ⇈00000000ffff9e9f
stampKind: i32
value: int[-24929|0xffffffffffff9e9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24929|0xffffffffffff9e9f]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" "B6" "B11" 
    successors 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i144 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-24929 - -9235] ⇊00000000ffff8285 ⇈00000000ffffdfff
valueDescription: i32
=== Inputs ===
merge: v140 
values: i142 i150 i152 i154 i156 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v140 values: i142 i150 i152 i154 i156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v141 v149 v151 v153 v157 
=== Succesors ===
next: v146 
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v141 v149 v151 v153 v157 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid a143 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i144 
speculation: a143 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i144 speculation: a143  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:190) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j176 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j176 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j221 
=== Usages ===
v548 v549 
=== Predecessor ===
v93 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j221  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: - 
=== Succesors ===
=== Usages ===
j221 v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j221 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
=== Succesors ===
next: j222 
=== Usages ===
j180 v550 v551 a196 v556 v552 v553 v554 v555 
=== Predecessor ===
j176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v548 #next: j222  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: - 
=== Succesors ===
=== Usages ===
j222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j222 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
=== Succesors ===
next: v185 
=== Usages ===
v186 
=== Predecessor ===
j221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v549 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v225 v256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i181 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i181  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
j222 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v184 #falseSuccessor: v183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605524463553879224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i4 
y: i9 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i4 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i173 
y: i204 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i205 
y: i174 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i205 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i175 
=== Succesors ===
=== Usages ===
j180 v552 v553 v554 v555 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i175  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i64
=== Inputs ===
x: j179 
y: j221 
=== Succesors ===
=== Usages ===
v186 v223 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j179 y: j221  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j222 
y: j180 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j222 y: j180  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v191 #falseSuccessor: v190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA [v11|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AND v12|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v14|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575857137946559241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4605450971113793196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
value: j180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 value: j180 stateAfter: - lastLocationAccess: - #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result [v14|QWORD + v9|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j179 
index: j221 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j179 index: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
address: v552 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v552 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result [v14|QWORD + v9|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j179 
index: j221 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j179 index: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
address: v553 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v553 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
result [v14|QWORD + v9|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j179 
index: j221 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j179 index: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
address: v554 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v554 #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result [v14|QWORD + v9|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j179 
index: j221 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j179 index: j221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
address: v555 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v555 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [v9|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j221 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j221 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 value: i4 stateAfter: - lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [v9|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j221 
index: - 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j221 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
value: j172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 value: j172 stateAfter: - lastLocationAccess: - #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
result [v9|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j221 
index: - 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j221 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
value: v244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v556 value: v244 stateAfter: - lastLocationAccess: - #next: v195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: a196 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a196 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j221 
=== Succesors ===
next: v198 
=== Usages ===
a201 
=== Predecessor ===
v195 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j221 #next: v198  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
a196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v9|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591197082004145200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591785021524833425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v189 
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v189 #next: a197  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v171 i4 i6 
=== Succesors ===
next: v200 
=== Usages ===
a201 
=== Predecessor ===
v188 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v171 i4 i6 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
a197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:190) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a201 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v199 
values: a196 a197 
=== Succesors ===
=== Usages ===
v558 a126 v546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v199 values: a196 a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v198 v200 
=== Succesors ===
next: v387 
=== Usages ===
a201 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v198 v200 #next: v387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v259 
=== Usages ===
j388 j390 
=== Predecessor ===
v199 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 3]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
stamp: i32
=== Inputs ===
x: i537 
y: i3 
=== Succesors ===
=== Usages ===
v99 i122 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i537 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i98 
y: i4 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i98 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v99 
trueValue: i98 
falseValue: i4 
=== Succesors ===
=== Usages ===
j246 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v99 trueValue: i98 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i122 
=== Succesors ===
=== Usages ===
j452 v558 j250 v256 v384 j434 j440 j444 j448 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i122  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j246 
y: j172 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j246 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j452 j503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j393 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j407 j470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j448 j500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j415 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j416 j476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j444 j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j482 j424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j440 j494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j488 j432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j434 j489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j477 v490 j417 j425 v435 j483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v258 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v257 #falseSuccessor: v258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v22|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
v257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v19|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a201 
index: - 
=== Succesors ===
=== Usages ===
j390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a201 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j390 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v387 
address: v546 
=== Succesors ===
=== Usages ===
v559 v561 v563 v565 v567 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v387 address: v546  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v1|QWORD[.] + v24|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: j112 
=== Succesors ===
=== Usages ===
j388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j112  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v387 
address: v545 
=== Succesors ===
=== Usages ===
v560 v562 v564 v566 v568 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v387 address: v545  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j246 
y: j433 
=== Succesors ===
=== Usages ===
v435 v437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j434 
y: j208 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j434 y: j208  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v260 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v260 #falseSuccessor: v261  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v19|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = LEA [v1|QWORD[.] + v24|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v22|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B59" 
    successors "B25" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j425 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v264 
values: j208 j432 
=== Succesors ===
=== Usages ===
v568 j432 v567 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v264 values: j208 j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v263 
=== Succesors ===
next: v538 
=== Usages ===
v538 v268 v269 j425 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v263 #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v25|QWORD[.] + v27|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j425 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
result v28|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v264 
address: v568 
=== Succesors ===
next: v521 
=== Usages ===
v521 
=== Predecessor ===
v264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v264 address: v568 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v23|QWORD[.] + v27|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j425 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
value: v538 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 value: v538 stateAfter: - lastLocationAccess: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j425 
y: j114 
=== Succesors ===
=== Usages ===
j417 j425 v437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j425 y: j114  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j434 
y: j432 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j434 y: j432  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v437 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v270 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v437 #trueSuccessor: v268 #falseSuccessor: v270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|V256_WORD = H [v25|QWORD[.] + v27|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v27|QWORD * 2], input: v28|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v27|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v264 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v264 #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v268 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j417 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v273 
values: j208 j432 
=== Succesors ===
=== Usages ===
v566 j424 j408 v441 v565 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v273 values: j208 j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v272 v274 
=== Succesors ===
next: v297 
=== Usages ===
j417 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v272 v274 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j246 
y: j439 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j440 
y: j417 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j440 y: j417  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v296 #falseSuccessor: v295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
v539 
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v25|QWORD[.] + v30|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j417 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
result v32|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v295 
address: v566 
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v295 address: v566 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v23|QWORD[.] + v30|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j417 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
value: v539 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v565 value: v539 stateAfter: - lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid j424 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j417 
y: j227 
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|V128_WORD = H [v25|QWORD[.] + v30|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v30|QWORD * 2], input: v32|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j408 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v284 
values: j424 j417 
=== Succesors ===
=== Usages ===
v564 j416 j400 v445 v563 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v284 values: j424 j417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v300 
=== Succesors ===
next: v303 
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v300 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j246 
y: j443 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j444 
y: j408 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j444 y: j408  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v302 #falseSuccessor: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v22|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
v540 
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v25|QWORD[.] + v34|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j408 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
result v36|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v301 
address: v564 
=== Succesors ===
next: v517 
=== Usages ===
v517 
=== Predecessor ===
v301 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v301 address: v564 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v23|QWORD[.] + v34|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j408 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
value: v540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v563 value: v540 stateAfter: - lastLocationAccess: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid j416 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j408 
y: j415 
=== Succesors ===
=== Usages ===
j400 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j408 y: j415  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|V64_WORD = H [v25|QWORD[.] + v34|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v34|QWORD * 2], input: v36|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j400 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v288 
values: j416 j408 
=== Succesors ===
=== Usages ===
v562 j407 j391 v449 v561 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v288 values: j416 j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v287 v306 
=== Succesors ===
next: v309 
=== Usages ===
j400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v306 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j246 
y: j447 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j448 
y: j400 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j448 y: j400  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v308 #falseSuccessor: v307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v22|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
v541 
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v25|QWORD[.] + v38|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j400 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
result v40|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v307 
address: v562 
=== Succesors ===
next: v515 
=== Usages ===
v515 
=== Predecessor ===
v307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v307 address: v562 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v23|QWORD[.] + v38|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j400 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
value: v541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v561 value: v541 stateAfter: - lastLocationAccess: - #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid j407 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j400 
y: j393 
=== Succesors ===
=== Usages ===
j391 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j400 y: j393  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V32_WORD = H [v25|QWORD[.] + v38|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v38|QWORD * 2], input: v40|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j391 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v292 
values: j407 j400 
=== Succesors ===
=== Usages ===
v560 v453 v559 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v292 values: j407 j400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v291 v312 
=== Succesors ===
next: v315 
=== Usages ===
j391 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v291 v312 #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j246 
y: j451 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j451  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j452 
y: j391 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j452 y: j391  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v453 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v313 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v453 #trueSuccessor: v314 #falseSuccessor: v313  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = DEC v22|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
v314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i542 
=== Usages ===
i542 
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i542  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [v25|QWORD[.] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j388 
index: j391 
=== Succesors ===
=== Usages ===
i542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: j391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i542 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v313 
address: v560 
=== Succesors ===
next: v513 
=== Usages ===
v513 
=== Predecessor ===
v313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v313 address: v560 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v23|QWORD[.] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j390 
index: j391 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: j391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
value: i542 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
i542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 value: i542 stateAfter: - lastLocationAccess: - #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
v513 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVSX [v25|QWORD[.] + v42|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v42|QWORD * 2], y: v44|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v276 v294 v318 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v276 v294 v318 #next: v456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v325 
=== Usages ===
j458 
=== Predecessor ===
v277 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid j245 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
j250 v384 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j246 
y: j245 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j246 y: j245  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v324 #falseSuccessor: v323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v19|QWORD[.] + v22|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a201 
index: j246 
=== Succesors ===
=== Usages ===
j458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a201 index: j246  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v456 
address: v558 
=== Succesors ===
=== Usages ===
v569 v570 v571 v572 v573 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v456 address: v558  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j245 
y: j246 
=== Succesors ===
=== Usages ===
j503 j489 j494 j497 j500 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j245 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j250 
y: j433 
=== Succesors ===
=== Usages ===
v490 v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j489 
y: j208 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j489 y: j208  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v326 #falseSuccessor: v327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LEA [v19|QWORD[.] + v22|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = SUB (x: v45|QWORD, ~y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v47|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
result v49|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j483 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v330 
values: j208 j488 
=== Succesors ===
=== Usages ===
v573 j488 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v330 values: j208 j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v329 
=== Succesors ===
next: v531 
=== Usages ===
j483 v333 v334 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v329 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v46|QWORD[.] + v50|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j483 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
value: v532 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v573 value: v532 stateAfter: - lastLocationAccess: - #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j483 
y: j114 
=== Succesors ===
=== Usages ===
j477 j483 v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j483 y: j114  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j489 
y: j488 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j489 y: j488  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v333 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v333 #falseSuccessor: v335  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v50|QWORD * 2], input: v49|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v50|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v330 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v330 #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v333 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j477 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v338 
values: j208 j488 
=== Succesors ===
=== Usages ===
v572 j482 j471 v495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: j208 j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v339 
=== Succesors ===
next: v360 
=== Usages ===
j477 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v339 #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j250 
y: j439 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j477 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j494 y: j477  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v358 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v359 #falseSuccessor: v358  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v46|QWORD[.] + v52|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j477 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j477  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result v54|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
value: v536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 value: v536 stateAfter: - lastLocationAccess: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j477 
y: j227 
=== Succesors ===
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j477 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v52|QWORD * 2], input: v54|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j471 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v349 
values: j482 j477 
=== Succesors ===
=== Usages ===
v571 j476 j465 v498 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: j482 j477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v348 v363 
=== Succesors ===
next: v366 
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v348 v363 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j250 
y: j443 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j443  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j497 
y: j471 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j497 y: j471  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v47|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v46|QWORD[.] + v56|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j471 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result v58|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
value: v535 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 value: v535 stateAfter: - lastLocationAccess: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j471 
y: j415 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j471 y: j415  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v528 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v56|QWORD * 2], input: v58|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v56|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j465 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v352 
values: j476 j471 
=== Succesors ===
=== Usages ===
v570 j470 j459 v501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v352 values: j476 j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v351 v369 
=== Succesors ===
next: v372 
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v351 v369 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid j500 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j250 
y: j447 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j500 
y: j465 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j500 y: j465  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v371 #falseSuccessor: v370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v47|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v46|QWORD[.] + v60|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j465 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
result v62|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
value: v534 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 value: v534 stateAfter: - lastLocationAccess: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid j470 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j465 
y: j393 
=== Succesors ===
=== Usages ===
j459 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j465 y: j393  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v60|QWORD * 2], input: v62|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j459 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v355 
values: j470 j465 
=== Succesors ===
=== Usages ===
v569 v504 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: j470 j465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v375 
=== Succesors ===
next: v378 
=== Usages ===
j459 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v375 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j250 
y: j451 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j250 y: j451  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j503 
y: j459 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j503 y: j459  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v377 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = DEC v47|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v46|QWORD[.] + v64|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j458 
index: j459 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: j459  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
value: i533 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v569 value: i533 stateAfter: - lastLocationAccess: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + v64|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v330 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B56 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v341 v357 v381 
=== Succesors ===
next: a126 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v341 v357 v381 #next: a126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a126 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a201 
=== Succesors ===
next: v55 
=== Usages ===
a54 
=== Predecessor ===
v342 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a201 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
result v66|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.<init>(String.java:207) [bci: 78]
op: Compress
stamp: n! -
=== Inputs ===
value: a126 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: String.value
nodeSourcePosition: at java.lang.String.<init>(String.java:207) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: a54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j237 
=== Usages ===
=== Predecessor ===
a126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: a54 stateAfter: - lastLocationAccess: - #next: j237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j237 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.String.<init>(String.java:207) [bci: 78]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v241 
=== Usages ===
j238 
=== Predecessor ===
v55 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid j238 <|@
result v67|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:207) [bci: 78]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j237 
y: i162 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j237 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [v67|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j238 
index: j166 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j238 index: j166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.String.<init>(String.java:207) [bci: 78]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
j237 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v557 value: i168 stateAfter: - lastLocationAccess: - #next: v56  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.String.<init>(String.java:208) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:208) [bci: 81]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4dfb6a96 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v66|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599795989925074926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v264 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B59 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@ee6695c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:190) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09332045294092528 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605524463553879224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA [v11|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AND v12|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = ADD (x: v14|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4605450971113793196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v9|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v22|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v19|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = LEA [v1|QWORD[.] + v24|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v22|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|V128_WORD = H [v25|QWORD[.] + v30|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v30|QWORD * 2], input: v32|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v22|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|V64_WORD = H [v25|QWORD[.] + v34|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v34|QWORD * 2], input: v36|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v22|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V32_WORD = H [v25|QWORD[.] + v38|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v38|QWORD * 2], input: v40|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = DEC v22|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVSX [v25|QWORD[.] + v42|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v42|QWORD * 2], y: v44|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4dfb6a96 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v66|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LEA [v19|QWORD[.] + v22|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = SUB (x: v45|QWORD, ~y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v47|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v47|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v52|QWORD * 2], input: v54|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v47|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v56|QWORD * 2], input: v58|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v56|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v47|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v60|QWORD * 2], input: v62|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = DEC v47|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD[.] + v64|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B56 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v46|QWORD[.] + v50|QWORD * 2], input: v49|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v50|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599795989925074926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B59 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B59" 
    successors "B25" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|V256_WORD = H [v25|QWORD[.] + v27|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v27|QWORD * 2], input: v28|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v27|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591197082004145200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591785021524833425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:190) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575857137946559241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24929|0xffffffffffff9e9f]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" "B6" "B11" 
    successors 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:190) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9491|0xffffffffffffdaed]] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11283|0xffffffffffffd3ed]] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13587|0xffffffffffffcaed]] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9235|0xffffffffffffdbed]] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: iload_2       
     5: ifge          17
     8: new           #6          // java.lang.StringIndexOutOfBoundsException
    11: dup           
    12: iload_2       
    13: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    16: athrow        
    17: iload_3       
    18: ifgt          50
    21: iload_3       
    22: ifge          34
    25: new           #6          // java.lang.StringIndexOutOfBoundsException
    28: dup           
    29: iload_3       
    30: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    33: athrow        
    34: iload_2       
    35: aload_1       
    36: arraylength   
    37: if_icmpgt     50
    40: aload_0       
    41: ldc           #2          // ""
    43: getfield      #1          // value:char[]
    46: putfield      #1          // value:char[]
    49: return        
    50: iload_2       
    51: aload_1       
    52: arraylength   
    53: iload_3       
    54: isub          
    55: if_icmple     69
    58: new           #6          // java.lang.StringIndexOutOfBoundsException
    61: dup           
    62: iload_2       
    63: iload_3       
    64: iadd          
    65: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    68: athrow        
    69: aload_0       
    70: aload_1       
    71: iload_2       
    72: iload_2       
    73: iload_3       
    74: iadd          
    75: invokestatic  #5          // java.util.Arrays.copyOfRange:(char[], int, int)char[]
    78: putfield      #1          // value:char[]
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@ee6695c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.String.<init>(String.java:190) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   32  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.09332045294092528 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605524463553879224
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr  144  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  148  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4605450971113793196
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  232  <|@ instruction r10|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  234  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction r9|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  302  <|@ instruction J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  304  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  306  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  314  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  326  <|@ instruction J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  330  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  338  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  350  <|@ instruction J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rcx|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[.] + rbx|QWORD * 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV (x: [r9|QWORD[.] + rbx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  382  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  532  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4dfb6a96 encoding: base: 0 shift: 3 <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  542  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOVB (x: [r13|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  442  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  444  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  446  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  454  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  466  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  468  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  470  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  478  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  490  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  492  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  494  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  502  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  518  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  520  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  408  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599795989925074926
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B56 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  416  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599795989925074926
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B59 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B59" 
    successors "B25" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  272  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  274  <|@ instruction J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  510  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r13|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   76  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   80  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591197082004145200
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591785021524833425
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  206  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  212  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.String.<init>(String.java:190) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] r13|DWORD stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575857137946559241
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOVE input: int[-24929|0xffffffffffff9e9f] <|@ <|@
      nr  112  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" "B6" "B11" 
    successors 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.lang.String.<init>(String.java:190) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r13|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVE input: int[-9491|0xffffffffffffdaed] <|@ <|@
      nr   46  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] <|@ <|@
      nr   64  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-13587|0xffffffffffffcaed] <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOVE input: int[-9235|0xffffffffffffdbed] <|@ <|@
      nr   18  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: iload_2       
     5: ifge          17
     8: new           #6          // java.lang.StringIndexOutOfBoundsException
    11: dup           
    12: iload_2       
    13: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    16: athrow        
    17: iload_3       
    18: ifgt          50
    21: iload_3       
    22: ifge          34
    25: new           #6          // java.lang.StringIndexOutOfBoundsException
    28: dup           
    29: iload_3       
    30: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    33: athrow        
    34: iload_2       
    35: aload_1       
    36: arraylength   
    37: if_icmpgt     50
    40: aload_0       
    41: ldc           #2          // ""
    43: getfield      #1          // value:char[]
    46: putfield      #1          // value:char[]
    49: return        
    50: iload_2       
    51: aload_1       
    52: arraylength   
    53: iload_3       
    54: isub          
    55: if_icmple     69
    58: new           #6          // java.lang.StringIndexOutOfBoundsException
    61: dup           
    62: iload_2       
    63: iload_3       
    64: iadd          
    65: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    68: athrow        
    69: aload_0       
    70: aload_1       
    71: iload_2       
    72: iload_2       
    73: iload_3       
    74: iadd          
    75: invokestatic  #5          // java.util.Arrays.copyOfRange:(char[], int, int)char[]
    78: putfield      #1          // value:char[]
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@ee6695c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.String.<init>(String.java:190) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   32  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.09332045294092528 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4606341862885835814
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  134  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" "B16" 
    xhandlers
    flags 
    probability 4605524463553879224
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr  144  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  148  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B18 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4605450971113793196
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B38" "B21" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  232  <|@ instruction r10|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  234  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B38 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B24" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction r9|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B26 falseDestination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  302  <|@ instruction J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  304  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  306  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B26" 
    successors "B32" "B31" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  314  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  326  <|@ instruction J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  330  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B29" 
    successors "B35" "B34" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  338  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  350  <|@ instruction J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B37" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rcx|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[.] + rbx|QWORD * 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV (x: [r9|QWORD[.] + rbx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B19" "B37" "B35" 
    successors "B39" "B58" 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  382  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B38" "B55" "B53" 
    successors 
    xhandlers
    flags 
    probability 4606341046221501758
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  532  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4dfb6a96 encoding: base: 0 shift: 3 <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  542  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOVB (x: [r13|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  546  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  442  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  444  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  446  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  454  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  466  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  468  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  470  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B53" "B52" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  478  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  490  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  492  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  494  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B50" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4601837446594131262
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  502  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B58 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4599795989925074926
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4592830247339390270
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  408  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B42" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  414  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  416  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B44 falseDestination: B42 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601837446594131262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  274  <|@ instruction J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 16] size: QWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4591388867976617680
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction MOV [r13|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   76  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   80  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591785021524833425
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  206  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  212  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.String.<init>(String.java:190) [bci: 0]
locals: stack:40|QWORD[.] stack:32|QWORD[.] r13|DWORD stack:44|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOVE input: int[-24929|0xffffffffffff9e9f] <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" "B6" "B11" 
    successors 
    xhandlers
    flags 
    probability 4546318538614045490
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.lang.String.<init>(String.java:190) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r13|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVE input: int[-9491|0xffffffffffffdaed] <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-13587|0xffffffffffffcaed] <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOVE input: int[-9235|0xffffffffffffdbed] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: iload_2       
     5: ifge          17
     8: new           #6          // java.lang.StringIndexOutOfBoundsException
    11: dup           
    12: iload_2       
    13: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    16: athrow        
    17: iload_3       
    18: ifgt          50
    21: iload_3       
    22: ifge          34
    25: new           #6          // java.lang.StringIndexOutOfBoundsException
    28: dup           
    29: iload_3       
    30: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    33: athrow        
    34: iload_2       
    35: aload_1       
    36: arraylength   
    37: if_icmpgt     50
    40: aload_0       
    41: ldc           #2          // ""
    43: getfield      #1          // value:char[]
    46: putfield      #1          // value:char[]
    49: return        
    50: iload_2       
    51: aload_1       
    52: arraylength   
    53: iload_3       
    54: isub          
    55: if_icmple     69
    58: new           #6          // java.lang.StringIndexOutOfBoundsException
    61: dup           
    62: iload_2       
    63: iload_3       
    64: iadd          
    65: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    68: athrow        
    69: aload_0       
    70: aload_1       
    71: iload_2       
    72: iload_2       
    73: iload_3       
    74: iadd          
    75: invokestatic  #5          // java.util.Arrays.copyOfRange:(char[], int, int)char[]
    78: putfield      #1          // value:char[]
    81: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee4c8bf285c90f8c37030000458b560c49bb00e01b17010000004183f8010f8c74020000418bf2412bf03bce0f8f09030000413bca0f8fcd020000498b7760498b57704181f8ffffff000f837e020000458bc841d1e1458d49174183e1f84d63c9498bd94803de483bda0f875e02000049895f60410f188431c0000000410f18843100010000410f18843140010000410f188431800100004489460c48c70601000000c74608addeadde488bc64c897424104c896c2408458bf2448be9458bd6452bd5453bc2458bd8450f4fda4d63d34983fa010f8c9e0000004c8b5c24104c8d48104963cd4d8d5c4b10498d4af04885c948c7c3000000000f8d7f010000498d4af8483bd90f8f13000000c4c17a6f045bc4c17a7f0459488d4b08488bd9498d4afc483bd90f8f13000000c4c1f96e045bc4c1f97e0459488d4b04488bd9498d4afe483bd90f8f13000000c4c1796e045bc4c1797e0459488d4b02488bd9498bca48ffc9483bd90f8f0a000000450fbf1c5b6645891c594d63d84d3bda0f8f3600000049b900e01b17010000004c8b54240848c1e8034189420c4d8bea49c1ed094788640d00488b6c24204883c428850500000000c5f877c34e8d4450104d2bda4d8d53f04d85d20f8d7700000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f48ffffff6647892448e93effffffc5f9efc049c7c1000000000f1f8000000000660f1f440000c4817e7f04484d8d49104d3bca7ef1e964ffffff660f1f440000660f1f440000c4c17e6f045bc4c17e7f0459488d5b10483bd97eebe967feffff4585c00f8c8a000000413bca0f8f8900000041c7450caddeadde49c1ed094788641d00488b6c24204883c428850500000000c5f877c34c897424104c896c240848beaddeaddeaddeadde418bd0448bc9b9000000004489442404458bf2458be9e80000000090448b442404e9b5fdffff41b99f9effff4d8bde4d8bd5448be945898f9c0200004d89a7a8020000e8000000009041b9eddaffffebdb41b9edd3ffffebd341b9edcaffffebcb41b9eddbffffebc3e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@ee6695c slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 56 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 62 block B2 null  <||@
  Comment 62 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 62 28 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [r13:0, r14:0]at java.lang.String.<init>(String.java:190) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |rcx|DWORD  |r8|DWORD   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 30 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 76 32 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 80 34 BRANCH trueDestinationProbability: 0.09332045294092528 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 86 block B8 null  <||@
  Comment 86 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 84 rsi|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 92 86 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 94 88 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 100 block B10 null  <||@
  Comment 100 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 104 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 103 106 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13  <||@
  Comment 109 block B13 null  <||@
  Comment 109 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 130 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 113 132 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 117 134 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 124 136 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18  <||@
  Comment 130 block B14 null  <||@
  Comment 130 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 140 r9|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 136 142 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 140 144 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 144 146 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 147 148 rbx|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 153 150 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 156 152 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B18 falseDestination: B14 -> B16  <||@
  Comment 162 block B16 null  <||@
  Comment 162 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 164 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 166 166 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 175 168 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 184 170 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 193 172 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 202 174 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 206 176 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 213 178 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 213 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 220 180 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 220 182 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 223 184 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 228 186 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 233 188 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 236 190 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 239 192 JUMP ~[] destination: B16 -> B19  <||@
  Comment 239 block B19 null  <||@
  Comment 239 224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 239 226 r10|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 245 228 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 248 230 r11|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 255 232 r10|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 258 234 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 262 236 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B38 falseDestination: B19 -> B21  <||@
  Comment 268 block B21 null  <||@
  Comment 268 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 268 244 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 273 246 r9|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 277 248 rcx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 280 250 r11|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 285 252 rcx|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 289 254 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 292 260 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 299 256 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B26 falseDestination: B21 -> B24  <||@
  Comment 305 block B26 null  <||@
  Comment 305 286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 305 288 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 309 290 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 312 292 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 318 block B28 null  <||@
  Comment 318 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 300 xmm0|V128_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 324 302 J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 330 304 rcx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 334 306 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 337 308 JUMP ~[] destination: B28 -> B29  <||@
  Comment 337 block B29 null  <||@
  Comment 337 310 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 337 312 rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 341 314 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 344 316 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 350 block B31 null  <||@
  Comment 350 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 324 xmm0|V64_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 356 326 J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 362 328 rcx|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 366 330 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 369 332 JUMP ~[] destination: B31 -> B32  <||@
  Comment 369 block B32 null  <||@
  Comment 369 334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 369 336 rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 373 338 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 376 340 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 382 block B34 null  <||@
  Comment 382 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 348 xmm0|V32_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 388 350 J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 394 352 rcx|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 398 354 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 401 356 JUMP ~[] destination: B34 -> B35  <||@
  Comment 401 block B35 null  <||@
  Comment 401 358 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 401 360 rcx|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 407 362 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 410 364 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37  <||@
  Comment 416 block B37 null  <||@
  Comment 416 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 372 r11|DWORD = MOVSX [r11|QWORD[.] + rbx|QWORD * 2] size: DWORD  <||@
  Comment 421 374 MOV (x: [r9|QWORD[.] + rbx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 426 376 JUMP ~[] destination: B37 -> B38  <||@
  Comment 426 block B38 null  <||@
  Comment 426 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 426 380 r11|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 429 382 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 432 384 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B58  <||@
  Comment 438 block B58 null  <||@
  Comment 438 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 438 530 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 448 532 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 453 538 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4dfb6a96 encoding: base: 0 shift: 3  <||@
  Comment 457 540 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 461 542 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 468 544 MOVB (x: [r13|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 473 546 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 482 12  <||@
  Comment 492 block B39 null  <||@
  Comment 492 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 492 388 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 497 390 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 500 392 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 504 394 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 507 396 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 513 block B40 null  <||@
  Comment 513 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 400 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 520 402 JUMP ~[] destination: B40 -> B44  <||@
  Comment 520 block B44 null  <||@
  Comment 520 426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 520 428 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 524 430 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 527 432 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 533 block B46 null  <||@
  Comment 533 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 533 440 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 537 442 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 543 444 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 547 446 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 550 448 JUMP ~[] destination: B46 -> B47  <||@
  Comment 550 block B47 null  <||@
  Comment 550 450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 550 452 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 554 454 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 557 456 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 563 block B49 null  <||@
  Comment 563 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 464 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 567 466 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 573 468 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 577 470 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 580 472 JUMP ~[] destination: B49 -> B50  <||@
  Comment 580 block B50 null  <||@
  Comment 580 474 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 580 476 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 584 478 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 587 480 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 593 block B52 null  <||@
  Comment 593 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 488 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 597 490 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 603 492 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 607 494 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 610 496 JUMP ~[] destination: B52 -> B53  <||@
  Comment 610 block B53 null  <||@
  Comment 610 498 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 610 500 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 613 502 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 616 504 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 622 block B55 null  <||@
  Comment 622 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 516 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 627 522 JUMP ~[] destination: B55 -> B58  <||@
  Comment 632 block B41 null  <||@
  Comment 632 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 632 406 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 636 408 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 643 410 JUMP ~[] destination: B41 -> B42  <||@
  Comment 643 block B42 loop 1 depth 1 header:330|LoopBegin  <||@
  Comment 643 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 656 414 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 662 416 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 666 418 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 669 420 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B44 falseDestination: B42 -> B42  <||@
  Comment 676 block B24 loop 0 depth 1 header:264|LoopBegin  <||@
  Comment 676 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 688 272 xmm0|V256_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 694 274 J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 700 276 rbx|QWORD = LEA [rbx|QWORD + 16] size: QWORD  <||@
  Comment 704 278 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 707 280 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B24  <||@
  Comment 714 block B3 null  <||@
  Comment 714 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 714 38 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 717 40 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 723 block B5 null  <||@
  Comment 723 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 56 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 726 58 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 732 block B7 null  <||@
  Comment 732 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 732 74 MOV [r13|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 732 {NarrowOop[char[0]{}]}  <||@
  Comment 740 76 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 744 78 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 749 80 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 758 12  <||@
  Comment 768 block B18 null  <||@
  Comment 768 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 196 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 773 198 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 778 204 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 778 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 788 206 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 791 208 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 794 210 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 799 212 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 804 214 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 807 216 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 810 218 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 810 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 815 [stack:8, stack:16]at java.lang.String.<init>(String.java:190) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3              
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |r13|DWORD  |stack:44|DWORD   <||@
  Comment 816 220 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 821 222 JUMP ~[] destination: B18 -> B19  <||@
  Comment 826 block B11 null  <||@
  Comment 826 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 826 110 r9|DWORD = MOVE input: int[-24929|0xffffffffffff9e9f]  <||@
  Comment 832 118 JUMP ~[] destination: B11 -> B12  <||@
  Comment 832 block B12 null  <||@
  Comment 832 120 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 832 18 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 835 20 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 838 22 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 841 122 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 848 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 855 126 DEOPT info [bci:0]  <||@
  Comment 855 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 860 [r10:0, r11:0]at java.lang.String.<init>(String.java:190) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r13|DWORD  |r8|DWORD   <||@
  Comment 861 block B4 null  <||@
  Comment 861 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 861 44 r9|DWORD = MOVE input: int[-9491|0xffffffffffffdaed]  <||@
  Comment 867 52 JUMP ~[] destination: B4 -> B12  <||@
  Comment 869 block B6 null  <||@
  Comment 869 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 62 r9|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed]  <||@
  Comment 875 70 JUMP ~[] destination: B6 -> B12  <||@
  Comment 877 block B9 null  <||@
  Comment 877 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 92 r9|DWORD = MOVE input: int[-13587|0xffffffffffffcaed]  <||@
  Comment 883 100 JUMP ~[] destination: B9 -> B12  <||@
  Comment 885 block B1 null  <||@
  Comment 885 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 885 16 r9|DWORD = MOVE input: int[-9235|0xffffffffffffdbed]  <||@
  Comment 891 24 JUMP ~[] destination: B1 -> B12  <||@
  Comment 893 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 893 4  <||@
  Comment 899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 899 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-708[java.lang.String.<init>(char[], int, int)]"
  method "HotSpotCompilation-708[java.lang.String.<init>(char[], int, int)]"
  date 1527005111917
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1073515c0 448b560849c1e203493bc20f858f484bff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee4c8bf285c90f8c37030000458b560c49bb00e01b17010000004183f8010f8c74020000418bf2412bf03bce0f8f09030000413bca0f8fcd020000498b7760498b57704181f8ffffff000f837e020000458bc841d1e1458d49174183e1f84d63c9498bd94803de483bda0f875e02000049895f60410f188431c0000000410f18843100010000410f18843140010000410f188431800100004489460c48c70601000000c74608410000f8488bc64c897424104c896c2408458bf2448be9458bd6452bd5453bc2458bd8450f4fda4d63d34983fa010f8c9e0000004c8b5c24104c8d48104963cd4d8d5c4b10498d4af04885c948c7c3000000000f8d7f010000498d4af8483bd90f8f13000000c4c17a6f045bc4c17a7f0459488d4b08488bd9498d4afc483bd90f8f13000000c4c1f96e045bc4c1f97e0459488d4b04488bd9498d4afe483bd90f8f13000000c4c1796e045bc4c1797e0459488d4b02488bd9498bca48ffc9483bd90f8f0a000000450fbf1c5b6645891c594d63d84d3bda0f8f3600000049b900e01b17010000004c8b54240848c1e8034189420c4d8bea49c1ed094788640d00488b6c24204883c42885055ed853fdc5f877c34e8d4450104d2bda4d8d53f04d85d20f8d7700000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f48ffffff6647892448e93effffffc5f9efc049c7c1000000000f1f8000000000660f1f440000c4817e7f04484d8d49104d3bca7ef1e964ffffff660f1f440000660f1f440000c4c17e6f045bc4c17e7f0459488d5b10483bd97eebe967feffff4585c00f8c8a000000413bca0f8f8900000041c7450c6e7100d849c1ed094788641d00488b6c24204883c42885054ad753fdc5f877c34c897424104c896c240848be080200c007000000418bd0448bc9b9000000004489442404458bf2458be9e8f154c4ff90448b442404e9b5fdffff41b99f9effff4d8bde4d8bd5448be945898f9c0200004d89a7a8020000e8e25c4bff9041b9eddaffffebdb41b9edd3ffffebd341b9edcaffffebcb41b9eddbffffebc3e8de8c8fff90e8b85b4bff90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@ee6695c slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 56 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 62 block B2 null  <||@
  Comment 62 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 62 28 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [r13:0, r14:0]at java.lang.String.<init>(String.java:190) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |rcx|DWORD  |r8|DWORD   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 30 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 76 32 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 80 34 BRANCH trueDestinationProbability: 0.09332045294092528 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 86 block B8 null  <||@
  Comment 86 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 84 rsi|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 92 86 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 94 88 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 100 block B10 null  <||@
  Comment 100 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 104 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 103 106 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13  <||@
  Comment 109 block B13 null  <||@
  Comment 109 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 130 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 113 132 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 117 134 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 124 136 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18  <||@
  Comment 130 block B14 null  <||@
  Comment 130 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 140 r9|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 136 142 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 140 144 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 144 146 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 147 148 rbx|QWORD = ADD (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 153 150 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 156 152 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B18 falseDestination: B14 -> B16  <||@
  Comment 162 block B16 null  <||@
  Comment 162 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 164 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 166 166 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 175 168 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 184 170 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 193 172 AMD64PREFETCH ~[r9|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 202 174 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 206 176 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 213 178 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 213 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 220 180 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 220 182 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 223 184 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 228 186 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 233 188 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 236 190 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 239 192 JUMP ~[] destination: B16 -> B19  <||@
  Comment 239 block B19 null  <||@
  Comment 239 224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 239 226 r10|DWORD = SUB (x: r14|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 245 228 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 248 230 r11|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 255 232 r10|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 258 234 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 262 236 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B38 falseDestination: B19 -> B21  <||@
  Comment 268 block B21 null  <||@
  Comment 268 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 268 244 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 273 246 r9|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 277 248 rcx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 280 250 r11|QWORD[.] = LEA [r11|QWORD[.] + rcx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 285 252 rcx|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 289 254 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 292 260 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 299 256 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B26 falseDestination: B21 -> B24  <||@
  Comment 305 block B26 null  <||@
  Comment 305 286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 305 288 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 309 290 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 312 292 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 318 block B28 null  <||@
  Comment 318 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 300 xmm0|V128_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 324 302 J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 330 304 rcx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 334 306 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 337 308 JUMP ~[] destination: B28 -> B29  <||@
  Comment 337 block B29 null  <||@
  Comment 337 310 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 337 312 rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 341 314 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 344 316 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 350 block B31 null  <||@
  Comment 350 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 324 xmm0|V64_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 356 326 J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 362 328 rcx|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 366 330 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 369 332 JUMP ~[] destination: B31 -> B32  <||@
  Comment 369 block B32 null  <||@
  Comment 369 334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 369 336 rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 373 338 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 376 340 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 382 block B34 null  <||@
  Comment 382 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 348 xmm0|V32_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 388 350 J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 394 352 rcx|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 398 354 rbx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 401 356 JUMP ~[] destination: B34 -> B35  <||@
  Comment 401 block B35 null  <||@
  Comment 401 358 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 401 360 rcx|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 407 362 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 410 364 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37  <||@
  Comment 416 block B37 null  <||@
  Comment 416 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 372 r11|DWORD = MOVSX [r11|QWORD[.] + rbx|QWORD * 2] size: DWORD  <||@
  Comment 421 374 MOV (x: [r9|QWORD[.] + rbx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 426 376 JUMP ~[] destination: B37 -> B38  <||@
  Comment 426 block B38 null  <||@
  Comment 426 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 426 380 r11|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 429 382 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 432 384 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B58  <||@
  Comment 438 block B58 null  <||@
  Comment 438 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 438 530 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 448 532 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 453 538 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4dfb6a96 encoding: base: 0 shift: 3  <||@
  Comment 457 540 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 461 542 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 468 544 MOVB (x: [r13|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 473 546 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 482 12  <||@
  Comment 492 block B39 null  <||@
  Comment 492 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 492 388 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 497 390 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 500 392 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 504 394 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 507 396 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 513 block B40 null  <||@
  Comment 513 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 400 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 520 402 JUMP ~[] destination: B40 -> B44  <||@
  Comment 520 block B44 null  <||@
  Comment 520 426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 520 428 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 524 430 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 527 432 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 533 block B46 null  <||@
  Comment 533 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 533 440 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 537 442 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 543 444 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 547 446 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 550 448 JUMP ~[] destination: B46 -> B47  <||@
  Comment 550 block B47 null  <||@
  Comment 550 450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 550 452 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 554 454 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 557 456 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 563 block B49 null  <||@
  Comment 563 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 464 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 567 466 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 573 468 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 577 470 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 580 472 JUMP ~[] destination: B49 -> B50  <||@
  Comment 580 block B50 null  <||@
  Comment 580 474 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 580 476 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 584 478 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 587 480 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 593 block B52 null  <||@
  Comment 593 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 488 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 597 490 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 603 492 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 607 494 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 610 496 JUMP ~[] destination: B52 -> B53  <||@
  Comment 610 block B53 null  <||@
  Comment 610 498 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 610 500 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 613 502 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 616 504 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 622 block B55 null  <||@
  Comment 622 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 516 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 627 522 JUMP ~[] destination: B55 -> B58  <||@
  Comment 632 block B41 null  <||@
  Comment 632 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 632 406 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 636 408 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 643 410 JUMP ~[] destination: B41 -> B42  <||@
  Comment 643 block B42 loop 1 depth 1 header:330|LoopBegin  <||@
  Comment 643 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 656 414 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 662 416 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 666 418 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 669 420 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B44 falseDestination: B42 -> B42  <||@
  Comment 676 block B24 loop 0 depth 1 header:264|LoopBegin  <||@
  Comment 676 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 688 272 xmm0|V256_WORD = H [r11|QWORD[.] + rbx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 694 274 J (address: [r9|QWORD[.] + rbx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 700 276 rbx|QWORD = LEA [rbx|QWORD + 16] size: QWORD  <||@
  Comment 704 278 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 707 280 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B24  <||@
  Comment 714 block B3 null  <||@
  Comment 714 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 714 38 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 717 40 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 723 block B5 null  <||@
  Comment 723 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 56 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 726 58 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 732 block B7 null  <||@
  Comment 732 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 732 74 MOV [r13|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 732 {NarrowOop[char[0]{}]}  <||@
  Comment 740 76 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 744 78 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 749 80 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 758 12  <||@
  Comment 768 block B18 null  <||@
  Comment 768 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 196 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 773 198 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 778 204 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 778 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 788 206 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 791 208 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 794 210 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 799 212 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 804 214 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 807 216 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 810 218 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 810 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 815 [stack:8, stack:16]at java.lang.String.<init>(String.java:190) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3              
     locals:  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |r13|DWORD  |stack:44|DWORD   <||@
  Comment 816 220 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 821 222 JUMP ~[] destination: B18 -> B19  <||@
  Comment 826 block B11 null  <||@
  Comment 826 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 826 110 r9|DWORD = MOVE input: int[-24929|0xffffffffffff9e9f]  <||@
  Comment 832 118 JUMP ~[] destination: B11 -> B12  <||@
  Comment 832 block B12 null  <||@
  Comment 832 120 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 832 18 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 835 20 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 838 22 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 841 122 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 848 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 855 126 DEOPT info [bci:0]  <||@
  Comment 855 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 860 [r10:0, r11:0]at java.lang.String.<init>(String.java:190) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r13|DWORD  |r8|DWORD   <||@
  Comment 861 block B4 null  <||@
  Comment 861 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 861 44 r9|DWORD = MOVE input: int[-9491|0xffffffffffffdaed]  <||@
  Comment 867 52 JUMP ~[] destination: B4 -> B12  <||@
  Comment 869 block B6 null  <||@
  Comment 869 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 62 r9|DWORD = MOVE input: int[-11283|0xffffffffffffd3ed]  <||@
  Comment 875 70 JUMP ~[] destination: B6 -> B12  <||@
  Comment 877 block B9 null  <||@
  Comment 877 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 92 r9|DWORD = MOVE input: int[-13587|0xffffffffffffcaed]  <||@
  Comment 883 100 JUMP ~[] destination: B9 -> B12  <||@
  Comment 885 block B1 null  <||@
  Comment 885 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 885 16 r9|DWORD = MOVE input: int[-9235|0xffffffffffffdbed]  <||@
  Comment 891 24 JUMP ~[] destination: B1 -> B12  <||@
  Comment 893 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 893 4  <||@
  Comment 899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 899 5  <||@
  HexCodeFile>>> <|@
end_nmethod
