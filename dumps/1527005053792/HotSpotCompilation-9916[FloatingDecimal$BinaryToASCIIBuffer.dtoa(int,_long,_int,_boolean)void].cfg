begin_compilation
  name " HotSpotCompilation-9916[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  method "HotSpotCompilation-9916[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  date 1527005231098
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1084 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1084  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1728 v1912 ?1728 v1913 ?1727 ?28 ?852 ?1726 v1097 ?90 ?1725 ?1724 ?1723 ?1722 ?555 ?1721 ?167 ?966 v1920 ?239 ?594 ?650 v1944 v1943 v1371 ?1720 ?585 ?1719 ?999 v1369 ?373 ?381 ?514 v1942 ?988 ?636 ?443 ?1718 ?636 ?1717 ?1716 ?465 ?1715 ?1714 ?475 ?620 ?486 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1390 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 v1087 i1731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1912 
value: i1390 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1912 value: i1390 stateAfter: - lastLocationAccess: - #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1087 v1733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1913 
value: i1390 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1913 value: i1390 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a1743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1746 v1821 v1774 ?620 v1813 v1756 v1791 v1766 v1799 ?465 ?475 ?486 ?555 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1722 ?1721 ?1720 ?28 ?90 ?1719 ?1718 ?1717 ?1716 ?514 ?1715 ?167 ?966 ?239 v241 ?1714 ?999 ?475 ?465 ?486 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v703 v1457 i458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 i69 ?90 ?28 v65 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 143]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 i83 i679 j741 v751 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 109]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 v185 v189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 102]
rawvalue: int[27]{0, 3, 5, 7, 10, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[27]{0, 3, 5, 7, 10, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1914 v1945 v1946 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1055 i1058 i1029 v60 i78 v1097 i887 i889 v140 i891 v230 i1053 ?239 ?239 v241 v872 i460 i855 i1060 v747 ?1722 v302 i303 i328 i333 v336 v1230 i1014 i371 i372 v382 v392 i423 i428 i450 ?1721 ?1720 v493 i494 i1013 i500 v503 ?514 v1356 i525 i546 i547 v556 v565 v589 i590 i596 i372 i371 v637 i1028 v1365 v651 v655 i774 i371 i372 i546 i547 i546 i547 i78 i78 i951 i1871 i1875 ?29 ?381 ?381 ?555 ?555 ?636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 96]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v893 v894 v171 v1183 v1379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 i83 ?90 i16 ?28 v32 v37 v65 i69 v81 d734 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v35 v1041 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 50]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 i9 j84 ?90 ?28 j121 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfTrailingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:431) [bci: 45]
stamp: i32 [0 - 64] ⇈000000000000007f
=== Inputs ===
value: j3 
=== Succesors ===
=== Usages ===
i11 i679 j121 ?28 ?90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountTrailingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountTrailingZerosNode>@ value: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 54]
stamp: i32 [-11 - 53]
=== Inputs ===
x: i10 
y: i9 
=== Succesors ===
=== Usages ===
i153 v130 i16 ?28 i53 ?90 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 71]
stamp: i32
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i70 i341 i134 i764 i774 i855 i826 i829 i851 i870 i855 i1877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
v19 i1028 i1029 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v95 v108 v130 i942 i169 i949 i952 i214 i220 ?239 i459 i906 v924 i922 v1483 i299 i303 j317 j324 i328 i333 ?443 i1014 j413 i423 i428 i377 i378 i438 j446 i450 i945 i478 i483 i494 v499 i500 ?443 i525 i590 v595 i596 i599 v1344 i644 i681 j1873 i948 j689 j693 i851 v816 v1486 i1875 v842 i855 v865 i1013 i1948 i1871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7284916068028063
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604736888603155721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1041 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1041  <|@  <|@
f <@*|@fixed>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9997953833365305
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v1039 
falseSuccessor: v1040 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v1039 #falseSuccessor: v1040  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604735545976326307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
v1039 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549631423510111317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v1040 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598562680311629294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9997953833365305
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598561679519170703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1022 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180575776958698
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1028 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v1021 
values: i18 i8 
=== Succesors ===
=== Usages ===
i1029 v893 v1914 v60 i1029 i1029 i1029 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1021 values: i18 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1022 v1023 
=== Succesors ===
next: v43 
=== Usages ===
i1028 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1022 v1023 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 86]
rawvalue: -21
stableDimension: 0
stamp: i32 [-21] ⇊00000000ffffffeb ⇈00000000ffffffeb
stampKind: i32
value: int[-21|0xffffffffffffffeb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i36 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
trueSuccessorProbability: 3.7093885904323354E-4
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555476837731078346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177235340392840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1028 
y: i45 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1028 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
stamp: void
trueSuccessorProbability: 0.5207354992258577
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v47 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602862888734385424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1878 
=== Usages ===
i1878 
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1878  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i1028 
=== Succesors ===
=== Usages ===
i1878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1878 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v47 
address: v1914 
=== Succesors ===
next: v59 
=== Usages ===
i53 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v47 address: v1914 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1878 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1878  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i54 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 0.9986731860733679
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
i1878 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v56 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602856669069621870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1028 
y: i8 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1028 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
trueSuccessorProbability: 0.39220076270143933
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1499 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1499  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?28 
values: - - i8 
=== Succesors ===
=== Usages ===
v1746 i1880 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?28 values: - - i8  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i80 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v1496 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v1496 #falseSuccessor: v1498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i2 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
stamp: void
trueSuccessorProbability: 0.0011918951132300348
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553095712730882878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 128]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 130]
stamp: i32
=== Inputs ===
x: i69 
y: i17 
=== Succesors ===
=== Usages ===
v1917 v703 v709 v1110 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i69 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i702 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v704 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v704 #falseSuccessor: v705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1879 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid a1098 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1098 
index: - 
=== Succesors ===
=== Usages ===
a1879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1098 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1879 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsNumber
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1915 
=== Succesors ===
next: i1880 
=== Usages ===
a1102 v1916 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1915 #next: i1880  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1879 
=== Succesors ===
=== Usages ===
i1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v1916 
=== Succesors ===
next: v712 
=== Usages ===
v709 v1110 
=== Predecessor ===
a1879 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v1916 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1880 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i1880  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i1880 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 13]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1880 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i1880  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1110 
=== Succesors ===
trueSuccessor: v1504 
falseSuccessor: v1506 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1110 #trueSuccessor: v1504 #falseSuccessor: v1506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1881 
=== Usages ===
i1881 
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1881  <|@  <|@
f <@~|@floating>@ <|@
tid a1102 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1879 
=== Succesors ===
=== Usages ===
v1917 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1102 
index: i70 
=== Succesors ===
=== Usages ===
i1881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1102 index: i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1504 
address: v1917 
=== Succesors ===
next: v75 
=== Usages ===
i78 
=== Predecessor ===
v1504 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1504 address: v1917 #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
i1881 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1749 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1749  <|@  <|@
f <@~|@floating>@ <|@
tid i1750 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284443
stableDimension: 0
stamp: i32 [-284443] ⇊00000000fffba8e5 ⇈00000000fffba8e5
stampKind: i32
value: int[-284443|0xfffffffffffba8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
v1506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596503538984261917
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:469) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596512292586521733
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i1881 i8 i8 i8 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i1881 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 v859 v860 
=== Succesors ===
next: v87 
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 v859 v860 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 162]
stamp: i32
=== Inputs ===
x: i80 
y: i2 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 163]
stamp: i64
=== Inputs ===
x: j3 
y: i83 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i83  <|@  <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@450b9333
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
=== Inputs ===
arguments: a1 i8 j84 i78 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i8 j84 i78  <|@  <|@
tid ?1713 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
bci: 170
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.developLongDigits
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1097 
stateDuring: ?1713 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1097 stateDuring: ?1713 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:477) [bci: 173]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1741  <|@  <|@
f <@~|@floating>@ <|@
tid i1742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -280595
stableDimension: 0
stamp: i32 [-280595] ⇊00000000fffbb7ed ⇈00000000fffbb7ed
stampKind: i32
value: int[-280595|0xfffffffffffbb7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
v1498 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1744 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-284443 - -280595] ⇊00000000fffba0e5 ⇈00000000fffbbffd
valueDescription: i32
=== Inputs ===
merge: v1740 
values: i1742 i1750 
=== Succesors ===
=== Usages ===
v1746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1740 values: i1742 i1750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1741 v1749 
=== Succesors ===
next: v1746 
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1741 v1749 #next: v1746  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i1744 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i1744 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599362382818603673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559508159989450990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602300313129920753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543323316582870700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605346350726020831
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1029 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v39 
values: i18 i1028 i1028 i1028 i1028 i8 
=== Succesors ===
=== Usages ===
?90 i946 i1947 i941 i947 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v39 values: i18 i1028 i1028 i1028 i1028 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v38 v40 v48 v57 v62 v1042 
=== Succesors ===
next: v750 
=== Usages ===
i1029 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v38 v40 v48 v57 v62 v1042 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 j753 j754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j3 
y: j724 
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j3 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j726 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j725 
y: j723 
=== Succesors ===
=== Usages ===
d727 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j725 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid d727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j726 
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j726  <|@  <|@
f <@~|@floating>@ <|@
tid d728 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d729 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d727 
y: d728 
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d727 y: d728  <|@  <|@
f <@~|@floating>@ <|@
tid d730 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d731 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d729 
y: d730 
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d729 y: d730  <|@  <|@
f <@~|@floating>@ <|@
tid d732 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d733 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d731 
y: d732 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d731 y: d732  <|@  <|@
f <@~|@floating>@ <|@
tid d734 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d736 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d734 
y: d735 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d734 y: d735  <|@  <|@
f <@~|@floating>@ <|@
tid d737 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d733 
y: d736 
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d733 y: d736  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64
=== Inputs ===
value: d737 
=== Succesors ===
=== Usages ===
j740 v746 j754 v762 v767 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d737  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j745 
=== Succesors ===
=== Usages ===
v761 i774 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j738 
y: j739 
=== Succesors ===
=== Usages ===
j741 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j740 
y: i80 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j740 y: i80  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j741 
=== Succesors ===
=== Usages ===
i744 i771 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j741  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i742 
y: i743 
=== Succesors ===
=== Usages ===
v747 v751 j753 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i742 y: i743  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i8 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8012441897039807
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v748 #falseSuccessor: v749  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1511 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j766 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v767 
=== Succesors ===
trueSuccessor: v1510 
falseSuccessor: v1508 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v767 #trueSuccessor: v1510 #falseSuccessor: v1508  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1752 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1752  <|@  <|@
f <@~|@floating>@ <|@
tid i1753 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355091
stableDimension: 0
stamp: i32 [-355091] ⇊00000000fffa94ed ⇈00000000fffa94ed
stampKind: i32
value: int[-355091|0xfffffffffffa94ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v746 
trueValue: i8 
falseValue: i17 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v746 trueValue: i8 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B207" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1515 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i80 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v1512 
falseSuccessor: v1514 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v1512 #falseSuccessor: v1514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j738 
y: j724 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j754 
y: j755 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j754 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i770 
y: i742 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i770 y: i742  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j756 
y: i771 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j756 y: i771  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j757 
=== Succesors ===
=== Usages ===
i764 i777 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.008440302444170916
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v760 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v759 #falseSuccessor: v760  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563802181229000832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1519 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j724 
y: i744 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j724 y: i744  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j753 
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1518 
falseSuccessor: v1516 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1518 #falseSuccessor: v1516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1759 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1759  <|@  <|@
f <@~|@floating>@ <|@
tid i1760 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355603
stableDimension: 0
stamp: i32 [-355603] ⇊00000000fffa92ed ⇈00000000fffa92ed
stampKind: i32
value: int[-355603|0xfffffffffffa92ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32
=== Inputs ===
x: i17 
y: i758 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i17 y: i758  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i777 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v775 
values: i774 i764 i758 
=== Succesors ===
=== Usages ===
?1722 i94 ?1721 v108 i948 ?1720 ?1719 ?475 ?1718 ?167 ?966 ?239 v244 v247 i524 ?514 ?486 ?1717 i341 ?1716 i1002 i457 ?1715 ?465 ?1714 i1003 i1877 i889 i946 i1947 i1948 i1949 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v775 values: i774 i764 i758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v776 v778 v779 
=== Succesors ===
next: v98 
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v776 v778 v779 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 184]
stamp: i32
=== Inputs ===
value: i777 
=== Succesors ===
=== Usages ===
v95 i942 i887 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i777  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i94 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
trueSuccessorProbability: 0.7284909928572612
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v96 #falseSuccessor: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603399324019046578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596956127118432433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i1948 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1111]
stamp: i32
=== Inputs ===
x: i7 
y: i777 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i7 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i942 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
i1949 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i1949 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32
=== Inputs ===
x: i942 
y: i777 
=== Succesors ===
=== Usages ===
i951 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i942 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1947 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 194]
stamp: i32
=== Inputs ===
x: i1029 
y: i777 
=== Succesors ===
=== Usages ===
i941 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1029 y: i777  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i94 
=== Succesors ===
=== Usages ===
?1717 v1243 ?1716 ?1715 ?1716 ?465 ?465 ?1714 ?1715 v894 v1945 ?475 ?1714 ?167 ?167 ?966 ?966 v1918 v1120 v1924 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i94  <|@  <|@
f <@~|@floating>@ <|@
tid i941 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i1029 i1947 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i1029 i1947  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i1949 
=== Succesors ===
=== Usages ===
i168 i964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i1949  <|@  <|@
f <@~|@floating>@ <|@
tid i945 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i7 i1948 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i7 i1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v111 
=== Usages ===
i887 i941 i951 i945 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 328]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 i219 i905 j316 j323 j412 i680 i921 j688 j692 i955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
trueSuccessorProbability: 0.7284911334689859
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v109 #falseSuccessor: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603399325027391701
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596956123085051940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 340]
stamp: i32
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
i949 i952 i954 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i952 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i948 
y: i7 
=== Succesors ===
=== Usages ===
i954 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i948 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32
=== Inputs ===
x: i948 
y: i952 
=== Succesors ===
=== Usages ===
i955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i948 y: i952  <|@  <|@
f <@~|@floating>@ <|@
tid i946 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:524) [bci: 211]
stamp: i32
=== Inputs ===
x: i777 
y: i1029 
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i1029  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v114 
values: i8 i777 
=== Succesors ===
=== Usages ===
?1718 v1128 ?1717 v1183 ?1716 ?167 ?475 ?966 v1919 v1925 ?1715 v1237 ?465 ?1714 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i8 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i1029 i946 
=== Succesors ===
=== Usages ===
i129 i1071 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i1029 i946  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i7 i948 
=== Succesors ===
=== Usages ===
v171 v1946 v1245 v1379 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i7 i948  <|@  <|@
f <@~|@floating>@ <|@
tid i955 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i160 i954 
=== Succesors ===
=== Usages ===
i182 i182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i160 i954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 
=== Succesors ===
next: v783 
=== Usages ===
i889 i947 i949 i955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 196]
stamp: i32
=== Inputs ===
x: i2 
y: i941 
=== Succesors ===
=== Usages ===
i123 i120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 235]
stamp: i32 [-12 - 52]
=== Inputs ===
x: i80 
y: i9 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 236]
stamp: i32
=== Inputs ===
x: i107 
y: i679 
=== Succesors ===
=== Usages ===
i1072 i1071 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i123 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i947 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:527) [bci: 222]
stamp: i32
=== Inputs ===
x: i107 
y: i4 
=== Succesors ===
=== Usages ===
i1072 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
v133 v1068 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i11 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
trueSuccessorProbability: 0.4467778355907999
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v781 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v781 #falseSuccessor: v782  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600079424853247293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:540) [bci: 252]
stamp: i32
=== Inputs ===
x: i123 
y: i947 
=== Succesors ===
=== Usages ===
i1053 i1055 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i123 y: i947  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i947 
=== Succesors ===
=== Usages ===
i1063 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i947  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3469594269009605
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593557413975401684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1044 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1044  <|@  <|@
f <@*|@fixed>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597537133505099792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601606077344053375
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid i1071 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:541) [bci: 259]
stamp: i32
=== Inputs ===
x: i947 
y: i123 
=== Succesors ===
=== Usages ===
i1058 i1060 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i947 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i1072 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i123 
=== Succesors ===
=== Usages ===
i1063 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3469594269009605
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v1066 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v1066 #falseSuccessor: v1067  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594673889893227806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v1066 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598647803047311300
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1063 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1043 
values: i129 i1072 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1043 values: i129 i1072  <|@  <|@
f <@~|@floating>@ <|@
tid i1055 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1043 
values: i127 i8 
=== Succesors ===
=== Usages ===
i1053 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1043 values: i127 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1060 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1043 
values: i8 i1071 
=== Succesors ===
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1043 values: i8 i1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1044 v1045 
=== Succesors ===
next: v137 
=== Usages ===
i1063 i1055 i1060 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1044 v1045 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: i32
=== Inputs ===
x: i1063 
y: i17 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1063 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v1043 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598853142542707184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v1067 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i129 i134 i1072 
=== Succesors ===
=== Usages ===
i891 v140 i144 i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i129 i134 i1072  <|@  <|@
f <@~|@floating>@ <|@
tid i1053 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i127 i1055 i8 
=== Succesors ===
=== Usages ===
i144 i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i127 i1055 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1058 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i8 i1060 i1071 
=== Succesors ===
=== Usages ===
i145 i150 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i8 i1060 i1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 v1073 
=== Succesors ===
next: v143 
=== Usages ===
i138 i1053 i1058 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 v1073 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i8 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i138 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
trueSuccessorProbability: 0.9999036283910759
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605345659632571136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:559) [bci: 294]
stamp: i32
=== Inputs ===
x: i1058 
y: i138 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1058 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 287]
stamp: i32
=== Inputs ===
x: i1053 
y: i138 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1053 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4545289861929351958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i1053 i144 
=== Succesors ===
=== Usages ===
?1716 i153 ?167 ?966 i207 j310 ?1715 ?465 ?1714 i472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i1053 i144  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i1058 i145 
=== Succesors ===
=== Usages ===
?1718 ?167 i169 ?966 i209 j312 ?1717 v1237 ?465 ?1716 ?1715 ?475 ?1714 i482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i1058 i145  <|@  <|@
f <@~|@floating>@ <|@
tid i891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v147 
values: i138 i8 
=== Succesors ===
=== Usages ===
?1717 ?167 ?966 i211 j314 ?1716 ?465 ?1715 ?1714 ?475 i477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i138 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v146 v148 
=== Succesors ===
next: v157 
=== Usages ===
i149 i150 i891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v146 v148 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 307]
stamp: i32
=== Inputs ===
x: i11 
y: i149 
=== Succesors ===
=== Usages ===
?167 i168 i977 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i949 
y: i45 
=== Succesors ===
=== Usages ===
v174 v975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i949 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i45 
=== Succesors ===
=== Usages ===
v157 v1583 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i887 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:537) [bci: 228]
stamp: i64
=== Inputs ===
x: j3 
y: i9 
=== Succesors ===
=== Usages ===
?1716 v1243 ?1715 ?167 ?966 i203 j309 ?1714 ?465 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
trueSuccessorProbability: 0.9999036206508819
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1882 
=== Usages ===
i1882 
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1882  <|@  <|@
f <@~|@floating>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i887 
=== Succesors ===
=== Usages ===
i1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 322]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v155 
address: v1945 
=== Succesors ===
next: v975 
=== Usages ===
i964 i977 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v155 address: v1945 #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i1882 
=== Succesors ===
=== Usages ===
i967 i968 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i1882  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9999036206508819
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v973 
falseSuccessor: v974 
=== Usages ===
=== Predecessor ===
i1882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v973 #falseSuccessor: v974  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605344968494722035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B65" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4545290316634068424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 326]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i951 
=== Succesors ===
=== Usages ===
i968 i967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i951  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9999036206508819
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i964 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v957 
values: i951 i1882 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i951 i1882  <|@  <|@
f <@~|@floating>@ <|@
tid i968 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v957 
values: i168 i977 
=== Succesors ===
=== Usages ===
i967 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i168 i977  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v958 v959 
=== Succesors ===
next: v1523 
=== Usages ===
i964 i968 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v958 v959 #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i949 
y: i45 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i949 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1379 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1379 #trueSuccessor: v1520 #falseSuccessor: v1522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1883 
=== Usages ===
i1883 
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1883  <|@  <|@
f <@~|@floating>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i949 
=== Succesors ===
=== Usages ===
i1883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1520 
address: v1946 
=== Succesors ===
next: v179 
=== Usages ===
i182 
=== Predecessor ===
v1520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1520 address: v1946 #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
i1883 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1521 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1521  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 330
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 591
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - i153 i964 
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - i153 i964  <|@  <|@
f <@*|@fixed>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1380
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?167 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4485518606199164087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B58" 
    successors "B66" "B130" 
    xhandlers
    flags 
    probability 4605346350726020829
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v180 
values: i1883 i955 i955 
=== Succesors ===
=== Usages ===
?966 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v180 values: i1883 i955 i955  <|@  <|@
f <@~|@floating>@ <|@
tid i967 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v180 
values: i968 i168 i977 
=== Succesors ===
=== Usages ===
v185 v197 ?966 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v180 values: i968 i168 i977  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v179 v181 v978 
=== Succesors ===
next: v188 
=== Usages ===
i182 i967 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v179 v181 v978 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i967 
y: i54 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i967 y: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 637]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 j630 j630 v449 v1876 ?650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 545]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 i915 i344 i439 i516 i600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 566]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v360 v537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 559]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3] ⇊00000000fffffffd ⇈00000000fffffffd
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 v358 v530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
v1543 v357 v529 v1019 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1884 a1906 a1892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9858815592926324
=== Inputs ===
condition: v185 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v185 #trueSuccessor: v186 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B129" 
    xhandlers
    flags 
    probability 4605245105535640734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 336]
stamp: i32
=== Inputs ===
x: i150 
y: i7 
=== Succesors ===
=== Usages ===
?966 i184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
=== Inputs ===
x: i169 
y: i182 
=== Succesors ===
=== Usages ===
v189 v201 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i54 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
stamp: void
trueSuccessorProbability: 0.965280153803542
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v190 #falseSuccessor: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B96" 
    xhandlers
    flags 
    probability 4604999640181428792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1884 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1884 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 537]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
=== Succesors ===
next: v200 
=== Usages ===
v1194 a1193 v1921 v1922 v1923 v1955 v1956 
=== Predecessor ===
v190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1920 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1884 
=== Succesors ===
=== Usages ===
i1886 i1891 i1890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1884  <|@  <|@
tid ?966 <|@
d <@d|@=== Debug Properties ===
bci: 365
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 594
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - i967 - - - - - - - - - i169 i182 
=== Succesors ===
=== Usages ===
v1821 j319 j321 i217 i216 v1955 i1890 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - i967 - - - - - - - - - i169 i182  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 384]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i967 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i967 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
trueSuccessorProbability: 9.283640537438576E-4
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
a1884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v198 #falseSuccessor: v199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B95" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 389]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i196 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v1524 
falseSuccessor: v1526 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v1524 #falseSuccessor: v1526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B94" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1531 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid i1119 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1120 v1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i1119 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i887 y: i1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1120 
=== Succesors ===
trueSuccessor: v1528 
falseSuccessor: v1530 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1120 #trueSuccessor: v1528 #falseSuccessor: v1530  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B93" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1535 
=== Usages ===
i1885 
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1535  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i889 
y: i1119 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i889 y: i1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1128 
=== Succesors ===
trueSuccessor: v1532 
falseSuccessor: v1534 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1128 #trueSuccessor: v1532 #falseSuccessor: v1534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1955 
=== Usages ===
i1887 
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?966 
object: a1884 
=== Succesors ===
next: v1543 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?966 object: a1884 #next: v1543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1542 
falseSuccessor: v1540 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1542 #falseSuccessor: v1540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1830 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1830  <|@  <|@
f <@~|@floating>@ <|@
tid i1831 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296467
stableDimension: 0
stamp: i32 [-296467] ⇊00000000fffb79ed ⇈00000000fffb79ed
stampKind: i32
value: int[-296467|0xfffffffffffb79ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1547 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i243 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v1546 
falseSuccessor: v1544 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v1546 #falseSuccessor: v1544  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1838 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1838  <|@  <|@
f <@~|@floating>@ <|@
tid i1839 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296723
stableDimension: 0
stamp: i32 [-296723] ⇊00000000fffb78ed ⇈00000000fffb78ed
stampKind: i32
value: int[-296723|0xfffffffffffb78ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B92" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1551 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1551  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i246 
=== Succesors ===
=== Usages ===
v1551 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1548 
falseSuccessor: v1550 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1548 #falseSuccessor: v1550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1885 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1885  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 398]
rawvalue: int[14]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[14]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1918 v1919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i887 
=== Succesors ===
=== Usages ===
i1885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1885 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1528 
address: v1918 
=== Succesors ===
next: v1555 
=== Usages ===
i206 i211 
=== Predecessor ===
v1548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1528 address: v1918 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:600) [bci: 429]
stamp: i32
=== Inputs ===
x: i1885 
y: i891 
=== Succesors ===
=== Usages ===
i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1885 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i211 
y: i160 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i211 
y: i7 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i219 
y: i220 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i906 i905 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i219 y: i220  <|@  <|@
f <@~|@floating>@ <|@
tid i905 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i221 
y: i160 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i906 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i221 
y: i7 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i907 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i905 
y: i906 
=== Succesors ===
=== Usages ===
v909 i911 v924 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i905 y: i906  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i907 
y: i7 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i907 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v1554 
falseSuccessor: v1552 
=== Usages ===
=== Predecessor ===
i1885 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v1554 #falseSuccessor: v1552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1842 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1842  <|@  <|@
f <@~|@floating>@ <|@
tid i1843 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297235
stableDimension: 0
stamp: i32 [-297235] ⇊00000000fffb76ed ⇈00000000fffb76ed
stampKind: i32
value: int[-297235|0xfffffffffffb76ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1886 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1921 
=== Succesors ===
next: v1559 
=== Usages ===
v1457 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1921 #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1886 
y: i702 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1886 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1457 
=== Succesors ===
trueSuccessor: v1558 
falseSuccessor: v1556 
=== Usages ===
=== Predecessor ===
i1886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1457 #trueSuccessor: v1558 #falseSuccessor: v1556  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1846 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1846  <|@  <|@
f <@~|@floating>@ <|@
tid i1847 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -357147
stableDimension: 0
stamp: i32 [-357147] ⇊00000000fffa8ce5 ⇈00000000fffa8ce5
stampKind: i32
value: int[-357147|0xfffffffffffa8ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1887 
=== Usages ===
v1157 v1173 
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1887  <|@  <|@
f <@~|@floating>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i889 
=== Succesors ===
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1532 
address: v1919 
=== Succesors ===
next: i216 
=== Usages ===
i209 
=== Predecessor ===
v1556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1532 address: v1919 #next: i216  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 397]
resultBits: 32
stamp: i32
=== Inputs ===
value: j121 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j121  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 404]
stamp: i32
=== Inputs ===
x: i203 
y: i1885 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i203 y: i1885  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 407]
stamp: i32
=== Inputs ===
x: i206 
y: i149 
=== Succesors ===
=== Usages ===
i216 i217 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i206 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 418]
stamp: i32
=== Inputs ===
x: i1887 
y: i150 
=== Succesors ===
=== Usages ===
i213 i214 i216 i217 ?239 i903 i904 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1887 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:608) [bci: 446]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?966 
x: i207 
y: i209 
=== Succesors ===
next: v1563 
=== Usages ===
v230 i235 
=== Predecessor ===
i1887 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?966 x: i207 y: i209 #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i8 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v1562 
falseSuccessor: v1560 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v1562 #falseSuccessor: v1560  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1848  <|@  <|@
f <@~|@floating>@ <|@
tid i1849 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291603
stableDimension: 0
stamp: i32 [-291603] ⇊00000000fffb8ced ⇈00000000fffb8ced
stampKind: i32
value: int[-291603|0xfffffffffffb8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: i217 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 455]
op: REM
stamp: i32 [-2147483647 - 2147483647]
type: SIGNED
=== Inputs ===
stateBefore: ?966 
x: i207 
y: i209 
=== Succesors ===
next: v1567 
=== Usages ===
i681 i680 
=== Predecessor ===
v1560 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?966 x: i207 y: i209 #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i217 
y: i160 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i217 
y: i7 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i680 
y: i681 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i904 i903 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i680 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i221 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i682 y: i221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v1566 
falseSuccessor: v1564 
=== Usages ===
=== Predecessor ===
i217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v1566 #falseSuccessor: v1564  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1850 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1850  <|@  <|@
f <@~|@floating>@ <|@
tid i1851 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291091
stableDimension: 0
stamp: i32 [-291091] ⇊00000000fffb8eed ⇈00000000fffb8eed
stampKind: i32
value: int[-291091|0xfffffffffffb8eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1571 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i209 
y: i160 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i209 
y: i7 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i213 
y: i214 
=== Succesors ===
=== Usages ===
v226 ?239 v912 i300 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i213 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 484]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i221 
y: i682 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i221 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i225 
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i225  <|@  <|@
f <@*|@fixed>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1570 
falseSuccessor: v1568 
=== Usages ===
=== Predecessor ===
v1564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1570 #falseSuccessor: v1568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1852  <|@  <|@
f <@~|@floating>@ <|@
tid i1853 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291347
stableDimension: 0
stamp: i32 [-291347] ⇊00000000fffb8ded ⇈00000000fffb8ded
stampKind: i32
value: int[-291347|0xfffffffffffb8ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B90" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1884 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1884  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 549]
stamp: i32
=== Inputs ===
x: i216 
y: i234 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 550]
resultBits: 16
stamp: i16
=== Inputs ===
value: i235 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1556 
address: v1922 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i903 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1556 address: v1922 value: i236 stateAfter: - lastLocationAccess: - #next: i903  <|@  <|@
tid ?239 <|@
d <@d|@=== Debug Properties ===
bci: 552
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 626
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - - 
=== Succesors ===
=== Usages ===
i903 i904 v1766 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:630) [bci: 591]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: i904 
=== Usages ===
i915 
=== Predecessor ===
v1157 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?239 x: i682 y: i209 #next: i904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i904 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 600]
op: REM
stamp: i32 [-2147483647 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: v1575 
=== Usages ===
i921 i922 
=== Predecessor ===
i903 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?239 x: i682 y: i209 #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid i921 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i904 
y: i160 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i904 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i922 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i904 
y: i7 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i904 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i923 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i921 
y: i922 
=== Succesors ===
=== Usages ===
v909 i911 v302 i299 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i921 y: i922  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i907 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i923 y: i907  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v909 
=== Succesors ===
trueSuccessor: v1572 
falseSuccessor: v1574 
=== Usages ===
=== Predecessor ===
i904 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v909 #trueSuccessor: v1572 #falseSuccessor: v1574  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid i911 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 660]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i907 
y: i923 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i907 y: i923  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i911 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i911  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v1576 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v1578 #falseSuccessor: v1576  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1762 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1762  <|@  <|@
f <@~|@floating>@ <|@
tid i1763 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297747
stableDimension: 0
stamp: i32 [-297747] ⇊00000000fffb74ed ⇈00000000fffb74ed
stampKind: i32
value: int[-297747|0xfffffffffffb74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B198" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1884 
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1884  <|@  <|@
f <@~|@floating>@ <|@
tid i915 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 695]
stamp: i32
=== Inputs ===
x: i903 
y: i234 
=== Succesors ===
=== Usages ===
i916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i903 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i916 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 696]
resultBits: 16
stamp: i16
=== Inputs ===
value: i915 
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1556 
address: v1923 
value: i916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v1576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1556 address: v1923 value: i916 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 704]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i923 
y: i7 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i923 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 707]
stamp: i32
=== Inputs ===
x: i299 
y: i215 
=== Succesors ===
=== Usages ===
j301 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i299 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 708]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i300 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i300  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i8 
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i923 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v302 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1174 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v302 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 722]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1767 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1767  <|@  <|@
f <@~|@floating>@ <|@
tid i1768 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297491
stableDimension: 0
stamp: i32 [-297491] ⇊00000000fffb75ed ⇈00000000fffb75ed
stampKind: i32
value: int[-297491|0xfffffffffffb75ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
v1574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1764 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-297747 - -297491] ⇊00000000fffb74ed ⇈00000000fffb75ed
valueDescription: i32
=== Inputs ===
merge: v1761 
values: i1763 i1768 
=== Succesors ===
=== Usages ===
v1766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1761 values: i1763 i1768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1762 v1767 
=== Succesors ===
next: v1766 
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1762 v1767 #next: v1766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?239 
actionAndReason: i1764 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?239 actionAndReason: i1764 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1844 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1844  <|@  <|@
f <@~|@floating>@ <|@
tid i1845 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296979
stableDimension: 0
stamp: i32 [-296979] ⇊00000000fffb77ed ⇈00000000fffb77ed
stampKind: i32
value: int[-296979|0xfffffffffffb77ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1828 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1828  <|@  <|@
f <@~|@floating>@ <|@
tid i1829 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289051
stableDimension: 0
stamp: i32 [-289051] ⇊00000000fffb96e5 ⇈00000000fffb96e5
stampKind: i32
value: int[-289051|0xfffffffffffb96e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1826  <|@  <|@
f <@~|@floating>@ <|@
tid i1827 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -287003
stableDimension: 0
stamp: i32 [-287003] ⇊00000000fffb9ee5 ⇈00000000fffb9ee5
stampKind: i32
value: int[-287003|0xfffffffffffb9ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1824  <|@  <|@
f <@~|@floating>@ <|@
tid i1825 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -286227
stableDimension: 0
stamp: i32 [-286227] ⇊00000000fffba1ed ⇈00000000fffba1ed
stampKind: i32
value: int[-286227|0xfffffffffffba1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" "B127" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 728]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1583 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1583  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1582 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v1580 #falseSuccessor: v1582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B126" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1587 
=== Usages ===
j1888 
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1587  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i889 
y: i45 
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i889 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1183 
=== Succesors ===
trueSuccessor: v1584 
falseSuccessor: v1586 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1183 #trueSuccessor: v1584 #falseSuccessor: v1586  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B104" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1888 
=== Usages ===
j1889 
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1888  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 93]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1924 v1925 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i887 
=== Succesors ===
=== Usages ===
j1888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1580 
address: v1924 
=== Succesors ===
next: j1889 
=== Usages ===
j309 j314 
=== Predecessor ===
v1584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1580 address: v1924 #next: j1889  <|@  <|@
f <@~|@floating>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i889 
=== Succesors ===
=== Usages ===
j1889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1889 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1584 
address: v1925 
=== Succesors ===
next: j319 
=== Usages ===
j312 
=== Predecessor ===
j1888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1584 address: v1925 #next: j319  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 735]
stamp: i64
=== Inputs ===
x: j121 
y: j1888 
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j121 y: j1888  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 738]
stamp: i64
=== Inputs ===
x: j309 
y: i149 
=== Succesors ===
=== Usages ===
j319 j321 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j309 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 749]
stamp: i64
=== Inputs ===
x: j1889 
y: i150 
=== Succesors ===
=== Usages ===
j316 j317 j319 j321 ?988 ?999 ?443 ?373 ?381 j408 j410 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1889 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 778]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?966 
x: j310 
y: j312 
=== Succesors ===
next: j321 
=== Usages ===
i320 
=== Predecessor ===
j1889 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?966 x: j310 y: j312 #next: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j321 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 789]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?966 
x: j310 
y: j312 
=== Succesors ===
next: v339 
=== Usages ===
j689 j688 
=== Predecessor ===
j319 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?966 x: j310 y: j312 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j312 
y: i160 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j312 
y: i7 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j316 
y: j317 
=== Succesors ===
=== Usages ===
j447 v332 ?443 ?999 v427 ?373 ?381 ?988 j1872 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j316 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:654) [bci: 760]
stamp: i64
=== Inputs ===
x: j1888 
y: i891 
=== Succesors ===
=== Usages ===
j323 j324 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1888 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j314 
y: i160 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j314 
y: i7 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j323 
y: j324 
=== Succesors ===
=== Usages ===
j380 v327 j330 ?373 ?999 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j323 y: j324  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j321 
y: i160 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j321 
y: i7 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j688 
y: j689 
=== Succesors ===
=== Usages ===
j379 v327 j330 ?373 ?999 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j688 y: j689  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 820]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j325 
y: j690 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j325 y: j690  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j330 
=== Succesors ===
=== Usages ===
i333 v1591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j330  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 779]
resultBits: 32
stamp: i32
=== Inputs ===
value: j319 
=== Succesors ===
=== Usages ===
v336 i344 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j319  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i8 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i320 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
trueSuccessorProbability: 0.1356671003058001
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 862]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1591  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v1590 
falseSuccessor: v1588 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v1590 #falseSuccessor: v1588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1822 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1822  <|@  <|@
f <@~|@floating>@ <|@
tid i1823 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -312851
stableDimension: 0
stamp: i32 [-312851] ⇊00000000fffb39ed ⇈00000000fffb39ed
stampKind: i32
value: int[-312851|0xfffffffffffb39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i1002 i1003 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.010728526052578225
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v1588 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v355 #falseSuccessor: v356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B114" 
    xhandlers
    flags 
    probability 4562723796993956672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    probability 4591984949112608749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 873]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1890 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?966 
guard: - 
address: v1921 
=== Succesors ===
next: v1599 
=== Usages ===
v1230 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?966 guard: - address: v1921 #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1890 
y: i8 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1890 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1230 
=== Succesors ===
trueSuccessor: v1598 
falseSuccessor: v1596 
=== Usages ===
=== Predecessor ===
i1890 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1230 #trueSuccessor: v1598 #falseSuccessor: v1596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1840 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1840  <|@  <|@
f <@~|@floating>@ <|@
tid i1841 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359195
stableDimension: 0
stamp: i32 [-359195] ⇊00000000fffa84e5 ⇈00000000fffa84e5
stampKind: i32
value: int[-359195|0xfffffffffffa84e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1235 
=== Usages ===
v1235 
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1235  <|@  <|@
f <@~|@floating>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1884 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1884  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 886]
stamp: i32
=== Inputs ===
x: i320 
y: i234 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 887]
resultBits: 16
stamp: i16
=== Inputs ===
value: i344 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1596 
address: v1956 
value: i345 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1596 address: v1956 value: i345 stateAfter: - lastLocationAccess: - #next: v1019  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.010728526052578225
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1018 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1017 #falseSuccessor: v1018  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574742723079176655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1020 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1020  <|@  <|@
f <@*|@fixed>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4604005090574932337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1000  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v1018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1002 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v997 
values: i341 i777 
=== Succesors ===
=== Usages ===
v358 v360 i1003 i1003 ?999 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v997 values: i341 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1014 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v997 
values: i8 i7 
=== Succesors ===
=== Usages ===
i1013 i1013 ?999 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v997 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v998 v1000 
=== Succesors ===
next: v1603 
=== Usages ===
i1002 i1014 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v998 v1000 #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1002 
y: i243 
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1002 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j690 
y: j325 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j690 y: j325  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v327 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i371 ?999 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v327 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v332 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i372 ?999 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v332 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v1602 
falseSuccessor: v1600 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v1602 #falseSuccessor: v1600  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1601 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1601  <|@  <|@
tid ?999 <|@
d <@d|@=== Debug Properties ===
bci: 889
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 680
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i1002 - - - - - - - i1014 i328 i333 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i1002 - - - - - - - i1014 i328 i333 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1236
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?999 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?999  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1002 
y: i246 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1002 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
trueSuccessorProbability: 0.9998292291403394
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v361 #falseSuccessor: v365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4604919004792408310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4548849955350481381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" "B102" "B113" "B107" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i328 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i377 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i328 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i333 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i333 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v369 
values: i1002 i341 i1002 i777 
=== Succesors ===
=== Usages ===
i457 ?373 ?381 ?988 ?443 i457 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i1002 i341 i1002 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i1014 i8 i1014 i7 
=== Succesors ===
=== Usages ===
i376 ?373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i1014 i8 i1014 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 v691 v1020 
=== Succesors ===
next: v1607 
=== Usages ===
i371 i372 i1003 i1013 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 v691 v1020 #next: v1607  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
value: a1884 
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1884  <|@  <|@
f <@*|@fixed>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1194 
=== Succesors ===
trueSuccessor: v1606 
falseSuccessor: v1604 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1194 #trueSuccessor: v1606 #falseSuccessor: v1604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1605 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1605  <|@  <|@
tid ?373 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1003 - - - - - - - i1013 i371 i372 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1003 - - - - - - - i1013 i371 i372 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1454
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: NullCheckException
speculation: Object[d.a@1433516113]
stamp: void
=== Inputs ===
stateBefore: ?373 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1891 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1921 
=== Succesors ===
next: v374 
=== Usages ===
v1212 
=== Predecessor ===
v1604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1921 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a1193 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1024]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1884 
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1884  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
i1891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B121" "B122" 
    successors "B118" "B125" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618430005004285329
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v375 
values: i1013 i438 i438 
=== Succesors ===
=== Usages ===
?381 i458 v1212 v1926 i438 i458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i1013 i438 i438  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i371 i7 i423 
=== Succesors ===
=== Usages ===
i459 v382 i459 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i371 i7 i423  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i372 i7 i428 
=== Succesors ===
=== Usages ===
i460 i460 v392 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i372 i7 i428  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j690 j694 j694 
=== Succesors ===
=== Usages ===
?381 v449 j446 j408 j410 j1873 v1876 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j690 j694 j694  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j325 j414 j414 
=== Succesors ===
=== Usages ===
?381 j412 j413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j325 j414 j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 7.913056511935287
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v374 
=== Succesors ===
next: v391 
=== Usages ===
i376 i377 i378 j379 j380 v385 v397 v444 v979 v1611 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v374 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i8 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
trueSuccessorProbability: 0.9124800935868261
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v383 #falseSuccessor: v385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617839771930223566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 919]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i378 
y: i8 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i378 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
trueSuccessorProbability: 0.9574198800803831
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 924]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1612  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1003 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 - 
=== Succesors ===
=== Usages ===
j408 j410 v1609 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1003 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i1891 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i376 y: i1891  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1212 
=== Succesors ===
trueSuccessor: v1608 
falseSuccessor: v1611 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1212 #trueSuccessor: v1608 #falseSuccessor: v1611  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: j408 
=== Usages ===
v1207 
=== Predecessor ===
v1612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 928]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: j410 
=== Usages ===
i409 
=== Predecessor ===
v1608 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?381 x: j379 y: j312 #next: j410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 939]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775806]
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: v1207 
=== Usages ===
j693 j692 
=== Predecessor ===
j408 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?381 x: j379 y: j312 #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1193 
index: i376 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1193 index: i376  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 929]
resultBits: 32
stamp: i32
=== Inputs ===
value: j408 
=== Succesors ===
=== Usages ===
?988 i439 ?443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j408  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1036]
stamp: i32
=== Inputs ===
x: i409 
y: i234 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i409 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1037]
resultBits: 16
stamp: i16
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1608 
address: v1926 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
j410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1608 address: v1926 value: i440 stateAfter: - lastLocationAccess: - #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j410 
y: i160 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j410 
y: i7 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j692 
y: j693 
=== Succesors ===
=== Usages ===
j379 v422 j425 j379 ?443 ?988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j692 y: j693  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1029]
stamp: i32
=== Inputs ===
x: i376 
y: i7 
=== Succesors ===
=== Usages ===
?443 i376 ?988 i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i376 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j380 
y: i160 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j380 
y: i7 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j414 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j412 
y: j413 
=== Succesors ===
=== Usages ===
j380 v417 ?443 v422 j425 j380 ?988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j412 y: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j280 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j414 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
stamp: void
trueSuccessorProbability: 3.567423074385401E-4
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v418 #falseSuccessor: v419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566251910005568400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:697) [bci: 1017]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1469 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1469  <|@  <|@
tid ?443 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1003 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1003 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?443 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?443 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617575642540210170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 981]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1470 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1470  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j414 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j414  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v422 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i377 ?988 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v422 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1000]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j414 
y: j694 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j414 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j425 
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j425  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v427 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i378 ?988 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v427 trueValue: i7 falseValue: i8  <|@  <|@
tid ?988 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1003 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1003 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?988 
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?988 #next: v979  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1470 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1609 
=== Usages ===
=== Predecessor ===
v1612 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1460
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B198" 
    xhandlers
    flags 
    probability 4597552902277943576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1854  <|@  <|@
f <@~|@floating>@ <|@
tid j1873 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j1872 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j1872 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j1873 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1873 y: j318  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i1875 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i1875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1876 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1874 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1876 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1874 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1875 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1875  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B198" 
    xhandlers
    flags 
    probability 4602897084137770523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j446 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j446 y: j318  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v449 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1220 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v449 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i450  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1834  <|@  <|@
f <@~|@floating>@ <|@
tid i1835 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303131
stableDimension: 0
stamp: i32 [-303131] ⇊00000000fffb5fe5 ⇈00000000fffb5fe5
stampKind: i32
value: int[-303131|0xfffffffffffb5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1832 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1832  <|@  <|@
f <@~|@floating>@ <|@
tid i1833 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -301083
stableDimension: 0
stamp: i32 [-301083] ⇊00000000fffb67e5 ⇈00000000fffb67e5
stampKind: i32
value: int[-301083|0xfffffffffffb67e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B100" "B95" "B94" "B93" "B72" "B127" "B126" "B74" "B105" "B77" "B92" "B79" "B81" "B83" "B85" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1819 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-359195 - -286227] ⇊00000000fffa00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1816 
values: i1823 i1825 i1827 i1829 i1831 i1833 i1835 i1839 i1841 i1843 i1845 i1847 i1849 i1851 i1853 
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1816 values: i1823 i1825 i1827 i1829 i1831 i1833 i1835 i1839 i1841 i1843 i1845 i1847 i1849 i1851 i1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1822 v1824 v1826 v1828 v1830 v1832 v1834 v1838 v1840 v1842 v1844 v1846 v1848 v1850 v1852 
=== Succesors ===
next: v1821 
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1822 v1824 v1826 v1828 v1830 v1832 v1834 v1838 v1840 v1842 v1844 v1846 v1848 v1850 v1852 #next: v1821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?966 
actionAndReason: i1819 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1816 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?966 actionAndReason: i1819 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B131" 
    xhandlers
    flags 
    probability 4583512112743206079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B131" 
    xhandlers
    flags 
    probability 4577633313965379503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B129" 
    successors "B132" "B135" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v191 v193 
=== Succesors ===
next: a464 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v191 v193 #next: a464  <|@  <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@65b182f8
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i889 i150 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i889 i150  <|@  <|@
tid ?1714 <|@
d <@d|@=== Debug Properties ===
bci: 1074
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
d <@d|@=== Debug Properties ===
bci: 1074
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1237 
stateDuring: ?1714 
=== Succesors ===
next: v1950 
=== Usages ===
v1241 v1242 ?1715 v1950 
=== Predecessor ===
v192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1237 stateDuring: ?1714 #next: v1950  <|@  <|@
tid ?465 <|@
d <@d|@=== Debug Properties ===
bci: 1077
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - a1743 
=== Succesors ===
=== Usages ===
v1950 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?465 
object: a464 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
a464 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?465 object: a464 #next: i467  <|@  <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@184e5683
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.getNormalizationBias()>
=== Inputs ===
arguments: a464 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464  <|@  <|@
tid ?1715 <|@
d <@d|@=== Debug Properties ===
bci: 1081
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - a464 - - - - - - - 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - a464 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
bci: 1081
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.getNormalizationBias
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1241 
stateDuring: ?1715 
=== Succesors ===
next: a470 
=== Usages ===
?1718 v1242 ?1717 i472 ?475 i477 ?1716 i482 
=== Predecessor ===
v1950 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1241 stateDuring: ?1715 #next: a470  <|@  <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@40a5c6eb
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a464 i467 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464 i467  <|@  <|@
tid ?1716 <|@
d <@d|@=== Debug Properties ===
bci: 1090
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - i467 - - - - - - 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
d <@d|@=== Debug Properties ===
bci: 1090
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1242 
stateDuring: ?1716 
=== Succesors ===
next: a474 
=== Usages ===
?1725 ?475 ?1724 ?486 v1248 ?1723 ?1722 ?1721 ?514 ?1720 ?1719 ?594 ?1718 ?555 v1254 ?1717 ?585 ?852 
=== Predecessor ===
i467 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1242 stateDuring: ?1716 #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1102]
stamp: i32
=== Inputs ===
x: i149 
y: i467 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i149 y: i467  <|@  <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@59ae47c7
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>
=== Inputs ===
arguments: j121 i887 i472 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j121 i887 i472  <|@  <|@
tid ?1717 <|@
d <@d|@=== Debug Properties ===
bci: 1103
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
d <@d|@=== Debug Properties ===
bci: 1103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfMulPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1243 
stateDuring: ?1717 
=== Succesors ===
next: v1951 
=== Usages ===
a1458 ?1725 ?486 a1458 ?1724 v1321 ?1723 v1253 ?1722 ?514 ?1721 ?1720 ?594 ?1719 ?555 ?852 v1951 ?585 ?1718 v1248 v1249 v1254 v1344 v1934 v1927 v1928 ?815 
=== Predecessor ===
a470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1243 stateDuring: ?1717 #next: v1951  <|@  <|@
tid ?475 <|@
d <@d|@=== Debug Properties ===
bci: 1106
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - a1743 
=== Succesors ===
=== Usages ===
v1951 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?475 
object: a474 
=== Succesors ===
next: a480 
=== Usages ===
=== Predecessor ===
a474 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?475 object: a474 #next: a480  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1116]
stamp: i32
=== Inputs ===
x: i467 
y: i891 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i467 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1118]
stamp: i32
=== Inputs ===
x: i477 
y: i7 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i477 y: i7  <|@  <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3061a848
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i945 i478 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i945 i478  <|@  <|@
tid ?1718 <|@
d <@d|@=== Debug Properties ===
bci: 1119
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 715
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 - - - - - - - - - - - a470 i467 a474 - - - - - 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 - - - - - - - - - - - a470 i467 a474 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
d <@d|@=== Debug Properties ===
bci: 1119
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1244 
stateDuring: ?1718 
=== Succesors ===
next: a485 
=== Usages ===
?1722 ?486 ?1721 v1249 ?1720 v1253 ?1719 ?514 a554 
=== Predecessor ===
v1951 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1244 stateDuring: ?1718 #next: a485  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1132]
stamp: i32
=== Inputs ===
x: i150 
y: i467 
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i467  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1134]
stamp: i32
=== Inputs ===
x: i482 
y: i7 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i482 y: i7  <|@  <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@5a711a89
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i949 i483 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i949 i483  <|@  <|@
tid ?1719 <|@
d <@d|@=== Debug Properties ===
bci: 1135
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
d <@d|@=== Debug Properties ===
bci: 1135
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1245 
stateDuring: ?1719 
=== Succesors ===
next: v1952 
=== Usages ===
v1253 ?1726 ?1725 v1321 ?1724 ?514 ?1723 ?1722 v1348 ?1721 ?555 ?852 ?620 ?1720 ?585 ?594 v1952 
=== Predecessor ===
a480 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1245 stateDuring: ?1719 #next: v1952  <|@  <|@
tid ?486 <|@
d <@d|@=== Debug Properties ===
bci: 1138
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1743 
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?486 
object: a485 
=== Succesors ===
next: i488 
=== Usages ===
=== Predecessor ===
a485 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?486 object: a485 #next: i488  <|@  <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@340d0db2
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
tid ?1720 <|@
d <@d|@=== Debug Properties ===
bci: 1147
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 724
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i488 <|@
d <@d|@=== Debug Properties ===
bci: 1147
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1248 
stateDuring: ?1720 
=== Succesors ===
next: i491 
=== Usages ===
?1722 ?1721 i516 v503 ?514 
=== Predecessor ===
v1952 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1248 stateDuring: ?1720 #next: i491  <|@  <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1fb6e48b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a474 a480 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a480  <|@  <|@
tid ?1721 <|@
d <@d|@=== Debug Properties ===
bci: 1156
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
bci: 1156
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1249 
stateDuring: ?1721 
=== Succesors ===
next: i497 
=== Usages ===
v493 
=== Predecessor ===
i488 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1249 stateDuring: ?1721 #next: i497  <|@  <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@22a82cdd
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a480 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a480  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i8 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i491 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v493 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?1722 ?514 i546 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v493 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1722 <|@
d <@d|@=== Debug Properties ===
bci: 1175
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i497 <|@
d <@d|@=== Debug Properties ===
bci: 1175
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1253 
stateDuring: ?1722 
=== Succesors ===
next: v506 
=== Usages ===
v499 
=== Predecessor ===
i491 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1253 stateDuring: ?1722 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i7 
=== Succesors ===
=== Usages ===
i500 v512 i1871 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i488 
y: i8 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i488 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
trueSuccessorProbability: 0.09966777408637872
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
i497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v504 #falseSuccessor: v505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4570992724793644147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1216]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1218]
stamp: void
trueSuccessorProbability: 0.2633333333333333
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v511 #falseSuccessor: v510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B136" 
    xhandlers
    flags 
    probability 4562301875426403313
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4568663198529913466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:731) [bci: 1221]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i1877 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B136" 
    xhandlers
    flags 
    probability 4585155295857558788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B133" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v509 
=== Succesors ===
next: a1892 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v509 #next: a1892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1228]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
=== Succesors ===
next: i1893 
=== Usages ===
v1941 v1940 
=== Predecessor ===
v508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1920 #next: i1893  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 1227
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
v1774 i1893 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1892 
=== Succesors ===
=== Usages ===
i1893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v1940 
=== Succesors ===
next: v1632 
=== Usages ===
v1356 
=== Predecessor ===
a1892 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v1940 #next: v1632  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1893 
y: i8 
=== Succesors ===
=== Usages ===
v1632 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1893 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1356 
=== Succesors ===
trueSuccessor: v1631 
falseSuccessor: v1629 
=== Usages ===
=== Predecessor ===
i1893 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1356 #trueSuccessor: v1631 #falseSuccessor: v1629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1774 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1774  <|@  <|@
f <@~|@floating>@ <|@
tid i1776 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -360475
stableDimension: 0
stamp: i32 [-360475] ⇊00000000fffa7fe5 ⇈00000000fffa7fe5
stampKind: i32
value: int[-360475|0xfffffffffffa7fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?514 
actionAndReason: i1776 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?514 actionAndReason: i1776 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
v1361 
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1892 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1892  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1240]
stamp: i32
=== Inputs ===
x: i488 
y: i234 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i488 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1241]
resultBits: 16
stamp: i16
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1629 
address: v1941 
value: i517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v1629 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1629 address: v1941 value: i517 stateAfter: - lastLocationAccess: - #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B134" "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v522 
values: i1877 i777 
=== Succesors ===
=== Usages ===
?1728 v530 v537 i457 ?1727 ?555 ?852 ?636 ?1726 ?585 ?1725 ?594 ?1724 ?1723 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i1877 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v522 
values: i8 i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v521 v523 
=== Succesors ===
next: v529 
=== Usages ===
i524 i525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v521 v523 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1245]
stamp: void
trueSuccessorProbability: 0.04053156146179402
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v527 #falseSuccessor: v528  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4564837815409705070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4585483346233305672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1248]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i243 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
stamp: void
trueSuccessorProbability: 0.26973684210526316
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v535 #falseSuccessor: v534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B146" 
    xhandlers
    flags 
    probability 4576896346336262936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4583430909525841668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1255]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i246 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
trueSuccessorProbability: 0.9971550497866287
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4583408793770173339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid i1871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4545290057840552280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" "B140" "B145" "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i494 i8 i8 i8 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i494 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i1871 i8 i8 i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i1871 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v543 v545 v695 v696 
=== Succesors ===
next: v549 
=== Usages ===
i546 i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v543 v545 v695 v696 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
a1901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
i1897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
i1896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@705fdf53
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
f <@~|@floating>@ <|@
tid j1473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B178" 
    successors "B148" "B189" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603868826183568627
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v550 
values: i525 i599 
=== Succesors ===
=== Usages ===
?555 ?1723 ?636 ?1728 ?585 ?1727 ?594 i599 v1939 ?852 v1329 ?1726 ?620 ?1725 i458 ?1724 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i525 i599  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i546 i590 
=== Succesors ===
=== Usages ===
?1727 v556 ?636 i459 ?1728 ?1726 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i546 i590  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i547 i596 
=== Succesors ===
=== Usages ===
?1727 i460 v565 ?636 ?1728 ?1726 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i547 i596  <|@  <|@
f <@~|@floating>@ <|@
tid a554 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v550 
values: a480 a584 
=== Succesors ===
=== Usages ===
v1953 ?1723 v1258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: a480 a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 16.421786781800066
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v549 
=== Succesors ===
next: v564 
=== Usages ===
i551 i552 i553 a554 v559 v570 v605 v1697 v1687 v1646 v1651 v1675 v1663 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v549 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i8 
=== Succesors ===
=== Usages ===
v578 v610 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i553 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i552 
y: i8 
=== Succesors ===
=== Usages ===
v564 v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i552 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
trueSuccessorProbability: 0.9450309428467419
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v557 #falseSuccessor: v559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B188" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603555853994860173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1273]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
trueSuccessorProbability: 0.9937296695771272
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v566 #falseSuccessor: v570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" "B151" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
tid ?555 <|@
d <@d|@=== Debug Properties ===
bci: 1268
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 744
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1743 a485 - - - 
=== Succesors ===
=== Usages ===
v1953 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1743 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?555 
object: a554 
=== Succesors ===
next: i580 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?555 object: a554 #next: i580  <|@  <|@
tid ?1723 <|@
d <@d|@=== Debug Properties ===
bci: 1282
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 745
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - - 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
bci: 1282
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1254 
stateDuring: ?1723 
=== Succesors ===
next: a584 
=== Usages ===
?1725 ?585 ?1724 ?594 i600 ?852 
=== Predecessor ===
v1953 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1254 stateDuring: ?1723 #next: a584  <|@  <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@2c632c77
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.multBy10()>
=== Inputs ===
arguments: a554 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a554  <|@  <|@
tid ?1724 <|@
d <@d|@=== Debug Properties ===
bci: 1312
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
d <@d|@=== Debug Properties ===
bci: 1312
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.multBy10
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1258 
stateDuring: ?1724 
=== Succesors ===
next: i1894 
=== Usages ===
?585 ?852 ?1725 v1321 ?594 v1930 a554 v1931 v1929 ?815 
=== Predecessor ===
i580 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1258 stateDuring: ?1724 #next: i1894  <|@  <|@
tid ?585 <|@
d <@d|@=== Debug Properties ===
bci: 1315
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - a584 
=== Succesors ===
=== Usages ===
v1782 i1894 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - a584  <|@  <|@
f <@~|@floating>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
i1894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 15]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?585 
guard: - 
address: v1930 
=== Succesors ===
next: i1895 
=== Usages ===
i798 
=== Predecessor ===
a584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?585 guard: - address: v1930 #next: i1895  <|@  <|@
f <@~|@floating>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 11]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1929 
=== Succesors ===
next: i1896 
=== Usages ===
i798 i814 j1474 v1483 
=== Predecessor ===
i1894 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1929 #next: i1896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1927 
=== Succesors ===
next: i1897 
=== Usages ===
i795 i813 j1477 v1486 
=== Predecessor ===
i1895 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1927 #next: i1897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1928 
=== Succesors ===
next: v802 
=== Usages ===
i795 
=== Predecessor ===
i1896 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1928 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1894 
y: i1895 
=== Succesors ===
=== Usages ===
v799 v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1894 y: i1895  <|@  <|@
f <@~|@floating>@ <|@
tid i795 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1896 
y: i1897 
=== Succesors ===
=== Usages ===
v799 v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1896 y: i1897  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i798 
y: i795 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i798 y: i795  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.23168656987595593
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v801 
=== Usages ===
=== Predecessor ===
i1897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v800 #falseSuccessor: v801  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594123236352265589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601887804074441186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i795 
y: i798 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i795 y: i798  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 4.944535213690093E-4
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v806 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v805 #falseSuccessor: v806  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552452067410704642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B154" "B155" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:955) [bci: 34]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1862 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1862  <|@  <|@
f <@~|@floating>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1896 
y: i7 
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1896 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1486 
=== Succesors ===
trueSuccessor: v1858 
falseSuccessor: v1861 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1486 #trueSuccessor: v1858 #falseSuccessor: v1861  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1856 
=== Usages ===
=== Predecessor ===
v1862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1855 
=== Predecessor ===
v1858 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B185" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1870 
=== Usages ===
=== Predecessor ===
v1862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1870  <|@  <|@
f <@~|@floating>@ <|@
tid j1477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1896 
=== Succesors ===
=== Usages ===
j1478 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1896  <|@  <|@
f <@~|@floating>@ <|@
tid j1478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1477 
y: j1473 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1477 y: j1473  <|@  <|@
f <@~|@floating>@ <|@
tid j1474 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1895 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1895  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1478 
y: j1474 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1478 y: j1474  <|@  <|@
f <@*|@fixed>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1492 
=== Succesors ===
trueSuccessor: v1869 
falseSuccessor: v1866 
=== Usages ===
=== Predecessor ===
v1861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1492 #trueSuccessor: v1869 #falseSuccessor: v1866  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1868 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1868  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1895 
y: i7 
=== Succesors ===
=== Usages ===
v1868 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1895 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1483 
=== Succesors ===
trueSuccessor: v1867 
falseSuccessor: v1859 
=== Usages ===
=== Predecessor ===
v1869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1483 #trueSuccessor: v1867 #falseSuccessor: v1859  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B186" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1865 
=== Usages ===
=== Predecessor ===
v1868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1865  <|@  <|@
f <@*|@fixed>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1857 
=== Usages ===
=== Predecessor ===
v1868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1857  <|@  <|@
f <@*|@fixed>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1855 
=== Predecessor ===
v1859 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B154" "B158" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1856 v1857 
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1856 v1857 #next: v811  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v1855 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B175" 
    successors "B161" "B172" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4601944149477010940
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v812 
values: i1896 i826 
=== Succesors ===
=== Usages ===
?815 v816 i826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i1896 i826  <|@  <|@
f <@~|@floating>@ <|@
tid i814 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v812 
values: i1895 i829 
=== Succesors ===
=== Usages ===
?815 i863 v842 i829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i1895 i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0073559460563954
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v811 
=== Succesors ===
next: a1898 
=== Usages ===
i813 i814 v817 v833 v838 v1686 v1674 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v811 #next: a1898  <|@  <|@
f <@~|@floating>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
a1898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1931 
=== Succesors ===
next: v822 
=== Usages ===
v1932 a1275 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1931 #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1898 
=== Succesors ===
=== Usages ===
i1899 i1903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1898  <|@  <|@
f <@~|@floating>@ <|@
tid a1275 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 135]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1898 
=== Succesors ===
=== Usages ===
v1933 ?864 v1937 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1898  <|@  <|@
tid ?852 <|@
d <@d|@=== Debug Properties ===
bci: 1321
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 748
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
?815 ?880 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
tid ?815 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 957
stackSize: 0
=== Inputs ===
outerFrameState: ?852 
values: a474 a584 - - i813 i814 - - 
=== Succesors ===
=== Usages ===
v1799 i1902 i1903 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?852 values: a474 a584 - - i813 i814 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i7 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i813 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.007302231237322543
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v821 
=== Usages ===
=== Predecessor ===
a1898 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v817 #falseSuccessor: v821  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B162" "B163" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:964) [bci: 114]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i814 
y: i7 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i814 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v1651 
falseSuccessor: v1648 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v1651 #falseSuccessor: v1648  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1795 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1795  <|@  <|@
f <@~|@floating>@ <|@
tid i1796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -325395
stableDimension: 0
stamp: i32 [-325395] ⇊00000000fffb08ed ⇈00000000fffb08ed
stampKind: i32
value: int[-325395|0xfffffffffffb08ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v861  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
v1648 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B168" 
    successors "B165" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571804831647713515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i863 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v862 
values: i814 i870 
=== Succesors ===
=== Usages ===
?864 v865 i870 j1910 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v862 values: i814 i870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.3333333333333333
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v861 
=== Succesors ===
next: v869 
=== Usages ===
i863 v866 v873 v874 v1662 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v861 #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i863 
y: i7 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i863 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v866 
falseSuccessor: v868 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v866 #falseSuccessor: v868  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567301232020343019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:928) [bci: 15]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" "B170" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 4]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1899 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1899  <|@  <|@
tid ?880 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 968
stackSize: 0
=== Inputs ===
outerFrameState: ?852 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?864 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?852 values: - - - - - - - -  <|@  <|@
tid ?864 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.checkZeroTail(int[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 923
stackSize: 0
=== Inputs ===
outerFrameState: ?880 
values: a1275 i863 
=== Succesors ===
=== Usages ===
v1813 i1899 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?880 values: a1275 i863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?864 
guard: - 
address: v1932 
=== Succesors ===
next: v1664 
=== Usages ===
v1281 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?864 guard: - address: v1932 #next: v1664  <|@  <|@
f <@~|@floating>@ <|@
tid i870 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 5]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i863 
y: i17 
=== Succesors ===
=== Usages ===
i863 v1281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i863 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i870 
y: i1899 
=== Succesors ===
=== Usages ===
v1664 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i870 y: i1899  <|@  <|@
f <@*|@fixed>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1281 
=== Succesors ===
trueSuccessor: v1659 
falseSuccessor: v1662 
=== Usages ===
=== Predecessor ===
i1899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1281 #trueSuccessor: v1659 #falseSuccessor: v1662  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1900 
=== Usages ===
i1900 
=== Predecessor ===
v1664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1900  <|@  <|@
f <@~|@floating>@ <|@
tid j1910 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i863 
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i863  <|@  <|@
f <@~|@floating>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a1275 
index: j1910 
=== Succesors ===
=== Usages ===
i1900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1275 index: j1910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1659 
address: v1933 
=== Succesors ===
next: v877 
=== Usages ===
v872 
=== Predecessor ===
v1659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1659 address: v1933 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1900 
y: i8 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1900 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v872 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
i1900 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v872 #trueSuccessor: v876 #falseSuccessor: v874  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B164" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562797632392972523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
loopBegin: v862 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v862  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562797632392972523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:925) [bci: 13]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v1663  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1813 
=== Usages ===
=== Predecessor ===
v1662 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1813  <|@  <|@
f <@~|@floating>@ <|@
tid i1815 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328219
stableDimension: 0
stamp: i32 [-328219] ⇊00000000fffafde5 ⇈00000000fffafde5
stampKind: i32
value: int[-328219|0xfffffffffffafde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?864 
actionAndReason: i1815 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1663 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?864 actionAndReason: i1815 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1901 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1934 
=== Succesors ===
next: i1902 
=== Usages ===
a1292 v1935 
=== Predecessor ===
v821 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1934 #next: i1902  <|@  <|@
f <@~|@floating>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1901 
=== Succesors ===
=== Usages ===
i1902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1902 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?815 
guard: - 
address: v1935 
=== Succesors ===
next: v1676 
=== Usages ===
v1298 
=== Predecessor ===
a1901 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?815 guard: - address: v1935 #next: v1676  <|@  <|@
f <@~|@floating>@ <|@
tid i826 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i813 
y: i17 
=== Succesors ===
=== Usages ===
i813 v1936 v1298 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i813 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i826 
y: i1902 
=== Succesors ===
=== Usages ===
v1676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i826 y: i1902  <|@  <|@
f <@*|@fixed>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1298 
=== Succesors ===
trueSuccessor: v1671 
falseSuccessor: v1674 
=== Usages ===
=== Predecessor ===
i1902 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1298 #trueSuccessor: v1671 #falseSuccessor: v1674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1903 
=== Usages ===
i1904 
=== Predecessor ===
v1676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?815 
guard: - 
address: v1932 
=== Succesors ===
next: v1688 
=== Usages ===
v1313 
=== Predecessor ===
v1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?815 guard: - address: v1932 #next: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid i829 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i814 
y: i17 
=== Succesors ===
=== Usages ===
i814 v1937 v1313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i814 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i829 
y: i1903 
=== Succesors ===
=== Usages ===
v1688 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i829 y: i1903  <|@  <|@
f <@*|@fixed>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1313 
=== Succesors ===
trueSuccessor: v1683 
falseSuccessor: v1686 
=== Usages ===
=== Predecessor ===
i1903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1313 #trueSuccessor: v1683 #falseSuccessor: v1686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1904 
=== Usages ===
i1905 
=== Predecessor ===
v1688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1904  <|@  <|@
f <@~|@floating>@ <|@
tid a1292 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1901 
=== Succesors ===
=== Usages ===
v1936 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1901  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1292 
index: i826 
=== Succesors ===
=== Usages ===
i1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1292 index: i826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1671 
address: v1936 
=== Succesors ===
next: i1905 
=== Usages ===
v831 v850 
=== Predecessor ===
v1683 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1671 address: v1936 #next: i1905  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1275 
index: i829 
=== Succesors ===
=== Usages ===
i1905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1275 index: i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1683 
address: v1937 
=== Succesors ===
next: v837 
=== Usages ===
v831 v850 
=== Predecessor ===
i1904 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1683 address: v1937 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1904 
y: i1905 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1904 y: i1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0073559460563955865
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
i1905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v832 #falseSuccessor: v833  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B160" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569878636767358276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:963) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
loopBegin: v812 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v812  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601823333629494599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1904 
y: i1905 
=== Succesors ===
=== Usages ===
i851 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1904 y: i1905  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32 [-1 - 1] ⇊0000000000000001
=== Inputs ===
condition: v850 
trueValue: i17 
falseValue: i7 
=== Succesors ===
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v850 trueValue: i17 falseValue: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B150" "B152" "B176" "B169" "B165" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i855 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 1]
valueDescription: i32
=== Inputs ===
merge: v853 
values: i7 i17 i851 i17 i8 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v853 values: i7 i17 i851 i17 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v854 v856 v857 v858 v1077 
=== Succesors ===
next: i593 
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v854 v856 v857 v858 v1077 #next: i593  <|@  <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@45907cc
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a584 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a584  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i855 
y: i8 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i855 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v589 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?594 ?1725 i552 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v589 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1725 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i593 <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1321 
stateDuring: ?1725 
=== Succesors ===
next: a1906 
=== Usages ===
?594 v595 
=== Predecessor ===
v853 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1321 stateDuring: ?1725 #next: a1906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
=== Succesors ===
next: i1907 
=== Usages ===
a1323 v1938 
=== Predecessor ===
i593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1920 #next: i1907  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593 
=== Succesors ===
=== Usages ===
v1791 i1907 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1906 
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?594 
guard: - 
address: v1938 
=== Succesors ===
next: v1698 
=== Usages ===
v1329 
=== Predecessor ===
a1906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?594 guard: - address: v1938 #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i551 
y: i1907 
=== Succesors ===
=== Usages ===
v1698 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i551 y: i1907  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1329 
=== Succesors ===
trueSuccessor: v1694 
falseSuccessor: v1697 
=== Usages ===
=== Predecessor ===
i1907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1329 #trueSuccessor: v1694 #falseSuccessor: v1697  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B147" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
v1337 
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@~|@floating>@ <|@
tid a1323 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1906 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1906  <|@  <|@
f <@~|@floating>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1323 
index: i551 
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1323 index: i551  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1366]
stamp: i32
=== Inputs ===
x: i580 
y: i234 
=== Succesors ===
=== Usages ===
i601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1367]
resultBits: 16
stamp: i16
=== Inputs ===
value: i600 
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1694 
address: v1939 
value: i601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1694 address: v1939 value: i601 stateAfter: - lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i593 
y: i7 
=== Succesors ===
=== Usages ===
i596 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i593 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v595 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v595 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1359]
stamp: i32
=== Inputs ===
x: i551 
y: i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i551 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
loopBegin: v550 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1337 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1791 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1791  <|@  <|@
f <@~|@floating>@ <|@
tid i1793 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -340507
stableDimension: 0
stamp: i32 [-340507] ⇊00000000fffacde5 ⇈00000000fffacde5
stampKind: i32
value: int[-340507|0xfffffffffffacde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?594 
actionAndReason: i1793 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1697 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?594 actionAndReason: i1793 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1687 
=== Usages ===
=== Predecessor ===
v1688 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1687  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1806 
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1806  <|@  <|@
f <@~|@floating>@ <|@
tid i1807 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -336411
stableDimension: 0
stamp: i32 [-336411] ⇊00000000fffadde5 ⇈00000000fffadde5
stampKind: i32
value: int[-336411|0xfffffffffffadde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
v1687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v1676 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1675  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1802 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1802  <|@  <|@
f <@~|@floating>@ <|@
tid i1803 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -332571
stableDimension: 0
stamp: i32 [-332571] ⇊00000000fffaece5 ⇈00000000fffaece5
stampKind: i32
value: int[-332571|0xfffffffffffaece5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
v1675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B162" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1797 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-336411 - -325395] ⇊00000000fffa00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1794 
values: i1796 i1803 i1807 
=== Succesors ===
=== Usages ===
v1799 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1794 values: i1796 i1803 i1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1795 v1802 v1806 
=== Succesors ===
next: v1799 
=== Usages ===
i1797 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1795 v1802 v1806 #next: v1799  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?815 
actionAndReason: i1797 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1794 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?815 actionAndReason: i1797 speculation: a1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B186" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1864 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1864  <|@  <|@
f <@*|@fixed>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B157" 
    successors "B187" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1864 v1865 
=== Succesors ===
next: v1646 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1864 v1865 #next: v1646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1782 
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1782  <|@  <|@
f <@~|@floating>@ <|@
tid a1785 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1310093959
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1310093959]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1784 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -330003
stableDimension: 0
stamp: i32 [-330003] ⇊00000000fffaf6ed ⇈00000000fffaf6ed
stampKind: i32
value: int[-330003|0xfffffffffffaf6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?585 
actionAndReason: i1784 
speculation: a1785 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1646 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?585 actionAndReason: i1784 speculation: a1785  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B190" 
    xhandlers
    flags 
    probability 4570783441632509614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B190" 
    xhandlers
    flags 
    probability 4585168376055129697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v567 v569 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v567 v569 #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1374]
stamp: void
trueSuccessorProbability: 0.054134838923945536
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v608 #falseSuccessor: v609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4566951317114401624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585407883837511446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1379]
stamp: void
trueSuccessorProbability: 0.10287921348314606
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v616 #falseSuccessor: v615  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4570783441632509555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4584868070143374127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a619  <|@  <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@67f41d5e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a474 i7 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 i7  <|@  <|@
tid ?1726 <|@
d <@d|@=== Debug Properties ===
bci: 1385
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
d <@d|@=== Debug Properties ===
bci: 1385
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1344 
stateDuring: ?1726 
=== Succesors ===
next: v1954 
=== Usages ===
v1348 a1458 ?1727 v1954 
=== Predecessor ===
v615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1344 stateDuring: ?1726 #next: v1954  <|@  <|@
tid ?620 <|@
d <@d|@=== Debug Properties ===
bci: 1388
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1743 
=== Succesors ===
=== Usages ===
v1954 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?620 
object: a619 
=== Succesors ===
next: i622 
=== Usages ===
=== Predecessor ===
a619 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?620 object: a619 #next: i622  <|@  <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@69dfe3b4
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a619 a485 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a619 a485  <|@  <|@
tid ?1727 <|@
d <@d|@=== Debug Properties ===
bci: 1394
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 754
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
d <@d|@=== Debug Properties ===
bci: 1394
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1348 
stateDuring: ?1727 
=== Succesors ===
next: v627 
=== Usages ===
j624 
=== Predecessor ===
v1954 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1348 stateDuring: ?1727 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid j624 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1397]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
i622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B191" "B193" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v628 
values: j624 j278 j278 
=== Succesors ===
=== Usages ===
?1728 ?636 j461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: j624 j278 j278  <|@  <|@
f <@~|@floating>@ <|@
tid a1458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v628 
values: a619 a474 a474 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: a619 a474 a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v627 v629 v697 
=== Succesors ===
next: i635 
=== Usages ===
j630 a1458 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v627 v629 v697 #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid a633 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1409]
rawvalue: FDBigInteger@241972498
stableDimension: 0
stamp: a!# Lsun/misc/FDBigInteger;
stampKind: a -
value: Object[FDBigInteger@241972498]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5cea7a6c
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1458 a633 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1458 a633  <|@  <|@
tid ?1728 <|@
d <@d|@=== Debug Properties ===
bci: 1412
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
d <@d|@=== Debug Properties ===
bci: 1412
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1341 
stateDuring: ?1728 
=== Succesors ===
next: v1706 
=== Usages ===
v637 
=== Predecessor ===
v628 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1341 stateDuring: ?1728 #next: v1706  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i8 
=== Succesors ===
=== Usages ===
v1706 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i635 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1705 
falseSuccessor: v1703 
=== Usages ===
=== Predecessor ===
i635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1705 #falseSuccessor: v1703  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1704 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1704  <|@  <|@
tid ?636 <|@
d <@d|@=== Debug Properties ===
bci: 1415
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8 
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1456
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1705 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1703 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B89" "B125" "B197" "B124" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i777 i1003 i524 i1003 
=== Succesors ===
=== Usages ===
?650 i644 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i777 i1003 i524 i1003  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i702 i376 i551 i376 
=== Succesors ===
=== Usages ===
?650 v1368 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i702 i376 i551 i376  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i7 i377 i552 i377 
=== Succesors ===
=== Usages ===
v655 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i7 i377 i552 i377  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i8 i378 i553 i378 
=== Succesors ===
=== Usages ===
v651 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i8 i378 i553 i378  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v455 
values: j301 j447 j630 j1872 
=== Succesors ===
=== Usages ===
v660 v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: j301 j447 j630 j1872  <|@  <|@
f <@~|@floating>@ <|@
tid i1731 <|@
d <@d|@=== Debug Properties ===
stamp: i8 [0 - 1] ⇈0000000000000001
valueDescription: i8
=== Inputs ===
merge: v455 
values: i1174 i1220 i1390 i1874 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i1174 i1220 i1390 i1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v456 v642 v1854 
=== Succesors ===
next: v1733 
=== Usages ===
i457 i458 i459 i460 j461 i1731 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v456 v642 v1854 #next: v1733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 722]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1913 
value: i1731 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1913 value: i1731 stateAfter: - lastLocationAccess: - #next: v1363  <|@  <|@
f <@~|@floating>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1430]
stamp: i32
=== Inputs ===
x: i457 
y: i7 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i457 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1431]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1942 
value: i644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
v1733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1942 value: i644 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:761) [bci: 1436]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1943 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1368 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1943 value: i8 stateAfter: - lastLocationAccess: - #next: v1368  <|@  <|@
f <@~|@floating>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1944 
value: i458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1944 value: i458 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i8 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i460 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
trueSuccessorProbability: 0.5883269357403274
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v652 #falseSuccessor: v653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors 
    xhandlers
    flags 
    probability 4602109559184624473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4599575943012676195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1450]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i459 
y: i8 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i459 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
trueSuccessorProbability: 0.721519975031211
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v656 #falseSuccessor: v657  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4597688194394365127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1504]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@10c1715a
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1729 <|@
d <@d|@=== Debug Properties ===
bci: 1505
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
bci: 1505
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1369 
stateDuring: ?1729 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1369 stateDuring: ?1729 #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" "B204" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1455]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1710 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1710  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j278 
=== Succesors ===
=== Usages ===
v1710 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j461 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v1709 
falseSuccessor: v1707 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v1709 #falseSuccessor: v1707  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1708  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 1445
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 766
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1370
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?650 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j280 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j461 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
stamp: void
trueSuccessorProbability: 0.3841412160268982
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v667 #falseSuccessor: v666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4585213771699296333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4588261758715135921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1497]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@579880f1
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1730 <|@
d <@d|@=== Debug Properties ===
bci: 1498
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 775
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
bci: 1498
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1371 
stateDuring: ?1730 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1371 stateDuring: ?1730 #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1757 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1757  <|@  <|@
f <@~|@floating>@ <|@
tid i1758 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355347
stableDimension: 0
stamp: i32 [-355347] ⇊00000000fffa93ed ⇈00000000fffa93ed
stampKind: i32
value: int[-355347|0xfffffffffffa93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B30" "B207" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1754 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-355603 - -355091] ⇊00000000fffa90ed ⇈00000000fffa97ed
valueDescription: i32
=== Inputs ===
merge: v1751 
values: i1753 i1758 i1760 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1751 values: i1753 i1758 i1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1752 v1757 v1759 
=== Succesors ===
next: v1756 
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1752 v1757 v1759 #next: v1756  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i1029 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i1029 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?90 
actionAndReason: i1754 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?90 actionAndReason: i1754 speculation: a1743  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1084 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1084  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1728 v1912 ?1728 v1913 ?1727 ?28 ?852 ?1726 v1097 ?90 ?1725 ?1724 ?1723 ?1722 ?555 ?1721 ?167 ?966 v1920 ?239 ?594 ?650 v1944 v1943 v1371 ?1720 ?585 ?1719 ?999 v1369 ?373 ?381 ?514 v1942 ?988 ?636 ?443 ?1718 ?636 ?1717 ?1716 ?465 ?1715 ?1714 ?475 ?620 ?486 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1912 <|@
result [v0|QWORD[.] + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1390 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 v1087 i1731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1912 
value: i1390 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1912 value: i1390 stateAfter: - lastLocationAccess: - #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
result [v0|QWORD[.] + 25] <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1087 v1733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1913 
value: i1390 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1913 value: i1390 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a1743 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1746 v1821 v1774 ?620 v1813 v1756 v1791 v1766 v1799 ?465 ?475 ?486 ?555 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1722 ?1721 ?1720 ?28 ?90 ?1719 ?1718 ?1717 ?1716 ?514 ?1715 ?167 ?966 ?239 v241 ?1714 ?999 ?475 ?465 ?486 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v703 v1457 i458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i120 i69 ?90 ?28 v65 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result int[52|0x34] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 143]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 i83 i679 j741 v751 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 109]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 v185 v189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 102]
rawvalue: int[27]{0, 3, 5, 7, 10, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[27]{0, 3, 5, 7, 10, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1914 v1945 v1946 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1055 i1058 i1029 v60 i78 v1097 i887 i889 v140 i891 v230 i1053 ?239 ?239 v241 v872 i460 i855 i1060 v747 ?1722 v302 i303 i328 i333 v336 v1230 i1014 i371 i372 v382 v392 i423 i428 i450 ?1721 ?1720 v493 i494 i1013 i500 v503 ?514 v1356 i525 i546 i547 v556 v565 v589 i590 i596 i372 i371 v637 i1028 v1365 v651 v655 i774 i371 i372 i546 i547 i546 i547 i78 i78 i951 i1871 i1875 ?29 ?381 ?381 ?555 ?555 ?636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[27|0x1b] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 96]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v893 v894 v171 v1183 v1379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i107 i83 ?90 i16 ?28 v32 v37 v65 i69 v81 d734 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v35 v1041 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[53|0x35] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 50]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 i9 j84 ?90 ?28 j121 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfTrailingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:431) [bci: 45]
stamp: i32 [0 - 64] ⇈000000000000007f
=== Inputs ===
value: j3 
=== Succesors ===
=== Usages ===
i11 i679 j121 ?28 ?90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountTrailingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountTrailingZerosNode>@ value: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 54]
stamp: i32 [-11 - 53]
=== Inputs ===
x: i10 
y: i9 
=== Succesors ===
=== Usages ===
i153 v130 i16 ?28 i53 ?90 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 71]
stamp: i32
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i70 i341 i134 i764 i774 i855 i826 i829 i851 i870 i855 i1877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
v19 i1028 i1029 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v95 v108 v130 i942 i169 i949 i952 i214 i220 ?239 i459 i906 v924 i922 v1483 i299 i303 j317 j324 i328 i333 ?443 i1014 j413 i423 i428 i377 i378 i438 j446 i450 i945 i478 i483 i494 v499 i500 ?443 i525 i590 v595 i596 i599 v1344 i644 i681 j1873 i948 j689 j693 i851 v816 v1486 i1875 v842 i855 v865 i1013 i1948 i1871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7284916068028063
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41cc0bf5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = TZCNT v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v8|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7284916068028063 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604736888603155721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1041 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1041  <|@  <|@
f <@*|@fixed>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9997953833365305
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v1039 
falseSuccessor: v1040 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v1039 #falseSuccessor: v1040  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604735545976326307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
v1039 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549631423510111317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1042 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1042  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v1040 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598562680311629294
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 0.9997953833365305
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598561679519170703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1022 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180575776958698
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1028 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v1021 
values: i18 i8 
=== Succesors ===
=== Usages ===
i1029 v893 v1914 v60 i1029 i1029 i1029 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1021 values: i18 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1022 v1023 
=== Succesors ===
next: v43 
=== Usages ===
i1028 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1022 v1023 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[-21|0xffffffffffffffeb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 86]
rawvalue: -21
stableDimension: 0
stamp: i32 [-21] ⇊00000000ffffffeb ⇈00000000ffffffeb
stampKind: i32
value: int[-21|0xffffffffffffffeb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i36 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
trueSuccessorProbability: 3.7093885904323354E-4
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -21 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.7093885904323354E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555476837731078346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177235340392840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 91]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1028 
y: i45 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1028 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
stamp: void
trueSuccessorProbability: 0.5207354992258577
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v47 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5207354992258577 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602862888734385424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1878 
=== Usages ===
i1878 
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1878  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
result [v5|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i1028 
=== Succesors ===
=== Usages ===
i1878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1878 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v47 
address: v1914 
=== Succesors ===
next: v59 
=== Usages ===
i53 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v47 address: v1914 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1878 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1878  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i54 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 0.9986731860733679
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
i1878 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v56 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v8|DWORD, ~y: [v5|QWORD[.] + v11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9986731860733679 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602856669069621870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1028 
y: i8 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1028 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:464) [bci: 116]
stamp: void
trueSuccessorProbability: 0.39220076270143933
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.39220076270143933 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1499 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1499  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?28 
values: - - i8 
=== Succesors ===
=== Usages ===
v1746 i1880 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?28 values: - - i8  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i80 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v1496 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v1496 #falseSuccessor: v1498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i2 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
stamp: void
trueSuccessorProbability: 0.0011918951132300348
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011918951132300348 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553095712730882878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 128]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 130]
stamp: i32
=== Inputs ===
x: i69 
y: i17 
=== Succesors ===
=== Usages ===
v1917 v703 v709 v1110 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i69 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i702 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v704 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v704 #falseSuccessor: v705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1879 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid a1098 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
result [v15|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1098 
index: - 
=== Succesors ===
=== Usages ===
a1879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1098 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1879 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsNumber
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1915 
=== Succesors ===
next: i1880 
=== Usages ===
a1102 v1916 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1915 #next: i1880  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1879 
=== Succesors ===
=== Usages ===
i1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1880 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v1916 
=== Succesors ===
next: v712 
=== Usages ===
v709 v1110 
=== Predecessor ===
a1879 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v1916 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1880 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i1880  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i1880 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v15|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 13]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i1880 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i1880  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1110 
=== Succesors ===
trueSuccessor: v1504 
falseSuccessor: v1506 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1110 #trueSuccessor: v1504 #falseSuccessor: v1506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1881 
=== Usages ===
i1881 
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1881  <|@  <|@
f <@~|@floating>@ <|@
tid a1102 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1879 
=== Succesors ===
=== Usages ===
v1917 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
result [v18|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1102 
index: i70 
=== Succesors ===
=== Usages ===
i1881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1102 index: i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1881 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1504 
address: v1917 
=== Succesors ===
next: v75 
=== Usages ===
i78 
=== Predecessor ===
v1504 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1504 address: v1917 #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
i1881 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1749 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1749  <|@  <|@
f <@~|@floating>@ <|@
tid i1750 <|@
result int[-284443|0xfffffffffffba8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284443
stableDimension: 0
stamp: i32 [-284443] ⇊00000000fffba8e5 ⇈00000000fffba8e5
stampKind: i32
value: int[-284443|0xfffffffffffba8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
v1506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284443|0xfffffffffffba8e5]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596503538984261917
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:469) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596512292586521733
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i1881 i8 i8 i8 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i1881 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 v859 v860 
=== Succesors ===
next: v87 
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 v859 v860 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 162]
stamp: i32
=== Inputs ===
x: i80 
y: i2 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 163]
stamp: i64
=== Inputs ===
x: j3 
y: i83 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i83  <|@  <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@450b9333
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
=== Inputs ===
arguments: a1 i8 j84 i78 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i8 j84 i78  <|@  <|@
tid ?1713 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
bci: 170
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.developLongDigits
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1097 
stateDuring: ?1713 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1097 stateDuring: ?1713 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:477) [bci: 173]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1741  <|@  <|@
f <@~|@floating>@ <|@
tid i1742 <|@
result int[-280595|0xfffffffffffbb7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -280595
stableDimension: 0
stamp: i32 [-280595] ⇊00000000fffbb7ed ⇈00000000fffbb7ed
stampKind: i32
value: int[-280595|0xfffffffffffbb7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
v1498 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-280595|0xfffffffffffbb7ed]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1744 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-284443 - -280595] ⇊00000000fffba0e5 ⇈00000000fffbbffd
valueDescription: i32
=== Inputs ===
merge: v1740 
values: i1742 i1750 
=== Succesors ===
=== Usages ===
v1746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1740 values: i1742 i1750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1741 v1749 
=== Succesors ===
next: v1746 
=== Usages ===
i1744 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1741 v1749 #next: v1746  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i1744 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i1744 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599362382818603673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559508159989450990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602300313129920753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543323316582870700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605346350726020831
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1029 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v39 
values: i18 i1028 i1028 i1028 i1028 i8 
=== Succesors ===
=== Usages ===
?90 i946 i1947 i941 i947 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v39 values: i18 i1028 i1028 i1028 i1028 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v38 v40 v48 v57 v62 v1042 
=== Succesors ===
next: v750 
=== Usages ===
i1029 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v38 v40 v48 v57 v62 v1042 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid j724 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j725 j753 j754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j3 
y: j724 
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j3 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j726 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j725 
y: j723 
=== Succesors ===
=== Usages ===
d727 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j725 y: j723  <|@  <|@
f <@~|@floating>@ <|@
tid d727 <|@
result v30|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j726 
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j726  <|@  <|@
f <@~|@floating>@ <|@
tid d728 <|@
result double[1.5|0x3ff8000000000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d729 <|@
result v31|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d727 
y: d728 
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d727 y: d728  <|@  <|@
f <@~|@floating>@ <|@
tid d730 <|@
result double[0.289529654|0x3fd287a762c9bd93] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d731 <|@
result v33|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d729 
y: d730 
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d729 y: d730  <|@  <|@
f <@~|@floating>@ <|@
tid d732 <|@
result double[0.176091259|0x3fc68a288b421b8c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d733 <|@
result v35|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d731 
y: d732 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d731 y: d732  <|@  <|@
f <@~|@floating>@ <|@
tid d734 <|@
result v37|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d735 <|@
result double[0.301029995663981|0x3fd34413509f79fb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d736 <|@
result v38|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d734 
y: d735 
=== Succesors ===
=== Usages ===
d737 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d734 y: d735  <|@  <|@
f <@~|@floating>@ <|@
tid d737 <|@
result v40|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d733 
y: d736 
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d733 y: d736  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64
=== Inputs ===
value: d737 
=== Succesors ===
=== Usages ===
j740 v746 j754 v762 v767 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d737  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j745 
=== Succesors ===
=== Usages ===
v761 i774 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j740 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j738 
y: j739 
=== Succesors ===
=== Usages ===
j741 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j740 
y: i80 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j740 y: i80  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j741 
=== Succesors ===
=== Usages ===
i744 i771 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j741  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
result int[-1023|0xfffffffffffffc01] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i742 
y: i743 
=== Succesors ===
=== Usages ===
v747 v751 j753 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i742 y: i743  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i8 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8012441897039807
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v748 #falseSuccessor: v749  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND (x: v2|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = OR (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMOVQ v29|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VSUBSD (x: v30|DOUBLE, y: v32|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v31|DOUBLE, y: v34|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v35|DOUBLE = VADDSD (x: v33|DOUBLE, y: v36|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = VMULSD (x: v37|DOUBLE, y: v39|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = VADDSD (x: v35|DOUBLE, y: v38|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = VMOVQ v40|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND (x: v41|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = SHR v44|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV v45|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA [v46|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1511 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j766 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v767 
=== Succesors ===
trueSuccessor: v1510 
falseSuccessor: v1508 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v767 #trueSuccessor: v1510 #falseSuccessor: v1508  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1752 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1752  <|@  <|@
f <@~|@floating>@ <|@
tid i1753 <|@
result int[-355091|0xfffffffffffa94ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355091
stableDimension: 0
stamp: i32 [-355091] ⇊00000000fffa94ed ⇈00000000fffa94ed
stampKind: i32
value: int[-355091|0xfffffffffffa94ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355091|0xfffffffffffa94ed]] destination: B30 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid i774 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v746 
trueValue: i8 
falseValue: i17 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v746 trueValue: i8 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v50|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B207" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1515 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i744 
y: i80 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i744 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v1512 
falseSuccessor: v1514 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v1512 #falseSuccessor: v1514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j738 
y: j724 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j738 y: j724  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j754 
y: j755 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j754 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid i770 <|@
result int[1075|0x433] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i770 
y: i742 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i770 y: i742  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j756 
y: i771 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j756 y: i771  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j757 
=== Succesors ===
=== Usages ===
i764 i777 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.008440302444170916
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v760 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v759 #falseSuccessor: v760  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND (x: v41|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = OR (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SHR (x: v53|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV v56|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563802181229000832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1519 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j724 
y: i744 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j724 y: i744  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j738 
y: j753 
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j738 y: j753  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1518 
falseSuccessor: v1516 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1518 #falseSuccessor: v1516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHR (x: v26|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1759 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1759  <|@  <|@
f <@~|@floating>@ <|@
tid i1760 <|@
result int[-355603|0xfffffffffffa92ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355603
stableDimension: 0
stamp: i32 [-355603] ⇊00000000fffa92ed ⇈00000000fffa92ed
stampKind: i32
value: int[-355603|0xfffffffffffa92ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355603|0xfffffffffffa92ed]] destination: B36 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32
=== Inputs ===
x: i17 
y: i758 
=== Succesors ===
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i17 y: i758  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
v1516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i777 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v775 
values: i774 i764 i758 
=== Succesors ===
=== Usages ===
?1722 i94 ?1721 v108 i948 ?1720 ?1719 ?475 ?1718 ?167 ?966 ?239 v244 v247 i524 ?514 ?486 ?1717 i341 ?1716 i1002 i457 ?1715 ?465 ?1714 i1003 i1877 i889 i946 i1947 i1948 i1949 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v775 values: i774 i764 i758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v776 v778 v779 
=== Succesors ===
next: v98 
=== Usages ===
i777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v776 v778 v779 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 184]
stamp: i32
=== Inputs ===
value: i777 
=== Succesors ===
=== Usages ===
v95 i942 i887 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i777  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i94 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
trueSuccessorProbability: 0.7284909928572612
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v96 #falseSuccessor: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NEG v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7284909928572612 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603399324019046578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[0|0x0], int[1|0x1]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596956127118432433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i1948 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1111]
stamp: i32
=== Inputs ===
x: i7 
y: i777 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i7 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i942 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i94 
y: i7 
=== Succesors ===
=== Usages ===
i1949 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i1949 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 329]
stamp: i32
=== Inputs ===
x: i942 
y: i777 
=== Succesors ===
=== Usages ===
i951 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i942 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1947 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 194]
stamp: i32
=== Inputs ===
x: i1029 
y: i777 
=== Succesors ===
=== Usages ===
i941 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1029 y: i777  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SUB (x: v63|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v65|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v25|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD, v67|DWORD, v66|DWORD, v64|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i887 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i94 
=== Succesors ===
=== Usages ===
?1717 v1243 ?1716 ?1715 ?1716 ?465 ?465 ?1714 ?1715 v894 v1945 ?475 ?1714 ?167 ?167 ?966 ?966 v1918 v1120 v1924 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i94  <|@  <|@
f <@~|@floating>@ <|@
tid i941 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i1029 i1947 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i1029 i1947  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i8 i1949 
=== Succesors ===
=== Usages ===
i168 i964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i8 i1949  <|@  <|@
f <@~|@floating>@ <|@
tid i945 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i7 i1948 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i7 i1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v111 
=== Usages ===
i887 i941 i951 i945 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 328]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 i219 i905 j316 j323 j412 i680 i921 j688 j692 i955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
trueSuccessorProbability: 0.7284911334689859
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v109 #falseSuccessor: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD, v69|DWORD, v70|DWORD, v71|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7284911334689859 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603399325027391701
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[1|0x1], int[3|0x3]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596956123085051940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 340]
stamp: i32
=== Inputs ===
x: i777 
y: i7 
=== Succesors ===
=== Usages ===
i949 i952 i954 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i952 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i948 
y: i7 
=== Succesors ===
=== Usages ===
i954 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i948 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 364]
stamp: i32
=== Inputs ===
x: i948 
y: i952 
=== Succesors ===
=== Usages ===
i955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i948 y: i952  <|@  <|@
f <@~|@floating>@ <|@
tid i946 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:524) [bci: 211]
stamp: i32
=== Inputs ===
x: i777 
y: i1029 
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i1029  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = ADD (x: v73|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v61|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, v75|DWORD, v72|DWORD, v74|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i889 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v114 
values: i8 i777 
=== Succesors ===
=== Usages ===
?1718 v1128 ?1717 v1183 ?1716 ?167 ?475 ?966 v1919 v1925 ?1715 v1237 ?465 ?1714 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i8 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i947 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i1029 i946 
=== Succesors ===
=== Usages ===
i129 i1071 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i1029 i946  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i7 i948 
=== Succesors ===
=== Usages ===
v171 v1946 v1245 v1379 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i7 i948  <|@  <|@
f <@~|@floating>@ <|@
tid i955 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v114 
values: i160 i954 
=== Succesors ===
=== Usages ===
i182 i182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: i160 i954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 
=== Succesors ===
next: v783 
=== Usages ===
i889 i947 i949 i955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 196]
stamp: i32
=== Inputs ===
x: i2 
y: i941 
=== Succesors ===
=== Usages ===
i123 i120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 235]
stamp: i32 [-12 - 52]
=== Inputs ===
x: i80 
y: i9 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i80 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 236]
stamp: i32
=== Inputs ===
x: i107 
y: i679 
=== Succesors ===
=== Usages ===
i1072 i1071 i127 v780 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i123 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i947 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:527) [bci: 222]
stamp: i32
=== Inputs ===
x: i107 
y: i4 
=== Succesors ===
=== Usages ===
i1072 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
v133 v1068 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i11 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
trueSuccessorProbability: 0.4467778355907999
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v781 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v781 #falseSuccessor: v782  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD, v79|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ADD (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SUB (x: v81|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v80|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v80|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4467778355907999 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600079424853247293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:540) [bci: 252]
stamp: i32
=== Inputs ===
x: i123 
y: i947 
=== Succesors ===
=== Usages ===
i1053 i1055 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i123 y: i947  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i947 
=== Succesors ===
=== Usages ===
i1063 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i947  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3469594269009605
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = SUB (x: v83|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v84|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593557413975401684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1044 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1044  <|@  <|@
f <@*|@fixed>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597537133505099792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601606077344053375
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid i1071 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:541) [bci: 259]
stamp: i32
=== Inputs ===
x: i947 
y: i123 
=== Succesors ===
=== Usages ===
i1058 i1060 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i947 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i1072 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i120 
y: i123 
=== Succesors ===
=== Usages ===
i1063 i138 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i120 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3469594269009605
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v1066 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v1066 #falseSuccessor: v1067  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v77|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v84|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594673889893227806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v1066 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598647803047311300
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1063 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1043 
values: i129 i1072 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1043 values: i129 i1072  <|@  <|@
f <@~|@floating>@ <|@
tid i1055 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1043 
values: i127 i8 
=== Succesors ===
=== Usages ===
i1053 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1043 values: i127 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1060 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1043 
values: i8 i1071 
=== Succesors ===
=== Usages ===
i1058 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1043 values: i8 i1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1044 v1045 
=== Succesors ===
next: v137 
=== Usages ===
i1063 i1055 i1060 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1044 v1045 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: i32
=== Inputs ===
x: i1063 
y: i17 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1063 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v1043 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|DWORD, v91|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = DEC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v90|DWORD, v91|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598853142542707184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
v1067 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i138 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i129 i134 i1072 
=== Succesors ===
=== Usages ===
i891 v140 i144 i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i129 i134 i1072  <|@  <|@
f <@~|@floating>@ <|@
tid i1053 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i127 i1055 i8 
=== Succesors ===
=== Usages ===
i144 i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i127 i1055 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1058 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v136 
values: i8 i1060 i1071 
=== Succesors ===
=== Usages ===
i145 i150 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v136 values: i8 i1060 i1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 v1073 
=== Succesors ===
next: v143 
=== Usages ===
i138 i1053 i1058 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 v1073 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i8 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i138 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
trueSuccessorProbability: 0.9999036283910759
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999036283910759 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605345659632571136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 283]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:559) [bci: 294]
stamp: i32
=== Inputs ===
x: i1058 
y: i138 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1058 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 287]
stamp: i32
=== Inputs ===
x: i1053 
y: i138 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1053 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SUB (x: v95|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SUB (x: v94|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v96|DWORD, int[0|0x0]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4545289861929351958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v95|DWORD, v93|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i149 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i1053 i144 
=== Succesors ===
=== Usages ===
?1716 i153 ?167 ?966 i207 j310 ?1715 ?465 ?1714 i472 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i1053 i144  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v147 
values: i1058 i145 
=== Succesors ===
=== Usages ===
?1718 ?167 i169 ?966 i209 j312 ?1717 v1237 ?465 ?1716 ?1715 ?475 ?1714 i482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i1058 i145  <|@  <|@
f <@~|@floating>@ <|@
tid i891 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v147 
values: i138 i8 
=== Succesors ===
=== Usages ===
?1717 ?167 ?966 i211 j314 ?1716 ?465 ?1715 ?1714 ?475 i477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v147 values: i138 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:570) [bci: 300]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v146 v148 
=== Succesors ===
next: v157 
=== Usages ===
i149 i150 i891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v146 v148 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 307]
stamp: i32
=== Inputs ===
x: i11 
y: i149 
=== Succesors ===
=== Usages ===
?167 i168 i977 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i949 
y: i45 
=== Succesors ===
=== Usages ===
v174 v975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i949 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i45 
=== Succesors ===
=== Usages ===
v157 v1583 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i887 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:537) [bci: 228]
stamp: i64
=== Inputs ===
x: j3 
y: i9 
=== Succesors ===
=== Usages ===
?1716 v1243 ?1715 ?167 ?966 i203 j309 ?1714 ?465 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
trueSuccessorProbability: 0.9999036206508819
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD, v99|DWORD, v100|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v98|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1882 
=== Usages ===
i1882 
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1882  <|@  <|@
f <@~|@floating>@ <|@
tid v1945 <|@
result [v5|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i887 
=== Succesors ===
=== Usages ===
i1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1882 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 322]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v155 
address: v1945 
=== Succesors ===
next: v975 
=== Usages ===
i964 i977 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v155 address: v1945 #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i1882 
=== Succesors ===
=== Usages ===
i967 i968 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i1882  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9999036206508819
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v973 
falseSuccessor: v974 
=== Usages ===
=== Predecessor ===
i1882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v973 #falseSuccessor: v974  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v5|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v101|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605344968494722035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v104|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B65" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v104|DWORD] destination: B58 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4545290316634068424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 326]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i153 
y: i951 
=== Succesors ===
=== Usages ===
i968 i967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i951  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 0.9999036206508819
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v70|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 348]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD, v105|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i964 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v957 
values: i951 i1882 
=== Succesors ===
=== Usages ===
?167 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i951 i1882  <|@  <|@
f <@~|@floating>@ <|@
tid i968 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v957 
values: i168 i977 
=== Succesors ===
=== Usages ===
i967 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i168 i977  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v958 v959 
=== Succesors ===
next: v1523 
=== Usages ===
i964 i968 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v958 v959 #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i949 
y: i45 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i949 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1379 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1379 #trueSuccessor: v1520 #falseSuccessor: v1522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1883 
=== Usages ===
i1883 
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1883  <|@  <|@
f <@~|@floating>@ <|@
tid v1946 <|@
result [v5|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i949 
=== Succesors ===
=== Usages ===
i1883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1883 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1520 
address: v1946 
=== Succesors ===
next: v179 
=== Usages ===
i182 
=== Predecessor ===
v1520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1520 address: v1946 #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
i1883 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v5|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD, v107|DWORD] destination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1521 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1521  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 330
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 591
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - i153 i964 
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - i153 i964  <|@  <|@
f <@*|@fixed>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1380
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?167 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -353307 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: v101|DWORD v106|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4485518606199164087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 359]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v105|DWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B58" 
    successors "B66" "B130" 
    xhandlers
    flags 
    probability 4605346350726020829
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i182 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v180 
values: i1883 i955 i955 
=== Succesors ===
=== Usages ===
?966 i184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v180 values: i1883 i955 i955  <|@  <|@
f <@~|@floating>@ <|@
tid i967 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v180 
values: i968 i168 i977 
=== Succesors ===
=== Usages ===
v185 v197 ?966 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v180 values: i968 i168 i977  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v179 v181 v978 
=== Succesors ===
next: v188 
=== Usages ===
i182 i967 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v179 v181 v978 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i967 
y: i54 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i967 y: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 637]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 j630 j630 v449 v1876 ?650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v662 v417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 545]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 i915 i344 i439 i516 i600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 566]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v360 v537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result int[-3|0xfffffffffffffffd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 559]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3] ⇊00000000fffffffd ⇈00000000fffffffd
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 v358 v530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
v1543 v357 v529 v1019 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1920 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1884 a1906 a1892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9858815592926324
=== Inputs ===
condition: v185 
=== Succesors ===
trueSuccessor: v186 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v185 #trueSuccessor: v186 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v110|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9858815592926324 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B129" 
    xhandlers
    flags 
    probability 4605245105535640734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 336]
stamp: i32
=== Inputs ===
x: i150 
y: i7 
=== Succesors ===
=== Usages ===
?966 i184 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
=== Inputs ===
x: i169 
y: i182 
=== Succesors ===
=== Usages ===
v189 v201 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i169 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i54 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
stamp: void
trueSuccessorProbability: 0.965280153803542
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v190 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v190 #falseSuccessor: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = INC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v112|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.965280153803542 condition: < trueDestination: B66 -> B67 falseDestination: B66 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B96" 
    xhandlers
    flags 
    probability 4604999640181428792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1884 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1884 <|@
result v113|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 537]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
=== Succesors ===
next: v200 
=== Usages ===
v1194 a1193 v1921 v1922 v1923 v1955 v1956 
=== Predecessor ===
v190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1920 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
result [v113|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1884 
=== Succesors ===
=== Usages ===
i1886 i1891 i1890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1884  <|@  <|@
tid ?966 <|@
d <@d|@=== Debug Properties ===
bci: 365
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 594
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - i967 - - - - - - - - - i169 i182 
=== Succesors ===
=== Usages ===
v1821 j319 j321 i217 i216 v1955 i1890 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - i967 - - - - - - - - - i169 i182  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 384]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i967 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i967 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
trueSuccessorProbability: 9.283640537438576E-4
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
a1884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v198 #falseSuccessor: v199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v110|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.283640537438576E-4 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B95" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 389]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i196 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i184 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v1524 
falseSuccessor: v1526 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v1524 #falseSuccessor: v1526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v112|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B94" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1531 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid i1119 <|@
result int[14|0xe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1120 v1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i887 
y: i1119 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i887 y: i1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1120 
=== Succesors ===
trueSuccessor: v1528 
falseSuccessor: v1530 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1120 #trueSuccessor: v1528 #falseSuccessor: v1530  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B93" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1535 
=== Usages ===
i1885 
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1535  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i889 
y: i1119 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i889 y: i1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1128 
=== Succesors ===
trueSuccessor: v1532 
falseSuccessor: v1534 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1128 #trueSuccessor: v1532 #falseSuccessor: v1534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1955 
=== Usages ===
i1887 
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?966 
object: a1884 
=== Succesors ===
next: v1543 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?966 object: a1884 #next: v1543  <|@  <|@
f <@*|@fixed>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1542 
falseSuccessor: v1540 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1542 #falseSuccessor: v1540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v113|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1830 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1830  <|@  <|@
f <@~|@floating>@ <|@
tid i1831 <|@
result int[-296467|0xfffffffffffb79ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296467
stableDimension: 0
stamp: i32 [-296467] ⇊00000000fffb79ed ⇈00000000fffb79ed
stampKind: i32
value: int[-296467|0xfffffffffffb79ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296467|0xfffffffffffb79ed]] destination: B72 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 554]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1547 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i243 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v1546 
falseSuccessor: v1544 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v1546 #falseSuccessor: v1544  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1838 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1838  <|@  <|@
f <@~|@floating>@ <|@
tid i1839 <|@
result int[-296723|0xfffffffffffb78ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296723
stableDimension: 0
stamp: i32 [-296723] ⇊00000000fffb78ed ⇈00000000fffb78ed
stampKind: i32
value: int[-296723|0xfffffffffffb78ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296723|0xfffffffffffb78ed]] destination: B74 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B92" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 561]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1551 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1551  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i246 
=== Succesors ===
=== Usages ===
v1551 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i777 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1548 
falseSuccessor: v1550 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1548 #falseSuccessor: v1550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1885 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1885  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 398]
rawvalue: int[14]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[14]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1918 v1919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
result [v114|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i887 
=== Succesors ===
=== Usages ===
i1885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1885 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1528 
address: v1918 
=== Succesors ===
next: v1555 
=== Usages ===
i206 i211 
=== Predecessor ===
v1548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1528 address: v1918 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:600) [bci: 429]
stamp: i32
=== Inputs ===
x: i1885 
y: i891 
=== Succesors ===
=== Usages ===
i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1885 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i211 
y: i160 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i211 
y: i7 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i211 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:610) [bci: 463]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i219 
y: i220 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i906 i905 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i219 y: i220  <|@  <|@
f <@~|@floating>@ <|@
tid i905 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i221 
y: i160 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i906 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i221 
y: i7 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i221 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i907 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:632) [bci: 608]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i905 
y: i906 
=== Succesors ===
=== Usages ===
v909 i911 v924 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i905 y: i906  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i907 
y: i7 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i907 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v1554 
falseSuccessor: v1552 
=== Usages ===
=== Predecessor ===
i1885 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v1554 #falseSuccessor: v1552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v114|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHL (x: v115|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SHL v116|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = ADD (x: v117|DWORD, y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SHL v119|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SHL v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = ADD (x: v120|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v122|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1842 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1842  <|@  <|@
f <@~|@floating>@ <|@
tid i1843 <|@
result int[-297235|0xfffffffffffb76ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297235
stableDimension: 0
stamp: i32 [-297235] ⇊00000000fffb76ed ⇈00000000fffb76ed
stampKind: i32
value: int[-297235|0xfffffffffffb76ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297235|0xfffffffffffb76ed]] destination: B77 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:634) [bci: 639]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1886 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1886 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1921 
=== Succesors ===
next: v1559 
=== Usages ===
v1457 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1921 #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid v1457 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1886 
y: i702 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1886 y: i702  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1457 
=== Succesors ===
trueSuccessor: v1558 
falseSuccessor: v1556 
=== Usages ===
=== Predecessor ===
i1886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1457 #trueSuccessor: v1558 #falseSuccessor: v1556  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v113|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1846 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1846  <|@  <|@
f <@~|@floating>@ <|@
tid i1847 <|@
result int[-357147|0xfffffffffffa8ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -357147
stableDimension: 0
stamp: i32 [-357147] ⇊00000000fffa8ce5 ⇈00000000fffa8ce5
stampKind: i32
value: int[-357147|0xfffffffffffa8ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-357147|0xfffffffffffa8ce5]] destination: B79 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1887 
=== Usages ===
v1157 v1173 
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1887  <|@  <|@
f <@~|@floating>@ <|@
tid v1919 <|@
result [v114|QWORD[.] + v76|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a204 
index: i889 
=== Succesors ===
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a204 index: i889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1887 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1532 
address: v1919 
=== Succesors ===
next: i216 
=== Usages ===
i209 
=== Predecessor ===
v1556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1532 address: v1919 #next: i216  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 397]
resultBits: 32
stamp: i32
=== Inputs ===
value: j121 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j121  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 404]
stamp: i32
=== Inputs ===
x: i203 
y: i1885 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i203 y: i1885  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 407]
stamp: i32
=== Inputs ===
x: i206 
y: i149 
=== Succesors ===
=== Usages ===
i216 i217 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i206 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 418]
stamp: i32
=== Inputs ===
x: i1887 
y: i150 
=== Succesors ===
=== Usages ===
i213 i214 i216 i217 ?239 i903 i904 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1887 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:608) [bci: 446]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?966 
x: i207 
y: i209 
=== Succesors ===
next: v1563 
=== Usages ===
v230 i235 
=== Predecessor ===
i1887 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?966 x: i207 y: i209 #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i8 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v1562 
falseSuccessor: v1560 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v1562 #falseSuccessor: v1560  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v114|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV v102|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = IMUL (x: v124|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SHL (x: v125|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SHL (x: v123|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v126|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v127|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD, y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1848  <|@  <|@
f <@~|@floating>@ <|@
tid i1849 <|@
result int[-291603|0xfffffffffffb8ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291603
stableDimension: 0
stamp: i32 [-291603] ⇊00000000fffb8ced ⇈00000000fffb8ced
stampKind: i32
value: int[-291603|0xfffffffffffb8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291603|0xfffffffffffb8ced]] destination: B81 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:614) [bci: 522]
stamp: void
=== Inputs ===
=== Succesors ===
next: i217 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i217 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 455]
op: REM
stamp: i32 [-2147483647 - 2147483647]
type: SIGNED
=== Inputs ===
stateBefore: ?966 
x: i207 
y: i209 
=== Succesors ===
next: v1567 
=== Usages ===
i681 i680 
=== Predecessor ===
v1560 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?966 x: i207 y: i209 #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i217 
y: i160 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i217 
y: i7 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i217 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:609) [bci: 456]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i680 
y: i681 
=== Succesors ===
=== Usages ===
v222 i225 ?239 i904 i903 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i680 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i221 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i682 y: i221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v1566 
falseSuccessor: v1564 
=== Usages ===
=== Predecessor ===
i217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v1566 #falseSuccessor: v1564  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = SHL v129|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SHL v129|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = ADD (x: v130|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v119|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1850 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1850  <|@  <|@
f <@~|@floating>@ <|@
tid i1851 <|@
result int[-291091|0xfffffffffffb8eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291091
stableDimension: 0
stamp: i32 [-291091] ⇊00000000fffb8eed ⇈00000000fffb8eed
stampKind: i32
value: int[-291091|0xfffffffffffb8eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291091|0xfffffffffffb8eed]] destination: B83 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:611) [bci: 470]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1571 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i209 
y: i160 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i209 
y: i7 
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i209 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:601) [bci: 436]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i213 
y: i214 
=== Succesors ===
=== Usages ===
v226 ?239 v912 i300 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i213 y: i214  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 484]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i221 
y: i682 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i221 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i225 
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i225  <|@  <|@
f <@*|@fixed>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1570 
falseSuccessor: v1568 
=== Usages ===
=== Predecessor ===
v1564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1570 #falseSuccessor: v1568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = SHL v127|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SHL v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = ADD (x: v133|DWORD, y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ADD (x: v132|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v136|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1852  <|@  <|@
f <@~|@floating>@ <|@
tid i1853 <|@
result int[-291347|0xfffffffffffb8ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291347
stableDimension: 0
stamp: i32 [-291347] ⇊00000000fffb8ded ⇈00000000fffb8ded
stampKind: i32
value: int[-291347|0xfffffffffffb8ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291347|0xfffffffffffb8ded]] destination: B85 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B90" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:612) [bci: 487]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1922 <|@
result [v113|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1884 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1884  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 549]
stamp: i32
=== Inputs ===
x: i216 
y: i234 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i216 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 550]
resultBits: 16
stamp: i16
=== Inputs ===
value: i235 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1157 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1556 
address: v1922 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i903 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1556 address: v1922 value: i236 stateAfter: - lastLocationAccess: - #next: i903  <|@  <|@
tid ?239 <|@
d <@d|@=== Debug Properties ===
bci: 552
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:618) [bci: 551]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 626
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - - 
=== Succesors ===
=== Usages ===
i903 i904 v1766 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i7 i8 i8 - - - - - i682 i209 i221 i215 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:630) [bci: 591]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: i904 
=== Usages ===
i915 
=== Predecessor ===
v1157 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?239 x: i682 y: i209 #next: i904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i904 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 600]
op: REM
stamp: i32 [-2147483647 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?239 
x: i682 
y: i209 
=== Succesors ===
next: v1575 
=== Usages ===
i921 i922 
=== Predecessor ===
i903 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?239 x: i682 y: i209 #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid i921 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i904 
y: i160 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i904 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i922 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i904 
y: i7 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i904 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i923 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:631) [bci: 601]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i921 
y: i922 
=== Succesors ===
=== Usages ===
v909 i911 v302 i299 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i921 y: i922  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i907 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i923 y: i907  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v909 
=== Succesors ===
trueSuccessor: v1572 
falseSuccessor: v1574 
=== Usages ===
=== Predecessor ===
i904 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v909 #trueSuccessor: v1572 #falseSuccessor: v1574  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA [v128|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|DWORD[.] * 8 + 16], y: v137|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v132|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v132|DWORD v127|DWORD v119|DWORD v135|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v127|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = SHL v139|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = SHL v139|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = ADD (x: v140|DWORD, y: v141|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid i911 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 660]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i907 
y: i923 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i907 y: i923  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i911 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i215 y: i911  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v912 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v1576 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v912 #trueSuccessor: v1578 #falseSuccessor: v1576  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = ADD (x: v122|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v143|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1762 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1762  <|@  <|@
f <@~|@floating>@ <|@
tid i1763 <|@
result int[-297747|0xfffffffffffb74ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297747
stableDimension: 0
stamp: i32 [-297747] ⇊00000000fffb74ed ⇈00000000fffb74ed
stampKind: i32
value: int[-297747|0xfffffffffffb74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297747|0xfffffffffffb74ed]] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B198" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:636) [bci: 663]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
result [v113|DWORD[.] * 8 + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1884 
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1884  <|@  <|@
f <@~|@floating>@ <|@
tid i915 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 695]
stamp: i32
=== Inputs ===
x: i903 
y: i234 
=== Succesors ===
=== Usages ===
i916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i903 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i916 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 696]
resultBits: 16
stamp: i16
=== Inputs ===
value: i915 
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1173 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:646) [bci: 697]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1556 
address: v1923 
value: i916 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v1576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1556 address: v1923 value: i916 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 704]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i923 
y: i7 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i923 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 707]
stamp: i32
=== Inputs ===
x: i299 
y: i215 
=== Succesors ===
=== Usages ===
j301 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i299 y: i215  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
result v147|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:648) [bci: 708]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i300 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i300  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i8 
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i923 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 714]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v302 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1174 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v302 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1174 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 722]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = LEA [v138|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|DWORD[.] * 8 + 18], y: v144|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = SHL v142|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = SUB (x: v145|DWORD, ~y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVSXD v146|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v142|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[2|0x2], int[1|0x1], int[0|0x0], v147|QWORD, v148|DWORD] destination: B89 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:635) [bci: 646]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1767 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1767  <|@  <|@
f <@~|@floating>@ <|@
tid i1768 <|@
result int[-297491|0xfffffffffffb75ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297491
stableDimension: 0
stamp: i32 [-297491] ⇊00000000fffb75ed ⇈00000000fffb75ed
stampKind: i32
value: int[-297491|0xfffffffffffb75ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
v1574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297491|0xfffffffffffb75ed]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1764 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-297747 - -297491] ⇊00000000fffb74ed ⇈00000000fffb75ed
valueDescription: i32
=== Inputs ===
merge: v1761 
values: i1763 i1768 
=== Succesors ===
=== Usages ===
v1766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1761 values: i1763 i1768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1762 v1767 
=== Succesors ===
next: v1766 
=== Usages ===
i1764 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1762 v1767 #next: v1766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?239 
actionAndReason: i1764 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?239 actionAndReason: i1764 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v132|DWORD v127|DWORD v119|DWORD v135|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 568]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1844 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1844  <|@  <|@
f <@~|@floating>@ <|@
tid i1845 <|@
result int[-296979|0xfffffffffffb77ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296979
stableDimension: 0
stamp: i32 [-296979] ⇊00000000fffb77ed ⇈00000000fffb77ed
stampKind: i32
value: int[-296979|0xfffffffffffb77ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296979|0xfffffffffffb77ed]] destination: B92 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:599) [bci: 415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1828 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1828  <|@  <|@
f <@~|@floating>@ <|@
tid i1829 <|@
result int[-289051|0xfffffffffffb96e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289051
stableDimension: 0
stamp: i32 [-289051] ⇊00000000fffb96e5 ⇈00000000fffb96e5
stampKind: i32
value: int[-289051|0xfffffffffffb96e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289051|0xfffffffffffb96e5]] destination: B93 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:598) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1826  <|@  <|@
f <@~|@floating>@ <|@
tid i1827 <|@
result int[-287003|0xfffffffffffb9ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -287003
stableDimension: 0
stamp: i32 [-287003] ⇊00000000fffb9ee5 ⇈00000000fffb9ee5
stampKind: i32
value: int[-287003|0xfffffffffffb9ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-287003|0xfffffffffffb9ee5]] destination: B94 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 393]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1824  <|@  <|@
f <@~|@floating>@ <|@
tid i1825 <|@
result int[-286227|0xfffffffffffba1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -286227
stableDimension: 0
stamp: i32 [-286227] ⇊00000000fffba1ed ⇈00000000fffba1ed
stampKind: i32
value: int[-286227|0xfffffffffffba1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-286227|0xfffffffffffba1ed]] destination: B95 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" "B127" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 728]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1583 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1583  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1582 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v1580 #falseSuccessor: v1582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B126" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1587 
=== Usages ===
j1888 
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1587  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i889 
y: i45 
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i889 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1183 
=== Succesors ===
trueSuccessor: v1584 
falseSuccessor: v1586 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1183 #trueSuccessor: v1584 #falseSuccessor: v1586  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B97 -> B98 falseDestination: B97 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B104" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1888 
=== Usages ===
j1889 
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1888  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
result v150|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 93]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1924 v1925 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
result [v150|QWORD[.] + v68|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i887 
=== Succesors ===
=== Usages ===
j1888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1888 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1580 
address: v1924 
=== Succesors ===
next: j1889 
=== Usages ===
j309 j314 
=== Predecessor ===
v1584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1580 address: v1924 #next: j1889  <|@  <|@
f <@~|@floating>@ <|@
tid v1925 <|@
result [v150|QWORD[.] + v76|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i889 
=== Succesors ===
=== Usages ===
j1889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1889 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1584 
address: v1925 
=== Succesors ===
next: j319 
=== Usages ===
j312 
=== Predecessor ===
j1888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1584 address: v1925 #next: j319  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 735]
stamp: i64
=== Inputs ===
x: j121 
y: j1888 
=== Succesors ===
=== Usages ===
j310 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j121 y: j1888  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 738]
stamp: i64
=== Inputs ===
x: j309 
y: i149 
=== Succesors ===
=== Usages ===
j319 j321 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j309 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 749]
stamp: i64
=== Inputs ===
x: j1889 
y: i150 
=== Succesors ===
=== Usages ===
j316 j317 j319 j321 ?988 ?999 ?443 ?373 ?381 j408 j410 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1889 y: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j319 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 778]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?966 
x: j310 
y: j312 
=== Succesors ===
next: j321 
=== Usages ===
i320 
=== Predecessor ===
j1889 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?966 x: j310 y: j312 #next: j321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j321 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 789]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?966 
x: j310 
y: j312 
=== Succesors ===
next: v339 
=== Usages ===
j689 j688 
=== Predecessor ===
j319 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?966 x: j310 y: j312 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j312 
y: i160 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j312 
y: i7 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j316 
y: j317 
=== Succesors ===
=== Usages ===
j447 v332 ?443 ?999 v427 ?373 ?381 ?988 j1872 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j316 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:654) [bci: 760]
stamp: i64
=== Inputs ===
x: j1888 
y: i891 
=== Succesors ===
=== Usages ===
j323 j324 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1888 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j314 
y: i160 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j314 
y: i7 
=== Succesors ===
=== Usages ===
j325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j314 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j323 
y: j324 
=== Succesors ===
=== Usages ===
j380 v327 j330 ?373 ?999 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j323 y: j324  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j321 
y: i160 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j689 <|@
result v166|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j321 
y: i7 
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j321 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j688 
y: j689 
=== Succesors ===
=== Usages ===
j379 v327 j330 ?373 ?999 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j688 y: j689  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
result v168|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 820]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j325 
y: j690 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j325 y: j690  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j330 
=== Succesors ===
=== Usages ===
i333 v1591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j330  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v169|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 779]
resultBits: 32
stamp: i32
=== Inputs ===
value: j319 
=== Succesors ===
=== Usages ===
v336 i344 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j319  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i8 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i320 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
trueSuccessorProbability: 0.1356671003058001
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOV [v150|QWORD[.] + v76|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = IMUL (x: v151|QWORD, y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL (x: v153|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = SHL (x: v152|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v154|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v155|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = SHL v155|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = SHL v155|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = ADD (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = SHL (x: v151|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = SHL v161|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = SHL v161|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = ADD (x: v162|QWORD, y: v163|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = SHL v157|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = SHL v157|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = ADD (x: v165|QWORD, y: v166|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = ADD (x: v164|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOV v156|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v169|DWORD, y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1356671003058001 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 862]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1591  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v1590 
falseSuccessor: v1588 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v1590 #falseSuccessor: v1588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1822 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1822  <|@  <|@
f <@~|@floating>@ <|@
tid i1823 <|@
result int[-312851|0xfffffffffffb39ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -312851
stableDimension: 0
stamp: i32 [-312851] ⇊00000000fffb39ed ⇈00000000fffb39ed
stampKind: i32
value: int[-312851|0xfffffffffffb39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-312851|0xfffffffffffb39ed]] destination: B100 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result v170|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i1002 i1003 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.010728526052578225
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v1588 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v355 #falseSuccessor: v356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B114" 
    xhandlers
    flags 
    probability 4562723796993956672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v170|DWORD, int[0|0x0]] destination: B102 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    probability 4591984949112608749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|DWORD, int[0|0x0]] destination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 873]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1890 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1890 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?966 
guard: - 
address: v1921 
=== Succesors ===
next: v1599 
=== Usages ===
v1230 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?966 guard: - address: v1921 #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1890 
y: i8 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1890 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1230 
=== Succesors ===
trueSuccessor: v1598 
falseSuccessor: v1596 
=== Usages ===
=== Predecessor ===
i1890 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1230 #trueSuccessor: v1598 #falseSuccessor: v1596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [v113|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1840 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1840  <|@  <|@
f <@~|@floating>@ <|@
tid i1841 <|@
result int[-359195|0xfffffffffffa84e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359195
stableDimension: 0
stamp: i32 [-359195] ⇊00000000fffa84e5 ⇈00000000fffa84e5
stampKind: i32
value: int[-359195|0xfffffffffffa84e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359195|0xfffffffffffa84e5]] destination: B105 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1235 
=== Usages ===
v1235 
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1235  <|@  <|@
f <@~|@floating>@ <|@
tid v1956 <|@
result [v113|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1884 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1884  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result v171|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 886]
stamp: i32
=== Inputs ===
x: i320 
y: i234 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 887]
resultBits: 16
stamp: i16
=== Inputs ===
value: i344 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1235 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1596 
address: v1956 
value: i345 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1596 address: v1956 value: i345 stateAfter: - lastLocationAccess: - #next: v1019  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.010728526052578225
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1018 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v1017 #falseSuccessor: v1018  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = LEA [v169|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|DWORD[.] * 8 + 16], y: v171|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574742723079176655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1020 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1020  <|@  <|@
f <@*|@fixed>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v61|DWORD, int[1|0x1]] destination: B107 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4604005090574932337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1000  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
v1018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1002 <|@
result v172|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v997 
values: i341 i777 
=== Succesors ===
=== Usages ===
v358 v360 i1003 i1003 ?999 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v997 values: i341 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1014 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v997 
values: i8 i7 
=== Succesors ===
=== Usages ===
i1013 i1013 ?999 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v997 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v998 v1000 
=== Succesors ===
next: v1603 
=== Usages ===
i1002 i1014 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v998 v1000 #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1002 
y: i243 
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1002 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j690 
y: j325 
=== Succesors ===
=== Usages ===
i328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j690 y: j325  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v327 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i371 ?999 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v327 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v332 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i372 ?999 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v332 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v1602 
falseSuccessor: v1600 
=== Usages ===
=== Predecessor ===
v997 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v1602 #falseSuccessor: v1600  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|DWORD, v173|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v172|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1601 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1601  <|@  <|@
tid ?999 <|@
d <@d|@=== Debug Properties ===
bci: 889
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 680
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i1002 - - - - - - - i1014 i328 i333 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i1002 - - - - - - - i1014 i328 i333 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1236
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?999 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?999  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -316435 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v172|DWORD - - - - - - - v173|DWORD v174|DWORD v175|DWORD - - - - - v167|QWORD - v155|QWORD - v164|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1002 
y: i246 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1002 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
trueSuccessorProbability: 0.9998292291403394
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v361 #falseSuccessor: v365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v172|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998292291403394 condition: < trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4604919004792408310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|DWORD, v175|DWORD, v172|DWORD, v173|DWORD] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4548849955350481381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v172|DWORD, v173|DWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" "B102" "B113" "B107" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i371 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i328 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i377 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i328 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result v177|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i333 i8 i8 i8 
=== Succesors ===
=== Usages ===
?373 i378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i333 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v369 
values: i1002 i341 i1002 i777 
=== Succesors ===
=== Usages ===
i457 ?373 ?381 ?988 ?443 i457 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i1002 i341 i1002 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i1013 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v369 
values: i1014 i8 i1014 i7 
=== Succesors ===
=== Usages ===
i376 ?373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v369 values: i1014 i8 i1014 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 v691 v1020 
=== Succesors ===
next: v1607 
=== Usages ===
i371 i372 i1003 i1013 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 v691 v1020 #next: v1607  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
value: a1884 
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1884  <|@  <|@
f <@*|@fixed>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1194 
=== Succesors ===
trueSuccessor: v1606 
falseSuccessor: v1604 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1194 #trueSuccessor: v1606 #falseSuccessor: v1604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD, v177|DWORD, v178|DWORD, v179|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v113|DWORD[.], y: v113|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1605 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1605  <|@  <|@
tid ?373 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1003 - - - - - - - i1013 i371 i372 - - - - - j690 - j312 - j325 - j318 - 
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1003 - - - - - - - i1013 i371 i372 - - - - - j690 - j312 - j325 - j318 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1454
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: NullCheckException
speculation: Object[d.a@1433516113]
stamp: void
=== Inputs ===
stateBefore: ?373 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1433516113] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -372235 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v180|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v179|DWORD v176|DWORD v177|DWORD - - - - - v167|QWORD - v155|QWORD - v164|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1891 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1891 <|@
result v181|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1921 
=== Succesors ===
next: v374 
=== Usages ===
v1212 
=== Predecessor ===
v1604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1921 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a1193 <|@
result v182|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1024]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1884 
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1884  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
i1891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOV [v113|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v176|DWORD, v177|DWORD, v167|QWORD, v164|QWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B121" "B122" 
    successors "B118" "B125" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618430005004285329
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i376 <|@
result v183|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v375 
values: i1013 i438 i438 
=== Succesors ===
=== Usages ===
?381 i458 v1212 v1926 i438 i458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i1013 i438 i438  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result v184|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i371 i7 i423 
=== Succesors ===
=== Usages ===
i459 v382 i459 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i371 i7 i423  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v375 
values: i372 i7 i428 
=== Succesors ===
=== Usages ===
i460 i460 v392 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: i372 i7 i428  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
result v186|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j690 j694 j694 
=== Succesors ===
=== Usages ===
?381 v449 j446 j408 j410 j1873 v1876 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j690 j694 j694  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
result v187|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v375 
values: j325 j414 j414 
=== Succesors ===
=== Usages ===
?381 j412 j413 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j325 j414 j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 7.913056511935287
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v374 
=== Succesors ===
next: v391 
=== Usages ===
i376 i377 i378 j379 j380 v385 v397 v444 v979 v1611 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v374 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i8 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
trueSuccessorProbability: 0.9124800935868261
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v385 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v383 #falseSuccessor: v385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|DWORD, v184|DWORD, v185|DWORD, v186|QWORD, v187|QWORD] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v184|DWORD, y: v184|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9124800935868261 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617839771930223566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 919]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i378 
y: i8 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i378 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
trueSuccessorProbability: 0.9574198800803831
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v393 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v185|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9574198800803831 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 924]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1612  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1003 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 - 
=== Succesors ===
=== Usages ===
j408 j410 v1609 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1003 - - - - - - - i376 i8 i8 - - - - - j379 - j312 - j380 - j318 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i1891 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i376 y: i1891  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1212 
=== Succesors ===
trueSuccessor: v1608 
falseSuccessor: v1611 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1212 #trueSuccessor: v1608 #falseSuccessor: v1611  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v181|DWORD, y: v183|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: j408 
=== Usages ===
v1207 
=== Predecessor ===
v1612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
result v188|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 928]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: j410 
=== Usages ===
i409 
=== Predecessor ===
v1608 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?381 x: j379 y: j312 #next: j410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j410 <|@
result v189|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 939]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775806]
type: SIGNED
=== Inputs ===
stateBefore: ?381 
x: j379 
y: j312 
=== Succesors ===
next: v1207 
=== Usages ===
j693 j692 
=== Predecessor ===
j408 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?381 x: j379 y: j312 #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1926 <|@
result [v182|QWORD[.] + v183|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1193 
index: i376 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1193 index: i376  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
result v190|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 929]
resultBits: 32
stamp: i32
=== Inputs ===
value: j408 
=== Succesors ===
=== Usages ===
?988 i439 ?443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j408  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
result v191|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1036]
stamp: i32
=== Inputs ===
x: i409 
y: i234 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i409 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1037]
resultBits: 16
stamp: i16
=== Inputs ===
value: i439 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1207 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1608 
address: v1926 
value: i440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
j410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1608 address: v1926 value: i440 stateAfter: - lastLocationAccess: - #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
result v192|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j410 
y: i160 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
result v193|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j410 
y: i7 
=== Succesors ===
=== Usages ===
j694 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j410 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
result v194|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j692 
y: j693 
=== Succesors ===
=== Usages ===
j379 v422 j425 j379 ?443 ?988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j692 y: j693  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1029]
stamp: i32
=== Inputs ===
x: i376 
y: i7 
=== Succesors ===
=== Usages ===
?443 i376 ?988 i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i376 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
result v196|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j380 
y: i160 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
result v197|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j380 
y: i7 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j380 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j414 <|@
result v198|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j412 
y: j413 
=== Succesors ===
=== Usages ===
j380 v417 ?443 v422 j425 j380 ?988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j412 y: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j280 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j414 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
stamp: void
trueSuccessorProbability: 3.567423074385401E-4
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v418 #falseSuccessor: v419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v186|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v183|DWORD int[0|0x0] int[0|0x0] - - - - - v186|QWORD - v155|QWORD - v187|QWORD - v160|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v155|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = MOV v188|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = LEA [v190|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + v183|DWORD * 2 + 16], y: v191|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v192|QWORD = SHL v189|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = SHL v189|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = ADD (x: v192|QWORD, y: v193|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = INC v183|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = SHL v187|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = SHL v187|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = ADD (x: v196|QWORD, y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v198|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.567423074385401E-4 condition: < trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566251910005568400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:697) [bci: 1017]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1469 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1469  <|@  <|@
tid ?443 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1003 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1003 - - - - - - - i438 i7 i7 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?443 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?443 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v195|DWORD int[1|0x1] int[1|0x1] - - v190|DWORD - - v194|QWORD - v155|QWORD - v198|QWORD - v160|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, int[1|0x1], int[1|0x1], v194|QWORD, v198|QWORD] destination: B121 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617575642540210170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 981]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1470 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1470  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j414 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j414  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
result v199|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v422 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i377 ?988 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v422 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
result v200|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1000]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j414 
y: j694 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j414 y: j694  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j425 
=== Succesors ===
=== Usages ===
i428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j318 y: j425  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result v201|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v427 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i378 ?988 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v427 trueValue: i7 falseValue: i8  <|@  <|@
tid ?988 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i1003 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 - 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i1003 - - - - - - - i438 i423 i428 - - i409 - - j694 - j312 - j414 - j318 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?988 
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?988 #next: v979  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v375 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1470 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v198|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v200|QWORD = ADD (x: v198|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v200|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v195|DWORD v199|DWORD v201|DWORD - - v190|DWORD - - v194|QWORD - v155|QWORD - v198|QWORD - v160|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, v199|DWORD, v201|DWORD, v194|QWORD, v198|QWORD] destination: B122 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1609 
=== Usages ===
=== Predecessor ===
v1612 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1460
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -373787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v183|DWORD int[0|0x0] int[0|0x0] - - - - - v186|QWORD - v155|QWORD - v187|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B198" 
    xhandlers
    flags 
    probability 4597552902277943576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v1854  <|@  <|@
f <@~|@floating>@ <|@
tid j1873 <|@
result v202|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j1872 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j1872 <|@
result v203|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j1873 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1873 y: j318  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i1875 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i1875 <|@
result v204|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1876 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1874 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1876 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1874 <|@
result v204|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1875 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1875  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = SHL v186|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|QWORD = SUB (x: v202|QWORD, ~y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|QWORD, y: v186|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD, v183|DWORD, v184|DWORD, v185|DWORD, v203|QWORD, v204|DWORD] destination: B124 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B198" 
    xhandlers
    flags 
    probability 4602897084137770523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v375 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v375 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
result v205|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j379 
y: i7 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j379 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result v206|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j446 
y: j318 
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j446 y: j318  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j278 
=== Succesors ===
=== Usages ===
i450 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
result v207|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v449 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1220 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v449 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1220 <|@
result v207|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
i1731 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i450  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v205|QWORD = SHL v186|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = SUB (x: v205|QWORD, ~y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|QWORD, y: v186|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v207|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD, v183|DWORD, v184|DWORD, v185|DWORD, v206|QWORD, v207|DWORD] destination: B125 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v1587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1834  <|@  <|@
f <@~|@floating>@ <|@
tid i1835 <|@
result int[-303131|0xfffffffffffb5fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303131
stableDimension: 0
stamp: i32 [-303131] ⇊00000000fffb5fe5 ⇈00000000fffb5fe5
stampKind: i32
value: int[-303131|0xfffffffffffb5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303131|0xfffffffffffb5fe5]] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1832 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1832  <|@  <|@
f <@~|@floating>@ <|@
tid i1833 <|@
result int[-301083|0xfffffffffffb67e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -301083
stableDimension: 0
stamp: i32 [-301083] ⇊00000000fffb67e5 ⇈00000000fffb67e5
stampKind: i32
value: int[-301083|0xfffffffffffb67e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
v1582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-301083|0xfffffffffffb67e5]] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B100" "B95" "B94" "B93" "B72" "B127" "B126" "B74" "B105" "B77" "B92" "B79" "B81" "B83" "B85" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1819 <|@
result v208|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-359195 - -286227] ⇊00000000fffa00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1816 
values: i1823 i1825 i1827 i1829 i1831 i1833 i1835 i1839 i1841 i1843 i1845 i1847 i1849 i1851 i1853 
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1816 values: i1823 i1825 i1827 i1829 i1831 i1833 i1835 i1839 i1841 i1843 i1845 i1847 i1849 i1851 i1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1822 v1824 v1826 v1828 v1830 v1832 v1834 v1838 v1840 v1842 v1844 v1846 v1848 v1850 v1852 
=== Succesors ===
next: v1821 
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1822 v1824 v1826 v1828 v1830 v1832 v1834 v1838 v1840 v1842 v1844 v1846 v1848 v1850 v1852 #next: v1821  <|@  <|@
f <@*|@fixed>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?966 
actionAndReason: i1819 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1816 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?966 actionAndReason: i1819 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v208|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v208|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B131" 
    xhandlers
    flags 
    probability 4583512112743206079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B131" 
    xhandlers
    flags 
    probability 4577633313965379503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B129" 
    successors "B132" "B135" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v191 v193 
=== Succesors ===
next: a464 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v191 v193 #next: a464  <|@  <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@65b182f8
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i889 i150 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i889 i150  <|@  <|@
tid ?1714 <|@
d <@d|@=== Debug Properties ===
bci: 1074
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a464 <|@
result v209|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1074
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1237 
stateDuring: ?1714 
=== Succesors ===
next: v1950 
=== Usages ===
v1241 v1242 ?1715 v1950 
=== Predecessor ===
v192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1237 stateDuring: ?1714 #next: v1950  <|@  <|@
tid ?465 <|@
d <@d|@=== Debug Properties ===
bci: 1077
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - a1743 
=== Succesors ===
=== Usages ===
v1950 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - - - - - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?465 
object: a464 
=== Succesors ===
next: i467 
=== Usages ===
=== Predecessor ===
a464 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?465 object: a464 #next: i467  <|@  <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@184e5683
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.getNormalizationBias()>
=== Inputs ===
arguments: a464 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464  <|@  <|@
tid ?1715 <|@
d <@d|@=== Debug Properties ===
bci: 1081
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - a464 - - - - - - - 
=== Succesors ===
=== Usages ===
i467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - a464 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i467 <|@
result v210|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1081
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.getNormalizationBias
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1241 
stateDuring: ?1715 
=== Succesors ===
next: a470 
=== Usages ===
?1718 v1242 ?1717 i472 ?475 i477 ?1716 i482 
=== Predecessor ===
v1950 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1241 stateDuring: ?1715 #next: a470  <|@  <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@40a5c6eb
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a464 i467 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a464 i467  <|@  <|@
tid ?1716 <|@
d <@d|@=== Debug Properties ===
bci: 1090
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - i467 - - - - - - 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j121 - - i5 - - - i777 i149 i887 i150 i889 i891 i887 - - - - - - - - - - i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
result v211|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1090
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1242 
stateDuring: ?1716 
=== Succesors ===
next: a474 
=== Usages ===
?1725 ?475 ?1724 ?486 v1248 ?1723 ?1722 ?1721 ?514 ?1720 ?1719 ?594 ?1718 ?555 v1254 ?1717 ?585 ?852 
=== Predecessor ===
i467 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1242 stateDuring: ?1716 #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
result v212|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1102]
stamp: i32
=== Inputs ===
x: i149 
y: i467 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i149 y: i467  <|@  <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@59ae47c7
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>
=== Inputs ===
arguments: j121 i887 i472 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j121 i887 i472  <|@  <|@
tid ?1717 <|@
d <@d|@=== Debug Properties ===
bci: 1103
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
result v213|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfMulPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1243 
stateDuring: ?1717 
=== Succesors ===
next: v1951 
=== Usages ===
a1458 ?1725 ?486 a1458 ?1724 v1321 ?1723 v1253 ?1722 ?514 ?1721 ?1720 ?594 ?1719 ?555 ?852 v1951 ?585 ?1718 v1248 v1249 v1254 v1344 v1934 v1927 v1928 ?815 
=== Predecessor ===
a470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1243 stateDuring: ?1717 #next: v1951  <|@  <|@
tid ?475 <|@
d <@d|@=== Debug Properties ===
bci: 1106
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - a1743 
=== Succesors ===
=== Usages ===
v1951 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 i891 i887 - - - - - - - - - a470 i467 - - - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?475 
object: a474 
=== Succesors ===
next: a480 
=== Usages ===
=== Predecessor ===
a474 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?475 object: a474 #next: a480  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result v214|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1116]
stamp: i32
=== Inputs ===
x: i467 
y: i891 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i467 y: i891  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v215|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1118]
stamp: i32
=== Inputs ===
x: i477 
y: i7 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i477 y: i7  <|@  <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@3061a848
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i945 i478 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i945 i478  <|@  <|@
tid ?1718 <|@
d <@d|@=== Debug Properties ===
bci: 1119
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 715
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - i150 i889 - - - - - - - - - - - a470 i467 a474 - - - - - 
=== Succesors ===
=== Usages ===
a480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - i150 i889 - - - - - - - - - - - a470 i467 a474 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a480 <|@
result v216|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1119
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1244 
stateDuring: ?1718 
=== Succesors ===
next: a485 
=== Usages ===
?1722 ?486 ?1721 v1249 ?1720 v1253 ?1719 ?514 a554 
=== Predecessor ===
v1951 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1244 stateDuring: ?1718 #next: a485  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result v217|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1132]
stamp: i32
=== Inputs ===
x: i150 
y: i467 
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i467  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
result v218|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1134]
stamp: i32
=== Inputs ===
x: i482 
y: i7 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i482 y: i7  <|@  <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@5a711a89
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i949 i483 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i949 i483  <|@  <|@
tid ?1719 <|@
d <@d|@=== Debug Properties ===
bci: 1135
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - 
=== Succesors ===
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
result v219|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1135
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1245 
stateDuring: ?1719 
=== Succesors ===
next: v1952 
=== Usages ===
v1253 ?1726 ?1725 v1321 ?1724 ?514 ?1723 ?1722 v1348 ?1721 ?555 ?852 ?620 ?1720 ?585 ?594 v1952 
=== Predecessor ===
a480 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1245 stateDuring: ?1719 #next: v1952  <|@  <|@
tid ?486 <|@
d <@d|@=== Debug Properties ===
bci: 1138
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1743 
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - - - - - - - - - a470 - a474 a480 - - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?486 
object: a485 
=== Succesors ===
next: i488 
=== Usages ===
=== Predecessor ===
a485 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?486 object: a485 #next: i488  <|@  <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@340d0db2
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
tid ?1720 <|@
d <@d|@=== Debug Properties ===
bci: 1147
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 724
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i488 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - - - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i488 <|@
result v220|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1147
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1248 
stateDuring: ?1720 
=== Succesors ===
next: i491 
=== Usages ===
?1722 ?1721 i516 v503 ?514 
=== Predecessor ===
v1952 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1248 stateDuring: ?1720 #next: i491  <|@  <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1fb6e48b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a474 a480 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a480  <|@  <|@
tid ?1721 <|@
d <@d|@=== Debug Properties ===
bci: 1156
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 - - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
result v221|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1156
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1249 
stateDuring: ?1721 
=== Succesors ===
next: i497 
=== Usages ===
v493 
=== Predecessor ===
i488 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1249 stateDuring: ?1721 #next: i497  <|@  <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@22a82cdd
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a480 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a480  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i8 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i491 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
result v222|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v493 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?1722 ?514 i546 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v493 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1722 <|@
d <@d|@=== Debug Properties ===
bci: 1175
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
i497 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 - - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i497 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1175
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1253 
stateDuring: ?1722 
=== Succesors ===
next: v506 
=== Usages ===
v499 
=== Predecessor ===
i491 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1253 stateDuring: ?1722 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i7 
=== Succesors ===
=== Usages ===
i500 v512 i1871 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i488 
y: i8 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i488 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
trueSuccessorProbability: 0.09966777408637872
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
i497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v504 #falseSuccessor: v505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr   -1  <|@ instruction v209|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v209|QWORD[.]] state [bci:1077] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v209|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v209|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr   -1  <|@ instruction v210|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v209|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v210|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - v210|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = ADD (x: v210|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v212|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v211|QWORD[.] v210|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v211|QWORD[.] v210|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [v213|QWORD[.]] state [bci:1106] <|@ <|@
      nr   -1  <|@ instruction v214|DWORD = ADD (x: v210|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = INC v214|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v215|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD - - - - - - - - - - - v211|QWORD[.] v210|DWORD v213|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = ADD (x: v99|DWORD, y: v210|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = INC v217|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v78|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v218|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v219|QWORD[.]] state [bci:1138] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v211|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - - - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - v220|DWORD - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v221|DWORD, y: v221|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v219|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v222|DWORD - - - v220|DWORD - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v220|DWORD, y: v220|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09966777408637872 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4570992724793644147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1216]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1218]
stamp: void
trueSuccessorProbability: 0.2633333333333333
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v511 #falseSuccessor: v510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v223|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2633333333333333 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B136" 
    xhandlers
    flags 
    probability 4562301875426403313
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4568663198529913466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:731) [bci: 1221]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i1877 <|@
result v224|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i777 
y: i17 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i777 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v224|DWORD, int[0|0x0]] destination: B134 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B136" 
    xhandlers
    flags 
    probability 4585155295857558788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B133" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v509 
=== Succesors ===
next: a1892 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v509 #next: a1892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1892 <|@
result v225|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1228]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
=== Succesors ===
next: i1893 
=== Usages ===
v1941 v1940 
=== Predecessor ===
v508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1920 #next: i1893  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
result v226|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 1227
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 733
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - - 
=== Succesors ===
=== Usages ===
v1774 i1893 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i777 - - - - - - - i8 i494 i500 - - i488 - - a470 - a474 a480 a485 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1940 <|@
result [v225|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1892 
=== Succesors ===
=== Usages ===
i1893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1893 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?514 
guard: - 
address: v1940 
=== Succesors ===
next: v1632 
=== Usages ===
v1356 
=== Predecessor ===
a1892 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?514 guard: - address: v1940 #next: v1632  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1893 
y: i8 
=== Succesors ===
=== Usages ===
v1632 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1893 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1632 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1356 
=== Succesors ===
trueSuccessor: v1631 
falseSuccessor: v1629 
=== Usages ===
=== Predecessor ===
i1893 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1356 #trueSuccessor: v1631 #falseSuccessor: v1629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v223|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v226|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v222|DWORD v226|DWORD - - v220|DWORD - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP [v225|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1774 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1774  <|@  <|@
f <@~|@floating>@ <|@
tid i1776 <|@
result int[-360475|0xfffffffffffa7fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -360475
stableDimension: 0
stamp: i32 [-360475] ⇊00000000fffa7fe5 ⇈00000000fffa7fe5
stampKind: i32
value: int[-360475|0xfffffffffffa7fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1774 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?514 
actionAndReason: i1776 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?514 actionAndReason: i1776 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -360475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v222|DWORD v226|DWORD - - v220|DWORD - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
v1361 
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid v1941 <|@
result [v225|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1892 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1892  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
result v227|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1240]
stamp: i32
=== Inputs ===
x: i488 
y: i234 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i488 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1241]
resultBits: 16
stamp: i16
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1361 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1629 
address: v1941 
value: i517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v1629 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1629 address: v1941 value: i517 stateAfter: - lastLocationAccess: - #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v227|DWORD = LEA [v220|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v225|DWORD[.] * 8 + 16], y: v227|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B134" "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i524 <|@
result v228|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v522 
values: i1877 i777 
=== Succesors ===
=== Usages ===
?1728 v530 v537 i457 ?1727 ?555 ?852 ?636 ?1726 ?585 ?1725 ?594 ?1724 ?1723 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i1877 i777  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v522 
values: i8 i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v522 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v521 v523 
=== Succesors ===
next: v529 
=== Usages ===
i524 i525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v521 v523 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1245]
stamp: void
trueSuccessorProbability: 0.04053156146179402
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v527 #falseSuccessor: v528  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v228|DWORD, v229|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04053156146179402 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4564837815409705070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B140 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4585483346233305672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1248]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i243 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
stamp: void
trueSuccessorProbability: 0.26973684210526316
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v535 #falseSuccessor: v534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v228|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26973684210526316 condition: < trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B146" 
    xhandlers
    flags 
    probability 4576896346336262936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B142 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4583430909525841668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1255]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i524 
y: i246 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i524 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
trueSuccessorProbability: 0.9971550497866287
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v228|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9971550497866287 condition: < trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4583408793770173339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid i1871 <|@
result v230|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v499 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v499 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v223|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v230|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v222|DWORD, v230|DWORD] destination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4545290057840552280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" "B140" "B145" "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i546 <|@
result v231|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i494 i8 i8 i8 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i494 i8 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
result v232|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v544 
values: i1871 i8 i8 i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i1871 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v543 v545 v695 v696 
=== Succesors ===
next: v549 
=== Usages ===
i546 i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v543 v545 v695 v696 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v1934 <|@
result [v213|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
a1901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1928 <|@
result [v213|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
i1897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1927 <|@
result [v213|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a474 
index: - 
=== Succesors ===
=== Usages ===
i1896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a474 index: -  <|@  <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@705fdf53
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a474 a470 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 a470  <|@  <|@
f <@~|@floating>@ <|@
tid j1473 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v231|DWORD, v232|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v229|DWORD, v231|DWORD, v232|DWORD, v216|QWORD[.]] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B178" 
    successors "B148" "B189" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603868826183568627
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i551 <|@
result v233|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v550 
values: i525 i599 
=== Succesors ===
=== Usages ===
?555 ?1723 ?636 ?1728 ?585 ?1727 ?594 i599 v1939 ?852 v1329 ?1726 ?620 ?1725 i458 ?1724 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i525 i599  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result v234|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i546 i590 
=== Succesors ===
=== Usages ===
?1727 v556 ?636 i459 ?1728 ?1726 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i546 i590  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result v235|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v550 
values: i547 i596 
=== Succesors ===
=== Usages ===
?1727 i460 v565 ?636 ?1728 ?1726 ?620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: i547 i596  <|@  <|@
f <@~|@floating>@ <|@
tid a554 <|@
result v236|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v550 
values: a480 a584 
=== Succesors ===
=== Usages ===
v1953 ?1723 v1258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: a480 a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 16.421786781800066
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v549 
=== Succesors ===
next: v564 
=== Usages ===
i551 i552 i553 a554 v559 v570 v605 v1697 v1687 v1646 v1651 v1675 v1663 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v549 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i8 
=== Succesors ===
=== Usages ===
v578 v610 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i553 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i552 
y: i8 
=== Succesors ===
=== Usages ===
v564 v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i552 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
trueSuccessorProbability: 0.9450309428467419
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v557 #falseSuccessor: v559  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v233|DWORD, v234|DWORD, v235|DWORD, v236|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v234|DWORD, y: v234|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9450309428467419 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B188" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603555853994860173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1273]
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
trueSuccessorProbability: 0.9937296695771272
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v566 #falseSuccessor: v570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v235|DWORD, y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9937296695771272 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" "B151" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
tid ?555 <|@
d <@d|@=== Debug Properties ===
bci: 1268
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 744
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1743 a485 - - - 
=== Succesors ===
=== Usages ===
v1953 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i8 i8 - - - - - a470 - a474 a1743 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?555 
object: a554 
=== Succesors ===
next: i580 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?555 object: a554 #next: i580  <|@  <|@
tid ?1723 <|@
d <@d|@=== Debug Properties ===
bci: 1282
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 745
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - - 
=== Succesors ===
=== Usages ===
i580 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - - - - a470 - a474 a554 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i580 <|@
result v237|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1282
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1254 
stateDuring: ?1723 
=== Succesors ===
next: a584 
=== Usages ===
?1725 ?585 ?1724 ?594 i600 ?852 
=== Predecessor ===
v1953 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1254 stateDuring: ?1723 #next: a584  <|@  <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@2c632c77
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.multBy10()>
=== Inputs ===
arguments: a554 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a554  <|@  <|@
tid ?1724 <|@
d <@d|@=== Debug Properties ===
bci: 1312
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
result v238|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1312
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.multBy10
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1258 
stateDuring: ?1724 
=== Succesors ===
next: i1894 
=== Usages ===
?585 ?852 ?1725 v1321 ?594 v1930 a554 v1931 v1929 ?815 
=== Predecessor ===
i580 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1258 stateDuring: ?1724 #next: i1894  <|@  <|@
tid ?585 <|@
d <@d|@=== Debug Properties ===
bci: 1315
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - a584 
=== Succesors ===
=== Usages ===
v1782 i1894 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 - a485 - - - a584  <|@  <|@
f <@~|@floating>@ <|@
tid v1930 <|@
result [v238|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
i1894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1894 <|@
result v239|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 15]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?585 
guard: - 
address: v1930 
=== Succesors ===
next: i1895 
=== Usages ===
i798 
=== Predecessor ===
a584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?585 guard: - address: v1930 #next: i1895  <|@  <|@
f <@~|@floating>@ <|@
tid v1929 <|@
result [v238|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1895 <|@
result v240|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 11]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1929 
=== Succesors ===
next: i1896 
=== Usages ===
i798 i814 j1474 v1483 
=== Predecessor ===
i1894 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1929 #next: i1896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1896 <|@
result v241|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1927 
=== Succesors ===
next: i1897 
=== Usages ===
i795 i813 j1477 v1486 
=== Predecessor ===
i1895 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1927 #next: i1897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1897 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1928 
=== Succesors ===
next: v802 
=== Usages ===
i795 
=== Predecessor ===
i1896 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1928 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid i798 <|@
result v242|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1894 
y: i1895 
=== Succesors ===
=== Usages ===
v799 v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1894 y: i1895  <|@  <|@
f <@~|@floating>@ <|@
tid i795 <|@
result v243|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1896 
y: i1897 
=== Succesors ===
=== Usages ===
v799 v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1896 y: i1897  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i798 
y: i795 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i798 y: i795  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.23168656987595593
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v801 
=== Usages ===
=== Predecessor ===
i1897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v800 #falseSuccessor: v801  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD int[0|0x0] int[0|0x0] - - - - - v211|QWORD[.] - v213|QWORD[.] Object[null] v219|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v236|QWORD[.]] state [bci:1268] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v211|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - - - - v211|QWORD[.] - v213|QWORD[.] v236|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v236|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] - v219|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v238|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] - v219|QWORD[.] - - - 
>@ <|@ instruction v239|DWORD = MOV [v238|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOV [v238|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = MOV [v213|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = ADD (x: v239|DWORD, y: v240|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = ADD (x: v241|DWORD, ~y: [v213|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v242|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594123236352265589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B150 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601887804074441186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i795 
y: i798 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i795 y: i798  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 4.944535213690093E-4
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v806 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v805 #falseSuccessor: v806  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v242|DWORD, y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552452067410704642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff]] destination: B152 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B154" "B155" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:955) [bci: 34]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1862 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1862  <|@  <|@
f <@~|@floating>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1896 
y: i7 
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1896 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1486 
=== Succesors ===
trueSuccessor: v1858 
falseSuccessor: v1861 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1486 #trueSuccessor: v1858 #falseSuccessor: v1861  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v241|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1856 
=== Usages ===
=== Predecessor ===
v1862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1855 
=== Predecessor ===
v1858 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B154 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B185" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1870 
=== Usages ===
=== Predecessor ===
v1862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1870  <|@  <|@
f <@~|@floating>@ <|@
tid j1477 <|@
result v244|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1896 
=== Succesors ===
=== Usages ===
j1478 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1896  <|@  <|@
f <@~|@floating>@ <|@
tid j1478 <|@
result v245|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1477 
y: j1473 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1477 y: j1473  <|@  <|@
f <@~|@floating>@ <|@
tid j1474 <|@
result v246|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1895 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1895  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1478 
y: j1474 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1478 y: j1474  <|@  <|@
f <@*|@fixed>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1492 
=== Succesors ===
trueSuccessor: v1869 
falseSuccessor: v1866 
=== Usages ===
=== Predecessor ===
v1861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1492 #trueSuccessor: v1869 #falseSuccessor: v1866  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v244|QWORD = MOVSXD v241|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = DEC v244|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v246|QWORD = MOVSXD v240|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v246|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1868 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1868  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1895 
y: i7 
=== Succesors ===
=== Usages ===
v1868 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1895 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1483 
=== Succesors ===
trueSuccessor: v1867 
falseSuccessor: v1859 
=== Usages ===
=== Predecessor ===
v1869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1483 #trueSuccessor: v1867 #falseSuccessor: v1859  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v240|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B186" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1865 
=== Usages ===
=== Predecessor ===
v1868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1865  <|@  <|@
f <@*|@fixed>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B157 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1857 
=== Usages ===
=== Predecessor ===
v1868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1857  <|@  <|@
f <@*|@fixed>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1855 
=== Predecessor ===
v1859 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B154" "B158" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1856 v1857 
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1856 v1857 #next: v811  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v1855 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v241|DWORD, v240|DWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B175" 
    successors "B161" "B172" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4601944149477010940
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i813 <|@
result v247|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v812 
values: i1896 i826 
=== Succesors ===
=== Usages ===
?815 v816 i826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i1896 i826  <|@  <|@
f <@~|@floating>@ <|@
tid i814 <|@
result v248|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v812 
values: i1895 i829 
=== Succesors ===
=== Usages ===
?815 i863 v842 i829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i1895 i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0073559460563954
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v811 
=== Succesors ===
next: a1898 
=== Usages ===
i813 i814 v817 v833 v838 v1686 v1674 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v811 #next: a1898  <|@  <|@
f <@~|@floating>@ <|@
tid v1931 <|@
result [v238|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a584 
index: - 
=== Succesors ===
=== Usages ===
a1898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a584 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1898 <|@
result v249|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1931 
=== Succesors ===
next: v822 
=== Usages ===
v1932 a1275 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1931 #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1932 <|@
result [v249|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1898 
=== Succesors ===
=== Usages ===
i1899 i1903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1898  <|@  <|@
f <@~|@floating>@ <|@
tid a1275 <|@
result v250|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 135]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1898 
=== Succesors ===
=== Usages ===
v1933 ?864 v1937 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1898  <|@  <|@
tid ?852 <|@
d <@d|@=== Debug Properties ===
bci: 1321
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 748
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
?815 ?880 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 - - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
tid ?815 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 957
stackSize: 0
=== Inputs ===
outerFrameState: ?852 
values: a474 a584 - - i813 i814 - - 
=== Succesors ===
=== Usages ===
v1799 i1902 i1903 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?852 values: a474 a584 - - i813 i814 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i7 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i813 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.007302231237322543
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v821 
=== Usages ===
=== Predecessor ===
a1898 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v817 #falseSuccessor: v821  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v247|DWORD, v248|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[.] = MOV [v238|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = UNCOMPRESSPOINTER (input: v249|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v247|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B162" "B163" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:964) [bci: 114]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i814 
y: i7 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i814 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v1651 
falseSuccessor: v1648 
=== Usages ===
=== Predecessor ===
v817 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v1651 #falseSuccessor: v1648  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v248|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1795 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1795  <|@  <|@
f <@~|@floating>@ <|@
tid i1796 <|@
result int[-325395|0xfffffffffffb08ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -325395
stableDimension: 0
stamp: i32 [-325395] ⇊00000000fffb08ed ⇈00000000fffb08ed
stampKind: i32
value: int[-325395|0xfffffffffffb08ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-325395|0xfffffffffffb08ed]] destination: B162 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v861  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
v1648 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v248|DWORD] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B168" 
    successors "B165" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571804831647713515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i863 <|@
result v251|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v862 
values: i814 i870 
=== Succesors ===
=== Usages ===
?864 v865 i870 j1910 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v862 values: i814 i870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.3333333333333333
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v861 
=== Succesors ===
next: v869 
=== Usages ===
i863 v866 v873 v874 v1662 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v861 #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i863 
y: i7 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i863 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v866 
falseSuccessor: v868 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v866 #falseSuccessor: v868  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v251|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v251|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567301232020343019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:928) [bci: 15]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B165 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" "B170" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 4]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1899 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1899  <|@  <|@
tid ?880 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 968
stackSize: 0
=== Inputs ===
outerFrameState: ?852 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?864 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?852 values: - - - - - - - -  <|@  <|@
tid ?864 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.checkZeroTail(int[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 923
stackSize: 0
=== Inputs ===
outerFrameState: ?880 
values: a1275 i863 
=== Succesors ===
=== Usages ===
v1813 i1899 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?880 values: a1275 i863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1899 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?864 
guard: - 
address: v1932 
=== Succesors ===
next: v1664 
=== Usages ===
v1281 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?864 guard: - address: v1932 #next: v1664  <|@  <|@
f <@~|@floating>@ <|@
tid i870 <|@
result v252|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 5]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i863 
y: i17 
=== Succesors ===
=== Usages ===
i863 v1281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i863 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i870 
y: i1899 
=== Succesors ===
=== Usages ===
v1664 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i870 y: i1899  <|@  <|@
f <@*|@fixed>@ <|@
tid v1664 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1281 
=== Succesors ===
trueSuccessor: v1659 
falseSuccessor: v1662 
=== Usages ===
=== Predecessor ===
i1899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1281 #trueSuccessor: v1659 #falseSuccessor: v1662  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD = DEC v251|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v250|QWORD[.] v251|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v252|DWORD, y: [v249|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B166 -> B167 falseDestination: B166 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1900 
=== Usages ===
i1900 
=== Predecessor ===
v1664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1900  <|@  <|@
f <@~|@floating>@ <|@
tid j1910 <|@
result v253|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i863 
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i863  <|@  <|@
f <@~|@floating>@ <|@
tid v1933 <|@
result [v250|QWORD[.] + v253|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a1275 
index: j1910 
=== Succesors ===
=== Usages ===
i1900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1275 index: j1910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1900 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1659 
address: v1933 
=== Succesors ===
next: v877 
=== Usages ===
v872 
=== Predecessor ===
v1659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1659 address: v1933 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1900 
y: i8 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1900 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v872 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
i1900 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v872 #trueSuccessor: v876 #falseSuccessor: v874  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVSXD v251|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v250|QWORD[.] + v253|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B164" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562797632392972523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
loopBegin: v862 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v862  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v252|DWORD] destination: B168 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562797632392972523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:925) [bci: 13]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff]] destination: B169 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v862 
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v862 #next: v1663  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1813 
=== Usages ===
=== Predecessor ===
v1662 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1813  <|@  <|@
f <@~|@floating>@ <|@
tid i1815 <|@
result int[-328219|0xfffffffffffafde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328219
stableDimension: 0
stamp: i32 [-328219] ⇊00000000fffafde5 ⇈00000000fffafde5
stampKind: i32
value: int[-328219|0xfffffffffffafde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?864 
actionAndReason: i1815 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1663 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?864 actionAndReason: i1815 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -328219 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v250|QWORD[.] v251|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 140, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1901 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1901 <|@
result v254|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1934 
=== Succesors ===
next: i1902 
=== Usages ===
a1292 v1935 
=== Predecessor ===
v821 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1934 #next: i1902  <|@  <|@
f <@~|@floating>@ <|@
tid v1935 <|@
result [v254|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1901 
=== Succesors ===
=== Usages ===
i1902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1902 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?815 
guard: - 
address: v1935 
=== Succesors ===
next: v1676 
=== Usages ===
v1298 
=== Predecessor ===
a1901 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?815 guard: - address: v1935 #next: v1676  <|@  <|@
f <@~|@floating>@ <|@
tid i826 <|@
result v255|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i813 
y: i17 
=== Succesors ===
=== Usages ===
i813 v1936 v1298 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i813 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i826 
y: i1902 
=== Succesors ===
=== Usages ===
v1676 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i826 y: i1902  <|@  <|@
f <@*|@fixed>@ <|@
tid v1676 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1298 
=== Succesors ===
trueSuccessor: v1671 
falseSuccessor: v1674 
=== Usages ===
=== Predecessor ===
i1902 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1298 #trueSuccessor: v1671 #falseSuccessor: v1674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v254|DWORD[.] = MOV [v213|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v255|DWORD = DEC v247|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v213|QWORD[.] v238|QWORD[.] - - v247|DWORD v248|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v255|DWORD, y: [v254|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1903 
=== Usages ===
i1904 
=== Predecessor ===
v1676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1903 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?815 
guard: - 
address: v1932 
=== Succesors ===
next: v1688 
=== Usages ===
v1313 
=== Predecessor ===
v1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?815 guard: - address: v1932 #next: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid i829 <|@
result v256|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i814 
y: i17 
=== Succesors ===
=== Usages ===
i814 v1937 v1313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i814 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i829 
y: i1903 
=== Succesors ===
=== Usages ===
v1688 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i829 y: i1903  <|@  <|@
f <@*|@fixed>@ <|@
tid v1688 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1313 
=== Succesors ===
trueSuccessor: v1683 
falseSuccessor: v1686 
=== Usages ===
=== Predecessor ===
i1903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1313 #trueSuccessor: v1683 #falseSuccessor: v1686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = DEC v248|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v213|QWORD[.] v238|QWORD[.] - - v247|DWORD v248|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v256|DWORD, y: [v249|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1904 
=== Usages ===
i1905 
=== Predecessor ===
v1688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1904  <|@  <|@
f <@~|@floating>@ <|@
tid a1292 <|@
result v257|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1901 
=== Succesors ===
=== Usages ===
v1936 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1901  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
result [v257|QWORD[.] + v255|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1292 
index: i826 
=== Succesors ===
=== Usages ===
i1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1292 index: i826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1904 <|@
result v258|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1671 
address: v1936 
=== Succesors ===
next: i1905 
=== Usages ===
v831 v850 
=== Predecessor ===
v1683 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1671 address: v1936 #next: i1905  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
result [v250|QWORD[.] + v256|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1275 
index: i829 
=== Succesors ===
=== Usages ===
i1905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1275 index: i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1905 <|@
result v259|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1683 
address: v1937 
=== Succesors ===
next: v837 
=== Usages ===
v831 v850 
=== Predecessor ===
i1904 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1683 address: v1937 #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1904 
y: i1905 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1904 y: i1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0073559460563955865
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
i1905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v832 #falseSuccessor: v833  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|QWORD[.] = UNCOMPRESSPOINTER (input: v254|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v258|DWORD = MOV [v257|QWORD[.] + v255|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = MOV [v250|QWORD[.] + v256|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v259|DWORD, y: v258|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B160" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569878636767358276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:963) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
loopBegin: v812 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v812  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v255|DWORD, v256|DWORD] destination: B175 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601823333629494599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1904 
y: i1905 
=== Succesors ===
=== Usages ===
i851 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1904 y: i1905  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
result v260|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32 [-1 - 1] ⇊0000000000000001
=== Inputs ===
condition: v850 
trueValue: i17 
falseValue: i7 
=== Succesors ===
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v850 trueValue: i17 falseValue: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
v833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v259|DWORD, y: v258|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v261|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v260|DWORD] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B150" "B152" "B176" "B169" "B165" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i855 <|@
result v262|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 1]
valueDescription: i32
=== Inputs ===
merge: v853 
values: i7 i17 i851 i17 i8 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v853 values: i7 i17 i851 i17 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v854 v856 v857 v858 v1077 
=== Succesors ===
next: i593 
=== Usages ===
i855 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v854 v856 v857 v858 v1077 #next: i593  <|@  <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@45907cc
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a485 a474 a584 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a485 a474 a584  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i855 
y: i8 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i855 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
result v263|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v589 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?594 ?1725 i552 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v589 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1725 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i593 <|@
result v264|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1321 
stateDuring: ?1725 
=== Succesors ===
next: a1906 
=== Usages ===
?594 v595 
=== Predecessor ===
v853 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1321 stateDuring: ?1725 #next: a1906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1906 <|@
result v265|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
=== Succesors ===
next: i1907 
=== Usages ===
a1323 v1938 
=== Predecessor ===
i593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1920 #next: i1907  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593 
=== Succesors ===
=== Usages ===
v1791 i1907 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i590 - - - i580 - - a470 - a474 a584 a485 - - - i593  <|@  <|@
f <@~|@floating>@ <|@
tid v1938 <|@
result [v265|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1906 
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1907 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?594 
guard: - 
address: v1938 
=== Succesors ===
next: v1698 
=== Usages ===
v1329 
=== Predecessor ===
a1906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?594 guard: - address: v1938 #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i551 
y: i1907 
=== Succesors ===
=== Usages ===
v1698 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i551 y: i1907  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1329 
=== Succesors ===
trueSuccessor: v1694 
falseSuccessor: v1697 
=== Usages ===
=== Predecessor ===
i1907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1329 #trueSuccessor: v1694 #falseSuccessor: v1697  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v262|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v262|DWORD, y: v262|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v219|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v238|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v263|DWORD - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v264|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v265|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v264|DWORD 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v263|DWORD - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v233|DWORD, y: [v265|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B147" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
v1337 
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@~|@floating>@ <|@
tid a1323 <|@
result v266|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1906 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1906  <|@  <|@
f <@~|@floating>@ <|@
tid v1939 <|@
result [v266|QWORD[.] + v233|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1323 
index: i551 
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1323 index: i551  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
result v267|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1366]
stamp: i32
=== Inputs ===
x: i580 
y: i234 
=== Succesors ===
=== Usages ===
i601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1367]
resultBits: 16
stamp: i16
=== Inputs ===
value: i600 
=== Succesors ===
=== Usages ===
v1337 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1337 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1694 
address: v1939 
value: i601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1694 address: v1939 value: i601 stateAfter: - lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i593 
y: i7 
=== Succesors ===
=== Usages ===
i596 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i593 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
result v268|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v595 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v595 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
result v269|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1359]
stamp: i32
=== Inputs ===
x: i551 
y: i7 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i551 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
loopBegin: v550 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1337 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v266|QWORD[.] = UNCOMPRESSPOINTER (input: v265|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v267|DWORD = LEA [v237|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v266|QWORD[.] + v233|DWORD * 2 + 16], y: v267|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v264|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v269|DWORD = INC v233|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v269|DWORD, v263|DWORD, v268|DWORD, v238|QWORD[.]] destination: B178 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1791 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1791  <|@  <|@
f <@~|@floating>@ <|@
tid i1793 <|@
result int[-340507|0xfffffffffffacde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -340507
stableDimension: 0
stamp: i32 [-340507] ⇊00000000fffacde5 ⇈00000000fffacde5
stampKind: i32
value: int[-340507|0xfffffffffffacde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?594 
actionAndReason: i1793 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1697 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?594 actionAndReason: i1793 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -340507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v264|DWORD 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v263|DWORD - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1687 
=== Usages ===
=== Predecessor ===
v1688 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1687  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1806 
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1806  <|@  <|@
f <@~|@floating>@ <|@
tid i1807 <|@
result int[-336411|0xfffffffffffadde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -336411
stableDimension: 0
stamp: i32 [-336411] ⇊00000000fffadde5 ⇈00000000fffadde5
stampKind: i32
value: int[-336411|0xfffffffffffadde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
v1687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-336411|0xfffffffffffadde5]] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v812 
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v1676 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v812 #next: v1675  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1802 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1802  <|@  <|@
f <@~|@floating>@ <|@
tid i1803 <|@
result int[-332571|0xfffffffffffaece5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -332571
stableDimension: 0
stamp: i32 [-332571] ⇊00000000fffaece5 ⇈00000000fffaece5
stampKind: i32
value: int[-332571|0xfffffffffffaece5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
v1675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332571|0xfffffffffffaece5]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B162" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1797 <|@
result v270|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-336411 - -325395] ⇊00000000fffa00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1794 
values: i1796 i1803 i1807 
=== Succesors ===
=== Usages ===
v1799 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1794 values: i1796 i1803 i1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1795 v1802 v1806 
=== Succesors ===
next: v1799 
=== Usages ===
i1797 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1795 v1802 v1806 #next: v1799  <|@  <|@
f <@*|@fixed>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?815 
actionAndReason: i1797 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1794 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?815 actionAndReason: i1797 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v270|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v270|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v213|QWORD[.] v238|QWORD[.] - - v247|DWORD v248|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:46, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B186" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1864 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1864  <|@  <|@
f <@*|@fixed>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
v1866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B157" 
    successors "B187" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1864 v1865 
=== Succesors ===
next: v1646 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1864 v1865 #next: v1646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v1782 
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v1782  <|@  <|@
f <@~|@floating>@ <|@
tid a1785 <|@
result v271|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1310093959
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1310093959]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1784 <|@
result int[-330003|0xfffffffffffaf6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -330003
stableDimension: 0
stamp: i32 [-330003] ⇊00000000fffaf6ed ⇈00000000fffaf6ed
stampKind: i32
value: int[-330003|0xfffffffffffaf6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?585 
actionAndReason: i1784 
speculation: a1785 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1646 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?585 actionAndReason: i1784 speculation: a1785  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v271|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310093959] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -330003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v271|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v238|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] - v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1315] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B190" 
    xhandlers
    flags 
    probability 4570783441632509614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B190" 
    xhandlers
    flags 
    probability 4585168376055129697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v550 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v550 #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v567 v569 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v567 v569 #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1374]
stamp: void
trueSuccessorProbability: 0.054134838923945536
=== Inputs ===
condition: v565 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v565 #trueSuccessor: v608 #falseSuccessor: v609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v235|DWORD, y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.054134838923945536 condition: = trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4566951317114401624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v213|QWORD[.]] destination: B191 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585407883837511446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1379]
stamp: void
trueSuccessorProbability: 0.10287921348314606
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v616 #falseSuccessor: v615  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v234|DWORD, y: v234|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10287921348314606 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4570783441632509555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v213|QWORD[.]] destination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4584868070143374127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a619  <|@  <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@67f41d5e
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a474 i7 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a474 i7  <|@  <|@
tid ?1726 <|@
d <@d|@=== Debug Properties ===
bci: 1385
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
result v272|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1385
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1344 
stateDuring: ?1726 
=== Succesors ===
next: v1954 
=== Usages ===
v1348 a1458 ?1727 v1954 
=== Predecessor ===
v615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1344 stateDuring: ?1726 #next: v1954  <|@  <|@
tid ?620 <|@
d <@d|@=== Debug Properties ===
bci: 1388
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1743 
=== Succesors ===
=== Usages ===
v1954 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - - - a485 - - - a1743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?620 
object: a619 
=== Succesors ===
next: i622 
=== Usages ===
=== Predecessor ===
a619 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?620 object: a619 #next: i622  <|@  <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@69dfe3b4
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a619 a485 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a619 a485  <|@  <|@
tid ?1727 <|@
d <@d|@=== Debug Properties ===
bci: 1394
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 754
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 - - - - - - - a619 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
result v273|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1394
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1348 
stateDuring: ?1727 
=== Succesors ===
next: v627 
=== Usages ===
j624 
=== Predecessor ===
v1954 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1348 stateDuring: ?1727 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid j624 <|@
result v274|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1397]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
i622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD - - - - - - - - - v219|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr   -1  <|@ instruction v272|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD - - - - - - - - - v219|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v272|QWORD[.]] state [bci:1388] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v272|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v219|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD - - - - - - - v272|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr   -1  <|@ instruction v273|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v274|QWORD = MOVSXD v273|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v274|QWORD, v272|QWORD[.]] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B191" "B193" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
result v275|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v628 
values: j624 j278 j278 
=== Succesors ===
=== Usages ===
?1728 ?636 j461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: j624 j278 j278  <|@  <|@
f <@~|@floating>@ <|@
tid a1458 <|@
result v276|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v628 
values: a619 a474 a474 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: a619 a474 a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v627 v629 v697 
=== Succesors ===
next: i635 
=== Usages ===
j630 a1458 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v627 v629 v697 #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid a633 <|@
result v277|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1409]
rawvalue: FDBigInteger@241972498
stableDimension: 0
stamp: a!# Lsun/misc/FDBigInteger;
stampKind: a -
value: Object[FDBigInteger@241972498]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5cea7a6c
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1458 a633 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1458 a633  <|@  <|@
tid ?1728 <|@
d <@d|@=== Debug Properties ===
bci: 1412
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
result v278|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1412
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1341 
stateDuring: ?1728 
=== Succesors ===
next: v1706 
=== Usages ===
v637 
=== Predecessor ===
v628 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1341 stateDuring: ?1728 #next: v1706  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i8 
=== Succesors ===
=== Usages ===
v1706 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i635 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1705 
falseSuccessor: v1703 
=== Usages ===
=== Predecessor ===
i635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1705 #falseSuccessor: v1703  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|QWORD, v276|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v277|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v276|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v277|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD v275|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr   -1  <|@ instruction v278|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v278|DWORD, y: v278|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1704 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1704  <|@  <|@
tid ?636 <|@
d <@d|@=== Debug Properties ===
bci: 1415
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8 
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i524 - - - - - - - i551 i552 i553 j630 - - - - - - - - - - - - a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1456
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1705 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -372755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: v0|QWORD[.] int[0|0x0] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD v275|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v1703 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v228|DWORD, v233|DWORD, v234|DWORD, v235|DWORD, v275|QWORD, byte[0|0x0]] destination: B197 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B89" "B125" "B197" "B124" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i457 <|@
result v279|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i777 i1003 i524 i1003 
=== Succesors ===
=== Usages ===
?650 i644 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i777 i1003 i524 i1003  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
result v280|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v455 
values: i702 i376 i551 i376 
=== Succesors ===
=== Usages ===
?650 v1368 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i702 i376 i551 i376  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
result v281|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i7 i377 i552 i377 
=== Succesors ===
=== Usages ===
v655 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i7 i377 i552 i377  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
result v282|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v455 
values: i8 i378 i553 i378 
=== Succesors ===
=== Usages ===
v651 ?650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i8 i378 i553 i378  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result v283|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v455 
values: j301 j447 j630 j1872 
=== Succesors ===
=== Usages ===
v660 v662 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: j301 j447 j630 j1872  <|@  <|@
f <@~|@floating>@ <|@
tid i1731 <|@
result v284|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i8 [0 - 1] ⇈0000000000000001
valueDescription: i8
=== Inputs ===
merge: v455 
values: i1174 i1220 i1390 i1874 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: i1174 i1220 i1390 i1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v456 v642 v1854 
=== Succesors ===
next: v1733 
=== Usages ===
i457 i458 i459 i460 j461 i1731 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v456 v642 v1854 #next: v1733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:649) [bci: 722]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1913 
value: i1731 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1913 value: i1731 stateAfter: - lastLocationAccess: - #next: v1363  <|@  <|@
f <@~|@floating>@ <|@
tid v1942 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
result v285|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1430]
stamp: i32
=== Inputs ===
x: i457 
y: i7 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i457 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1431]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1942 
value: i644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
v1733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1942 value: i644 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid v1943 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:761) [bci: 1436]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1943 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1368 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1943 value: i8 stateAfter: - lastLocationAccess: - #next: v1368  <|@  <|@
f <@~|@floating>@ <|@
tid v1944 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1944 
value: i458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1944 value: i458 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i8 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i460 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
trueSuccessorProbability: 0.5883269357403274
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v652 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v652 #falseSuccessor: v653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v279|DWORD, v280|DWORD, v281|DWORD, v282|DWORD, v283|QWORD, v284|DWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: v284|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v285|DWORD = INC v279|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v285|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v280|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v282|DWORD, y: v282|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5883269357403274 condition: = trueDestination: B198 -> B199 falseDestination: B198 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors 
    xhandlers
    flags 
    probability 4602109559184624473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4599575943012676195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1450]
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i459 
y: i8 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i459 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
trueSuccessorProbability: 0.721519975031211
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v656 #falseSuccessor: v657  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v281|DWORD, y: v281|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.721519975031211 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4597688194394365127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1504]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@10c1715a
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1729 <|@
d <@d|@=== Debug Properties ===
bci: 1505
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
bci: 1505
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1369 
stateDuring: ?1729 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1369 stateDuring: ?1729 #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" "B204" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1455]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1710 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1710  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j278 
=== Succesors ===
=== Usages ===
v1710 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j461 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v1709 
falseSuccessor: v1707 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v1709 #falseSuccessor: v1707  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v283|QWORD, y: v283|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1708  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 1445
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 766
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i457 - - - - - - - i458 i459 i460 j278 - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1370
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?650 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -350739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: v0|QWORD[.] - - - - - - - - v279|DWORD - - - - - - - v280|DWORD v281|DWORD v282|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j280 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j461 y: j280  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
stamp: void
trueSuccessorProbability: 0.3841412160268982
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v667 #falseSuccessor: v666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v283|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3841412160268982 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4585213771699296333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4588261758715135921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1497]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@579880f1
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1730 <|@
d <@d|@=== Debug Properties ===
bci: 1498
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 775
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
bci: 1498
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1371 
stateDuring: ?1730 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1371 stateDuring: ?1730 #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1757 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1757  <|@  <|@
f <@~|@floating>@ <|@
tid i1758 <|@
result int[-355347|0xfffffffffffa93ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355347
stableDimension: 0
stamp: i32 [-355347] ⇊00000000fffa93ed ⇈00000000fffa93ed
stampKind: i32
value: int[-355347|0xfffffffffffa93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355347|0xfffffffffffa93ed]] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B30" "B207" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1754 <|@
result v286|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-355603 - -355091] ⇊00000000fffa90ed ⇈00000000fffa97ed
valueDescription: i32
=== Inputs ===
merge: v1751 
values: i1753 i1758 i1760 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1751 values: i1753 i1758 i1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1752 v1757 v1759 
=== Succesors ===
next: v1756 
=== Usages ===
i1754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1752 v1757 v1759 #next: v1756  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i1029 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1756 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i1029 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?90 
actionAndReason: i1754 
speculation: a1743 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?90 actionAndReason: i1754 speculation: a1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v286|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v286|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD v25|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41cc0bf5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = TZCNT v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v8|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7284916068028063 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604736888603155721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604735545976326307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180575776958698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -21 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.7093885904323354E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177235340392840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5207354992258577 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602862888734385424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v8|DWORD, ~y: [v5|QWORD[.] + v11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9986731860733679 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602856669069621870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.39220076270143933 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599362382818603673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605346350726020831
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND (x: v2|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = OR (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMOVQ v29|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VSUBSD (x: v30|DOUBLE, y: v32|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VMULSD (x: v31|DOUBLE, y: v34|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v35|DOUBLE = VADDSD (x: v33|DOUBLE, y: v36|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = VMULSD (x: v37|DOUBLE, y: v39|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v40|DOUBLE = VADDSD (x: v35|DOUBLE, y: v38|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = VMOVQ v40|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND (x: v41|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = SHR v44|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV v45|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA [v46|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v50|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = NEG v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7284909928572612 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603399324019046578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[0|0x0], int[1|0x1]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD, v69|DWORD, v70|DWORD, v71|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7284911334689859 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603399325027391701
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v25|DWORD, int[1|0x1], int[3|0x3]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD, v79|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = ADD (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SUB (x: v81|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v80|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v80|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4467778355907999 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601606077344053375
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v77|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v84|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598853142542707184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999036283910759 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605345659632571136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SUB (x: v95|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SUB (x: v94|DWORD, ~y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v96|DWORD, int[0|0x0]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD, v99|DWORD, v100|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v98|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v5|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v101|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605344968494722035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v104|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v5|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|DWORD, v107|DWORD] destination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B58" 
    successors "B66" "B130" 
    xhandlers
    flags 
    probability 4605346350726020829
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v110|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9858815592926324 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B129" 
    xhandlers
    flags 
    probability 4605245105535640734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = INC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = ADD (x: v111|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v112|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.965280153803542 condition: < trueDestination: B66 -> B67 falseDestination: B66 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B96" 
    xhandlers
    flags 
    probability 4604999640181428792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v110|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.283640537438576E-4 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" "B127" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B126" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B97 -> B98 falseDestination: B97 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B104" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOV [v150|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOV [v150|QWORD[.] + v76|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = IMUL (x: v151|QWORD, y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL (x: v153|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = SHL (x: v152|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v154|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v155|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = SHL v155|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = SHL v155|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = ADD (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = SHL (x: v151|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = SHL v161|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = SHL v161|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = ADD (x: v162|QWORD, y: v163|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = SHL v157|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = SHL v157|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = ADD (x: v165|QWORD, y: v166|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = ADD (x: v164|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOV v156|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v169|DWORD, y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1356671003058001 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [v113|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = LEA [v169|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|DWORD[.] * 8 + 16], y: v171|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4604005090574932337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|DWORD, v173|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v172|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v172|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998292291403394 condition: < trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4604919004792408310
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|DWORD, v175|DWORD, v172|DWORD, v173|DWORD] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" "B102" "B113" "B107" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD, v177|DWORD, v178|DWORD, v179|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v113|DWORD[.], y: v113|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOV [v113|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = UNCOMPRESSPOINTER (input: v113|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v176|DWORD, v177|DWORD, v167|QWORD, v164|QWORD] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B121" "B122" 
    successors "B118" "B125" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618430005004285329
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|DWORD, v184|DWORD, v185|DWORD, v186|QWORD, v187|QWORD] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v184|DWORD, y: v184|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9124800935868261 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617839771930223566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v185|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9574198800803831 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v181|DWORD, y: v183|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v186|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v183|DWORD int[0|0x0] int[0|0x0] - - - - - v186|QWORD - v155|QWORD - v187|QWORD - v160|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v155|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = MOV v188|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = LEA [v190|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + v183|DWORD * 2 + 16], y: v191|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v192|QWORD = SHL v189|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = SHL v189|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = ADD (x: v192|QWORD, y: v193|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = INC v183|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = SHL v187|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = SHL v187|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = ADD (x: v196|QWORD, y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v198|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.567423074385401E-4 condition: < trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617575642540210170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v198|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v200|QWORD = ADD (x: v198|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v200|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v195|DWORD v199|DWORD v201|DWORD - - v190|DWORD - - v194|QWORD - v155|QWORD - v198|QWORD - v160|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, v199|DWORD, v201|DWORD, v194|QWORD, v198|QWORD] destination: B122 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566251910005568400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v195|DWORD int[1|0x1] int[1|0x1] - - v190|DWORD - - v194|QWORD - v155|QWORD - v198|QWORD - v160|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|DWORD, int[1|0x1], int[1|0x1], v194|QWORD, v198|QWORD] destination: B121 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B198" 
    xhandlers
    flags 
    probability 4602897084137770523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v205|QWORD = SHL v186|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = SUB (x: v205|QWORD, ~y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|QWORD, y: v186|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v207|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD, v183|DWORD, v184|DWORD, v185|DWORD, v206|QWORD, v207|DWORD] destination: B125 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B89" "B125" "B197" "B124" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v279|DWORD, v280|DWORD, v281|DWORD, v282|DWORD, v283|QWORD, v284|DWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: v284|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v285|DWORD = INC v279|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v285|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v280|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v282|DWORD, y: v282|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5883269357403274 condition: = trueDestination: B198 -> B199 falseDestination: B198 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors 
    xhandlers
    flags 
    probability 4602109559184624473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602300313129920753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600079424853247293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = SUB (x: v83|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v84|DWORD, ~y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597537133505099792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4599575943012676195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v281|DWORD, y: v281|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.721519975031211 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4597688194394365127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598562680311629294
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598561679519170703
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B198" 
    xhandlers
    flags 
    probability 4597552902277943576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = SHL v186|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|QWORD = SUB (x: v202|QWORD, ~y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|QWORD, y: v186|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v204|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD, v183|DWORD, v184|DWORD, v185|DWORD, v203|QWORD, v204|DWORD] destination: B124 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596956127118432433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SUB (x: v63|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v65|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v25|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|DWORD, v67|DWORD, v66|DWORD, v64|DWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596956123085051940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = ADD (x: v73|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = ADD (x: v61|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, v75|DWORD, v72|DWORD, v74|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011918951132300348 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596503538984261917
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596512292586521733
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B207" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND (x: v41|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = OR (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = SHR (x: v53|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV v56|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHR (x: v26|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v59|DWORD, ~y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594673889893227806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD, int[0|0x0], v87|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598647803047311300
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|DWORD, v91|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = DEC v89|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v90|DWORD, v91|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593557413975401684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD, v85|DWORD, int[0|0x0]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v168|QWORD, y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    probability 4591984949112608749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|DWORD, int[0|0x0]] destination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" "B204" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v283|QWORD, y: v283|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v283|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3841412160268982 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4588261758715135921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4585213771699296333
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B131" 
    xhandlers
    flags 
    probability 4583512112743206079
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B129" 
    successors "B132" "B135" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr   -1  <|@ instruction v209|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v209|QWORD[.]] state [bci:1077] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v209|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v209|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr   -1  <|@ instruction v210|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v209|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v210|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - v210|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = ADD (x: v210|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v212|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v211|QWORD[.] v210|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - v211|QWORD[.] v210|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [v213|QWORD[.]] state [bci:1106] <|@ <|@
      nr   -1  <|@ instruction v214|DWORD = ADD (x: v210|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = INC v214|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v215|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - v99|DWORD v76|DWORD - - - - - - - - - - - v211|QWORD[.] v210|DWORD v213|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = ADD (x: v99|DWORD, y: v210|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = INC v217|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v78|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v218|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - - - - - - - - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v219|QWORD[.]] state [bci:1138] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v211|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - - - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] - - - - v220|DWORD - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v221|DWORD, y: v221|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v219|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v222|DWORD - - - v220|DWORD - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v220|DWORD, y: v220|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09966777408637872 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B136" 
    xhandlers
    flags 
    probability 4585155295857558788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B133" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v223|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v226|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v222|DWORD v226|DWORD - - v220|DWORD - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP [v225|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v227|DWORD = LEA [v220|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v225|DWORD[.] * 8 + 16], y: v227|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[1|0x1]] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B134" "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      LIR
      nr   -1  <|@ instruction [v228|DWORD, v229|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04053156146179402 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4585483346233305672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v228|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26973684210526316 condition: < trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4583430909525841668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v228|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9971550497866287 condition: < trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4583408793770173339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v223|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v230|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v222|DWORD, v230|DWORD] destination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" "B140" "B145" "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      LIR
      nr   -1  <|@ instruction [v231|DWORD, v232|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v229|DWORD, v231|DWORD, v232|DWORD, v216|QWORD[.]] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B188" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603555853994860173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v235|DWORD, y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9937296695771272 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" "B151" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD int[0|0x0] int[0|0x0] - - - - - v211|QWORD[.] - v213|QWORD[.] Object[null] v219|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v236|QWORD[.]] state [bci:1268] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v211|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - - - - v211|QWORD[.] - v213|QWORD[.] v236|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v236|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] - v219|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v238|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] - v219|QWORD[.] - - - 
>@ <|@ instruction v239|DWORD = MOV [v238|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOV [v238|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = MOV [v213|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = ADD (x: v239|DWORD, y: v240|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = ADD (x: v241|DWORD, ~y: [v213|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v242|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601887804074441186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v242|DWORD, y: v243|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B154" "B155" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v241|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B185" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v244|QWORD = MOVSXD v241|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = DEC v244|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v246|QWORD = MOVSXD v240|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v246|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v240|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B154" "B158" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v241|DWORD, v240|DWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v254|DWORD[.] = MOV [v213|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v255|DWORD = DEC v247|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v213|QWORD[.] v238|QWORD[.] - - v247|DWORD v248|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v255|DWORD, y: [v254|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = DEC v248|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v213|QWORD[.] v238|QWORD[.] - - v247|DWORD v248|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v256|DWORD, y: [v249|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|QWORD[.] = UNCOMPRESSPOINTER (input: v254|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v258|DWORD = MOV [v257|QWORD[.] + v255|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = MOV [v250|QWORD[.] + v256|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v259|DWORD, y: v258|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B160" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569878636767358276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v255|DWORD, v256|DWORD] destination: B175 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B175" 
    successors "B161" "B172" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4601944149477010940
    begin_IR
      LIR
      nr   -1  <|@ instruction [v247|DWORD, v248|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[.] = MOV [v238|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v250|QWORD[.] = UNCOMPRESSPOINTER (input: v249|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v247|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601823333629494599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v259|DWORD, y: v258|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v261|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v260|DWORD] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B150" "B152" "B176" "B169" "B165" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      LIR
      nr   -1  <|@ instruction [v262|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v262|DWORD, y: v262|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v219|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v238|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v263|DWORD - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v264|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v265|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v264|DWORD 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v263|DWORD - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v233|DWORD, y: [v265|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B147" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v266|QWORD[.] = UNCOMPRESSPOINTER (input: v265|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v267|DWORD = LEA [v237|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v266|QWORD[.] + v233|DWORD * 2 + 16], y: v267|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v264|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v269|DWORD = INC v233|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v269|DWORD, v263|DWORD, v268|DWORD, v238|QWORD[.]] destination: B178 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B178" 
    successors "B148" "B189" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603868826183568627
    begin_IR
      LIR
      nr   -1  <|@ instruction [v233|DWORD, v234|DWORD, v235|DWORD, v236|QWORD[.]] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v234|DWORD, y: v234|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9450309428467419 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B154 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594123236352265589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B150 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B162" "B163" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v248|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v248|DWORD] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" "B170" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD = DEC v251|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v250|QWORD[.] v251|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v252|DWORD, y: [v249|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B166 -> B167 falseDestination: B166 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOVSXD v251|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v250|QWORD[.] + v253|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B164" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562797632392972523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v252|DWORD] destination: B168 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B168" 
    successors "B165" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571804831647713515
    begin_IR
      LIR
      nr   -1  <|@ instruction [v251|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v251|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567301232020343019
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B165 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562797632392972523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff]] destination: B169 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552452067410704642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff]] destination: B152 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B190" 
    xhandlers
    flags 
    probability 4585168376055129697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v235|DWORD, y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.054134838923945536 condition: = trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585407883837511446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v234|DWORD, y: v234|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10287921348314606 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4584868070143374127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD - - - - - - - - - v219|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr   -1  <|@ instruction v272|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD - - - - - - - - - v219|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v272|QWORD[.]] state [bci:1388] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v272|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v219|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD - - - - - - - v272|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr   -1  <|@ instruction v273|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v274|QWORD = MOVSXD v273|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v274|QWORD, v272|QWORD[.]] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B191" "B193" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|QWORD, v276|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v277|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v276|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v277|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD v275|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr   -1  <|@ instruction v278|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v278|DWORD, y: v278|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v228|DWORD, v233|DWORD, v234|DWORD, v235|DWORD, v275|QWORD, byte[0|0x0]] destination: B197 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B131" 
    xhandlers
    flags 
    probability 4577633313965379503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B146" 
    xhandlers
    flags 
    probability 4576896346336262936
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B142 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574742723079176655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v61|DWORD, int[1|0x1]] destination: B107 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4570992724793644147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v223|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2633333333333333 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4568663198529913466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v224|DWORD, int[0|0x0]] destination: B134 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B190" 
    xhandlers
    flags 
    probability 4570783441632509614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4570783441632509555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v213|QWORD[.]] destination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4566951317114401624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v213|QWORD[.]] destination: B191 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4564837815409705070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B140 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563802181229000832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B114" 
    xhandlers
    flags 
    probability 4562723796993956672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v170|DWORD, int[0|0x0]] destination: B102 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B136" 
    xhandlers
    flags 
    probability 4562301875426403313
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B95" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v112|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B94" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B93" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 14 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v113|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B92" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v114|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHL (x: v115|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SHL v116|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = ADD (x: v117|DWORD, y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SHL v119|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SHL v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = ADD (x: v120|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v122|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v113|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOV [v114|QWORD[.] + v76|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV v102|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = IMUL (x: v124|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v98|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SHL (x: v125|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v99|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SHL (x: v123|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v126|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v127|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD, y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = SHL v129|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SHL v129|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = ADD (x: v130|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v119|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = SHL v127|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SHL v127|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = ADD (x: v133|DWORD, y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = ADD (x: v132|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v136|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B90" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = LEA [v128|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|DWORD[.] * 8 + 16], y: v137|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v132|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v132|DWORD v127|DWORD v119|DWORD v135|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v127|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = SHL v139|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = SHL v139|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = ADD (x: v140|DWORD, y: v141|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = ADD (x: v122|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v143|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B198" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = LEA [v138|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|DWORD[.] * 8 + 18], y: v144|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = SHL v142|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = SUB (x: v145|DWORD, ~y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVSXD v146|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v142|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[2|0x2], int[1|0x1], int[0|0x0], v147|QWORD, v148|DWORD] destination: B89 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559508159989450990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555476837731078346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553095712730882878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v15|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549631423510111317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4548849955350481381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v172|DWORD, v173|DWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4545290316634068424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v70|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD, v105|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4545290057840552280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4545289861929351958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD, v95|DWORD, v93|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B65" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v104|DWORD] destination: B58 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543323316582870700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4485518606199164087
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|DWORD, v105|DWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -372755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: v0|QWORD[.] int[0|0x0] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v234|DWORD v235|DWORD v275|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355603|0xfffffffffffa92ed]] destination: B36 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B30" "B207" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v286|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v286|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD v25|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332571|0xfffffffffffaece5]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B162" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v270|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v270|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v213|QWORD[.] v238|QWORD[.] - - v247|DWORD v248|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:46, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-336411|0xfffffffffffadde5]] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296723|0xfffffffffffb78ed]] destination: B74 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B100" "B95" "B94" "B93" "B72" "B127" "B126" "B74" "B105" "B77" "B92" "B79" "B81" "B83" "B85" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v208|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v208|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: v111|DWORD v109|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - v110|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296467|0xfffffffffffb79ed]] destination: B72 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1433516113] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -372235 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v180|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v179|DWORD v176|DWORD v177|DWORD - - - - - v167|QWORD - v155|QWORD - v164|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-287003|0xfffffffffffb9ee5]] destination: B94 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-286227|0xfffffffffffba1ed]] destination: B95 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -373787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v178|DWORD - - - - - - - v183|DWORD int[0|0x0] int[0|0x0] - - - - - v186|QWORD - v155|QWORD - v187|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -353307 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: v101|DWORD v106|DWORD 
locals: v0|QWORD[.] - v102|QWORD - - v4|DWORD - - - v61|DWORD v98|DWORD v68|DWORD v99|DWORD v76|DWORD v100|DWORD v68|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B186" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B157" 
    successors "B187" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v271|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310093959] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -330003 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v271|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v238|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] - v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1315] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303131|0xfffffffffffb5fe5]] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297491|0xfffffffffffb75ed]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - v132|DWORD v127|DWORD v119|DWORD v135|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-280595|0xfffffffffffbb7ed]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v6|DWORD v8|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297747|0xfffffffffffb74ed]] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355347|0xfffffffffffa93ed]] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284443|0xfffffffffffba8e5]] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291603|0xfffffffffffb8ced]] destination: B81 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291091|0xfffffffffffb8eed]] destination: B83 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-301083|0xfffffffffffb67e5]] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291347|0xfffffffffffb8ded]] destination: B85 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -340507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v264|DWORD 
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD v263|DWORD - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289051|0xfffffffffffb96e5]] destination: B93 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -360475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v61|DWORD - - - - - - - int[0|0x0] v222|DWORD v226|DWORD - - v220|DWORD - - v211|QWORD[.] - v213|QWORD[.] v216|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355091|0xfffffffffffa94ed]] destination: B30 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -350739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: v0|QWORD[.] - - - - - - - - v279|DWORD - - - - - - - v280|DWORD v281|DWORD v282|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -316435 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v172|DWORD - - - - - - - v173|DWORD v174|DWORD v175|DWORD - - - - - v167|QWORD - v155|QWORD - v164|QWORD - v160|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296979|0xfffffffffffb77ed]] destination: B92 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B186" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B157 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297235|0xfffffffffffb76ed]] destination: B77 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-312851|0xfffffffffffb39ed]] destination: B100 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -328219 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v250|QWORD[.] v251|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: v0|QWORD[.] - - - - - - - - v228|DWORD - - - - - - - v233|DWORD - - - - v237|DWORD - - v211|QWORD[.] - v213|QWORD[.] v238|QWORD[.] v219|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 140, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-357147|0xfffffffffffa8ce5]] destination: B79 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359195|0xfffffffffffa84e5]] destination: B105 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-325395|0xfffffffffffb08ed]] destination: B162 -> B184 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41cc0bf5 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   12  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   14  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   16  <|@ instruction rbx|DWORD = TZCNT r10|QWORD size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.7284916068028063 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604736888603155721
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604735545976326307
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180575776958698
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP rdx|DWORD y: -21 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 3.7093885904323354E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177235340392840
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP rcx|DWORD y: 27 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5207354992258577 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602862888734385424
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP rax|DWORD y: 64 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.9986731860733679 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602856669069621870
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.39220076270143933 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599362382818603673
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605346350726020831
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM <|@ <|@
      nr  234  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  236  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  238  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr  240  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  242  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr  244  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  246  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr  248  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr  250  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr  252  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  254  <|@ instruction r13|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  256  <|@ instruction r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  258  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  268  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  276  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  294  <|@ instruction r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B34" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rcx|DWORD = NEG r11|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.7284909928572612 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603399324019046578
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  374  <|@ instruction stack:48|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  404  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.7284911334689859 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603399325027391701
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction stack:52|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  414  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  442  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.4467778355907999 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4601606077344053375
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  480  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598853142542707184
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  504  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.9999036283910759 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605345659632571136
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  542  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  544  <|@ instruction rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605344968494722035
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  612  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  620  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B58" 
    successors "B66" "B130" 
    xhandlers
    flags 
    probability 4605346350726020829
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  670  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.9858815592926324 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B129" 
    xhandlers
    flags 
    probability 4605245105535640734
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rdx|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  680  <|@ instruction rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.965280153803542 condition: < trueDestination: B66 -> B67 falseDestination: B66 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B96" 
    xhandlers
    flags 
    probability 4604999640181428792
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  692  <|@ instruction CMP rbx|DWORD y: 32 size: DWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 9.283640537438576E-4 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" "B127" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B126" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction CMP r13|DWORD y: 27 size: DWORD <|@ <|@
      nr 1180  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B97 -> B98 falseDestination: B97 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B104" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction stack:48|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1190  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr 1192  <|@ instruction r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1194  <|@ instruction rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1196  <|@ instruction rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ instruction r13|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1202  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1204  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1208  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1214  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:48|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - r10|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD rcx|DWORD stack:52|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr 1216  <|@ instruction rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD = SHL r13|QWORD size: QWORD <|@ <|@
      nr 1220  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1222  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1224  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1226  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1228  <|@ instruction rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD <|@ <|@
      nr 1230  <|@ instruction r8|QWORD = SHL r8|QWORD size: QWORD <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1234  <|@ instruction r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1238  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1244  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1246  <|@ instruction BRANCH trueDestinationProbability: 0.1356671003058001 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:48|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD r10|DWORD stack:52|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr 1314  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1354  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1356  <|@ instruction BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4604005090574932337
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1372  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1374  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1380  <|@ instruction r9|DWORD = SETCC condition: > <|@ <|@
      nr 1382  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1386  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1388  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1406  <|@ instruction BRANCH trueDestinationProbability: 0.9998292291403394 condition: < trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4604919004792408310
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" "B102" "B113" "B107" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1424  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1442  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr 1444  <|@ instruction stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1450  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B121" "B122" 
    successors "B118" "B125" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618430005004285329
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr 1458  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction BRANCH trueDestinationProbability: 0.9124800935868261 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617839771930223566
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1464  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1466  <|@ instruction BRANCH trueDestinationProbability: 0.9574198800803831 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      LIR
      nr 1468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1470  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1480  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr 1482  <|@ instruction r8|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1484  <|@ instruction r9|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr 1486  <|@ instruction MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1488  <|@ instruction r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1490  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1492  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1494  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD = SHL rdi|QWORD y: 3 size: QWORD <|@ <|@
      nr 1498  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1502  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1504  <|@ instruction BRANCH trueDestinationProbability: 3.567423074385401E-4 condition: < trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617575642540210170
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = SETCC condition: > <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD = ADD (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1528  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1532  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD rcx|DWORD rdi|DWORD - - r8|DWORD - - r9|QWORD - r13|QWORD - rdx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1534  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1536  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1542  <|@ instruction JUMP ~[] destination: B122 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566251910005568400
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[1|0x1] int[1|0x1] - - r8|DWORD - - r9|QWORD - r13|QWORD - rdx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1510  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1518  <|@ instruction JUMP ~[] destination: B121 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B198" 
    xhandlers
    flags 
    probability 4602897084137770523
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1574  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1576  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1580  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1584  <|@ instruction JUMP ~[] destination: B125 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B89" "B125" "B197" "B124" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr 2438  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr 2440  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: rdx|DWORD) size: BYTE <|@ <|@
      nr 2442  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 2444  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2446  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2448  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2450  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2452  <|@ instruction BRANCH trueDestinationProbability: 0.5883269357403274 condition: = trueDestination: B198 -> B199 falseDestination: B198 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors 
    xhandlers
    flags 
    probability 4602109559184624473
    begin_IR
      LIR
      nr 2454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602300313129920753
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4600079424853247293
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597537133505099792
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4599575943012676195
    begin_IR
      LIR
      nr 2458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2460  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2462  <|@ instruction BRANCH trueDestinationProbability: 0.721519975031211 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4597688194394365127
    begin_IR
      LIR
      nr 2464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2466  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr 2468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B27" 
    xhandlers
    flags 
    probability 4598562680311629294
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4598561679519170703
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B198" 
    xhandlers
    flags 
    probability 4597552902277943576
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1556  <|@ instruction rsi|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1558  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1560  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1562  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1564  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction JUMP ~[] destination: B124 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596956127118432433
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction r9|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596956123085051940
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r13|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction r14|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rdx|DWORD y: 52 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0011918951132300348 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596503538984261917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596512292586521733
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rcx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr  178  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B207" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction r11|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  316  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  356  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4594673889893227806
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598647803047311300
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593557413975401684
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1252  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1292  <|@ instruction BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    probability 4591984949112608749
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" "B204" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      LIR
      nr 2470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2472  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2474  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      LIR
      nr 2484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2486  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 2488  <|@ instruction BRANCH trueDestinationProbability: 0.3841412160268982 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4588261758715135921
    begin_IR
      LIR
      nr 2494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2496  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr 2498  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4585213771699296333
    begin_IR
      LIR
      nr 2490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B131" 
    xhandlers
    flags 
    probability 4583512112743206079
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1648  <|@ instruction stack:96|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1650  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~[] destination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B129" 
    successors "B132" "B135" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1672  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1676  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1678  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr 1680  <|@ st <@st|@reference-map: [rax:0, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1077] <|@ <|@
      nr 1682  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - stack:104|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr 1688  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1692  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1694  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - - stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr 1696  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD <|@ <|@
      nr 1700  <|@ instruction rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1702  <|@ instruction rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1704  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr 1706  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1106] <|@ <|@
      nr 1710  <|@ instruction rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 1712  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1714  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1716  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:52|DWORD - - - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr 1718  <|@ instruction rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1722  <|@ instruction rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1724  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1726  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr 1728  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1730  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1138] <|@ <|@
      nr 1732  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1734  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr 1738  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1740  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1742  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1744  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr 1746  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1748  <|@ instruction r10|DWORD = SETCC condition: < <|@ <|@
      nr 1750  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1752  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1754  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1756  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1758  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr 1760  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1762  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1764  <|@ instruction BRANCH trueDestinationProbability: 0.09966777408637872 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B136" 
    xhandlers
    flags 
    probability 4585155295857558788
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1790  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B133" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1796  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1798  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = SETCC condition: < <|@ <|@
      nr 1802  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: rsi|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD r11|DWORD - - r10|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr 1804  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1822  <|@ instruction r10|DWORD = LEA [r10|DWORD + 48] size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr 1826  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1828  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1832  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B134" "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1838  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1840  <|@ instruction BRANCH trueDestinationProbability: 0.04053156146179402 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4585483346233305672
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1852  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1854  <|@ instruction BRANCH trueDestinationProbability: 0.26973684210526316 condition: < trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4583430909525841668
    begin_IR
      LIR
      nr 1864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1866  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1868  <|@ instruction BRANCH trueDestinationProbability: 0.9971550497866287 condition: < trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4583408793770173339
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1874  <|@ instruction rdx|DWORD = SETCC condition: < <|@ <|@
      nr 1876  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1878  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1880  <|@ instruction JUMP ~[] destination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" "B140" "B145" "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      LIR
      nr 1890  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1892  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1898  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1904  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B188" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603555853994860173
    begin_IR
      LIR
      nr 1912  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1914  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1916  <|@ instruction BRANCH trueDestinationProbability: 0.9937296695771272 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" "B151" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976590
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1920  <|@ st <@st|@reference-map: [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD int[0|0x0] int[0|0x0] - - - - - r10|QWORD[.] - rax|QWORD[.] Object[null] stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:1268] <|@ <|@
      nr 1922  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1924  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1928  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1934  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr 1936  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: rax|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr 1938  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1940  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1942  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1944  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1948  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1950  <|@ instruction BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601887804074441186
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1962  <|@ instruction BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B154" "B155" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1972  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1974  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B185" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1982  <|@ instruction rsi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1984  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1986  <|@ instruction r11|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1988  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1990  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr 1992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1994  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr 2008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2010  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B154" "B158" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      LIR
      nr 2012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2014  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2016  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      LIR
      nr 2130  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2132  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2134  <|@ instruction rdx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 2136  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r9:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: r10|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - r10|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr 2138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      LIR
      nr 2140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2142  <|@ instruction rbx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr 2144  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: r10|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - r10|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr 2146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      LIR
      nr 2148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2150  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr 2152  <|@ instruction rsi|DWORD = MOV [rsi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2154  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2156  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2158  <|@ instruction BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B160" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569878636767358276
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2162  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2164  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2166  <|@ instruction JUMP ~[] destination: B175 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B175" 
    successors "B161" "B172" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4601944149477010940
    begin_IR
      LIR
      nr 2020  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2022  <|@ instruction r9|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2024  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr 2026  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 2028  <|@ instruction BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601823333629494599
    begin_IR
      LIR
      nr 2168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2170  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2174  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rsi|DWORD) condition: |>| <|@ <|@
      nr 2176  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B150" "B152" "B176" "B169" "B165" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      LIR
      nr 2178  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2180  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2182  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 2184  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2186  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2188  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2190  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2192  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2194  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 2196  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2198  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 2200  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2202  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 2204  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B147" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2210  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr 2212  <|@ instruction r11|DWORD = LEA [rbx|DWORD + 48] size: DWORD <|@ <|@
      nr 2214  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 2216  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 2218  <|@ instruction rcx|DWORD = SETCC condition: < <|@ <|@
      nr 2220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 2222  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2224  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2226  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2228  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2230  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2232  <|@ instruction JUMP ~[] destination: B178 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B178" 
    successors "B148" "B189" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603868826183568627
    begin_IR
      LIR
      nr 1906  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1908  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1910  <|@ instruction BRANCH trueDestinationProbability: 0.9450309428467419 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1978  <|@ instruction JUMP ~[] destination: B154 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594123236352265589
    begin_IR
      LIR
      nr 1952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1954  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1956  <|@ instruction JUMP ~[] destination: B150 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B162" "B163" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      LIR
      nr 2030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2032  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2034  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2036  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2038  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2040  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr 2042  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2052  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 2054  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" "B170" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      LIR
      nr 2074  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2076  <|@ instruction rdx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r9:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: rcx|QWORD[.] r11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321] <|@ <|@
      nr 2080  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B166 -> B167 falseDestination: B166 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2084  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 2086  <|@ instruction CMP [rcx|QWORD[.] + r11|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr 2088  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B164" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562797632392972523
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2092  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2094  <|@ instruction JUMP ~[] destination: B168 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B168" 
    successors "B165" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571804831647713515
    begin_IR
      LIR
      nr 2056  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2058  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 2060  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567301232020343019
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2064  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2066  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2068  <|@ instruction stack:80|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2070  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2072  <|@ instruction JUMP ~[] destination: B165 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562797632392972523
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2098  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2100  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2102  <|@ instruction stack:80|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2104  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2106  <|@ instruction JUMP ~[] destination: B169 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552452067410704642
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1966  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1968  <|@ instruction JUMP ~[] destination: B152 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B190" 
    xhandlers
    flags 
    probability 4585168376055129697
    begin_IR
      LIR
      nr 2318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2320  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2322  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2324  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      LIR
      nr 2326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2328  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2330  <|@ instruction BRANCH trueDestinationProbability: 0.054134838923945536 condition: = trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585407883837511446
    begin_IR
      LIR
      nr 2344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2346  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2348  <|@ instruction BRANCH trueDestinationProbability: 0.10287921348314606 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4584868070143374127
    begin_IR
      LIR
      nr 2362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2364  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2366  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2368  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2370  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2372  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr 2374  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1388] <|@ <|@
      nr 2376  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2378  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2380  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2382  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - stack:120|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr 2384  <|@ instruction rsi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2386  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2388  <|@ instruction stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2390  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B191" "B193" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      LIR
      nr 2392  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2394  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr 2396  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2398  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD stack:104|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr 2400  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2402  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      LIR
      nr 2420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2422  <|@ instruction rdx|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr 2424  <|@ instruction rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2426  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2428  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2430  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2432  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2434  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2436  <|@ instruction JUMP ~[] destination: B197 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B131" 
    xhandlers
    flags 
    probability 4577633313965379503
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1658  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1660  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1664  <|@ instruction stack:96|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1666  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1668  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B146" 
    xhandlers
    flags 
    probability 4576896346336262936
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1858  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1860  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1862  <|@ instruction JUMP ~[] destination: B142 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574742723079176655
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1362  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1364  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1366  <|@ instruction JUMP ~[] destination: B107 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4570992724793644147
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1768  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1770  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1772  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction BRANCH trueDestinationProbability: 0.2633333333333333 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4568663198529913466
    begin_IR
      LIR
      nr 1780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1782  <|@ instruction r11|DWORD = DEC stack:84|DWORD size: DWORD <|@ <|@
      nr 1784  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1786  <|@ instruction JUMP ~[] destination: B134 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B190" 
    xhandlers
    flags 
    probability 4570783441632509614
    begin_IR
      LIR
      nr 2310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2312  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2314  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2316  <|@ instruction JUMP ~[] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4570783441632509555
    begin_IR
      LIR
      nr 2350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2352  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2354  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2356  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2358  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2360  <|@ instruction JUMP ~[] destination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4566951317114401624
    begin_IR
      LIR
      nr 2332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2334  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2336  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2338  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2340  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2342  <|@ instruction JUMP ~[] destination: B191 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4564837815409705070
    begin_IR
      LIR
      nr 1842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1844  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1846  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1848  <|@ instruction JUMP ~[] destination: B140 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563802181229000832
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B114" 
    xhandlers
    flags 
    probability 4562723796993956672
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1298  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1302  <|@ instruction JUMP ~[] destination: B102 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B136" 
    xhandlers
    flags 
    probability 4562301875426403313
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1778  <|@ instruction JUMP ~[] destination: B133 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B95" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction stack:48|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:96|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction CMP rcx|DWORD y: 32 size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B94" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction CMP stack:96|DWORD y: 14 size: DWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B93" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction CMP stack:52|DWORD y: 14 size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:48|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr  738  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction CMP stack:84|DWORD y: -3 size: DWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B92" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction CMP stack:84|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  808  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  810  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  818  <|@ instruction r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  822  <|@ instruction r8|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction r8|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  854  <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  886  <|@ instruction rcx|DWORD = MOV stack:64|QWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction r9|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  902  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:48|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r11|DWORD stack:72|DWORD r13|DWORD stack:68|DWORD r11|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r9|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr  904  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction rdx|DWORD = SHL r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  964  <|@ instruction rbx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  972  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B90" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1000  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r9|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r9|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr 1006  <|@ instruction r11|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1008  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1010  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1012  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1020  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B198" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1042  <|@ instruction rcx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1044  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1048  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B89 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559508159989450990
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555476837731078346
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553095712730882878
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr  124  <|@ instruction r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rsi:0, r9:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr  128  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549631423510111317
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4548849955350481381
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1416  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1418  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4545290316634068424
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  574  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMP stack:80|DWORD y: 27 size: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4545290057840552280
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1884  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1886  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1888  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4545289861929351958
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B65" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B58 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543323316582870700
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4485518606199164087
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2406  <|@ instruction r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2408  <|@ instruction rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2410  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2412  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2414  <|@ instruction MOV [r15|QWORD + 668] y: -372755 size: DWORD <|@ <|@
      nr 2416  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2418  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: rsi|QWORD[.] int[0|0x0] 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD r9|DWORD rcx|DWORD r10|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r11|DWORD = MOVE input: int[-355603|0xfffffffffffa92ed] <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B36 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B30" "B207" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2510  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2512  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2514  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD rax|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2264  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2266  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2268  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2270  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2274  <|@ instruction r10|DWORD = MOVE input: int[-332571|0xfffffffffffaece5] <|@ <|@
      nr 2276  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B162" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2282  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2284  <|@ st <@st|@reference-map: [rsi:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: stack:64|QWORD[.] stack:112|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:46, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2248  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2250  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2252  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2254  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2258  <|@ instruction r10|DWORD = MOVE input: int[-336411|0xfffffffffffadde5] <|@ <|@
      nr 2260  <|@ instruction JUMP ~[] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|DWORD = MOVE input: int[-296723|0xfffffffffffb78ed] <|@ <|@
      nr  776  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B74 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B100" "B95" "B94" "B93" "B72" "B127" "B126" "B74" "B105" "B77" "B92" "B79" "B81" "B83" "B85" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: rdx|DWORD rdi|DWORD 
locals: rsi|QWORD[.] - r9|QWORD - - rbp|DWORD - - - stack:84|DWORD rcx|DWORD r11|DWORD rax|DWORD r13|DWORD r8|DWORD r11|DWORD - - - - - - - rbx|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r10|DWORD = MOVE input: int[-296467|0xfffffffffffb79ed] <|@ <|@
      nr  746  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B72 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1433516113] <|@ <|@
      nr 1432  <|@ instruction MOV [r15|QWORD + 668] y: -372235 size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 1436  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rsi|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction r10|DWORD = MOVE input: int[-287003|0xfffffffffffb9ee5] <|@ <|@
      nr 1126  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B94 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1148  <|@ instruction r10|DWORD = MOVE input: int[-286227|0xfffffffffffba1ed] <|@ <|@
      nr 1150  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1166  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1168  <|@ instruction JUMP ~[] destination: B95 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1548  <|@ instruction MOV [r15|QWORD + 668] y: -373787 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rsi|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction MOV [r15|QWORD + 668] y: -353307 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: r8|DWORD rdx|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r11|DWORD stack:72|DWORD r13|DWORD stack:68|DWORD r11|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B186" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2288  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2290  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2292  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2294  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B157" 
    successors "B187" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2298  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2302  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310093959] <|@ <|@
      nr 2304  <|@ instruction MOV [r15|QWORD + 668] y: -330003 size: DWORD <|@ <|@
      nr 2306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 2308  <|@ st <@st|@reference-map: [rsi:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: stack:112|QWORD[.] 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1315] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1590  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1592  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5] <|@ <|@
      nr 1598  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1602  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction JUMP ~[] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: int[-297491|0xfffffffffffb75ed] <|@ <|@
      nr 1062  <|@ instruction r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - r8|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r9|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction r11|DWORD = MOVE input: int[-280595|0xfffffffffffbb7ed] <|@ <|@
      nr  184  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  194  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r11|DWORD = MOVE input: int[-297747|0xfffffffffffb74ed] <|@ <|@
      nr 1028  <|@ instruction r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~[] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2502  <|@ instruction r11|DWORD = MOVE input: int[-355347|0xfffffffffffa93ed] <|@ <|@
      nr 2504  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 2506  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction r11|DWORD = MOVE input: int[-284443|0xfffffffffffba8e5] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction r10|DWORD = MOVE input: int[-291603|0xfffffffffffb8ced] <|@ <|@
      nr  912  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B81 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed] <|@ <|@
      nr  944  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B83 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1616  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1618  <|@ instruction r10|DWORD = MOVE input: int[-301083|0xfffffffffffb67e5] <|@ <|@
      nr 1620  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1622  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1624  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1626  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1628  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE input: int[-291347|0xfffffffffffb8ded] <|@ <|@
      nr  978  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~[] destination: B85 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2236  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2238  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2240  <|@ instruction MOV [r15|QWORD + 668] y: -340507 size: DWORD <|@ <|@
      nr 2242  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2244  <|@ st <@st|@reference-map: [rsi:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD r9|DWORD - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction r10|DWORD = MOVE input: int[-289051|0xfffffffffffb96e5] <|@ <|@
      nr 1102  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1104  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction JUMP ~[] destination: B93 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1808  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1814  <|@ instruction MOV [r15|QWORD + 668] y: -360475 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:8, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] r8|DWORD r11|DWORD - - r10|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r11|DWORD = MOVE input: int[-355091|0xfffffffffffa94ed] <|@ <|@
      nr  284  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B30 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2478  <|@ instruction MOV [r15|QWORD + 668] y: -350739 size: DWORD <|@ <|@
      nr 2480  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2482  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: rsi|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r8|DWORD r9|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction MOV [r15|QWORD + 668] y: -316435 size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1400  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction r10|DWORD = MOVE input: int[-296979|0xfffffffffffb77ed] <|@ <|@
      nr 1078  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B92 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B186" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2002  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2004  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2006  <|@ instruction JUMP ~[] destination: B157 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-297235|0xfffffffffffb76ed] <|@ <|@
      nr  834  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B77 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed] <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B100 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2110  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2112  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2114  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2116  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2118  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2120  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2124  <|@ instruction MOV [r15|QWORD + 668] y: -328219 size: DWORD <|@ <|@
      nr 2126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2128  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, rdi:0, r8:0]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: rcx|QWORD[.] r11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: rsi|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD - - - - rbx|DWORD - - rdi|QWORD[.] - rax|QWORD[.] r8|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 140, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-357147|0xfffffffffffa8ce5] <|@ <|@
      nr  862  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B79 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-359195|0xfffffffffffa84e5] <|@ <|@
      nr 1336  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~[] destination: B105 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2046  <|@ instruction r10|DWORD = MOVE input: int[-325395|0xfffffffffffb08ed] <|@ <|@
      nr 2048  <|@ instruction JUMP ~[] destination: B162 -> B184 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41cc0bf5 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   12  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   14  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   16  <|@ instruction rbx|DWORD = TZCNT r10|QWORD size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.7284916068028063 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604736888603155721
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604735545976326307
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607180575776958698
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP rdx|DWORD y: -21 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 3.7093885904323354E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B26" 
    xhandlers
    flags 
    probability 4607177235340392840
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP rcx|DWORD y: 27 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5207354992258577 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B25" 
    xhandlers
    flags 
    probability 4602862888734385424
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP rax|DWORD y: 64 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.9986731860733679 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4602856669069621870
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.39220076270143933 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B28" 
    xhandlers
    flags 
    probability 4599362382818603673
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B7" "B26" "B25" "B24" "B3" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4605346350726020831
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM <|@ <|@
      nr  234  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  236  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  238  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr  240  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  242  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr  244  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  246  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr  248  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr  250  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr  252  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  254  <|@ instruction r13|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  256  <|@ instruction r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  258  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  268  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  276  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4603921046737452925
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  294  <|@ instruction r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" "B33" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rcx|DWORD = NEG r11|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.7284909928572612 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603399324019046578
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  374  <|@ instruction stack:48|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  404  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.7284911334689859 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4603399325027391701
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction stack:52|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  414  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" "B43" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  442  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.4467778355907999 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" "B52" 
    xhandlers
    flags 
    probability 4601606077344053375
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  480  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  486  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B48 -> B50 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B45" "B50" "B48" 
    successors "B53" "B55" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  504  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.9999036283910759 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605345659632571136
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction rsi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B52" "B53" 
    successors "B56" "B59" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" "B58" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  542  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  544  <|@ instruction rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B56" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  612  <|@ instruction CMP r14|DWORD y: 27 size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 4605345659577065189
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  620  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B58" 
    successors "B66" "B131" 
    xhandlers
    flags 
    probability 4605346350726020829
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  670  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.9858815592926324 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B131" 
    xhandlers
    flags 
    probability 4605245105535640734
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rdx|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  680  <|@ instruction rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.965280153803542 condition: < trueDestination: B66 -> B67 falseDestination: B66 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B96" 
    xhandlers
    flags 
    probability 4604999640181428792
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  692  <|@ instruction CMP rbx|DWORD y: 32 size: DWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 9.283640537438576E-4 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" "B127" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction CMP rdi|DWORD y: 27 size: DWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B126" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction CMP r13|DWORD y: 27 size: DWORD <|@ <|@
      nr 1180  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B97 -> B98 falseDestination: B97 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B104" 
    xhandlers
    flags 
    probability 4604993304634622560
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction stack:48|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1190  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr 1192  <|@ instruction r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1194  <|@ instruction rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr 1196  <|@ instruction rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ instruction r13|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1200  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1202  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1204  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1214  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:48|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - r10|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD rcx|DWORD stack:52|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365] <|@ <|@
      nr 1216  <|@ instruction rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD = SHL r13|QWORD size: QWORD <|@ <|@
      nr 1220  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1222  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1224  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1226  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr 1228  <|@ instruction rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD <|@ <|@
      nr 1230  <|@ instruction r8|QWORD = SHL r8|QWORD size: QWORD <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1234  <|@ instruction r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1238  <|@ instruction r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1240  <|@ instruction rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1244  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1246  <|@ instruction BRANCH trueDestinationProbability: 0.1356671003058001 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:48|DWORD stack:92|DWORD 
locals: rbp|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - r11|DWORD r9|DWORD rdi|DWORD r10|DWORD stack:52|DWORD rsi|DWORD rdi|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365] <|@ <|@
      nr 1314  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4604068314800912757
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1354  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1360  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1356  <|@ instruction BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4604005090574932337
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1372  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1374  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B101" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1380  <|@ instruction r9|DWORD = SETCC condition: > <|@ <|@
      nr 1382  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1386  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1388  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B114" "B113" 
    xhandlers
    flags 
    probability 4604920156631112815
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1406  <|@ instruction BRANCH trueDestinationProbability: 0.9998292291403394 condition: < trueDestination: B111 -> B114 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B111" "B102" "B113" "B107" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1422  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1424  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4604993304634622561
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1442  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr 1444  <|@ instruction stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1450  <|@ instruction rcx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B121" "B122" 
    successors "B118" "B125" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618430005004285329
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr 1458  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction BRANCH trueDestinationProbability: 0.9124800935868261 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617839771930223566
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1464  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1466  <|@ instruction BRANCH trueDestinationProbability: 0.9574198800803831 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      LIR
      nr 1468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1470  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617577744368117061
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1478  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr 1480  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr 1482  <|@ instruction r8|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr 1484  <|@ instruction r9|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr 1486  <|@ instruction MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1488  <|@ instruction r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr 1490  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr 1492  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1494  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1496  <|@ instruction rdx|QWORD = SHL rdi|QWORD y: 3 size: QWORD <|@ <|@
      nr 1498  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr 1500  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1502  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1504  <|@ instruction BRANCH trueDestinationProbability: 3.567423074385401E-4 condition: < trueDestination: B120 -> B121 falseDestination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617575642540210170
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = SETCC condition: > <|@ <|@
      nr 1526  <|@ instruction rdi|QWORD = ADD (x: rdx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr 1528  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = SETCC condition: > <|@ <|@
      nr 1532  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD rcx|DWORD rdi|DWORD - - r8|DWORD - - r9|QWORD - r13|QWORD - rdx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1534  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1536  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1542  <|@ instruction JUMP ~[] destination: B122 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B117" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4566251910005568400
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbp|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[1|0x1] int[1|0x1] - - r8|DWORD - - r9|QWORD - r13|QWORD - rdx|QWORD - rbx|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr 1510  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1518  <|@ instruction JUMP ~[] destination: B121 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B198" 
    xhandlers
    flags 
    probability 4602897084137770523
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1574  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1576  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1580  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1584  <|@ instruction JUMP ~[] destination: B125 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B89" "B125" "B197" "B124" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4605346350726020830
    begin_IR
      LIR
      nr 2438  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr 2440  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: rdx|DWORD) size: BYTE <|@ <|@
      nr 2442  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 2444  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2446  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2448  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2450  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2452  <|@ instruction BRANCH trueDestinationProbability: 0.5883269357403274 condition: = trueDestination: B198 -> B199 falseDestination: B198 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors 
    xhandlers
    flags 
    probability 4602109559184624473
    begin_IR
      LIR
      nr 2454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602300313129920753
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" "B52" 
    xhandlers
    flags 
    probability 4600079424853247293
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  464  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B45 -> B50 falseDestination: B45 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4599575943012676195
    begin_IR
      LIR
      nr 2458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2460  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2462  <|@ instruction BRANCH trueDestinationProbability: 0.721519975031211 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors 
    xhandlers
    flags 
    probability 4597688194394365127
    begin_IR
      LIR
      nr 2464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2466  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr 2468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B27" 
    xhandlers
    flags 
    probability 4598562680311629294
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B4 -> B6 falseDestination: B4 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B198" 
    xhandlers
    flags 
    probability 4597552902277943576
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1556  <|@ instruction rsi|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr 1558  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1560  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1562  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1564  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction JUMP ~[] destination: B124 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596956127118432433
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction r9|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4596956123085051940
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r13|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction r14|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction CMP rdx|DWORD y: 52 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B20" 
    xhandlers
    flags 
    probability 4596512292586521734
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.0011918951132300348 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596503538984261917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" "B14" 
    successors 
    xhandlers
    flags 
    probability 4596512292586521733
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rcx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  168  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr  178  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B207" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" "B35" 
    xhandlers
    flags 
    probability 4594869236244807047
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction r11|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  316  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594821116257853462
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  356  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B45" "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4598647803047311300
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1252  <|@ instruction CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B109" 
    xhandlers
    flags 
    probability 4592064339332843354
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1296  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1292  <|@ instruction BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" "B204" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      LIR
      nr 2470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2472  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2474  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B205" "B206" 
    xhandlers
    flags 
    probability 4591241364834586623
    begin_IR
      LIR
      nr 2484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2486  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 2488  <|@ instruction BRANCH trueDestinationProbability: 0.3841412160268982 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4588261758715135921
    begin_IR
      LIR
      nr 2494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2496  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr 2498  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors 
    xhandlers
    flags 
    probability 4585213771699296333
    begin_IR
      LIR
      nr 2490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B132" "B135" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1658  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1660  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1664  <|@ instruction stack:96|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1666  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1672  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1676  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1678  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr 1680  <|@ st <@st|@reference-map: [rax:0, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1077] <|@ <|@
      nr 1682  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - stack:104|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr 1688  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1692  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1694  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: stack:40|QWORD[.] - stack:64|QWORD - - stack:28|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - - stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr 1696  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD <|@ <|@
      nr 1700  <|@ instruction rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1702  <|@ instruction rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1704  <|@ st <@st|@reference-map: [stack:24, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr 1706  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1106] <|@ <|@
      nr 1710  <|@ instruction rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 1712  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1714  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1716  <|@ st <@st|@reference-map: [stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - stack:72|DWORD stack:52|DWORD - - - - - - - - - - - stack:104|QWORD[.] stack:92|DWORD stack:64|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr 1718  <|@ instruction rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1720  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1722  <|@ instruction rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1724  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1726  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr 1728  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1730  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - - - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1138] <|@ <|@
      nr 1732  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1734  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr 1738  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1740  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1742  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1744  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr 1746  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1748  <|@ instruction r10|DWORD = SETCC condition: < <|@ <|@
      nr 1750  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1752  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1754  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1756  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1758  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: stack:40|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr 1760  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1762  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1764  <|@ instruction BRANCH trueDestinationProbability: 0.09966777408637872 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B136" 
    xhandlers
    flags 
    probability 4585155295857558788
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1790  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" "B132" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1796  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1798  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = SETCC condition: < <|@ <|@
      nr 1802  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: rsi|QWORD[.] - - - - stack:28|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] stack:92|DWORD r11|DWORD - - r10|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227] <|@ <|@
      nr 1804  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    probability 4585300891249041956
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1822  <|@ instruction r10|DWORD = LEA [r10|DWORD + 48] size: DWORD <|@ <|@
      nr 1824  <|@ instruction MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr 1826  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1828  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1832  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B134" "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1838  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1840  <|@ instruction BRANCH trueDestinationProbability: 0.04053156146179402 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4585483346233305672
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1852  <|@ instruction CMP r11|DWORD y: -3 size: DWORD <|@ <|@
      nr 1854  <|@ instruction BRANCH trueDestinationProbability: 0.26973684210526316 condition: < trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4583430909525841668
    begin_IR
      LIR
      nr 1864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1866  <|@ instruction CMP r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1868  <|@ instruction BRANCH trueDestinationProbability: 0.9971550497866287 condition: < trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4583408793770173339
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1874  <|@ instruction rdx|DWORD = SETCC condition: < <|@ <|@
      nr 1876  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1878  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1880  <|@ instruction JUMP ~[] destination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" "B140" "B145" "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      LIR
      nr 1890  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1892  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1904  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B190" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603555853994860173
    begin_IR
      LIR
      nr 1912  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1914  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1916  <|@ instruction BRANCH trueDestinationProbability: 0.9937296695771272 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B150" "B151" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976590
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1920  <|@ st <@st|@reference-map: [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD int[0|0x0] int[0|0x0] - - - - - r10|QWORD[.] - rax|QWORD[.] Object[null] stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:1268] <|@ <|@
      nr 1922  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1924  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1928  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - - - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ instruction stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1934  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr 1936  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: rax|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr 1938  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1940  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1942  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1944  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1948  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1950  <|@ instruction BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" "B153" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601887804074441186
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1962  <|@ instruction BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B159" "B155" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1972  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1974  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B153 -> B159 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B186" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1982  <|@ instruction rsi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1984  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1986  <|@ instruction r11|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1988  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1990  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B186" "B159" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597380141925882275
    begin_IR
      LIR
      nr 1992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1994  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B156 -> B186 falseDestination: B156 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B153" "B156" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601883741553252771
    begin_IR
      LIR
      nr 2012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2014  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2016  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B173" "B182" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      LIR
      nr 2130  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2132  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2134  <|@ instruction rdx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 2136  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r9:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: r10|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - r10|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr 2138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B180" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      LIR
      nr 2140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2142  <|@ instruction rbx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr 2144  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r10:0, stack:8, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: r10|QWORD[.] rax|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - stack:80|DWORD - - stack:104|QWORD[.] - r10|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321] <|@ <|@
      nr 2146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4601883741553252769
    begin_IR
      LIR
      nr 2148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2150  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr 2152  <|@ instruction rsi|DWORD = MOV [rsi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2154  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2156  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2158  <|@ instruction BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B160" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569878636767358276
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2162  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2164  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2166  <|@ instruction JUMP ~[] destination: B175 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B175" 
    successors "B161" "B172" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4601944149477010940
    begin_IR
      LIR
      nr 2020  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2022  <|@ instruction r9|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 2024  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr 2026  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 2028  <|@ instruction BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4601823333629494599
    begin_IR
      LIR
      nr 2168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2170  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2174  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rsi|DWORD) condition: |>| <|@ <|@
      nr 2176  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B150" "B152" "B176" "B169" "B165" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      LIR
      nr 2178  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2180  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 2182  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 2184  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2186  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2188  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2190  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2192  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2194  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 2196  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2198  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 2200  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2202  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD stack:72|DWORD - - - stack:80|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 2204  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B147" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4603522115638976589
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2210  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr 2212  <|@ instruction r11|DWORD = LEA [rbx|DWORD + 48] size: DWORD <|@ <|@
      nr 2214  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr 2216  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 2218  <|@ instruction rcx|DWORD = SETCC condition: < <|@ <|@
      nr 2220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 2222  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2224  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2232  <|@ instruction JUMP ~[] destination: B178 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" "B178" 
    successors "B148" "B190" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603868826183568627
    begin_IR
      LIR
      nr 1906  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1898  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1902  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1908  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1910  <|@ instruction BRANCH trueDestinationProbability: 0.9450309428467419 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594123236352265589
    begin_IR
      LIR
      nr 1952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1954  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1956  <|@ instruction JUMP ~[] destination: B150 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B162" "B163" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      LIR
      nr 2030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2032  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2034  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2036  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2038  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2040  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr 2042  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569878636767358305
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2052  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 2054  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" "B170" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      LIR
      nr 2074  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2076  <|@ instruction rdx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r9:0, stack:8, stack:16, stack:24, stack:64, stack:88]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: rcx|QWORD[.] r11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - r10|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321] <|@ <|@
      nr 2080  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B166 -> B167 falseDestination: B166 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4567301232020343019
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2084  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 2086  <|@ instruction CMP [rcx|QWORD[.] + r11|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr 2088  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B164" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4562797632392972523
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2092  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2094  <|@ instruction JUMP ~[] destination: B168 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B168" 
    successors "B165" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4571804831647713515
    begin_IR
      LIR
      nr 2056  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2058  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr 2060  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567301232020343019
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2064  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2066  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2070  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2072  <|@ instruction JUMP ~[] destination: B165 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562797632392972523
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2098  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 2100  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2104  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2106  <|@ instruction JUMP ~[] destination: B169 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4552452067410704642
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1966  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1968  <|@ instruction JUMP ~[] destination: B152 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B147" "B148" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4585708189749267020
    begin_IR
      LIR
      nr 2326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2320  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2322  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2328  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2330  <|@ instruction BRANCH trueDestinationProbability: 0.054134838923945536 condition: = trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    probability 4585407883837511446
    begin_IR
      LIR
      nr 2344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2346  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2348  <|@ instruction BRANCH trueDestinationProbability: 0.10287921348314606 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4584868070143374127
    begin_IR
      LIR
      nr 2362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2364  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2366  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2368  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2370  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2372  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr 2374  <|@ st <@st|@reference-map: [rax:0, stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1388] <|@ <|@
      nr 2376  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2378  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2380  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2382  <|@ st <@st|@reference-map: [stack:8, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD - - - - - - - stack:120|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr 2384  <|@ instruction rsi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 2386  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2388  <|@ instruction stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2390  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B191" "B193" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      LIR
      nr 2392  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2394  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr 2396  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2398  <|@ st <@st|@reference-map: [stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD stack:72|DWORD stack:80|DWORD stack:104|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr 2400  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2402  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" 
    xhandlers
    flags 
    probability 4585708189749267019
    begin_IR
      LIR
      nr 2420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2422  <|@ instruction rdx|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr 2424  <|@ instruction rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2426  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2428  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2430  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2432  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2434  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2436  <|@ instruction JUMP ~[] destination: B197 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B146" 
    xhandlers
    flags 
    probability 4576896346336262936
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1858  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1860  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1862  <|@ instruction JUMP ~[] destination: B142 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B114" 
    xhandlers
    flags 
    probability 4574742723079176655
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1364  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1366  <|@ instruction JUMP ~[] destination: B107 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B136" "B134" 
    xhandlers
    flags 
    probability 4570992724793644147
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1768  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1770  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1772  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction BRANCH trueDestinationProbability: 0.2633333333333333 condition: < trueDestination: B132 -> B136 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4568663198529913466
    begin_IR
      LIR
      nr 1780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1782  <|@ instruction r11|DWORD = DEC stack:84|DWORD size: DWORD <|@ <|@
      nr 1784  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1786  <|@ instruction JUMP ~[] destination: B134 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    probability 4570783441632509555
    begin_IR
      LIR
      nr 2350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2352  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2354  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2356  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2358  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2360  <|@ instruction JUMP ~[] destination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4566951317114401624
    begin_IR
      LIR
      nr 2332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2334  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2336  <|@ instruction stack:104|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2338  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 2340  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2342  <|@ instruction JUMP ~[] destination: B191 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4564837815409705070
    begin_IR
      LIR
      nr 1842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1844  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1846  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1848  <|@ instruction JUMP ~[] destination: B140 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B114" 
    xhandlers
    flags 
    probability 4562723796993956672
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1298  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1302  <|@ instruction JUMP ~[] destination: B102 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" "B95" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction stack:48|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:96|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction CMP rcx|DWORD y: 32 size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B94" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction CMP stack:96|DWORD y: 14 size: DWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B93" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction CMP stack:52|DWORD y: 14 size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:48|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD stack:96|DWORD stack:72|DWORD stack:52|DWORD stack:68|DWORD stack:96|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365] <|@ <|@
      nr  738  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction CMP stack:84|DWORD y: -3 size: DWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B92" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction CMP stack:84|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  808  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  810  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  816  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  818  <|@ instruction r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  822  <|@ instruction r8|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction r8|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  854  <|@ instruction CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  886  <|@ instruction rcx|DWORD = MOV stack:64|QWORD size: DWORD <|@ <|@
      nr  888  <|@ instruction rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction r9|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  902  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: stack:48|DWORD stack:92|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r11|DWORD stack:72|DWORD r13|DWORD stack:68|DWORD r11|DWORD - - - - - - - stack:88|DWORD - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r9|DWORD) size: DWORD state [bci:365] <|@ <|@
      nr  904  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction rdx|DWORD = SHL r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  964  <|@ instruction rbx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  966  <|@ instruction rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  972  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B90" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1000  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r9|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r9|DWORD) size: DWORD state [bci:552] <|@ <|@
      nr 1006  <|@ instruction r11|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1008  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1010  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1012  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1020  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B198" 
    xhandlers
    flags 
    probability 4559626823201152671
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1042  <|@ instruction rcx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1044  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr 1048  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B89 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B28" 
    xhandlers
    flags 
    probability 4559508159989450990
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" 
    xhandlers
    flags 
    probability 4555476837731078346
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553095712730882878
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B19" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr  124  <|@ instruction r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rsi:0, r9:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74] <|@ <|@
      nr  128  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4549631423510111317
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4548849955350481381
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1414  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1416  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1418  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4548592113103512382
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B14 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" "B64" 
    xhandlers
    flags 
    probability 4545290316634068424
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr  574  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMP stack:80|DWORD y: 27 size: DWORD <|@ <|@
      nr  588  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" 
    xhandlers
    flags 
    probability 4545290057840552280
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1884  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1886  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1888  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B65" 
    xhandlers
    flags 
    probability 4545289770944579112
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B58 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4544088513476141886
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B28" 
    xhandlers
    flags 
    probability 4543323316582870700
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" 
    xhandlers
    flags 
    probability 4485518606199164087
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2406  <|@ instruction r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 2408  <|@ instruction rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2410  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2412  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2414  <|@ instruction MOV [r15|QWORD + 668] y: -372755 size: DWORD <|@ <|@
      nr 2416  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2418  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: rsi|QWORD[.] int[0|0x0] 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD r9|DWORD rcx|DWORD r10|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r11|DWORD = MOVE input: int[-355603|0xfffffffffffa92ed] <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B36 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B30" "B207" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2510  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2512  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2514  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD rax|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2264  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2266  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2268  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2270  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2274  <|@ instruction r10|DWORD = MOVE input: int[-332571|0xfffffffffffaece5] <|@ <|@
      nr 2276  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B162" "B183" "B181" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2282  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2284  <|@ st <@st|@reference-map: [rsi:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: stack:64|QWORD[.] stack:112|QWORD[.] - - r11|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:46, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2248  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2250  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2252  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2254  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2258  <|@ instruction r10|DWORD = MOVE input: int[-336411|0xfffffffffffadde5] <|@ <|@
      nr 2260  <|@ instruction JUMP ~[] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|DWORD = MOVE input: int[-296723|0xfffffffffffb78ed] <|@ <|@
      nr  778  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B74 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B100" "B95" "B94" "B93" "B72" "B127" "B126" "B74" "B105" "B77" "B92" "B79" "B81" "B83" "B85" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stack: rdx|DWORD rdi|DWORD 
locals: rsi|QWORD[.] - r9|QWORD - - rbp|DWORD - - - stack:84|DWORD rcx|DWORD r11|DWORD rax|DWORD r13|DWORD r8|DWORD r11|DWORD - - - - - - - rbx|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:365] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r10|DWORD = MOVE input: int[-296467|0xfffffffffffb79ed] <|@ <|@
      nr  748  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B72 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1433516113] <|@ <|@
      nr 1432  <|@ instruction MOV [r15|QWORD + 668] y: -372235 size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr 1436  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rsi|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction r10|DWORD = MOVE input: int[-287003|0xfffffffffffb9ee5] <|@ <|@
      nr 1128  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1130  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B94 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1148  <|@ instruction r10|DWORD = MOVE input: int[-286227|0xfffffffffffba1ed] <|@ <|@
      nr 1152  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1166  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1168  <|@ instruction JUMP ~[] destination: B95 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1548  <|@ instruction MOV [r15|QWORD + 668] y: -373787 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rsi|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rcx|QWORD - r13|QWORD - rdi|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction MOV [r15|QWORD + 668] y: -353307 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stack: r8|DWORD rdx|DWORD 
locals: rsi|QWORD[.] - stack:64|QWORD - - rbp|DWORD - - - stack:84|DWORD stack:76|DWORD r11|DWORD stack:72|DWORD r13|DWORD stack:68|DWORD r11|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:330] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B155" "B156" 
    successors "B187" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2288  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2290  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2292  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2298  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2302  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310093959] <|@ <|@
      nr 2304  <|@ instruction MOV [r15|QWORD + 668] y: -330003 size: DWORD <|@ <|@
      nr 2306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 2308  <|@ st <@st|@reference-map: [rsi:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: stack:112|QWORD[.] 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD - - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1315] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1590  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1592  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5] <|@ <|@
      nr 1598  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1602  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1606  <|@ instruction JUMP ~[] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE input: int[-297491|0xfffffffffffb75ed] <|@ <|@
      nr 1064  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - r8|DWORD - - - - - - - int[1|0x1] int[0|0x0] int[0|0x0] - - - - - rcx|DWORD r9|DWORD r10|DWORD rbx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:552] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction r11|DWORD = MOVE input: int[-280595|0xfffffffffffbb7ed] <|@ <|@
      nr  184  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  194  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: int[0|0x0] 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
locals: rsi|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rbp|DWORD rbx|DWORD rdi|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r11|DWORD = MOVE input: int[-297747|0xfffffffffffb74ed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~[] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2502  <|@ instruction r11|DWORD = MOVE input: int[-355347|0xfffffffffffa93ed] <|@ <|@
      nr 2504  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 2506  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction r11|DWORD = MOVE input: int[-284443|0xfffffffffffba8e5] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction r10|DWORD = MOVE input: int[-291603|0xfffffffffffb8ced] <|@ <|@
      nr  912  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B81 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed] <|@ <|@
      nr  944  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B83 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1616  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1618  <|@ instruction r10|DWORD = MOVE input: int[-301083|0xfffffffffffb67e5] <|@ <|@
      nr 1620  <|@ instruction rdi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1622  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1624  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1626  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1628  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE input: int[-291347|0xfffffffffffb8ded] <|@ <|@
      nr  978  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~[] destination: B85 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2236  <|@ instruction r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 2238  <|@ instruction rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2240  <|@ instruction MOV [r15|QWORD + 668] y: -340507 size: DWORD <|@ <|@
      nr 2242  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2244  <|@ st <@st|@reference-map: [rsi:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:84|DWORD - - - - - - - stack:92|DWORD r9|DWORD - - - rbx|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction r10|DWORD = MOVE input: int[-289051|0xfffffffffffb96e5] <|@ <|@
      nr 1104  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction JUMP ~[] destination: B93 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1808  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1810  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1814  <|@ instruction MOV [r15|QWORD + 668] y: -360475 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:8, stack:24, stack:64]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - stack:84|DWORD - - - - - - - int[0|0x0] r8|DWORD r11|DWORD - - r10|DWORD - - stack:104|QWORD[.] - stack:64|QWORD[.] rax|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1227] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B208" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r11|DWORD = MOVE input: int[-355091|0xfffffffffffa94ed] <|@ <|@
      nr  284  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B30 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2478  <|@ instruction MOV [r15|QWORD + 668] y: -350739 size: DWORD <|@ <|@
      nr 2480  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2482  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: rsi|QWORD[.] - - - - - - - - r11|DWORD - - - - - - - r10|DWORD r8|DWORD r9|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction MOV [r15|QWORD + 668] y: -316435 size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1400  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: rsi|QWORD[.] - - - - rbp|DWORD - - - r11|DWORD - - - - - - - r10|DWORD r9|DWORD rdi|DWORD - - - - - r8|QWORD - r13|QWORD - rcx|QWORD - rbx|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction r10|DWORD = MOVE input: int[-296979|0xfffffffffffb77ed] <|@ <|@
      nr 1080  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B92 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-297235|0xfffffffffffb76ed] <|@ <|@
      nr  834  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B77 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1264  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction rbp|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1282  <|@ instruction r10|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed] <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B100 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2110  <|@ instruction r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2112  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2114  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2116  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2118  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2120  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2124  <|@ instruction MOV [r15|QWORD + 668] y: -328219 size: DWORD <|@ <|@
      nr 2126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2128  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, rdi:0, r8:0]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: rcx|QWORD[.] r11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
locals: rsi|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD - - - - rbx|DWORD - - rdi|QWORD[.] - rax|QWORD[.] r8|QWORD[.] rdx|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0, 140, 1321] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-357147|0xfffffffffffa8ce5] <|@ <|@
      nr  862  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B79 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-359195|0xfffffffffffa84e5] <|@ <|@
      nr 1336  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction r11|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1340  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~[] destination: B105 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2046  <|@ instruction r10|DWORD = MOVE input: int[-325395|0xfffffffffffb08ed] <|@ <|@
      nr 2048  <|@ instruction JUMP ~[] destination: B162 -> B184 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41cc0bf5 slotKind: QWORD  <||@
  Comment 48 6 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 51 8 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 56 10 MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 60 12 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 64 14 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 64 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 74 16 rbx|DWORD = TZCNT r10|QWORD size: QWORD  <||@
  Comment 79 18 rcx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 84 20 rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 88 22 rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 92 24 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 94 26 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.7284916068028063 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 106 34 BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 112 block B2 null  <||@
  Comment 112 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 38 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 117 40 JUMP ~[] destination: B2 -> B6  <||@
  Comment 117 block B6 null  <||@
  Comment 117 58 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 117 60 CMP rdx|DWORD y: -21 size: DWORD  <||@
  Comment 120 62 BRANCH trueDestinationProbability: 3.7093885904323354E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 126 block B8 null  <||@
  Comment 126 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 72 CMP rcx|DWORD y: 27 size: DWORD  <||@
  Comment 129 74 BRANCH trueDestinationProbability: 0.5207354992258577 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26  <||@
  Comment 135 block B9 null  <||@
  Comment 135 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 78 rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 142 80 CMP rax|DWORD y: 64 size: DWORD  <||@
  Comment 145 82 BRANCH trueDestinationProbability: 0.9986731860733679 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25  <||@
  Comment 151 block B10 null  <||@
  Comment 151 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 86 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 88 BRANCH trueDestinationProbability: 0.39220076270143933 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 159 block B24 null  <||@
  Comment 159 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 198 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 161 200 JUMP ~[] destination: B24 -> B28  <||@
  Comment 161 block B28 null  <||@
  Comment 161 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 161 222 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 166 224 rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 176 226 rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 182 228 r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 192 230 rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 195 232 xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM  <||@
  Comment 200 234 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 200 {DataSection[0x0]}  <||@
  Comment 209 236 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 213 238 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 213 {DataSection[0x8]}  <||@
  Comment 222 240 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 226 242 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 226 {DataSection[0x10]}  <||@
  Comment 235 244 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 239 246 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 247 248 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 247 {DataSection[0x18]}  <||@
  Comment 256 250 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 260 252 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 264 254 r13|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 269 256 r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 279 258 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 289 260 rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 292 262 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 296 264 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 298 266 r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 305 268 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 308 270 BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 314 block B29 null  <||@
  Comment 314 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 274 rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 324 276 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 327 278 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 333 block B31 null  <||@
  Comment 333 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 290 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 336 292 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 341 294 r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 351 296 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 354 298 JUMP ~[] destination: B31 -> B38  <||@
  Comment 354 block B38 null  <||@
  Comment 354 362 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 354 364 rcx|DWORD = NEG r11|DWORD size: DWORD  <||@
  Comment 359 366 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 362 368 BRANCH trueDestinationProbability: 0.7284909928572612 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 368 block B39 null  <||@
  Comment 368 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 372 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 376 374 stack:48|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 384 376 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 386 378 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 391 380 JUMP ~[] destination: B39 -> B41  <||@
  Comment 391 block B41 null  <||@
  Comment 391 402 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 391 404 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 395 406 BRANCH trueDestinationProbability: 0.7284911334689859 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 401 block B42 null  <||@
  Comment 401 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 410 stack:52|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 409 412 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 415 414 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 421 416 JUMP ~[] destination: B42 -> B44  <||@
  Comment 421 block B44 null  <||@
  Comment 421 436 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 421 438 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 423 440 rdx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 428 442 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 430 444 r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 436 446 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 439 448 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 442 450 BRANCH trueDestinationProbability: 0.4467778355907999 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 448 block B48 null  <||@
  Comment 448 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 476 rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 451 478 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 454 480 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 457 486 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 463 482 BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B48 -> B50 falseDestination: B48 -> B52  <||@
  Comment 469 block B52 null  <||@
  Comment 469 502 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 469 504 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 471 506 BRANCH trueDestinationProbability: 0.9999036283910759 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55  <||@
  Comment 477 block B53 null  <||@
  Comment 477 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 510 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 479 512 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 482 514 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 487 516 JUMP ~[] destination: B53 -> B55  <||@
  Comment 487 block B55 null  <||@
  Comment 487 522 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 487 524 r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 493 526 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 495 528 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 497 530 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 500 532 stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 505 534 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 508 536 BRANCH trueDestinationProbability: 0.9999036206508819 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59  <||@
  Comment 514 block B56 null  <||@
  Comment 514 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 540 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 514 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 524 542 rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 528 544 rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 533 546 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 537 548 BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B58  <||@
  Comment 543 block B61 null  <||@
  Comment 543 610 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 543 612 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 547 614 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 553 block B62 null  <||@
  Comment 553 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 618 rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 558 620 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 561 622 JUMP ~[] destination: B62 -> B65  <||@
  Comment 561 block B65 null  <||@
  Comment 561 668 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 561 670 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 566 672 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 569 674 BRANCH trueDestinationProbability: 0.9858815592926324 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B131  <||@
  Comment 575 block B66 null  <||@
  Comment 575 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 678 rdx|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 579 680 rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 584 682 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 587 684 BRANCH trueDestinationProbability: 0.965280153803542 condition: < trueDestination: B66 -> B67 falseDestination: B66 -> B131  <||@
  Comment 593 block B67 null  <||@
  Comment 593 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 688 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 598 690 r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD  <||@
  Comment 602 692 CMP rbx|DWORD y: 32 size: DWORD  <||@
  Comment 605 694 BRANCH trueDestinationProbability: 9.283640537438576E-4 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B96  <||@
  Comment 611 block B96 null  <||@
  Comment 611 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 1172 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 614 1174 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B127  <||@
  Comment 620 block B97 null  <||@
  Comment 620 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 1178 CMP r13|DWORD y: 27 size: DWORD  <||@
  Comment 624 1180 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B97 -> B98 falseDestination: B97 -> B126  <||@
  Comment 630 block B98 null  <||@
  Comment 630 1182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 1184 stack:48|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 634 1186 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 638 1188 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 643 1190 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 643 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 653 1192 r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD  <||@
  Comment 658 1194 rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD  <||@
  Comment 663 1196 rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 670 1198 r13|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 673 1200 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 676 1202 rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 679 1204 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 681 1206 r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 684 1210 rax|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 687 1212 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 689 1214 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365]  <||@
  Comment 689 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2          |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |r10|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |rcx|DWORD  |stack:52|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:48|DWORD  |stack:92|DWORD  |           |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 689 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 1216 rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD  <||@
  Comment 699 1218 r10|QWORD = SHL r13|QWORD size: QWORD  <||@
  Comment 705 1220 rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 708 1222 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 711 1224 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 713 1226 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 716 1228 rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD  <||@
  Comment 723 1230 r8|QWORD = SHL r8|QWORD size: QWORD  <||@
  Comment 726 1232 rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 729 1234 r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 736 1236 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 739 1238 r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 742 1240 rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 748 1242 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 750 1244 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 752 1246 BRANCH trueDestinationProbability: 0.1356671003058001 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B104  <||@
  Comment 758 block B104 null  <||@
  Comment 758 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 758 1312 CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365]  <||@
  Comment 758 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |r10|DWORD  |stack:52|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:48|DWORD  |stack:92|DWORD  |                |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 758 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 1314 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 773 block B106 null  <||@
  Comment 773 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 1348 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 778 1350 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 781 1352 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 790 1354 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 793 1360 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 799 1356 BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108  <||@
  Comment 805 block B108 null  <||@
  Comment 805 1368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 1372 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 808 1374 JUMP ~[] destination: B108 -> B109  <||@
  Comment 808 block B109 null  <||@
  Comment 808 1376 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 808 1378 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 811 1380 r9|DWORD = SETCC condition: >  <||@
  Comment 819 1382 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 822 1384 rdi|DWORD = SETCC condition: >  <||@
  Comment 830 1386 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 834 1388 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 840 block B111 null  <||@
  Comment 840 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 1404 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 844 1406 BRANCH trueDestinationProbability: 0.9998292291403394 condition: < trueDestination: B111 -> B114 falseDestination: B111 -> B113  <||@
  Comment 850 block B114 null  <||@
  Comment 850 1420 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 850 1422 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 853 1424 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 859 block B116 null  <||@
  Comment 859 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 1440 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 867 1442 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 871 1444 stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 876 1446 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 879 1448 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 882 1450 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 885 1452 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 890 1454 JUMP ~[] destination: B116 -> B117  <||@
  Comment 890 block B117 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 890 1456 [] = LABEL numbPhis: 5 align: true label: ?  <||@
  Comment 896 1458 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 899 1460 BRANCH trueDestinationProbability: 0.9124800935868261 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B125  <||@
  Comment 905 block B118 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 905 1462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 1464 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 908 1466 BRANCH trueDestinationProbability: 0.9574198800803831 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124  <||@
  Comment 914 block B119 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 914 1468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 1470 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 917 1472 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B123  <||@
  Comment 923 block B120 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 923 1474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 923 1476 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 926 1478 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 928 1480 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914]  <||@
  Comment 928 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 928 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 931 1482 r8|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 934 1484 r9|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 938 1486 MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 944 1488 r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 951 1490 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 954 1492 r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 957 1494 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 960 1496 rdx|QWORD = SHL rdi|QWORD y: 3 size: QWORD  <||@
  Comment 967 1498 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 970 1500 rdx|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 973 1502 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 977 1504 BRANCH trueDestinationProbability: 3.567423074385401E-4 condition: < trueDestination: B120 -> B121 falseDestination: B120 -> B122  <||@
  Comment 983 block B122 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 983 1520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 1522 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 986 1524 rcx|DWORD = SETCC condition: >  <||@
  Comment 992 1526 rdi|QWORD = ADD (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 998 1528 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1001 1530 rdi|DWORD = SETCC condition: >  <||@
  Comment 1009 1532 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1009 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18         |19         |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |rcx|DWORD  |rdi|DWORD  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rdx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1009 {infopoint: SAFEPOINT}  <||@
  Comment 1009 11  <||@
  Comment 1015 1534 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1018 1536 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1021 1538 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1024 1540 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1027 1542 JUMP ~[] destination: B122 -> B117  <||@
  Comment 1032 block B121 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 1032 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 1508 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1032 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[1|0x1]  |int[1|0x1]  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rdx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1032 {infopoint: SAFEPOINT}  <||@
  Comment 1032 11  <||@
  Comment 1038 1510 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1041 1512 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1044 1514 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1050 1516 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1056 1518 JUMP ~[] destination: B121 -> B117  <||@
  Comment 1061 block B125 null  <||@
  Comment 1061 1570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 1572 rsi|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1067 1574 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1070 1576 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1073 1578 rdx|DWORD = SETCC condition: =  <||@
  Comment 1079 1580 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1082 1582 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 1584 JUMP ~[] destination: B125 -> B198  <||@
  Comment 1085 block B198 null  <||@
  Comment 1085 2438 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1085 2440 MOVB (x: [rsi|QWORD[.] + 25], y: rdx|DWORD) size: BYTE  <||@
  Comment 1088 2442 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1093 2444 MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1096 2446 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1100 2448 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 1104 2450 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1107 2452 BRANCH trueDestinationProbability: 0.5883269357403274 condition: = trueDestination: B198 -> B199 falseDestination: B198 -> B200  <||@
  Comment 1113 block B199 null  <||@
  Comment 1113 2454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 2456 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1122 12  <||@
  Comment 1132 block B26 null  <||@
  Comment 1132 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1132 210 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1134 212 JUMP ~[] destination: B26 -> B28  <||@
  Comment 1139 block B45 null  <||@
  Comment 1139 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1139 454 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1142 456 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1144 458 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 1147 464 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1152 460 BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B45 -> B50 falseDestination: B45 -> B52  <||@
  Comment 1163 block B200 null  <||@
  Comment 1163 2458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 2460 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1166 2462 BRANCH trueDestinationProbability: 0.721519975031211 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202  <||@
  Comment 1172 block B201 null  <||@
  Comment 1172 2464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 2466 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505]  <||@
  Comment 1172 9  <||@
  Comment 1175 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1180 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1181 2468 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1190 12  <||@
  Comment 1200 block B4 null  <||@
  Comment 1200 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1200 50 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 1203 52 BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B4 -> B6 falseDestination: B4 -> B27  <||@
  Comment 1214 block B124 null  <||@
  Comment 1214 1554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1214 1556 rsi|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1220 1558 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1223 1560 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1226 1562 rdx|DWORD = SETCC condition: =  <||@
  Comment 1232 1564 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1235 1566 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 1568 JUMP ~[] destination: B124 -> B198  <||@
  Comment 1243 block B40 null  <||@
  Comment 1243 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 384 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1248 386 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1251 388 r9|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 1257 390 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1260 392 rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1265 394 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1269 396 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1274 398 rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1276 400 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1281 block B43 null  <||@
  Comment 1281 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1281 420 r13|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1287 422 r14|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1293 424 r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1296 426 rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1299 428 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1304 430 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1307 432 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1310 434 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1315 block B11 null  <||@
  Comment 1315 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1315 92 CMP rdx|DWORD y: 52 size: DWORD  <||@
  Comment 1318 94 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22  <||@
  Comment 1324 block B12 null  <||@
  Comment 1324 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1324 98 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1327 100 BRANCH trueDestinationProbability: 0.0011918951132300348 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20  <||@
  Comment 1333 block B20 null  <||@
  Comment 1333 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1333 160 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1339 162 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1339 block B21 null  <||@
  Comment 1339 164 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1339 166 rcx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 1344 168 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1346 170 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1349 172 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1354 174 rcx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1357 176 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170]  <||@
  Comment 1357 9  <||@
  Comment 1359 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>}  <||@
  Comment 1364 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1365 178 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1374 12  <||@
  Comment 1384 block B32 null  <||@
  Comment 1384 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 302 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1388 304 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B207  <||@
  Comment 1394 block B33 null  <||@
  Comment 1394 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 308 rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1400 310 r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 1410 312 rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1413 314 r11|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 1419 316 r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1422 318 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1425 320 rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1428 322 r11|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 1431 324 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1434 326 BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 1440 block B35 null  <||@
  Comment 1440 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1440 334 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1443 336 rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1446 338 TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1449 340 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1455 block B37 null  <||@
  Comment 1455 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1455 354 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1460 356 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1463 358 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1466 360 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1471 block B50 null  <||@
  Comment 1471 490 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1471 492 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 1473 494 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1478 block B99 null  <||@
  Comment 1478 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1478 1250 rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1482 1252 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1485 1254 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 1491 block B101 null  <||@
  Comment 1491 1286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 1288 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1494 1290 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1496 1296 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1502 1292 BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B109  <||@
  Comment 1513 block B202 null  <||@
  Comment 1513 2470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1513 2472 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1516 2474 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B204  <||@
  Comment 1522 block B204 null  <||@
  Comment 1522 2484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 2486 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1526 2488 BRANCH trueDestinationProbability: 0.3841412160268982 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206  <||@
  Comment 1532 block B206 null  <||@
  Comment 1532 2494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1532 2496 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498]  <||@
  Comment 1532 9  <||@
  Comment 1535 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1540 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1541 2498 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1550 12  <||@
  Comment 1560 block B205 null  <||@
  Comment 1560 2490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1560 2492 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1569 12  <||@
  Comment 1579 block B131 null  <||@
  Comment 1579 1670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1579 1656 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1583 1658 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1586 1660 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1591 1662 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1596 1664 stack:96|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1600 1666 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1605 1672 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1608 1674 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1611 1676 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1616 1678 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074]  <||@
  Comment 1616 8  <||@
  Comment 1623 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1628 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1629 1680 NULLCHECK [rax|QWORD[.]] state [bci:1077]  <||@
  Comment 1629 [rax:0, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |                |   |   |                |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 1629 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1631 1682 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 1684 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 1686 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081]  <||@
  Comment 1639 {HotSpotMethod<FDBigInteger.getNormalizationBias()>}  <||@
  Comment 1639 9  <||@
  Comment 1644 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1645 1688 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1650 1690 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1652 1692 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1656 1694 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090]  <||@
  Comment 1656 9  <||@
  Comment 1663 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1668 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1669 1696 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 1698 rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD  <||@
  Comment 1682 1700 rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1687 1702 rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 1691 1704 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103]  <||@
  Comment 1691 8  <||@
  Comment 1695 {HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>}  <||@
  Comment 1700 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1701 1706 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 1708 NULLCHECK [rax|QWORD[.]] state [bci:1106]  <||@
  Comment 1706 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |                |                |                |                |    |    |    |    |    |    |    |    |    |                    |                |    |    |    |    |    |     <||@
  Comment 1706 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1708 1710 rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1716 1712 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1720 1714 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1724 1716 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119]  <||@
  Comment 1724 8  <||@
  Comment 1727 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1732 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27                 |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:52|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |stack:64|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 1733 1718 rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1741 1720 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1745 1722 rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1749 1724 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 1726 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135]  <||@
  Comment 1754 8  <||@
  Comment 1759 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1764 [stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-    <||@
  Comment 1765 1728 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 1730 NULLCHECK [rax|QWORD[.]] state [bci:1138]  <||@
  Comment 1770 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |                    |    |                   |                    |    |    |    |     <||@
  Comment 1770 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1772 1732 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1777 1734 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1782 1736 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147]  <||@
  Comment 1782 9  <||@
  Comment 1783 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1788 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1789 1738 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 1740 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 1742 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1803 1744 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156]  <||@
  Comment 1803 9  <||@
  Comment 1807 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 1812 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1813 1746 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1815 1748 r10|DWORD = SETCC condition: <  <||@
  Comment 1823 1750 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1828 1752 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1833 1754 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 1756 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1843 1758 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175]  <||@
  Comment 1843 9  <||@
  Comment 1847 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 1852 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1853 1760 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1858 1762 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1861 1764 BRANCH trueDestinationProbability: 0.09966777408637872 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B135  <||@
  Comment 1867 block B135 null  <||@
  Comment 1867 1788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1867 1790 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1872 1792 JUMP ~[] destination: B135 -> B136  <||@
  Comment 1872 block B136 null  <||@
  Comment 1872 1794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1872 1796 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1875 1798 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1878 1800 r11|DWORD = SETCC condition: <  <||@
  Comment 1886 1802 CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227]  <||@
  Comment 1886 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19         |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1886 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1894 1804 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 1900 block B138 null  <||@
  Comment 1900 1820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 1822 r10|DWORD = LEA [r10|DWORD + 48] size: DWORD  <||@
  Comment 1904 1824 MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 1913 1826 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1919 1828 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1924 1830 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1928 1832 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1928 block B139 null  <||@
  Comment 1928 1834 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1928 1836 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1933 1838 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1935 1840 BRANCH trueDestinationProbability: 0.04053156146179402 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 1941 block B141 null  <||@
  Comment 1941 1850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1941 1852 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 1945 1854 BRANCH trueDestinationProbability: 0.26973684210526316 condition: < trueDestination: B141 -> B142 falseDestination: B141 -> B143  <||@
  Comment 1951 block B143 null  <||@
  Comment 1951 1864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1951 1866 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 1955 1868 BRANCH trueDestinationProbability: 0.9971550497866287 condition: < trueDestination: B143 -> B144 falseDestination: B143 -> B145  <||@
  Comment 1961 block B144 null  <||@
  Comment 1961 1870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 1872 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1964 1874 rdx|DWORD = SETCC condition: <  <||@
  Comment 1970 1876 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1973 1878 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1977 1880 JUMP ~[] destination: B144 -> B146  <||@
  Comment 1977 block B146 null  <||@
  Comment 1977 1890 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1977 1892 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1982 1894 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1985 1896 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1988 1904 JUMP ~[] destination: B146 -> B147  <||@
  Comment 1993 block B148 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 1993 1912 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2000 1914 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2002 1916 BRANCH trueDestinationProbability: 0.9937296695771272 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B190  <||@
  Comment 2008 block B149 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2008 1918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2008 1920 NULLCHECK [rbx|QWORD[.]] state [bci:1268]  <||@
  Comment 2008 [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18          |19          |20  |21  |22  |23  |24  |25            |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r10|QWORD[.]  |-   |rax|QWORD[.]  |Object[null]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2008 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2010 1922 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2013 1924 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2016 1926 stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 1928 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282]  <||@
  Comment 2021 9  <||@
  Comment 2023 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 2028 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2029 1930 rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 1932 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2038 1934 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312]  <||@
  Comment 2038 9  <||@
  Comment 2039 {HotSpotMethod<FDBigInteger.multBy10()>}  <||@
  Comment 2044 [stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2045 1936 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315]  <||@
  Comment 2045 [rax:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|QWORD[.]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |    |    |    |    |                |    |    |                    |    |                   |    |                    |    |    |     <||@
  Comment 2045 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2048 1938 rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 2051 1940 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 1942 rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 2060 1944 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2062 1946 r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2069 1948 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2072 1950 BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B151  <||@
  Comment 2078 block B151 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2078 1958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 1960 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2081 1962 BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B153  <||@
  Comment 2087 block B153 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2087 1970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2087 1972 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 2090 1974 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B153 -> B159 falseDestination: B153 -> B155  <||@
  Comment 2096 block B155 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2096 1980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2096 1982 rsi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 2099 1984 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2102 1986 r11|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2105 1988 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2108 1990 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B186  <||@
  Comment 2114 block B156 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2114 1992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2114 1994 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 2117 1996 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B156 -> B186 falseDestination: B156 -> B159  <||@
  Comment 2123 block B159 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2123 2012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 2014 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2126 2016 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2129 2018 JUMP ~[] destination: B159 -> B160  <||@
  Comment 2134 block B172 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2134 2130 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2144 2132 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2148 2134 rdx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2153 2136 CMP (x: rdx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321]  <||@
  Comment 2153 [rax:0, rcx:0, rsi:0, r9:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5         |6  |7 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |r10|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2153 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2160 2138 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182  <||@
  Comment 2166 block B173 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2166 2140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2166 2142 rbx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 2171 2144 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321]  <||@
  Comment 2171 [rax:0, rcx:0, rsi:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5         |6  |7 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |r10|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2171 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2179 2146 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180  <||@
  Comment 2185 block B174 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2185 2148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2185 2150 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 2189 2152 rsi|DWORD = MOV [rsi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2193 2154 rcx|DWORD = MOV [rcx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2197 2156 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2199 2158 BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176  <||@
  Comment 2205 block B175 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2205 2160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2205 2162 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2208 2164 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2211 2166 JUMP ~[] destination: B175 -> B160  <||@
  Comment 2211 block B160 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2211 2020 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2211 2022 r9|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD  <||@
  Comment 2215 2024 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 2222 2026 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2226 2028 BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B172  <||@
  Comment 2233 block B176 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2233 2168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2233 2170 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2235 2172 rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2240 2174 rdx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rsi|DWORD) condition: |>|  <||@
  Comment 2248 2176 JUMP ~[] destination: B176 -> B177  <||@
  Comment 2248 block B177 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2248 2178 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2248 2180 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2250 2182 r9|DWORD = SETCC condition: <  <||@
  Comment 2258 2184 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2263 2186 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2266 2188 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2269 2190 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2274 2192 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2279 2194 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2279 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2279 9  <||@
  Comment 2284 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2285 2196 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2290 2198 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2293 2200 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2298 2202 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2298 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |                |    |    |    |                |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 2298 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2306 2204 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179  <||@
  Comment 2312 block B178 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2312 2206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2312 2208 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2316 2210 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 2320 2212 r11|DWORD = LEA [rbx|DWORD + 48] size: DWORD  <||@
  Comment 2324 2214 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2330 2216 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2333 2218 rcx|DWORD = SETCC condition: <  <||@
  Comment 2339 2220 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2342 2222 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2347 2224 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2352 2232 JUMP ~[] destination: B178 -> B147  <||@
  Comment 2352 block B147 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2352 1906 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2352 1898 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2357 1900 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2362 1902 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2367 1908 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2370 1910 BRANCH trueDestinationProbability: 0.9450309428467419 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B190  <||@
  Comment 2381 block B150 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2381 1952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2381 1954 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2386 1956 JUMP ~[] destination: B150 -> B177  <||@
  Comment 2391 block B161 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2391 2030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2391 2032 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2396 2034 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2400 2036 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2405 2038 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2410 2040 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 2414 2042 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163  <||@
  Comment 2420 block B163 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2420 2050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2420 2052 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2423 2054 JUMP ~[] destination: B163 -> B164  <||@
  Comment 2428 block B166 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2428 2074 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2432 2076 rdx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2437 2078 CMP (x: rdx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321]  <||@
  Comment 2437 [rcx:0, rsi:0, r9:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2437 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2445 2080 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B166 -> B167 falseDestination: B166 -> B170  <||@
  Comment 2451 block B167 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2451 2082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2451 2084 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2454 2086 CMP [rcx|QWORD[.] + r11|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 2460 2088 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B169  <||@
  Comment 2466 block B168 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2466 2090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2466 2092 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2469 2094 JUMP ~[] destination: B168 -> B164  <||@
  Comment 2469 block B164 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2469 2056 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2469 2058 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2473 2060 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B164 -> B165 falseDestination: B164 -> B166  <||@
  Comment 2475 block B165 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2475 2062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2475 2064 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2480 2066 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2485 2070 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2490 2072 JUMP ~[] destination: B165 -> B177  <||@
  Comment 2495 block B169 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2495 2096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2495 2098 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2500 2100 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2505 2104 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2510 2106 JUMP ~[] destination: B169 -> B177  <||@
  Comment 2515 block B152 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2515 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2515 1966 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2520 1968 JUMP ~[] destination: B152 -> B177  <||@
  Comment 2525 block B190 null  <||@
  Comment 2525 2326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2525 2320 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2530 2322 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2535 2328 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2537 2330 BRANCH trueDestinationProbability: 0.054134838923945536 condition: = trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 2543 block B192 null  <||@
  Comment 2543 2344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2543 2346 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2546 2348 BRANCH trueDestinationProbability: 0.10287921348314606 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194  <||@
  Comment 2552 block B194 null  <||@
  Comment 2552 2362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2552 2364 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2556 2366 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2561 2368 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2566 2370 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2571 2372 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385]  <||@
  Comment 2571 9  <||@
  Comment 2575 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 2580 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2581 2374 NULLCHECK [rax|QWORD[.]] state [bci:1388]  <||@
  Comment 2581 [rax:0, stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |    |    |    |    |    |    |    |    |    |                    |    |    |     <||@
  Comment 2581 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2583 2376 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2586 2378 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2591 2380 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2596 2382 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394]  <||@
  Comment 2596 9  <||@
  Comment 2599 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2604 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27                  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 2605 2384 rsi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2608 2386 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2613 2388 stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2618 2390 JUMP ~[] destination: B194 -> B195  <||@
  Comment 2618 block B195 null  <||@
  Comment 2618 2392 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2618 2394 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498]  <||@
  Comment 2618 {Object[FDBigInteger@241972498]}  <||@
  Comment 2628 2396 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2631 2398 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412]  <||@
  Comment 2631 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2631 9  <||@
  Comment 2636 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20               |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |stack:104|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:40|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |                 |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 2637 2400 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2639 2402 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197  <||@
  Comment 2645 block B197 null  <||@
  Comment 2645 2420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2645 2422 rdx|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 2650 2424 rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 2655 2426 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2660 2428 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2665 2430 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2670 2432 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2675 2434 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2680 2436 JUMP ~[] destination: B197 -> B198  <||@
  Comment 2685 block B142 null  <||@
  Comment 2685 1856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2685 1858 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2691 1860 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2696 1862 JUMP ~[] destination: B142 -> B146  <||@
  Comment 2701 block B107 null  <||@
  Comment 2701 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2701 1362 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2706 1364 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2712 1366 JUMP ~[] destination: B107 -> B114  <||@
  Comment 2717 block B132 null  <||@
  Comment 2717 1766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2717 1768 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2721 1770 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2726 1772 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2729 1774 BRANCH trueDestinationProbability: 0.2633333333333333 condition: < trueDestination: B132 -> B136 falseDestination: B132 -> B134  <||@
  Comment 2735 block B134 null  <||@
  Comment 2735 1780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2735 1782 r11|DWORD = DEC stack:84|DWORD size: DWORD  <||@
  Comment 2743 1784 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2749 1786 JUMP ~[] destination: B134 -> B139  <||@
  Comment 2754 block B193 null  <||@
  Comment 2754 2350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2754 2352 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2759 2354 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2768 2356 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2772 2358 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2777 2360 JUMP ~[] destination: B193 -> B195  <||@
  Comment 2782 block B191 null  <||@
  Comment 2782 2332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2782 2334 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2787 2336 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2796 2338 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2800 2340 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2805 2342 JUMP ~[] destination: B191 -> B195  <||@
  Comment 2810 block B140 null  <||@
  Comment 2810 1842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2810 1844 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2816 1846 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2821 1848 JUMP ~[] destination: B140 -> B146  <||@
  Comment 2826 block B102 null  <||@
  Comment 2826 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2826 1298 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2831 1300 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2837 1302 JUMP ~[] destination: B102 -> B114  <||@
  Comment 2842 block B68 null  <||@
  Comment 2842 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2842 698 stack:48|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2846 700 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2850 702 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2855 704 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2859 706 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2863 708 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2868 710 stack:96|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2872 712 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2877 714 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2880 716 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2884 718 CMP rcx|DWORD y: 32 size: DWORD  <||@
  Comment 2887 720 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B95  <||@
  Comment 2893 block B69 null  <||@
  Comment 2893 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2893 724 CMP stack:96|DWORD y: 14 size: DWORD  <||@
  Comment 2898 726 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B94  <||@
  Comment 2904 block B70 null  <||@
  Comment 2904 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2904 730 CMP stack:52|DWORD y: 14 size: DWORD  <||@
  Comment 2909 732 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B93  <||@
  Comment 2915 block B71 null  <||@
  Comment 2915 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2915 736 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365]  <||@
  Comment 2915 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:48|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 2915 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2919 738 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2921 740 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 2927 block B73 null  <||@
  Comment 2927 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2927 768 CMP stack:84|DWORD y: -3 size: DWORD  <||@
  Comment 2932 770 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 2938 block B75 null  <||@
  Comment 2938 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2938 798 CMP stack:84|DWORD y: 8 size: DWORD  <||@
  Comment 2943 800 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B92  <||@
  Comment 2949 block B76 null  <||@
  Comment 2949 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 804 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 2954 806 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 2954 {Object[int[14]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 2964 808 rdx|DWORD = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2969 810 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2973 812 r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2979 814 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 2985 816 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 2988 818 r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2991 820 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 2997 822 r8|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 3003 824 r8|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3006 826 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 3010 828 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 3016 block B78 null  <||@
  Comment 3016 852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3016 854 CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD  <||@
  Comment 3025 856 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 3031 block B80 null  <||@
  Comment 3031 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3031 884 rax|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3036 886 rcx|DWORD = MOV stack:64|QWORD size: DWORD  <||@
  Comment 3040 888 rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3043 890 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3047 892 rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3049 894 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3053 896 r9|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3059 898 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3061 900 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 3062 902 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r9|DWORD) size: DWORD state [bci:365]  <||@
  Comment 3062 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13         |14              |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r11|DWORD  |stack:72|DWORD  |r13|DWORD  |stack:68|DWORD  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:48|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |           |                |           |                |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 3062 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3065 904 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3067 906 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 3073 block B82 null  <||@
  Comment 3073 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3073 930 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3078 932 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3080 934 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3082 936 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3085 938 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 3091 block B84 null  <||@
  Comment 3091 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3091 962 rdx|DWORD = SHL r9|DWORD y: 3 size: DWORD  <||@
  Comment 3097 964 rbx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 3102 966 rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3104 968 rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3109 970 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3111 972 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 3117 block B86 null  <||@
  Comment 3117 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3117 996 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 3120 998 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 3129 1000 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3131 1002 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 3132 1004 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r9|DWORD) size: DWORD state [bci:552]  <||@
  Comment 3132 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r9|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 3132 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3135 1006 r11|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3142 1008 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3144 1010 r11|DWORD = ADD (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3147 1012 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3150 1014 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B90  <||@
  Comment 3156 block B87 null  <||@
  Comment 3156 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3156 1018 r8|DWORD = ADD (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3159 1020 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3162 1022 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 3168 block B89 null  <||@
  Comment 3168 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3168 1034 r10|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 3172 1036 MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD  <||@
  Comment 3181 1038 r10|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 3187 1040 r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 3190 1042 rcx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 3193 1044 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3196 1046 rdx|DWORD = SETCC condition: =  <||@
  Comment 3202 1048 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3208 1050 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3214 1052 r10|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3220 1054 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3225 1056 JUMP ~[] destination: B89 -> B198  <||@
  Comment 3230 block B25 null  <||@
  Comment 3230 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3230 204 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3232 206 JUMP ~[] destination: B25 -> B28  <||@
  Comment 3237 block B7 null  <||@
  Comment 3237 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3237 66 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3239 68 JUMP ~[] destination: B7 -> B28  <||@
  Comment 3244 block B13 null  <||@
  Comment 3244 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3244 104 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3248 106 r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 3254 108 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 3257 110 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 3261 112 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 3267 block B15 null  <||@
  Comment 3267 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3267 122 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]  <||@
  Comment 3267 {Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]}  <||@
  Comment 3277 124 r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 3281 126 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74]  <||@
  Comment 3281 [rsi:0, r9:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3281 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3289 128 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3292 130 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 3298 block B19 null  <||@
  Comment 3298 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3298 154 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3304 156 JUMP ~[] destination: B19 -> B21  <||@
  Comment 3309 block B3 null  <||@
  Comment 3309 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3309 44 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3314 46 JUMP ~[] destination: B3 -> B28  <||@
  Comment 3319 block B113 null  <||@
  Comment 3319 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3319 1414 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3324 1416 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3330 1418 JUMP ~[] destination: B113 -> B114  <||@
  Comment 3335 block B14 null  <||@
  Comment 3335 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3335 116 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3341 118 JUMP ~[] destination: B14 -> B21  <||@
  Comment 3346 block B59 null  <||@
  Comment 3346 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3346 562 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3350 564 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3354 566 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3359 568 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3364 570 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3369 572 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 3369 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 3379 574 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3383 576 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3388 578 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3391 580 r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3399 582 CMP stack:80|DWORD y: 27 size: DWORD  <||@
  Comment 3404 588 rbx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3407 584 BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B64  <||@
  Comment 3413 block B60 null  <||@
  Comment 3413 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3413 590 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3417 592 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3422 600 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3427 602 rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3430 604 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3434 606 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3439 608 JUMP ~[] destination: B60 -> B61  <||@
  Comment 3444 block B145 null  <||@
  Comment 3444 1882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3444 1884 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3450 1886 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3455 1888 JUMP ~[] destination: B145 -> B146  <||@
  Comment 3460 block B58 null  <||@
  Comment 3460 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3460 556 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3465 558 JUMP ~[] destination: B58 -> B65  <||@
  Comment 3470 block B16 null  <||@
  Comment 3470 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3470 134 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3473 136 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 3479 block B17 null  <||@
  Comment 3479 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3479 140 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 3483 142 r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3488 144 JUMP ~[] destination: B17 -> B21  <||@
  Comment 3493 block B27 null  <||@
  Comment 3493 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3493 216 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3495 218 JUMP ~[] destination: B27 -> B28  <||@
  Comment 3500 block B64 null  <||@
  Comment 3500 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3500 650 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3505 652 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3510 658 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3515 662 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3520 664 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3524 666 JUMP ~[] destination: B64 -> B65  <||@
  Comment 3529 block B196 null  <||@
  Comment 3529 2404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3529 2406 r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 3534 2408 rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3538 2410 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3543 2412 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3548 2414 MOV [r15|QWORD + 668] y: -372755 size: DWORD  <||@
  Comment 3559 2416 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3566 2418 DEOPT info [bci:1415]  <||@
  Comment 3566 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3571 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415, duringCall: false, rethrow: false]
              |0             |1           |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18        |19         |20         |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-           |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |r9|DWORD  |rcx|DWORD  |r10|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rsi|QWORD[.]  |int[0|0x0]  |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |          |           |           |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3572 block B36 null  <||@
  Comment 3572 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3572 344 r11|DWORD = MOVE input: int[-355603|0xfffffffffffa92ed]  <||@
  Comment 3578 346 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3582 348 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3587 350 JUMP ~[] destination: B36 -> B208  <||@
  Comment 3587 block B208 null  <||@
  Comment 3587 2508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3587 2510 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3594 2512 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3601 2514 DEOPT info [bci:174]  <||@
  Comment 3601 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3606 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |rax|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3607 block B182 null  <||@
  Comment 3607 2262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3607 2264 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3612 2266 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3616 2268 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3621 2270 JUMP ~[] destination: B182 -> B183  <||@
  Comment 3621 block B183 null  <||@
  Comment 3621 2272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3621 2274 r10|DWORD = MOVE input: int[-332571|0xfffffffffffaece5]  <||@
  Comment 3627 2276 JUMP ~[] destination: B183 -> B184  <||@
  Comment 3627 block B184 null  <||@
  Comment 3627 2278 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3627 2280 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3634 2282 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3641 2284 DEOPT info [bci:46, 1321]  <||@
  Comment 3641 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3646 [rsi:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0                  |1                   |2  |3  |4          |5         |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 3647 block B180 null  <||@
  Comment 3647 2246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3647 2248 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3652 2250 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3656 2252 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3661 2254 JUMP ~[] destination: B180 -> B181  <||@
  Comment 3661 block B181 null  <||@
  Comment 3661 2256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3661 2258 r10|DWORD = MOVE input: int[-336411|0xfffffffffffadde5]  <||@
  Comment 3667 2260 JUMP ~[] destination: B181 -> B184  <||@
  Comment 3669 block B74 null  <||@
  Comment 3669 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3669 774 r10|DWORD = MOVE input: int[-296723|0xfffffffffffb78ed]  <||@
  Comment 3675 778 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3679 780 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3683 782 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3688 784 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3693 788 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3697 792 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3702 794 JUMP ~[] destination: B74 -> B128  <||@
  Comment 3702 block B128 null  <||@
  Comment 3702 1630 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3702 1632 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3709 1634 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3716 1636 DEOPT info [bci:365]  <||@
  Comment 3716 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3721 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0             |1          |2         |3  |4  |5          |6  |7  |8  |9               |10         |11         |12         |13         |14        |15         |16  |17  |18  |19  |20  |21  |22  |23         |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-          |r9|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |rcx|DWORD  |r11|DWORD  |rax|DWORD  |r13|DWORD  |r8|DWORD  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |rbx|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rdx|DWORD     |rdi|DWORD  |          |   |   |           |   |   |   |                |           |           |           |           |          |           |    |    |    |    |    |    |    |           |    |    |    |    |    |    |    |    |     <||@
  Comment 3722 block B72 null  <||@
  Comment 3722 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3722 744 r10|DWORD = MOVE input: int[-296467|0xfffffffffffb79ed]  <||@
  Comment 3728 748 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3732 750 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3736 752 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3741 754 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3746 758 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3750 762 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3755 764 JUMP ~[] destination: B72 -> B128  <||@
  Comment 3757 block B115 null  <||@
  Comment 3757 1426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3757 1428 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3760 1430 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1433516113]  <||@
  Comment 3760 {Object[d.a@1433516113]}  <||@
  Comment 3770 1432 MOV [r15|QWORD + 668] y: -372235 size: DWORD  <||@
  Comment 3781 1434 MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 3788 1436 DEOPT info [bci:914]  <||@
  Comment 3788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3793 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 3794 block B94 null  <||@
  Comment 3794 1122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3794 1124 r10|DWORD = MOVE input: int[-287003|0xfffffffffffb9ee5]  <||@
  Comment 3800 1128 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3804 1130 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3808 1132 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3813 1134 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3818 1138 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3822 1142 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3827 1144 JUMP ~[] destination: B94 -> B128  <||@
  Comment 3829 block B95 null  <||@
  Comment 3829 1146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3829 1148 r10|DWORD = MOVE input: int[-286227|0xfffffffffffba1ed]  <||@
  Comment 3835 1152 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3839 1154 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3843 1156 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3848 1158 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3853 1162 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3857 1166 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3862 1168 JUMP ~[] destination: B95 -> B128  <||@
  Comment 3867 block B123 null  <||@
  Comment 3867 1544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3867 1546 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3870 1548 MOV [r15|QWORD + 668] y: -373787 size: DWORD  <||@
  Comment 3881 1550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3888 1552 DEOPT info [bci:914]  <||@
  Comment 3888 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3893 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 3894 block B63 null  <||@
  Comment 3894 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3894 626 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3898 628 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3902 630 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3907 632 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3912 634 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3916 636 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3921 638 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3924 640 MOV [r15|QWORD + 668] y: -353307 size: DWORD  <||@
  Comment 3935 642 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3942 644 DEOPT info [bci:330]  <||@
  Comment 3942 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3947 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330, duringCall: false, rethrow: false]
              |0             |1          |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13         |14              |15         |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-          |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r11|DWORD  |stack:72|DWORD  |r13|DWORD  |stack:68|DWORD  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r8|DWORD      |rdx|DWORD  |                |   |   |           |   |   |   |                |                |           |                |           |                |           |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3948 block B186 null  <||@
  Comment 3948 2296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3948 2288 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3953 2290 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3957 2292 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3962 2298 JUMP ~[] destination: B186 -> B187  <||@
  Comment 3962 block B187 null  <||@
  Comment 3962 2300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3962 2302 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310093959]  <||@
  Comment 3962 {Object[d.a@1310093959]}  <||@
  Comment 3972 2304 MOV [r15|QWORD + 668] y: -330003 size: DWORD  <||@
  Comment 3983 2306 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 3990 2308 DEOPT info [bci:1315]  <||@
  Comment 3990 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3995 [rsi:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                   |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]        |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |stack:112|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |    |    |    |    |           |    |    |                    |    |                   |    |                    |    |    |     <||@
  Comment 3996 block B126 null  <||@
  Comment 3996 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3996 1588 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3999 1590 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4004 1592 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4007 1594 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4010 1596 r10|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5]  <||@
  Comment 4016 1598 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 4019 1600 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4022 1602 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4025 1604 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4029 1606 JUMP ~[] destination: B126 -> B128  <||@
  Comment 4034 block B90 null  <||@
  Comment 4034 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4034 1060 r11|DWORD = MOVE input: int[-297491|0xfffffffffffb75ed]  <||@
  Comment 4040 1064 JUMP ~[] destination: B90 -> B91  <||@
  Comment 4040 block B91 null  <||@
  Comment 4040 1066 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4040 1028 r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4045 1068 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4052 1070 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4059 1072 DEOPT info [bci:552]  <||@
  Comment 4059 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4064 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r8|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r9|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 4065 block B22 null  <||@
  Comment 4065 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4065 182 r11|DWORD = MOVE input: int[-280595|0xfffffffffffbb7ed]  <||@
  Comment 4071 184 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4075 186 JUMP ~[] destination: B22 -> B23  <||@
  Comment 4075 block B23 null  <||@
  Comment 4075 188 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4075 190 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4082 192 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4089 194 DEOPT info [bci:10, 74]  <||@
  Comment 4089 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4094 [rsi:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 4095 block B88 null  <||@
  Comment 4095 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4095 1026 r11|DWORD = MOVE input: int[-297747|0xfffffffffffb74ed]  <||@
  Comment 4101 1030 JUMP ~[] destination: B88 -> B91  <||@
  Comment 4103 block B207 null  <||@
  Comment 4103 2500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4103 2502 r11|DWORD = MOVE input: int[-355347|0xfffffffffffa93ed]  <||@
  Comment 4109 2504 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4113 2506 JUMP ~[] destination: B207 -> B208  <||@
  Comment 4118 block B18 null  <||@
  Comment 4118 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4118 148 r11|DWORD = MOVE input: int[-284443|0xfffffffffffba8e5]  <||@
  Comment 4124 150 JUMP ~[] destination: B18 -> B23  <||@
  Comment 4126 block B81 null  <||@
  Comment 4126 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4126 910 r10|DWORD = MOVE input: int[-291603|0xfffffffffffb8ced]  <||@
  Comment 4132 912 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4136 914 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4140 916 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4144 918 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4149 920 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4154 922 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4158 924 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4162 926 JUMP ~[] destination: B81 -> B128  <||@
  Comment 4167 block B83 null  <||@
  Comment 4167 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4167 942 r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed]  <||@
  Comment 4173 944 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4177 946 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4181 948 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4185 950 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4190 952 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4195 954 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4199 956 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4203 958 JUMP ~[] destination: B83 -> B128  <||@
  Comment 4208 block B127 null  <||@
  Comment 4208 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4208 1610 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4211 1612 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4216 1614 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4219 1616 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4222 1618 r10|DWORD = MOVE input: int[-301083|0xfffffffffffb67e5]  <||@
  Comment 4228 1620 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 4231 1622 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4234 1624 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4237 1626 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4241 1628 JUMP ~[] destination: B127 -> B128  <||@
  Comment 4246 block B85 null  <||@
  Comment 4246 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4246 976 r10|DWORD = MOVE input: int[-291347|0xfffffffffffb8ded]  <||@
  Comment 4252 978 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4256 980 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4260 982 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4264 984 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4269 986 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4274 988 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4278 990 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4282 992 JUMP ~[] destination: B85 -> B128  <||@
  Comment 4287 block B179 null  <||@
  Comment 4287 2234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4287 2236 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4292 2238 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4296 2240 MOV [r15|QWORD + 668] y: -340507 size: DWORD  <||@
  Comment 4307 2242 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4314 2244 DEOPT info [bci:1343]  <||@
  Comment 4314 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4319 [rsi:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18        |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |r9|DWORD  |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |          |    |    |    |           |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 4320 block B93 null  <||@
  Comment 4320 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4320 1100 r10|DWORD = MOVE input: int[-289051|0xfffffffffffb96e5]  <||@
  Comment 4326 1104 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4330 1106 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4334 1108 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4339 1110 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4344 1114 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4348 1118 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4353 1120 JUMP ~[] destination: B93 -> B128  <||@
  Comment 4358 block B137 null  <||@
  Comment 4358 1806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4358 1808 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4363 1810 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4368 1812 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4372 1814 MOV [r15|QWORD + 668] y: -360475 size: DWORD  <||@
  Comment 4383 1816 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4390 1818 DEOPT info [bci:1227]  <||@
  Comment 4390 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4395 [rax:0, rsi:0, stack:8, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18        |19         |20  |21  |22         |23  |24  |25                  |26  |27                 |28            |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |r8|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 4396 block B30 null  <||@
  Comment 4396 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4396 282 r11|DWORD = MOVE input: int[-355091|0xfffffffffffa94ed]  <||@
  Comment 4402 284 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4406 286 JUMP ~[] destination: B30 -> B208  <||@
  Comment 4411 block B203 null  <||@
  Comment 4411 2476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4411 2478 MOV [r15|QWORD + 668] y: -350739 size: DWORD  <||@
  Comment 4422 2480 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4429 2482 DEOPT info [bci:1445]  <||@
  Comment 4429 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4434 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19        |20           |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |r9|DWORD  |long[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 4435 block B110 null  <||@
  Comment 4435 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4435 1392 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4438 1394 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4440 1396 MOV [r15|QWORD + 668] y: -316435 size: DWORD  <||@
  Comment 4451 1398 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4458 1400 DEOPT info [bci:889]  <||@
  Comment 4458 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4463 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4464 block B92 null  <||@
  Comment 4464 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4464 1076 r10|DWORD = MOVE input: int[-296979|0xfffffffffffb77ed]  <||@
  Comment 4470 1080 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4474 1082 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4478 1084 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4483 1086 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4488 1090 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4492 1094 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4497 1096 JUMP ~[] destination: B92 -> B128  <||@
  Comment 4502 block B77 null  <||@
  Comment 4502 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4502 832 r10|DWORD = MOVE input: int[-297235|0xfffffffffffb76ed]  <||@
  Comment 4508 834 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4512 836 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4516 838 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4520 840 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4525 842 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4530 844 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4534 846 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4538 850 JUMP ~[] destination: B77 -> B128  <||@
  Comment 4543 block B100 null  <||@
  Comment 4543 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4543 1258 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4547 1260 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4551 1262 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4554 1264 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4557 1266 r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4562 1268 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4567 1270 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4570 1272 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4575 1274 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4578 1276 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4580 1278 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4584 1280 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4587 1282 r10|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed]  <||@
  Comment 4593 1284 JUMP ~[] destination: B100 -> B128  <||@
  Comment 4598 block B170 null  <||@
  Comment 4598 2108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4598 2110 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4603 2112 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4608 2114 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 4613 2116 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4618 2118 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4623 2120 JUMP ~[] destination: B170 -> B171  <||@
  Comment 4623 block B171 null  <||@
  Comment 4623 2122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4623 2124 MOV [r15|QWORD + 668] y: -328219 size: DWORD  <||@
  Comment 4634 2126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4641 2128 DEOPT info [bci:0, 140, 1321]  <||@
  Comment 4641 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4646 [rax:0, rcx:0, rdx:0, rsi:0, rdi:0, r8:0]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18  |19  |20  |21  |22         |23  |24  |25            |26  |27            |28           |29            |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |rdi|QWORD[.]  |-   |rax|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.]  |-   |-   |-    <||@
  Comment 4647 block B79 null  <||@
  Comment 4647 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4647 860 r10|DWORD = MOVE input: int[-357147|0xfffffffffffa8ce5]  <||@
  Comment 4653 862 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4657 864 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4661 866 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4665 868 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4670 870 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4675 872 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4679 874 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4683 878 JUMP ~[] destination: B79 -> B128  <||@
  Comment 4688 block B105 null  <||@
  Comment 4688 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4688 1318 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4692 1320 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4696 1322 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4699 1324 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4702 1326 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4705 1328 r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4710 1330 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4715 1332 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4718 1334 r10|DWORD = MOVE input: int[-359195|0xfffffffffffa84e5]  <||@
  Comment 4724 1336 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4729 1338 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4732 1340 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4736 1342 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4740 1344 JUMP ~[] destination: B105 -> B128  <||@
  Comment 4745 block B162 null  <||@
  Comment 4745 2044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4745 2046 r10|DWORD = MOVE input: int[-325395|0xfffffffffffb08ed]  <||@
  Comment 4751 2048 JUMP ~[] destination: B162 -> B184  <||@
  Comment 4756 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4756 4  <||@
  Comment 4762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4762 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9916[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  method "HotSpotCompilation-9916[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  date 1527005232117
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107cae760   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41cc0bf5 slotKind: QWORD  <||@
  Comment 48 6 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 51 8 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 56 10 MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 60 12 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 64 14 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 64 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 74 16 rbx|DWORD = TZCNT r10|QWORD size: QWORD  <||@
  Comment 79 18 rcx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 84 20 rdi|DWORD = SUB (x: rcx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 88 22 rcx|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 92 24 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 94 26 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.7284916068028063 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 106 34 BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 112 block B2 null  <||@
  Comment 112 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 38 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 117 40 JUMP ~[] destination: B2 -> B6  <||@
  Comment 117 block B6 null  <||@
  Comment 117 58 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 117 60 CMP rdx|DWORD y: -21 size: DWORD  <||@
  Comment 120 62 BRANCH trueDestinationProbability: 3.7093885904323354E-4 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 126 block B8 null  <||@
  Comment 126 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 72 CMP rcx|DWORD y: 27 size: DWORD  <||@
  Comment 129 74 BRANCH trueDestinationProbability: 0.5207354992258577 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B26  <||@
  Comment 135 block B9 null  <||@
  Comment 135 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 78 rax|DWORD = ADD (x: rdi|DWORD, ~y: [r11|QWORD[.] + rcx|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 142 80 CMP rax|DWORD y: 64 size: DWORD  <||@
  Comment 145 82 BRANCH trueDestinationProbability: 0.9986731860733679 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B25  <||@
  Comment 151 block B10 null  <||@
  Comment 151 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 86 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 88 BRANCH trueDestinationProbability: 0.39220076270143933 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 159 block B24 null  <||@
  Comment 159 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 198 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 161 200 JUMP ~[] destination: B24 -> B28  <||@
  Comment 161 block B28 null  <||@
  Comment 161 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 161 222 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 166 224 rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 176 226 rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 182 228 r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 192 230 rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 195 232 xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM  <||@
  Comment 200 234 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 200 {DataSection[0x0]}  <||@
  Comment 209 236 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 213 238 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 213 {DataSection[0x8]}  <||@
  Comment 222 240 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 226 242 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 226 {DataSection[0x10]}  <||@
  Comment 235 244 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 239 246 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 247 248 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 247 {DataSection[0x18]}  <||@
  Comment 256 250 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 260 252 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 264 254 r13|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 269 256 r14|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 279 258 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 289 260 rcx|QWORD = AND (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 292 262 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 296 264 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 298 266 r9|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 305 268 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 308 270 BRANCH trueDestinationProbability: 0.8012441897039807 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 314 block B29 null  <||@
  Comment 314 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 274 rcx|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 324 276 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 327 278 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 333 block B31 null  <||@
  Comment 333 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 290 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 336 292 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 341 294 r9|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 351 296 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 354 298 JUMP ~[] destination: B31 -> B38  <||@
  Comment 354 block B38 null  <||@
  Comment 354 362 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 354 364 rcx|DWORD = NEG r11|DWORD size: DWORD  <||@
  Comment 359 366 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 362 368 BRANCH trueDestinationProbability: 0.7284909928572612 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 368 block B39 null  <||@
  Comment 368 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 372 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 376 374 stack:48|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 384 376 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 386 378 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 391 380 JUMP ~[] destination: B39 -> B41  <||@
  Comment 391 block B41 null  <||@
  Comment 391 402 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 391 404 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 395 406 BRANCH trueDestinationProbability: 0.7284911334689859 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 401 block B42 null  <||@
  Comment 401 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 410 stack:52|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 409 412 r14|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 415 414 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 421 416 JUMP ~[] destination: B42 -> B44  <||@
  Comment 421 block B44 null  <||@
  Comment 421 436 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 421 438 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 423 440 rdx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 428 442 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 430 444 r9|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 436 446 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 439 448 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 442 450 BRANCH trueDestinationProbability: 0.4467778355907999 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 448 block B48 null  <||@
  Comment 448 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 476 rax|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 451 478 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 454 480 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 457 486 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 463 482 BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B48 -> B50 falseDestination: B48 -> B52  <||@
  Comment 469 block B52 null  <||@
  Comment 469 502 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 469 504 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 471 506 BRANCH trueDestinationProbability: 0.9999036283910759 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55  <||@
  Comment 477 block B53 null  <||@
  Comment 477 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 510 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 479 512 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 482 514 rsi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 487 516 JUMP ~[] destination: B53 -> B55  <||@
  Comment 487 block B55 null  <||@
  Comment 487 522 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 487 524 r8|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 493 526 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 495 528 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 497 530 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 500 532 stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 505 534 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 508 536 BRANCH trueDestinationProbability: 0.9999036206508819 condition: |<| trueDestination: B55 -> B56 falseDestination: B55 -> B59  <||@
  Comment 514 block B56 null  <||@
  Comment 514 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 540 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 514 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 524 542 rdx|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 528 544 rbx|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 533 546 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 537 548 BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B58  <||@
  Comment 543 block B61 null  <||@
  Comment 543 610 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 543 612 CMP r14|DWORD y: 27 size: DWORD  <||@
  Comment 547 614 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 553 block B62 null  <||@
  Comment 553 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 618 rcx|DWORD = MOV [rcx|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 558 620 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 561 622 JUMP ~[] destination: B62 -> B65  <||@
  Comment 561 block B65 null  <||@
  Comment 561 668 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 561 670 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 566 672 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 569 674 BRANCH trueDestinationProbability: 0.9858815592926324 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B131  <||@
  Comment 575 block B66 null  <||@
  Comment 575 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 678 rdx|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 579 680 rcx|DWORD = ADD (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 584 682 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 587 684 BRANCH trueDestinationProbability: 0.965280153803542 condition: < trueDestination: B66 -> B67 falseDestination: B66 -> B131  <||@
  Comment 593 block B67 null  <||@
  Comment 593 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 688 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 598 690 r14|DWORD[.] = MOV [rbp|QWORD[.] + 28] size: DWORD  <||@
  Comment 602 692 CMP rbx|DWORD y: 32 size: DWORD  <||@
  Comment 605 694 BRANCH trueDestinationProbability: 9.283640537438576E-4 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B96  <||@
  Comment 611 block B96 null  <||@
  Comment 611 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 1172 CMP rdi|DWORD y: 27 size: DWORD  <||@
  Comment 614 1174 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B127  <||@
  Comment 620 block B97 null  <||@
  Comment 620 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 1178 CMP r13|DWORD y: 27 size: DWORD  <||@
  Comment 624 1180 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B97 -> B98 falseDestination: B97 -> B126  <||@
  Comment 630 block B98 null  <||@
  Comment 630 1182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 1184 stack:48|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 634 1186 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 638 1188 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 643 1190 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 643 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 653 1192 r8|QWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 8 + 16] size: QWORD  <||@
  Comment 658 1194 rcx|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD  <||@
  Comment 663 1196 rbx|QWORD = IMUL (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 670 1198 r13|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 673 1200 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 676 1202 rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 679 1204 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 681 1206 r13|QWORD = SHL (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 684 1210 rax|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 687 1212 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 689 1214 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:365]  <||@
  Comment 689 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2          |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |r10|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |rcx|DWORD  |stack:52|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:48|DWORD  |stack:92|DWORD  |           |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 689 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 1216 rbx|QWORD = SHL r13|QWORD y: 3 size: QWORD  <||@
  Comment 699 1218 r10|QWORD = SHL r13|QWORD size: QWORD  <||@
  Comment 705 1220 rbx|QWORD = ADD (x: rbx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 708 1222 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 711 1224 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 713 1226 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 716 1228 rcx|QWORD = SHL r8|QWORD y: 3 size: QWORD  <||@
  Comment 723 1230 r8|QWORD = SHL r8|QWORD size: QWORD  <||@
  Comment 726 1232 rcx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 729 1234 r8|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 736 1236 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 739 1238 r8|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 742 1240 rdx|QWORD = ADD (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 748 1242 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 750 1244 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 752 1246 BRANCH trueDestinationProbability: 0.1356671003058001 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B104  <||@
  Comment 758 block B104 null  <||@
  Comment 758 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 758 1312 CMP [r14|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:365]  <||@
  Comment 758 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5               |6  |7  |8  |9          |10        |11         |12         |13              |14         |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbp|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |r11|DWORD  |r9|DWORD  |rdi|DWORD  |r10|DWORD  |stack:52|DWORD  |rsi|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:48|DWORD  |stack:92|DWORD  |                |   |   |                |   |   |   |           |          |           |           |                |           |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 758 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 1314 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 773 block B106 null  <||@
  Comment 773 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 1348 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 778 1350 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 781 1352 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 790 1354 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 793 1360 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 799 1356 BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108  <||@
  Comment 805 block B108 null  <||@
  Comment 805 1368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 1372 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 808 1374 JUMP ~[] destination: B108 -> B109  <||@
  Comment 808 block B109 null  <||@
  Comment 808 1376 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 808 1378 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 811 1380 r9|DWORD = SETCC condition: >  <||@
  Comment 819 1382 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 822 1384 rdi|DWORD = SETCC condition: >  <||@
  Comment 830 1386 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 834 1388 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 840 block B111 null  <||@
  Comment 840 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 1404 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 844 1406 BRANCH trueDestinationProbability: 0.9998292291403394 condition: < trueDestination: B111 -> B114 falseDestination: B111 -> B113  <||@
  Comment 850 block B114 null  <||@
  Comment 850 1420 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 850 1422 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 853 1424 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 859 block B116 null  <||@
  Comment 859 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 1440 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 867 1442 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 871 1444 stack:92|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 876 1446 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 879 1448 rdi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 882 1450 rcx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 885 1452 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 890 1454 JUMP ~[] destination: B116 -> B117  <||@
  Comment 890 block B117 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 890 1456 [] = LABEL numbPhis: 5 align: true label: ?  <||@
  Comment 896 1458 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 899 1460 BRANCH trueDestinationProbability: 0.9124800935868261 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B125  <||@
  Comment 905 block B118 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 905 1462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 1464 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 908 1466 BRANCH trueDestinationProbability: 0.9574198800803831 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B124  <||@
  Comment 914 block B119 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 914 1468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 1470 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 917 1472 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B123  <||@
  Comment 923 block B120 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 923 1474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 923 1476 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 926 1478 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 928 1480 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r13|QWORD) size: QWORD state [bci:914]  <||@
  Comment 928 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 928 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 931 1482 r8|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 934 1484 r9|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 938 1486 MOV (x: [r14|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 944 1488 r9|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 951 1490 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 954 1492 r9|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 957 1494 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 960 1496 rdx|QWORD = SHL rdi|QWORD y: 3 size: QWORD  <||@
  Comment 967 1498 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 970 1500 rdx|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 973 1502 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 977 1504 BRANCH trueDestinationProbability: 3.567423074385401E-4 condition: < trueDestination: B120 -> B121 falseDestination: B120 -> B122  <||@
  Comment 983 block B122 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 983 1520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 1522 CMP (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 986 1524 rcx|DWORD = SETCC condition: >  <||@
  Comment 992 1526 rdi|QWORD = ADD (x: rdx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 998 1528 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1001 1530 rdi|DWORD = SETCC condition: >  <||@
  Comment 1009 1532 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1009 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18         |19         |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |rcx|DWORD  |rdi|DWORD  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rdx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1009 {infopoint: SAFEPOINT}  <||@
  Comment 1009 11  <||@
  Comment 1015 1534 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1018 1536 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1021 1538 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1024 1540 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1027 1542 JUMP ~[] destination: B122 -> B117  <||@
  Comment 1032 block B121 loop 0 depth 1 header:375|LoopBegin  <||@
  Comment 1032 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 1508 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1032 [rbp:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22        |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[1|0x1]  |int[1|0x1]  |-   |-   |r8|DWORD  |-   |-   |r9|QWORD  |-   |r13|QWORD  |-   |rdx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 1032 {infopoint: SAFEPOINT}  <||@
  Comment 1032 11  <||@
  Comment 1038 1510 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1041 1512 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1044 1514 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1050 1516 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1056 1518 JUMP ~[] destination: B121 -> B117  <||@
  Comment 1061 block B125 null  <||@
  Comment 1061 1570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 1572 rsi|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1067 1574 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1070 1576 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1073 1578 rdx|DWORD = SETCC condition: =  <||@
  Comment 1079 1580 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1082 1582 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 1584 JUMP ~[] destination: B125 -> B198  <||@
  Comment 1085 block B198 null  <||@
  Comment 1085 2438 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1085 2440 MOVB (x: [rsi|QWORD[.] + 25], y: rdx|DWORD) size: BYTE  <||@
  Comment 1088 2442 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1093 2444 MOV (x: [rsi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1096 2446 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1100 2448 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 1104 2450 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1107 2452 BRANCH trueDestinationProbability: 0.5883269357403274 condition: = trueDestination: B198 -> B199 falseDestination: B198 -> B200  <||@
  Comment 1113 block B199 null  <||@
  Comment 1113 2454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 2456 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1122 12  <||@
  Comment 1132 block B26 null  <||@
  Comment 1132 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1132 210 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1134 212 JUMP ~[] destination: B26 -> B28  <||@
  Comment 1139 block B45 null  <||@
  Comment 1139 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1139 454 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1142 456 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1144 458 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 1147 464 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1152 460 BRANCH trueDestinationProbability: 0.3469594269009605 condition: = trueDestination: B45 -> B50 falseDestination: B45 -> B52  <||@
  Comment 1163 block B200 null  <||@
  Comment 1163 2458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 2460 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1166 2462 BRANCH trueDestinationProbability: 0.721519975031211 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B202  <||@
  Comment 1172 block B201 null  <||@
  Comment 1172 2464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 2466 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505]  <||@
  Comment 1172 9  <||@
  Comment 1175 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1180 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1181 2468 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1190 12  <||@
  Comment 1200 block B4 null  <||@
  Comment 1200 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1200 50 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 1203 52 BRANCH trueDestinationProbability: 0.9997953833365305 condition: < trueDestination: B4 -> B6 falseDestination: B4 -> B27  <||@
  Comment 1214 block B124 null  <||@
  Comment 1214 1554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1214 1556 rsi|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1220 1558 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rbx|QWORD) size: QWORD  <||@
  Comment 1223 1560 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1226 1562 rdx|DWORD = SETCC condition: =  <||@
  Comment 1232 1564 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1235 1566 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 1568 JUMP ~[] destination: B124 -> B198  <||@
  Comment 1243 block B40 null  <||@
  Comment 1243 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 384 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1248 386 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1251 388 r9|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 1257 390 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1260 392 rbp|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1265 394 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1269 396 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1274 398 rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1276 400 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1281 block B43 null  <||@
  Comment 1281 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1281 420 r13|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1287 422 r14|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1293 424 r14|DWORD = ADD (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1296 426 rax|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1299 428 stack:52|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1304 430 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1307 432 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1310 434 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1315 block B11 null  <||@
  Comment 1315 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1315 92 CMP rdx|DWORD y: 52 size: DWORD  <||@
  Comment 1318 94 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B22  <||@
  Comment 1324 block B12 null  <||@
  Comment 1324 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1324 98 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1327 100 BRANCH trueDestinationProbability: 0.0011918951132300348 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B20  <||@
  Comment 1333 block B20 null  <||@
  Comment 1333 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1333 160 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1339 162 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1339 block B21 null  <||@
  Comment 1339 164 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1339 166 rcx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 1344 168 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1346 170 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1349 172 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1354 174 rcx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1357 176 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170]  <||@
  Comment 1357 9  <||@
  Comment 1359 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>}  <||@
  Comment 1364 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1365 178 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1374 12  <||@
  Comment 1384 block B32 null  <||@
  Comment 1384 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 302 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1388 304 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B207  <||@
  Comment 1394 block B33 null  <||@
  Comment 1394 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 308 rsi|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1400 310 r11|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 1410 312 rsi|QWORD = OR (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1413 314 r11|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 1419 316 r11|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1422 318 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1425 320 rsi|QWORD = SHR (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1428 322 r11|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 1431 324 TEST (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1434 326 BRANCH trueDestinationProbability: 0.008440302444170916 condition: = trueDestination: B33 -> B38 falseDestination: B33 -> B35  <||@
  Comment 1440 block B35 null  <||@
  Comment 1440 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1440 334 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1443 336 rbp|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1446 338 TEST (x: rbp|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1449 340 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 1455 block B37 null  <||@
  Comment 1455 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1455 354 rcx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1460 356 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1463 358 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1466 360 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1471 block B50 null  <||@
  Comment 1471 490 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1471 492 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 1473 494 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1478 block B99 null  <||@
  Comment 1478 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1478 1250 rax|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1482 1252 CMP (x: rdx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1485 1254 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 1491 block B101 null  <||@
  Comment 1491 1286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 1288 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1494 1290 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1496 1296 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1502 1292 BRANCH trueDestinationProbability: 0.010728526052578225 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B109  <||@
  Comment 1513 block B202 null  <||@
  Comment 1513 2470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1513 2472 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1516 2474 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B204  <||@
  Comment 1522 block B204 null  <||@
  Comment 1522 2484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 2486 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1526 2488 BRANCH trueDestinationProbability: 0.3841412160268982 condition: < trueDestination: B204 -> B205 falseDestination: B204 -> B206  <||@
  Comment 1532 block B206 null  <||@
  Comment 1532 2494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1532 2496 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498]  <||@
  Comment 1532 9  <||@
  Comment 1535 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1540 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1541 2498 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1550 12  <||@
  Comment 1560 block B205 null  <||@
  Comment 1560 2490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1560 2492 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1569 12  <||@
  Comment 1579 block B131 null  <||@
  Comment 1579 1670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1579 1656 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1583 1658 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1586 1660 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1591 1662 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1596 1664 stack:96|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1600 1666 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1605 1672 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1608 1674 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1611 1676 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1616 1678 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074]  <||@
  Comment 1616 8  <||@
  Comment 1623 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1628 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1629 1680 NULLCHECK [rax|QWORD[.]] state [bci:1077]  <||@
  Comment 1629 [rax:0, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |                |   |   |                |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 1629 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1631 1682 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 1684 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 1686 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081]  <||@
  Comment 1639 {HotSpotMethod<FDBigInteger.getNormalizationBias()>}  <||@
  Comment 1639 9  <||@
  Comment 1644 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1645 1688 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1650 1690 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1652 1692 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1656 1694 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090]  <||@
  Comment 1656 9  <||@
  Comment 1663 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1668 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:64|QWORD  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1669 1696 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 1698 rcx|DWORD = ADD (x: stack:92|DWORD, y: stack:76|DWORD) size: DWORD  <||@
  Comment 1682 1700 rsi|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1687 1702 rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 1691 1704 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103]  <||@
  Comment 1691 8  <||@
  Comment 1695 {HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>}  <||@
  Comment 1700 [stack:24, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1701 1706 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 1708 NULLCHECK [rax|QWORD[.]] state [bci:1106]  <||@
  Comment 1706 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |                |                |                |                |    |    |    |    |    |    |    |    |    |                    |                |    |    |    |    |    |     <||@
  Comment 1706 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1708 1710 rsi|DWORD = ADD (x: stack:92|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1716 1712 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1720 1714 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1724 1716 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119]  <||@
  Comment 1724 8  <||@
  Comment 1727 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1732 [stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26              |27                 |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |stack:72|DWORD  |stack:52|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |stack:92|DWORD  |stack:64|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 1733 1718 rsi|DWORD = ADD (x: stack:72|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1741 1720 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1745 1722 rsi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1749 1724 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 1726 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135]  <||@
  Comment 1754 8  <||@
  Comment 1759 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1764 [stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-    <||@
  Comment 1765 1728 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 1730 NULLCHECK [rax|QWORD[.]] state [bci:1138]  <||@
  Comment 1770 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |                    |    |                   |                    |    |    |    |     <||@
  Comment 1770 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1772 1732 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1777 1734 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1782 1736 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147]  <||@
  Comment 1782 9  <||@
  Comment 1783 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1788 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1789 1738 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 1740 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 1742 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1803 1744 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156]  <||@
  Comment 1803 9  <||@
  Comment 1807 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 1812 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1813 1746 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1815 1748 r10|DWORD = SETCC condition: <  <||@
  Comment 1823 1750 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1828 1752 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1833 1754 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 1756 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1843 1758 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175]  <||@
  Comment 1843 9  <||@
  Comment 1847 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 1852 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1853 1760 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1858 1762 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1861 1764 BRANCH trueDestinationProbability: 0.09966777408637872 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B135  <||@
  Comment 1867 block B135 null  <||@
  Comment 1867 1788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1867 1790 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1872 1792 JUMP ~[] destination: B135 -> B136  <||@
  Comment 1872 block B136 null  <||@
  Comment 1872 1794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1872 1796 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1875 1798 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1878 1800 r11|DWORD = SETCC condition: <  <||@
  Comment 1886 1802 CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1227]  <||@
  Comment 1886 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18              |19         |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |stack:28|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |stack:92|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1886 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1894 1804 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 1900 block B138 null  <||@
  Comment 1900 1820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 1822 r10|DWORD = LEA [r10|DWORD + 48] size: DWORD  <||@
  Comment 1904 1824 MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 1913 1826 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1919 1828 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1924 1830 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1928 1832 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1928 block B139 null  <||@
  Comment 1928 1834 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1928 1836 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1933 1838 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1935 1840 BRANCH trueDestinationProbability: 0.04053156146179402 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 1941 block B141 null  <||@
  Comment 1941 1850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1941 1852 CMP r11|DWORD y: -3 size: DWORD  <||@
  Comment 1945 1854 BRANCH trueDestinationProbability: 0.26973684210526316 condition: < trueDestination: B141 -> B142 falseDestination: B141 -> B143  <||@
  Comment 1951 block B143 null  <||@
  Comment 1951 1864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1951 1866 CMP r11|DWORD y: 8 size: DWORD  <||@
  Comment 1955 1868 BRANCH trueDestinationProbability: 0.9971550497866287 condition: < trueDestination: B143 -> B144 falseDestination: B143 -> B145  <||@
  Comment 1961 block B144 null  <||@
  Comment 1961 1870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 1872 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1964 1874 rdx|DWORD = SETCC condition: <  <||@
  Comment 1970 1876 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1973 1878 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1977 1880 JUMP ~[] destination: B144 -> B146  <||@
  Comment 1977 block B146 null  <||@
  Comment 1977 1890 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1977 1892 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1982 1894 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1985 1896 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1988 1904 JUMP ~[] destination: B146 -> B147  <||@
  Comment 1993 block B148 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 1993 1912 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2000 1914 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2002 1916 BRANCH trueDestinationProbability: 0.9937296695771272 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B190  <||@
  Comment 2008 block B149 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2008 1918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2008 1920 NULLCHECK [rbx|QWORD[.]] state [bci:1268]  <||@
  Comment 2008 [rax:0, rbx:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18          |19          |20  |21  |22  |23  |24  |25            |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r10|QWORD[.]  |-   |rax|QWORD[.]  |Object[null]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2008 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2010 1922 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2013 1924 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2016 1926 stack:112|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 1928 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282]  <||@
  Comment 2021 9  <||@
  Comment 2023 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 2028 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22  |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2029 1930 rsi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 1932 stack:80|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2038 1934 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312]  <||@
  Comment 2038 9  <||@
  Comment 2039 {HotSpotMethod<FDBigInteger.multBy10()>}  <||@
  Comment 2044 [stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2045 1936 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315]  <||@
  Comment 2045 [rax:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|QWORD[.]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |    |    |    |    |                |    |    |                    |    |                   |    |                    |    |    |     <||@
  Comment 2045 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2048 1938 rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 2051 1940 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 1942 rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 2060 1944 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2062 1946 r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2069 1948 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2072 1950 BRANCH trueDestinationProbability: 0.23168656987595593 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B151  <||@
  Comment 2078 block B151 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2078 1958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 1960 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2081 1962 BRANCH trueDestinationProbability: 4.944535213690093E-4 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B153  <||@
  Comment 2087 block B153 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2087 1970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2087 1972 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 2090 1974 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B153 -> B159 falseDestination: B153 -> B155  <||@
  Comment 2096 block B155 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2096 1980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2096 1982 rsi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 2099 1984 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2102 1986 r11|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2105 1988 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2108 1990 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B186  <||@
  Comment 2114 block B156 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2114 1992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2114 1994 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 2117 1996 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B156 -> B186 falseDestination: B156 -> B159  <||@
  Comment 2123 block B159 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2123 2012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 2014 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2126 2016 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2129 2018 JUMP ~[] destination: B159 -> B160  <||@
  Comment 2134 block B172 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2134 2130 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2144 2132 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2148 2134 rdx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2153 2136 CMP (x: rdx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321]  <||@
  Comment 2153 [rax:0, rcx:0, rsi:0, r9:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5         |6  |7 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |r10|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2153 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2160 2138 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B172 -> B173 falseDestination: B172 -> B182  <||@
  Comment 2166 block B173 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2166 2140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2166 2142 rbx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 2171 2144 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:46, 1321]  <||@
  Comment 2171 [rax:0, rcx:0, rsi:0, r10:0, stack:8, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5         |6  |7 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22              |23  |24  |25                  |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |r10|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2171 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2179 2146 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B173 -> B174 falseDestination: B173 -> B180  <||@
  Comment 2185 block B174 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2185 2148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2185 2150 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 2189 2152 rsi|DWORD = MOV [rsi|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2193 2154 rcx|DWORD = MOV [rcx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2197 2156 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2199 2158 BRANCH trueDestinationProbability: 0.0073559460563955865 condition: = trueDestination: B174 -> B175 falseDestination: B174 -> B176  <||@
  Comment 2205 block B175 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2205 2160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2205 2162 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2208 2164 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2211 2166 JUMP ~[] destination: B175 -> B160  <||@
  Comment 2211 block B160 loop 2 depth 2 outer 1 header:812|LoopBegin  <||@
  Comment 2211 2020 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2211 2022 r9|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD  <||@
  Comment 2215 2024 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 2222 2026 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2226 2028 BRANCH trueDestinationProbability: 0.007302231237322543 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B172  <||@
  Comment 2233 block B176 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2233 2168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2233 2170 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2235 2172 rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2240 2174 rdx|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rsi|DWORD) condition: |>|  <||@
  Comment 2248 2176 JUMP ~[] destination: B176 -> B177  <||@
  Comment 2248 block B177 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2248 2178 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2248 2180 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2250 2182 r9|DWORD = SETCC condition: <  <||@
  Comment 2258 2184 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2263 2186 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2266 2188 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2269 2190 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2274 2192 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2279 2194 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2279 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2279 9  <||@
  Comment 2284 [stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2285 2196 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2290 2198 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2293 2200 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2298 2202 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2298 [rdx:0, rsi:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18              |19  |20  |21  |22              |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |stack:72|DWORD  |-   |-   |-   |stack:80|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |                |    |    |    |                |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 2298 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2306 2204 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B177 -> B178 falseDestination: B177 -> B179  <||@
  Comment 2312 block B178 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2312 2206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2312 2208 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2316 2210 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 2320 2212 r11|DWORD = LEA [rbx|DWORD + 48] size: DWORD  <||@
  Comment 2324 2214 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 2330 2216 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2333 2218 rcx|DWORD = SETCC condition: <  <||@
  Comment 2339 2220 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2342 2222 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2347 2224 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2352 2232 JUMP ~[] destination: B178 -> B147  <||@
  Comment 2352 block B147 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2352 1906 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2352 1898 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2357 1900 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2362 1902 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2367 1908 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2370 1910 BRANCH trueDestinationProbability: 0.9450309428467419 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B190  <||@
  Comment 2381 block B150 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2381 1952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2381 1954 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2386 1956 JUMP ~[] destination: B150 -> B177  <||@
  Comment 2391 block B161 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2391 2030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2391 2032 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2396 2034 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2400 2036 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2405 2038 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2410 2040 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 2414 2042 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163  <||@
  Comment 2420 block B163 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2420 2050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2420 2052 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2423 2054 JUMP ~[] destination: B163 -> B164  <||@
  Comment 2428 block B166 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2428 2074 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2432 2076 rdx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2437 2078 CMP (x: rdx|DWORD, y: [r9|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140, 1321]  <||@
  Comment 2437 [rcx:0, rsi:0, r9:0, stack:8, stack:16, stack:24, stack:64, stack:88]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2437 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2445 2080 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B166 -> B167 falseDestination: B166 -> B170  <||@
  Comment 2451 block B167 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2451 2082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2451 2084 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2454 2086 CMP [rcx|QWORD[.] + r11|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 2460 2088 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B169  <||@
  Comment 2466 block B168 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2466 2090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2466 2092 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2469 2094 JUMP ~[] destination: B168 -> B164  <||@
  Comment 2469 block B164 loop 3 depth 2 outer 1 header:862|LoopBegin  <||@
  Comment 2469 2056 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2469 2058 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 2473 2060 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B164 -> B165 falseDestination: B164 -> B166  <||@
  Comment 2475 block B165 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2475 2062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2475 2064 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2480 2066 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2485 2070 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2490 2072 JUMP ~[] destination: B165 -> B177  <||@
  Comment 2495 block B169 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2495 2096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2495 2098 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2500 2100 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2505 2104 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2510 2106 JUMP ~[] destination: B169 -> B177  <||@
  Comment 2515 block B152 loop 1 depth 1 header:550|LoopBegin  <||@
  Comment 2515 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2515 1966 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2520 1968 JUMP ~[] destination: B152 -> B177  <||@
  Comment 2525 block B190 null  <||@
  Comment 2525 2326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2525 2320 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2530 2322 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2535 2328 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2537 2330 BRANCH trueDestinationProbability: 0.054134838923945536 condition: = trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 2543 block B192 null  <||@
  Comment 2543 2344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2543 2346 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2546 2348 BRANCH trueDestinationProbability: 0.10287921348314606 condition: = trueDestination: B192 -> B193 falseDestination: B192 -> B194  <||@
  Comment 2552 block B194 null  <||@
  Comment 2552 2362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2552 2364 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2556 2366 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2561 2368 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2566 2370 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2571 2372 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385]  <||@
  Comment 2571 9  <||@
  Comment 2575 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 2580 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2581 2374 NULLCHECK [rax|QWORD[.]] state [bci:1388]  <||@
  Comment 2581 [rax:0, stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |    |    |    |    |    |    |    |    |    |                    |    |    |     <||@
  Comment 2581 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2583 2376 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2586 2378 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2591 2380 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2596 2382 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394]  <||@
  Comment 2596 9  <||@
  Comment 2599 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2604 [stack:8, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20  |21  |22  |23  |24  |25  |26  |27                  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 2605 2384 rsi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2608 2386 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2613 2388 stack:104|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2618 2390 JUMP ~[] destination: B194 -> B195  <||@
  Comment 2618 block B195 null  <||@
  Comment 2618 2392 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2618 2394 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498]  <||@
  Comment 2618 {Object[FDBigInteger@241972498]}  <||@
  Comment 2628 2396 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2631 2398 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412]  <||@
  Comment 2631 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2631 9  <||@
  Comment 2636 [stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18              |19              |20               |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |stack:72|DWORD  |stack:80|DWORD  |stack:104|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:40|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |                |                |                 |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 2637 2400 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2639 2402 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B195 -> B196 falseDestination: B195 -> B197  <||@
  Comment 2645 block B197 null  <||@
  Comment 2645 2420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2645 2422 rdx|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 2650 2424 rcx|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 2655 2426 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2660 2428 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2665 2430 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2670 2432 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2675 2434 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2680 2436 JUMP ~[] destination: B197 -> B198  <||@
  Comment 2685 block B142 null  <||@
  Comment 2685 1856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2685 1858 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2691 1860 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2696 1862 JUMP ~[] destination: B142 -> B146  <||@
  Comment 2701 block B107 null  <||@
  Comment 2701 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2701 1362 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2706 1364 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2712 1366 JUMP ~[] destination: B107 -> B114  <||@
  Comment 2717 block B132 null  <||@
  Comment 2717 1766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2717 1768 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2721 1770 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2726 1772 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2729 1774 BRANCH trueDestinationProbability: 0.2633333333333333 condition: < trueDestination: B132 -> B136 falseDestination: B132 -> B134  <||@
  Comment 2735 block B134 null  <||@
  Comment 2735 1780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2735 1782 r11|DWORD = DEC stack:84|DWORD size: DWORD  <||@
  Comment 2743 1784 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2749 1786 JUMP ~[] destination: B134 -> B139  <||@
  Comment 2754 block B193 null  <||@
  Comment 2754 2350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2754 2352 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2759 2354 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2768 2356 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2772 2358 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2777 2360 JUMP ~[] destination: B193 -> B195  <||@
  Comment 2782 block B191 null  <||@
  Comment 2782 2332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2782 2334 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2787 2336 stack:104|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2796 2338 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2800 2340 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2805 2342 JUMP ~[] destination: B191 -> B195  <||@
  Comment 2810 block B140 null  <||@
  Comment 2810 1842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2810 1844 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2816 1846 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2821 1848 JUMP ~[] destination: B140 -> B146  <||@
  Comment 2826 block B102 null  <||@
  Comment 2826 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2826 1298 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2831 1300 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2837 1302 JUMP ~[] destination: B102 -> B114  <||@
  Comment 2842 block B68 null  <||@
  Comment 2842 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2842 698 stack:48|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2846 700 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2850 702 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2855 704 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2859 706 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2863 708 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2868 710 stack:96|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2872 712 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2877 714 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 2880 716 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2884 718 CMP rcx|DWORD y: 32 size: DWORD  <||@
  Comment 2887 720 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B68 -> B69 falseDestination: B68 -> B95  <||@
  Comment 2893 block B69 null  <||@
  Comment 2893 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2893 724 CMP stack:96|DWORD y: 14 size: DWORD  <||@
  Comment 2898 726 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B69 -> B70 falseDestination: B69 -> B94  <||@
  Comment 2904 block B70 null  <||@
  Comment 2904 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2904 730 CMP stack:52|DWORD y: 14 size: DWORD  <||@
  Comment 2909 732 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B93  <||@
  Comment 2915 block B71 null  <||@
  Comment 2915 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2915 736 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:365]  <||@
  Comment 2915 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11              |12              |13              |14              |15              |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |stack:96|DWORD  |stack:72|DWORD  |stack:52|DWORD  |stack:68|DWORD  |stack:96|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:48|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |                |                |                |                |                |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 2915 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2919 738 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2921 740 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 2927 block B73 null  <||@
  Comment 2927 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2927 768 CMP stack:84|DWORD y: -3 size: DWORD  <||@
  Comment 2932 770 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 2938 block B75 null  <||@
  Comment 2938 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2938 798 CMP stack:84|DWORD y: 8 size: DWORD  <||@
  Comment 2943 800 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B92  <||@
  Comment 2949 block B76 null  <||@
  Comment 2949 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 804 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 2954 806 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[14]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 2954 {Object[int[14]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 2964 808 rdx|DWORD = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2969 810 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2973 812 r10|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2979 814 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 2985 816 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 2988 818 r10|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2991 820 rcx|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 2997 822 r8|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 3003 824 r8|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3006 826 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 3010 828 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 3016 block B78 null  <||@
  Comment 3016 852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3016 854 CMP [r14|DWORD[.] * 8 + 12] y: 2 size: DWORD  <||@
  Comment 3025 856 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 3031 block B80 null  <||@
  Comment 3031 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3031 884 rax|DWORD = MOV [rax|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3036 886 rcx|DWORD = MOV stack:64|QWORD size: DWORD  <||@
  Comment 3040 888 rdx|DWORD = IMUL (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3043 890 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3047 892 rdx|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3049 894 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3053 896 r9|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3059 898 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3061 900 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 3062 902 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r9|DWORD) size: DWORD state [bci:365]  <||@
  Comment 3062 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0               |1               |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13         |14              |15         |16  |17  |18  |19  |20  |21  |22  |23              |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]    |-               |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r11|DWORD  |stack:72|DWORD  |r13|DWORD  |stack:68|DWORD  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:48|DWORD  |stack:92|DWORD  |                |   |   |           |   |   |   |                |                |           |                |           |                |           |    |    |    |    |    |    |    |                |    |    |    |    |    |    |    |    |     <||@
  Comment 3062 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3065 904 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3067 906 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 3073 block B82 null  <||@
  Comment 3073 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3073 930 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3078 932 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3080 934 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3082 936 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3085 938 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 3091 block B84 null  <||@
  Comment 3091 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3091 962 rdx|DWORD = SHL r9|DWORD y: 3 size: DWORD  <||@
  Comment 3097 964 rbx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 3102 966 rbx|DWORD = ADD (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3104 968 rdx|DWORD = ADD (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3109 970 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3111 972 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 3117 block B86 null  <||@
  Comment 3117 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3117 996 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 3120 998 MOV (x: [r14|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 3129 1000 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3131 1002 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 3132 1004 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r9|DWORD) size: DWORD state [bci:552]  <||@
  Comment 3132 [rsi:0, r14:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r9|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 3132 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3135 1006 r11|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3142 1008 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3144 1010 r11|DWORD = ADD (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3147 1012 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3150 1014 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B90  <||@
  Comment 3156 block B87 null  <||@
  Comment 3156 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3156 1018 r8|DWORD = ADD (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3159 1020 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3162 1022 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 3168 block B89 null  <||@
  Comment 3168 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3168 1034 r10|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 3172 1036 MOV (x: [r14|DWORD[.] * 8 + 18], y: r10|DWORD) size: WORD  <||@
  Comment 3181 1038 r10|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 3187 1040 r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 3190 1042 rcx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 3193 1044 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3196 1046 rdx|DWORD = SETCC condition: =  <||@
  Comment 3202 1048 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3208 1050 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3214 1052 r10|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3220 1054 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3225 1056 JUMP ~[] destination: B89 -> B198  <||@
  Comment 3230 block B25 null  <||@
  Comment 3230 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3230 204 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3232 206 JUMP ~[] destination: B25 -> B28  <||@
  Comment 3237 block B7 null  <||@
  Comment 3237 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3237 66 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3239 68 JUMP ~[] destination: B7 -> B28  <||@
  Comment 3244 block B13 null  <||@
  Comment 3244 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3244 104 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3248 106 r11|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 3254 108 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 3257 110 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 3261 112 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 3267 block B15 null  <||@
  Comment 3267 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3267 122 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]  <||@
  Comment 3267 {Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]}  <||@
  Comment 3277 124 r9|DWORD[.] = MOV [r9|QWORD[.] + 104] size: DWORD  <||@
  Comment 3281 126 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:10, 74]  <||@
  Comment 3281 [rsi:0, r9:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3281 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3289 128 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3292 130 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 3298 block B19 null  <||@
  Comment 3298 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3298 154 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3304 156 JUMP ~[] destination: B19 -> B21  <||@
  Comment 3309 block B3 null  <||@
  Comment 3309 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3309 44 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3314 46 JUMP ~[] destination: B3 -> B28  <||@
  Comment 3319 block B113 null  <||@
  Comment 3319 1412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3319 1414 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3324 1416 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3330 1418 JUMP ~[] destination: B113 -> B114  <||@
  Comment 3335 block B14 null  <||@
  Comment 3335 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3335 116 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3341 118 JUMP ~[] destination: B14 -> B21  <||@
  Comment 3346 block B59 null  <||@
  Comment 3346 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3346 562 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3350 564 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3354 566 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3359 568 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3364 570 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3369 572 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 3369 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 3379 574 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3383 576 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3388 578 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3391 580 r10|DWORD = ADD (x: stack:48|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3399 582 CMP stack:80|DWORD y: 27 size: DWORD  <||@
  Comment 3404 588 rbx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3407 584 BRANCH trueDestinationProbability: 0.9999036206508819 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B64  <||@
  Comment 3413 block B60 null  <||@
  Comment 3413 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3413 590 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3417 592 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3422 600 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3427 602 rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3430 604 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3434 606 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3439 608 JUMP ~[] destination: B60 -> B61  <||@
  Comment 3444 block B145 null  <||@
  Comment 3444 1882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3444 1884 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3450 1886 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3455 1888 JUMP ~[] destination: B145 -> B146  <||@
  Comment 3460 block B58 null  <||@
  Comment 3460 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3460 556 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3465 558 JUMP ~[] destination: B58 -> B65  <||@
  Comment 3470 block B16 null  <||@
  Comment 3470 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3470 134 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3473 136 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 3479 block B17 null  <||@
  Comment 3479 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3479 140 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4efa30ba encoding: base: 0 shift: 3  <||@
  Comment 3483 142 r8|DWORD = MOV [r9|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3488 144 JUMP ~[] destination: B17 -> B21  <||@
  Comment 3493 block B27 null  <||@
  Comment 3493 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3493 216 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3495 218 JUMP ~[] destination: B27 -> B28  <||@
  Comment 3500 block B64 null  <||@
  Comment 3500 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3500 650 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3505 652 r10|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3510 658 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3515 662 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 3520 664 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3524 666 JUMP ~[] destination: B64 -> B65  <||@
  Comment 3529 block B196 null  <||@
  Comment 3529 2404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3529 2406 r10|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 3534 2408 rcx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3538 2410 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3543 2412 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3548 2414 MOV [r15|QWORD + 668] y: -372755 size: DWORD  <||@
  Comment 3559 2416 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3566 2418 DEOPT info [bci:1415]  <||@
  Comment 3566 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3571 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415, duringCall: false, rethrow: false]
              |0             |1           |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18        |19         |20         |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-           |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |r9|DWORD  |rcx|DWORD  |r10|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rsi|QWORD[.]  |int[0|0x0]  |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |          |           |           |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3572 block B36 null  <||@
  Comment 3572 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3572 344 r11|DWORD = MOVE input: int[-355603|0xfffffffffffa92ed]  <||@
  Comment 3578 346 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3582 348 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3587 350 JUMP ~[] destination: B36 -> B208  <||@
  Comment 3587 block B208 null  <||@
  Comment 3587 2508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3587 2510 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3594 2512 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3601 2514 DEOPT info [bci:174]  <||@
  Comment 3601 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3606 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8          |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |rax|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3607 block B182 null  <||@
  Comment 3607 2262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3607 2264 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3612 2266 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3616 2268 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3621 2270 JUMP ~[] destination: B182 -> B183  <||@
  Comment 3621 block B183 null  <||@
  Comment 3621 2272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3621 2274 r10|DWORD = MOVE input: int[-332571|0xfffffffffffaece5]  <||@
  Comment 3627 2276 JUMP ~[] destination: B183 -> B184  <||@
  Comment 3627 block B184 null  <||@
  Comment 3627 2278 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3627 2280 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3634 2282 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3641 2284 DEOPT info [bci:46, 1321]  <||@
  Comment 3641 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3646 [rsi:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0                  |1                   |2  |3  |4          |5         |6  |7 
     locals:  |stack:64|QWORD[.]  |stack:112|QWORD[.]  |-  |-  |r11|DWORD  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 3647 block B180 null  <||@
  Comment 3647 2246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3647 2248 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3652 2250 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3656 2252 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3661 2254 JUMP ~[] destination: B180 -> B181  <||@
  Comment 3661 block B181 null  <||@
  Comment 3661 2256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3661 2258 r10|DWORD = MOVE input: int[-336411|0xfffffffffffadde5]  <||@
  Comment 3667 2260 JUMP ~[] destination: B181 -> B184  <||@
  Comment 3669 block B74 null  <||@
  Comment 3669 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3669 774 r10|DWORD = MOVE input: int[-296723|0xfffffffffffb78ed]  <||@
  Comment 3675 778 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3679 780 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3683 782 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3688 784 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3693 788 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3697 792 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3702 794 JUMP ~[] destination: B74 -> B128  <||@
  Comment 3702 block B128 null  <||@
  Comment 3702 1630 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3702 1632 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3709 1634 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3716 1636 DEOPT info [bci:365]  <||@
  Comment 3716 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3721 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365, duringCall: false, rethrow: false]
              |0             |1          |2         |3  |4  |5          |6  |7  |8  |9               |10         |11         |12         |13         |14        |15         |16  |17  |18  |19  |20  |21  |22  |23         |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-          |r9|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |rcx|DWORD  |r11|DWORD  |rax|DWORD  |r13|DWORD  |r8|DWORD  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |rbx|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rdx|DWORD     |rdi|DWORD  |          |   |   |           |   |   |   |                |           |           |           |           |          |           |    |    |    |    |    |    |    |           |    |    |    |    |    |    |    |    |     <||@
  Comment 3722 block B72 null  <||@
  Comment 3722 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3722 744 r10|DWORD = MOVE input: int[-296467|0xfffffffffffb79ed]  <||@
  Comment 3728 748 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3732 750 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3736 752 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3741 754 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3746 758 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3750 762 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3755 764 JUMP ~[] destination: B72 -> B128  <||@
  Comment 3757 block B115 null  <||@
  Comment 3757 1426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3757 1428 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3760 1430 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1433516113]  <||@
  Comment 3760 {Object[d.a@1433516113]}  <||@
  Comment 3770 1432 MOV [r15|QWORD + 668] y: -372235 size: DWORD  <||@
  Comment 3781 1434 MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 3788 1436 DEOPT info [bci:914]  <||@
  Comment 3788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3793 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 3794 block B94 null  <||@
  Comment 3794 1122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3794 1124 r10|DWORD = MOVE input: int[-287003|0xfffffffffffb9ee5]  <||@
  Comment 3800 1128 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3804 1130 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3808 1132 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3813 1134 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3818 1138 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3822 1142 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3827 1144 JUMP ~[] destination: B94 -> B128  <||@
  Comment 3829 block B95 null  <||@
  Comment 3829 1146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3829 1148 r10|DWORD = MOVE input: int[-286227|0xfffffffffffba1ed]  <||@
  Comment 3835 1152 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3839 1154 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3843 1156 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3848 1158 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3853 1162 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3857 1166 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3862 1168 JUMP ~[] destination: B95 -> B128  <||@
  Comment 3867 block B123 null  <||@
  Comment 3867 1544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3867 1546 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 3870 1548 MOV [r15|QWORD + 668] y: -373787 size: DWORD  <||@
  Comment 3881 1550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3888 1552 DEOPT info [bci:914]  <||@
  Comment 3888 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3893 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|QWORD  |-   |r13|QWORD  |-   |rdi|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 3894 block B63 null  <||@
  Comment 3894 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3894 626 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3898 628 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3902 630 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3907 632 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3912 634 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 3916 636 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3921 638 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 3924 640 MOV [r15|QWORD + 668] y: -353307 size: DWORD  <||@
  Comment 3935 642 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3942 644 DEOPT info [bci:330]  <||@
  Comment 3942 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3947 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330, duringCall: false, rethrow: false]
              |0             |1          |2               |3  |4  |5          |6  |7  |8  |9               |10              |11         |12              |13         |14              |15         |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-          |stack:64|QWORD  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |stack:76|DWORD  |r11|DWORD  |stack:72|DWORD  |r13|DWORD  |stack:68|DWORD  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |r8|DWORD      |rdx|DWORD  |                |   |   |           |   |   |   |                |                |           |                |           |                |           |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3948 block B186 null  <||@
  Comment 3948 2296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3948 2288 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3953 2290 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3957 2292 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3962 2298 JUMP ~[] destination: B186 -> B187  <||@
  Comment 3962 block B187 null  <||@
  Comment 3962 2300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3962 2302 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310093959]  <||@
  Comment 3962 {Object[d.a@1310093959]}  <||@
  Comment 3972 2304 MOV [r15|QWORD + 668] y: -330003 size: DWORD  <||@
  Comment 3983 2306 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 3990 2308 DEOPT info [bci:1315]  <||@
  Comment 3990 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3995 [rsi:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                   |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18  |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]        |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |stack:112|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |    |    |    |    |           |    |    |                    |    |                   |    |                    |    |    |     <||@
  Comment 3996 block B126 null  <||@
  Comment 3996 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3996 1588 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3999 1590 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4004 1592 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4007 1594 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4010 1596 r10|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5]  <||@
  Comment 4016 1598 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 4019 1600 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4022 1602 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4025 1604 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4029 1606 JUMP ~[] destination: B126 -> B128  <||@
  Comment 4034 block B90 null  <||@
  Comment 4034 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4034 1060 r11|DWORD = MOVE input: int[-297491|0xfffffffffffb75ed]  <||@
  Comment 4040 1064 JUMP ~[] destination: B90 -> B91  <||@
  Comment 4040 block B91 null  <||@
  Comment 4040 1066 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4040 1028 r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4045 1068 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4052 1070 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4059 1072 DEOPT info [bci:552]  <||@
  Comment 4059 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4064 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:626) [bci: 552, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17          |18          |19          |20  |21  |22  |23  |24  |25         |26        |27         |28         |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r8|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[1|0x1]  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rcx|DWORD  |r9|DWORD  |r10|DWORD  |rbx|DWORD  |-   |-   |-   |-    <||@
  Comment 4065 block B22 null  <||@
  Comment 4065 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4065 182 r11|DWORD = MOVE input: int[-280595|0xfffffffffffbb7ed]  <||@
  Comment 4071 184 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4075 186 JUMP ~[] destination: B22 -> B23  <||@
  Comment 4075 block B23 null  <||@
  Comment 4075 188 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4075 190 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4082 192 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4089 194 DEOPT info [bci:10, 74]  <||@
  Comment 4089 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4094 [rsi:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0           |1 
     locals:  |-           |- 
     stack:   |int[0|0x0]  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7          |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rbp|DWORD  |rbx|DWORD  |rdi|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 4095 block B88 null  <||@
  Comment 4095 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4095 1026 r11|DWORD = MOVE input: int[-297747|0xfffffffffffb74ed]  <||@
  Comment 4101 1030 JUMP ~[] destination: B88 -> B91  <||@
  Comment 4103 block B207 null  <||@
  Comment 4103 2500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4103 2502 r11|DWORD = MOVE input: int[-355347|0xfffffffffffa93ed]  <||@
  Comment 4109 2504 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4113 2506 JUMP ~[] destination: B207 -> B208  <||@
  Comment 4118 block B18 null  <||@
  Comment 4118 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4118 148 r11|DWORD = MOVE input: int[-284443|0xfffffffffffba8e5]  <||@
  Comment 4124 150 JUMP ~[] destination: B18 -> B23  <||@
  Comment 4126 block B81 null  <||@
  Comment 4126 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4126 910 r10|DWORD = MOVE input: int[-291603|0xfffffffffffb8ced]  <||@
  Comment 4132 912 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4136 914 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4140 916 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4144 918 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4149 920 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4154 922 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4158 924 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4162 926 JUMP ~[] destination: B81 -> B128  <||@
  Comment 4167 block B83 null  <||@
  Comment 4167 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4167 942 r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed]  <||@
  Comment 4173 944 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4177 946 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4181 948 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4185 950 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4190 952 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4195 954 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4199 956 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4203 958 JUMP ~[] destination: B83 -> B128  <||@
  Comment 4208 block B127 null  <||@
  Comment 4208 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4208 1610 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4211 1612 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4216 1614 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4219 1616 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4222 1618 r10|DWORD = MOVE input: int[-301083|0xfffffffffffb67e5]  <||@
  Comment 4228 1620 rdi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 4231 1622 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4234 1624 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4237 1626 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4241 1628 JUMP ~[] destination: B127 -> B128  <||@
  Comment 4246 block B85 null  <||@
  Comment 4246 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4246 976 r10|DWORD = MOVE input: int[-291347|0xfffffffffffb8ded]  <||@
  Comment 4252 978 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4256 980 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4260 982 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4264 984 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4269 986 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4274 988 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4278 990 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4282 992 JUMP ~[] destination: B85 -> B128  <||@
  Comment 4287 block B179 null  <||@
  Comment 4287 2234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4287 2236 r9|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4292 2238 rbx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4296 2240 MOV [r15|QWORD + 668] y: -340507 size: DWORD  <||@
  Comment 4307 2242 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4314 2244 DEOPT info [bci:1343]  <||@
  Comment 4314 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4319 [rsi:0, stack:8, stack:16, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17              |18        |19  |20  |21  |22         |23  |24  |25                  |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:92|DWORD  |r9|DWORD  |-   |-   |-   |rbx|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                |          |    |    |    |           |    |    |                    |    |                   |                    |                    |    |    |     <||@
  Comment 4320 block B93 null  <||@
  Comment 4320 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4320 1100 r10|DWORD = MOVE input: int[-289051|0xfffffffffffb96e5]  <||@
  Comment 4326 1104 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4330 1106 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4334 1108 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4339 1110 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4344 1114 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4348 1118 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4353 1120 JUMP ~[] destination: B93 -> B128  <||@
  Comment 4358 block B137 null  <||@
  Comment 4358 1806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4358 1808 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4363 1810 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4368 1812 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4372 1814 MOV [r15|QWORD + 668] y: -360475 size: DWORD  <||@
  Comment 4383 1816 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4390 1818 DEOPT info [bci:1227]  <||@
  Comment 4390 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4395 [rax:0, rsi:0, stack:8, stack:24, stack:64]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18        |19         |20  |21  |22         |23  |24  |25                  |26  |27                 |28            |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |r8|DWORD  |r11|DWORD  |-   |-   |r10|DWORD  |-   |-   |stack:104|QWORD[.]  |-   |stack:64|QWORD[.]  |rax|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 4396 block B30 null  <||@
  Comment 4396 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4396 282 r11|DWORD = MOVE input: int[-355091|0xfffffffffffa94ed]  <||@
  Comment 4402 284 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4406 286 JUMP ~[] destination: B30 -> B208  <||@
  Comment 4411 block B203 null  <||@
  Comment 4411 2476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4411 2478 MOV [r15|QWORD + 668] y: -350739 size: DWORD  <||@
  Comment 4422 2480 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4429 2482 DEOPT info [bci:1445]  <||@
  Comment 4429 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4434 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19        |20           |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |r9|DWORD  |long[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 4435 block B110 null  <||@
  Comment 4435 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4435 1392 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4438 1394 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4440 1396 MOV [r15|QWORD + 668] y: -316435 size: DWORD  <||@
  Comment 4451 1398 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4458 1400 DEOPT info [bci:889]  <||@
  Comment 4458 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4463 [rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25        |26  |27         |28  |29         |30  |31         |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |rbp|DWORD  |-  |-  |-  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r9|DWORD  |rdi|DWORD  |-   |-   |-   |-   |-   |r8|QWORD  |-   |r13|QWORD  |-   |rcx|QWORD  |-   |rbx|QWORD  |-    <||@
  Comment 4464 block B92 null  <||@
  Comment 4464 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4464 1076 r10|DWORD = MOVE input: int[-296979|0xfffffffffffb77ed]  <||@
  Comment 4470 1080 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4474 1082 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4478 1084 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4483 1086 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4488 1090 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4492 1094 r11|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4497 1096 JUMP ~[] destination: B92 -> B128  <||@
  Comment 4502 block B77 null  <||@
  Comment 4502 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4502 832 r10|DWORD = MOVE input: int[-297235|0xfffffffffffb76ed]  <||@
  Comment 4508 834 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4512 836 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4516 838 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4520 840 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4525 842 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4530 844 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4534 846 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4538 850 JUMP ~[] destination: B77 -> B128  <||@
  Comment 4543 block B100 null  <||@
  Comment 4543 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4543 1258 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4547 1260 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4551 1262 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4554 1264 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4557 1266 r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4562 1268 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4567 1270 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4570 1272 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4575 1274 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4578 1276 rbp|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4580 1278 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4584 1280 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4587 1282 r10|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed]  <||@
  Comment 4593 1284 JUMP ~[] destination: B100 -> B128  <||@
  Comment 4598 block B170 null  <||@
  Comment 4598 2108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4598 2110 r8|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 4603 2112 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 4608 2114 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 4613 2116 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4618 2118 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4623 2120 JUMP ~[] destination: B170 -> B171  <||@
  Comment 4623 block B171 null  <||@
  Comment 4623 2122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4623 2124 MOV [r15|QWORD + 668] y: -328219 size: DWORD  <||@
  Comment 4634 2126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4641 2128 DEOPT info [bci:0, 140, 1321]  <||@
  Comment 4641 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4646 [rax:0, rcx:0, rdx:0, rsi:0, rdi:0, r8:0]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18  |19  |20  |21  |22         |23  |24  |25            |26  |27            |28           |29            |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |-   |-   |-   |-   |rbx|DWORD  |-   |-   |rdi|QWORD[.]  |-   |rax|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.]  |-   |-   |-    <||@
  Comment 4647 block B79 null  <||@
  Comment 4647 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4647 860 r10|DWORD = MOVE input: int[-357147|0xfffffffffffa8ce5]  <||@
  Comment 4653 862 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4657 864 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4661 866 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4665 868 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4670 870 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4675 872 rax|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 4679 874 rcx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4683 878 JUMP ~[] destination: B79 -> B128  <||@
  Comment 4688 block B105 null  <||@
  Comment 4688 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4688 1318 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 4692 1320 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 4696 1322 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4699 1324 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4702 1326 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4705 1328 r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4710 1330 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4715 1332 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4718 1334 r10|DWORD = MOVE input: int[-359195|0xfffffffffffa84e5]  <||@
  Comment 4724 1336 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 4729 1338 r11|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4732 1340 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 4736 1342 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4740 1344 JUMP ~[] destination: B105 -> B128  <||@
  Comment 4745 block B162 null  <||@
  Comment 4745 2044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4745 2046 r10|DWORD = MOVE input: int[-325395|0xfffffffffffb08ed]  <||@
  Comment 4751 2048 JUMP ~[] destination: B162 -> B184  <||@
  Comment 4756 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4756 4  <||@
  Comment 4762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4762 5  <||@
  HexCodeFile>>> <|@
end_nmethod
