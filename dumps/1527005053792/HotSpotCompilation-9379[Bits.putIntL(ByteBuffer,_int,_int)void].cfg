begin_compilation
  name " HotSpotCompilation-9379[java.nio.Bits.putIntL(ByteBuffer, int, int)]"
  method "HotSpotCompilation-9379[java.nio.Bits.putIntL(ByteBuffer, int, int)]"
  date 1527005209181
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v250 v244 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i6 v163 i15 v249 i24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i8 i32 i17 i26 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Bits.putIntL(ByteBuffer, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bits.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v226 v241 i243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v250 
=== Succesors ===
next: v186 
=== Usages ===
v240 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v250 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v241 
y: v239 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v241 y: v239  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/nio/HeapByteBuffer; target_method=_put target_method_class=Ljava/nio/HeapByteBuffer; position=at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v183 #falseSuccessor: v185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/nio/HeapByteBuffer; target_method=_put target_method_class=Ljava/nio/HeapByteBuffer; position=at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a242 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a242  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
=== Succesors ===
next: i243 
=== Usages ===
v249 v248 v245 v246 v247 
=== Predecessor ===
v183 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a242 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v245 
=== Succesors ===
next: v194 
=== Usages ===
v131 v163 
=== Predecessor ===
a242 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v245 #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 2]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 3]
stamp: i32
=== Inputs ===
x: i2 
y: i5 
=== Succesors ===
=== Usages ===
v131 v246 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i243 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v191 #falseSuccessor: v193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
v178 
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i243 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v195 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
v178 
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v191 v195 
=== Succesors ===
=== Usages ===
v161 v141 v151 v171 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v191 v195  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i6 
index: a242 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i6 index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
rawvalue: 24
stableDimension: 0
stamp: i32 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i32
value: int[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
stamp: i32 [-128 - 127]
=== Inputs ===
x: i3 
y: i7 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
resultBits: 8
stamp: i8
=== Inputs ===
value: i8 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v178 
address: v246 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v178 address: v246 value: i9 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 13]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 14]
stamp: i32
=== Inputs ===
x: i2 
y: i14 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i15 
index: a242 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i15 index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i3 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i17 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v178 
address: v247 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v178 address: v247 value: i18 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 25]
stamp: i32
=== Inputs ===
x: i2 
y: i23 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i24 
index: a242 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i24 index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i3 
y: i25 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
resultBits: 8
stamp: i8
=== Inputs ===
value: i26 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v178 
address: v248 
value: i27 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v178 address: v248 value: i27 stateAfter: - lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i2 
index: a242 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i2 index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int0(Bits.java:257) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 36]
resultBits: 8
stamp: i8
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v178 
address: v249 
value: i32 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v178 address: v249 value: i32 stateAfter: - lastLocationAccess: - #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:264) [bci: 42]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42011
stableDimension: 0
stamp: i32 [-42011] ⇊00000000ffff5be5 ⇈00000000ffff5be5
stampKind: i32
value: int[-42011|0xffffffffffff5be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33819
stableDimension: 0
stamp: i32 [-33819] ⇊00000000ffff7be5 ⇈00000000ffff7be5
stampKind: i32
value: int[-33819|0xffffffffffff7be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/nio/HeapByteBuffer; target_method=_put target_method_class=Ljava/nio/HeapByteBuffer; position=at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30771
stableDimension: 0
stamp: i32 [-30771] ⇊00000000ffff87cd ⇈00000000ffff87cd
stampKind: i32
value: int[-30771|0xffffffffffff87cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-42011 - -30475] ⇊00000000ffff00c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v220 
values: i230 i232 i234 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v220 values: i230 i232 i234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v229 v231 v233 
=== Succesors ===
next: v226 
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v229 v231 v233 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid a223 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i224 
speculation: a223 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i224 speculation: a223  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v250 v244 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i6 v163 i15 v249 i24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i8 i32 i17 i26 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Bits.putIntL(ByteBuffer, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bits.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v226 v241 i243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v250 
=== Succesors ===
next: v186 
=== Usages ===
v240 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v250 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
rawvalue: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v241 
y: v239 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v241 y: v239  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/nio/HeapByteBuffer; target_method=_put target_method_class=Ljava/nio/HeapByteBuffer; position=at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v183 #falseSuccessor: v185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b962c5f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/nio/HeapByteBuffer; target_method=_put target_method_class=Ljava/nio/HeapByteBuffer; position=at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a242 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a242  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a242 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
=== Succesors ===
next: i243 
=== Usages ===
v249 v248 v245 v246 v247 
=== Predecessor ===
v183 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a242 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v245 
=== Succesors ===
next: v194 
=== Usages ===
v131 v163 
=== Predecessor ===
a242 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v245 #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 2]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:260) [bci: 3]
stamp: i32
=== Inputs ===
x: i2 
y: i5 
=== Succesors ===
=== Usages ===
v131 v246 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i243 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v191 #falseSuccessor: v193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA [v1|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
v178 
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i243 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v195 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
v178 
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v191 v195 
=== Succesors ===
=== Usages ===
v161 v141 v151 v171 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v191 v195  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result [v5|DWORD + v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i6 
index: a242 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i6 index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
rawvalue: 24
stableDimension: 0
stamp: i32 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i32
value: int[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
stamp: i32 [-128 - 127]
=== Inputs ===
x: i3 
y: i7 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int3(Bits.java:254) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 5]
resultBits: 8
stamp: i8
=== Inputs ===
value: i8 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v178 
address: v246 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v178 address: v246 value: i9 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 13]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:261) [bci: 14]
stamp: i32
=== Inputs ===
x: i2 
y: i14 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result [v7|DWORD + v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i15 
index: a242 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i15 index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i3 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int2(Bits.java:255) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 16]
resultBits: 8
stamp: i8
=== Inputs ===
value: i17 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:261) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v178 
address: v247 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v178 address: v247 value: i18 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:262) [bci: 25]
stamp: i32
=== Inputs ===
x: i2 
y: i23 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result [v9|DWORD + v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i24 
index: a242 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i24 index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 3]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i3 
y: i25 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i3 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int1(Bits.java:256) [bci: 4]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 27]
resultBits: 8
stamp: i8
=== Inputs ===
value: i26 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:262) [bci: 30]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v178 
address: v248 
value: i27 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v178 address: v248 value: i27 stateAfter: - lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
result [v1|DWORD + v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i2 
index: a242 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i2 index: a242  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at java.nio.Bits.int0(Bits.java:257) [bci: 1]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 36]
resultBits: 8
stamp: i8
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v178 
address: v249 
value: i32 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v178 address: v249 value: i32 stateAfter: - lastLocationAccess: - #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Bits.putIntL(Bits.java:264) [bci: 42]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SAR v2|DWORD y: 24 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|DWORD + v3|DWORD[.] * 8 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA [v1|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR v2|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|DWORD + v3|DWORD[.] * 8 + 16], y: v8|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SAR v2|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|DWORD + v3|DWORD[.] * 8 + 16], y: v10|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|DWORD + v3|DWORD[.] * 8 + 16], y: v2|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:263) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result int[-42011|0xffffffffffff5be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42011
stableDimension: 0
stamp: i32 [-42011] ⇊00000000ffff5be5 ⇈00000000ffff5be5
stampKind: i32
value: int[-42011|0xffffffffffff5be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42011|0xffffffffffff5be5]] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapByteBuffer._put(HeapByteBuffer.java:248) [bci: 6]
at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
result int[-33819|0xffffffffffff7be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33819
stableDimension: 0
stamp: i32 [-33819] ⇊00000000ffff7be5 ⇈00000000ffff7be5
stampKind: i32
value: int[-33819|0xffffffffffff7be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33819|0xffffffffffff7be5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/nio/HeapByteBuffer; target_method=_put target_method_class=Ljava/nio/HeapByteBuffer; position=at java.nio.Bits.putIntL(Bits.java:260) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result int[-30771|0xffffffffffff87cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30771
stableDimension: 0
stamp: i32 [-30771] ⇊00000000ffff87cd ⇈00000000ffff87cd
stampKind: i32
value: int[-30771|0xffffffffffff87cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i224 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-42011 - -30475] ⇊00000000ffff00c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v220 
values: i230 i232 i234 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v220 values: i230 i232 i234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v229 v231 v233 
=== Succesors ===
next: v226 
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v229 v231 v233 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid a223 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i224 
speculation: a223 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i224 speculation: a223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b962c5f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA [v1|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SAR v2|DWORD y: 24 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|DWORD + v3|DWORD[.] * 8 + 16], y: v6|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA [v1|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR v2|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|DWORD + v3|DWORD[.] * 8 + 16], y: v8|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SAR v2|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|DWORD + v3|DWORD[.] * 8 + 16], y: v10|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|DWORD + v3|DWORD[.] * 8 + 16], y: v2|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33819|0xffffffffffff7be5]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42011|0xffffffffffff5be5]] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iconst_3      
     3: iadd          
     4: iload_2       
     5: invokestatic  #39         // int3:(int)byte
     8: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    11: aload_0       
    12: iload_1       
    13: iconst_2      
    14: iadd          
    15: iload_2       
    16: invokestatic  #40         // int2:(int)byte
    19: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    22: aload_0       
    23: iload_1       
    24: iconst_1      
    25: iadd          
    26: iload_2       
    27: invokestatic  #41         // int1:(int)byte
    30: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    33: aload_0       
    34: iload_1       
    35: iload_2       
    36: invokestatic  #42         // int0:(int)byte
    39: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b962c5f slotKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r8|DWORD = LEA [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|DWORD = SAR rcx|DWORD y: 24 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOVB (x: [r8|DWORD + r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr   40  <|@ instruction r11|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = SAR rcx|DWORD y: 16 size: DWORD <|@ <|@
      nr   44  <|@ instruction MOVB (x: [r11|DWORD + r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE <|@ <|@
      nr   46  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|DWORD = SAR rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOVB (x: [r11|DWORD + r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE <|@ <|@
      nr   52  <|@ instruction MOVB (x: [rdx|DWORD + r10|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33819|0xffffffffffff7be5] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iconst_3      
     3: iadd          
     4: iload_2       
     5: invokestatic  #39         // int3:(int)byte
     8: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    11: aload_0       
    12: iload_1       
    13: iconst_2      
    14: iadd          
    15: iload_2       
    16: invokestatic  #40         // int2:(int)byte
    19: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    22: aload_0       
    23: iload_1       
    24: iconst_1      
    25: iadd          
    26: iload_2       
    27: invokestatic  #41         // int1:(int)byte
    30: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    33: aload_0       
    34: iload_1       
    35: iload_2       
    36: invokestatic  #42         // int0:(int)byte
    39: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b962c5f slotKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction r8|DWORD = LEA [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|DWORD = SAR rcx|DWORD y: 24 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOVB (x: [r8|DWORD + r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr   40  <|@ instruction r11|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = SAR rcx|DWORD y: 16 size: DWORD <|@ <|@
      nr   44  <|@ instruction MOVB (x: [r11|DWORD + r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE <|@ <|@
      nr   46  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction r8|DWORD = SAR rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOVB (x: [r11|DWORD + r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE <|@ <|@
      nr   52  <|@ instruction MOVB (x: [rdx|DWORD + r10|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   70  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.Bits.putIntL(Bits.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33819|0xffffffffffff7be5] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-42011|0xffffffffffff5be5] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: iconst_3      
     3: iadd          
     4: iload_2       
     5: invokestatic  #39         // int3:(int)byte
     8: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    11: aload_0       
    12: iload_1       
    13: iconst_2      
    14: iadd          
    15: iload_2       
    16: invokestatic  #40         // int2:(int)byte
    19: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    22: aload_0       
    23: iload_1       
    24: iconst_1      
    25: iadd          
    26: iload_2       
    27: invokestatic  #41         // int1:(int)byte
    30: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    33: aload_0       
    34: iload_1       
    35: iload_2       
    36: invokestatic  #42         // int0:(int)byte
    39: invokevirtual #16         // java.nio.ByteBuffer._put:(int, byte)void
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410817e08addeadde0f8568000000448b562c468b1cd50c000000448d4203453bd80f8669000000443bda0f8668000000448bd941c1fb1847885cd010448d5a02448bc141c1f810478844d310448bda41ffc3448bc141c1f808478844d31042884cd210488b6c24104883c418850500000000c5f877c341bacd87ffff4589979c0200004d89a7a8020000e8000000009041bae57bffffebe441bae55bffffebdce80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b962c5f slotKind: QWORD  <||@
  Comment 16 12 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed} state [bci:0]  <||@
  Comment 16 [rsi:0]at java.nio.Bits.putIntL(Bits.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 16 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 16 {meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed}}  <||@
  Comment 23 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 29 block B1 null  <||@
  Comment 29 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 29 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 33 20 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 33 [rsi:0, r10:0]at java.nio.Bits.putIntL(Bits.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 33 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 41 22 r8|DWORD = LEA [rdx|DWORD + 3] size: DWORD  <||@
  Comment 45 24 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 48 26 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 54 block B2 null  <||@
  Comment 54 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 54 30 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 57 32 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 63 block B3 null  <||@
  Comment 63 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 36 r11|DWORD = SAR rcx|DWORD y: 24 size: DWORD  <||@
  Comment 70 38 MOVB (x: [r8|DWORD + r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 75 40 r11|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 79 42 r8|DWORD = SAR rcx|DWORD y: 16 size: DWORD  <||@
  Comment 86 44 MOVB (x: [r11|DWORD + r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE  <||@
  Comment 91 46 r11|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 97 48 r8|DWORD = SAR rcx|DWORD y: 8 size: DWORD  <||@
  Comment 104 50 MOVB (x: [r11|DWORD + r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE  <||@
  Comment 109 52 MOVB (x: [rdx|DWORD + r10|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 114 54 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 123 12  <||@
  Comment 133 block B6 null  <||@
  Comment 133 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 -1 r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd]  <||@
  Comment 139 58 JUMP ~[] destination: B6 -> B7  <||@
  Comment 139 block B7 null  <||@
  Comment 139 68 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 139 70 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 146 72 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 153 74 DEOPT info [bci:0]  <||@
  Comment 153 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 158 [rsi:0]at java.nio.Bits.putIntL(Bits.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 159 block B5 null  <||@
  Comment 159 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 -1 r10|DWORD = MOVE input: int[-33819|0xffffffffffff7be5]  <||@
  Comment 165 62 JUMP ~[] destination: B5 -> B7  <||@
  Comment 167 block B4 null  <||@
  Comment 167 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 -1 r10|DWORD = MOVE input: int[-42011|0xffffffffffff5be5]  <||@
  Comment 173 66 JUMP ~[] destination: B4 -> B7  <||@
  Comment 175 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 175 4  <||@
  Comment 181 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 181 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9379[java.nio.Bits.putIntL(ByteBuffer, int, int)]"
  method "HotSpotCompilation-9379[java.nio.Bits.putIntL(ByteBuffer, int, int)]"
  date 1527005209243
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bc32e0 89842400c0feff4883ec1848896c2410817e08995200f80f8568000000448b562c468b1cd50c000000448d4203453bd80f8669000000443bda0f8668000000448bd941c1fb1847885cd010448d5a02448bc141c1f810478844d310448bda41ffc3448bc141c1f808478844d31042884cd210488b6c24104883c4188505a5bcccfcc5f877c341bacd87ffff4589979c0200004d89a7a8020000e88042c4fe9041bae57bffffebe441bae55bffffebdce88c7208ff90e86641c4fe90f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5b962c5f slotKind: QWORD  <||@
  Comment 16 12 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed} state [bci:0]  <||@
  Comment 16 [rsi:0]at java.nio.Bits.putIntL(Bits.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 16 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 16 {meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>;compressed}}  <||@
  Comment 23 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 29 block B1 null  <||@
  Comment 29 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 29 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 33 20 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 33 [rsi:0, r10:0]at java.nio.Bits.putIntL(Bits.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 33 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 41 22 r8|DWORD = LEA [rdx|DWORD + 3] size: DWORD  <||@
  Comment 45 24 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 48 26 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 54 block B2 null  <||@
  Comment 54 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 54 30 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 57 32 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 63 block B3 null  <||@
  Comment 63 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 36 r11|DWORD = SAR rcx|DWORD y: 24 size: DWORD  <||@
  Comment 70 38 MOVB (x: [r8|DWORD + r10|DWORD[.] * 8 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 75 40 r11|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 79 42 r8|DWORD = SAR rcx|DWORD y: 16 size: DWORD  <||@
  Comment 86 44 MOVB (x: [r11|DWORD + r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE  <||@
  Comment 91 46 r11|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 97 48 r8|DWORD = SAR rcx|DWORD y: 8 size: DWORD  <||@
  Comment 104 50 MOVB (x: [r11|DWORD + r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: BYTE  <||@
  Comment 109 52 MOVB (x: [rdx|DWORD + r10|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 114 54 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 123 12  <||@
  Comment 133 block B6 null  <||@
  Comment 133 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 -1 r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd]  <||@
  Comment 139 58 JUMP ~[] destination: B6 -> B7  <||@
  Comment 139 block B7 null  <||@
  Comment 139 68 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 139 70 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 146 72 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 153 74 DEOPT info [bci:0]  <||@
  Comment 153 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 158 [rsi:0]at java.nio.Bits.putIntL(Bits.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|DWORD   <||@
  Comment 159 block B5 null  <||@
  Comment 159 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 -1 r10|DWORD = MOVE input: int[-33819|0xffffffffffff7be5]  <||@
  Comment 165 62 JUMP ~[] destination: B5 -> B7  <||@
  Comment 167 block B4 null  <||@
  Comment 167 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 -1 r10|DWORD = MOVE input: int[-42011|0xffffffffffff5be5]  <||@
  Comment 173 66 JUMP ~[] destination: B4 -> B7  <||@
  Comment 175 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 175 4  <||@
  Comment 181 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 181 5  <||@
  HexCodeFile>>> <|@
end_nmethod
