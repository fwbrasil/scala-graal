begin_compilation
  name " HotSpotCompilation-6358[java.util.BitSet.get(int)]"
  method "HotSpotCompilation-6358[java.util.BitSet.get(int)]"
  date 1527005171152
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v92 v93 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 j20 i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.get(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 622
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - 
=== Succesors ===
=== Usages ===
v83 i90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 i26 v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9491
stableDimension: 0
stamp: i32 [-9491] ⇊00000000ffffdaed ⇈00000000ffffdaed
stampKind: i32
value: int[-9491|0xffffffffffffdaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i88 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
=== Succesors ===
next: v16 
=== Usages ===
v13 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v92 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:112) [bci: 1]
at java.util.BitSet.get(BitSet.java:627) [bci: 36]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:112) [bci: 3]
at java.util.BitSet.get(BitSet.java:627) [bci: 36]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v13 v95 v50 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i88 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 45]
stamp: void
trueSuccessorProbability: 0.8333406599023692
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i88 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: a89 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 49]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
=== Succesors ===
next: i90 
=== Usages ===
a44 v94 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 #next: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a89 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v94 
=== Succesors ===
next: v76 
=== Usages ===
v50 
=== Predecessor ===
a89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v94 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i90 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i90 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v73 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: j91 
=== Usages ===
j91 
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j91  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 49]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a89  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i11 
=== Succesors ===
=== Usages ===
j91 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j91 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v73 
address: v95 
=== Succesors ===
next: v34 
=== Usages ===
v24 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v73 address: v95 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 54]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 56]
stamp: i64
=== Inputs ===
x: j19 
y: i2 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j19 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 60]
stamp: void
=== Inputs ===
x: j20 
y: j91 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j20 y: j91  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 60]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 60]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v24 
trueValue: i4 
falseValue: i25 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v24 trueValue: i4 falseValue: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 68]
stamp: void
=== Inputs ===
result: i26 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
j91 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i26 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13083
stableDimension: 0
stamp: i32 [-13083] ⇊00000000ffffcce5 ⇈00000000ffffcce5
stampKind: i32
value: int[-13083|0xffffffffffffcce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-13083 - -9491] ⇊00000000ffffc0e5 ⇈00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v77 
values: i79 i87 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v77 values: i79 i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v78 v86 
=== Succesors ===
next: v83 
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v78 v86 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i81 
speculation: a80 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i81 speculation: a80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4595172555826227448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 68]
stamp: void
=== Inputs ===
result: i4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i4 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v92 v93 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 j20 i11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.get(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 622
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - 
=== Succesors ===
=== Usages ===
v83 i90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 i26 v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v67 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@303d5965 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result int[-9491|0xffffffffffffdaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9491
stableDimension: 0
stamp: i32 [-9491] ⇊00000000ffffdaed ⇈00000000ffffdaed
stampKind: i32
value: int[-9491|0xffffffffffffdaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9491|0xffffffffffffdaed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:622) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i88 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v92 
=== Succesors ===
next: v16 
=== Usages ===
v13 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v92 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:112) [bci: 1]
at java.util.BitSet.get(BitSet.java:627) [bci: 36]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:112) [bci: 3]
at java.util.BitSet.get(BitSet.java:627) [bci: 36]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v13 v95 v50 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i88 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 45]
stamp: void
trueSuccessorProbability: 0.8333406599023692
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i88 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SAR v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8333406599023692 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: a89 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 49]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
=== Succesors ===
next: i90 
=== Usages ===
a44 v94 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 #next: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a89 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i90 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v94 
=== Succesors ===
next: v76 
=== Usages ===
v50 
=== Predecessor ===
a89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v94 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i90 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i11 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i90 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v73 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:622) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMP (x: v2|DWORD, y: [v3|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: j91 
=== Usages ===
j91 
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j91  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 49]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a89  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
result [v4|QWORD[.] + v2|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a44 
index: i11 
=== Succesors ===
=== Usages ===
j91 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j91 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v73 
address: v95 
=== Succesors ===
next: v34 
=== Usages ===
v24 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v73 address: v95 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 54]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 56]
stamp: i64
=== Inputs ===
x: j19 
y: i2 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j19 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 60]
stamp: void
=== Inputs ===
x: j20 
y: j91 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j20 y: j91  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 60]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 60]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v24 
trueValue: i4 
falseValue: i25 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v24 trueValue: i4 falseValue: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 68]
stamp: void
=== Inputs ===
result: i26 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
j91 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i26 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68db2a32 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v9|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result int[-13083|0xffffffffffffcce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13083
stableDimension: 0
stamp: i32 [-13083] ⇊00000000ffffcce5 ⇈00000000ffffcce5
stampKind: i32
value: int[-13083|0xffffffffffffcce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13083|0xffffffffffffcce5]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i81 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-13083 - -9491] ⇊00000000ffffc0e5 ⇈00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v77 
values: i79 i87 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v77 values: i79 i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v78 v86 
=== Succesors ===
next: v83 
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v78 v86 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i81 
speculation: a80 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i81 speculation: a80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:622) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4595172555826227448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 68]
stamp: void
=== Inputs ===
result: i4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i4 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@303d5965 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SAR v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8333406599023692 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:622) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMP (x: v2|DWORD, y: [v3|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68db2a32 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v9|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4595172555826227448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9491|0xffffffffffffdaed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:622) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13083|0xffffffffffffcce5]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #42         // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #11         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #48         // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokespecial #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@303d5965 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = SAR rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.8333406599023692 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.BitSet.get(BitSet.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68db2a32 encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4595172555826227448
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-9491|0xffffffffffffdaed] // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.BitSet.get(BitSet.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-13083|0xffffffffffffcce5] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #42         // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #11         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #48         // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokespecial #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@303d5965 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rcx|DWORD = SAR rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.8333406599023692 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.BitSet.get(BitSet.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605681284916094402
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68db2a32 encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4595172555826227448
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-9491|0xffffffffffffdaed] // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.BitSet.get(BitSet.java:622) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-13083|0xffffffffffffcce5] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #42         // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #11         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #48         // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokespecial #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241085d20f8c730000008bcac1f9063b4e0c0f8d4d0000008b46143b0cc50c0000000f836f00000048c1e003488b44c81049c7c2010000008bca49d3e24985c2b80000000041ba01000000440f44d0418bc2488b6c24104883c418850500000000c5f877c3b800000000488b6c24104883c418850500000000c5f877c341baeddaffff4589979c0200004d89a7a8020000e8000000009041bae5ccffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@303d5965 slotKind: QWORD  <||@
  Comment 48 10 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 50 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 56 block B2 null  <||@
  Comment 56 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 56 16 rcx|DWORD = SAR rdx|DWORD y: 6 size: DWORD  <||@
  Comment 61 18 CMP (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 64 20 BRANCH trueDestinationProbability: 0.8333406599023692 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7  <||@
  Comment 70 block B3 null  <||@
  Comment 70 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 24 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 73 26 CMP (x: rcx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rsi:0]at java.util.BitSet.get(BitSet.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 28 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 86 block B4 null  <||@
  Comment 86 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 32 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68db2a32 encoding: base: 0 shift: 3  <||@
  Comment 90 34 rax|QWORD = MOV [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD  <||@
  Comment 95 36 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 102 38 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 104 40 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 107 42 TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 110 44 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 115 46 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 125 48 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 128 50 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 137 12  <||@
  Comment 147 block B7 null  <||@
  Comment 147 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 54 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 152 56 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 161 12  <||@
  Comment 171 block B1 null  <||@
  Comment 171 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 171 -1 r10|DWORD = MOVE input: int[-9491|0xffffffffffffdaed]  <||@
  Comment 177 60 JUMP ~[] destination: B1 -> B6  <||@
  Comment 177 block B6 null  <||@
  Comment 177 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 177 68 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 184 70 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 191 72 DEOPT info [bci:0]  <||@
  Comment 191 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 196 [rsi:0]at java.util.BitSet.get(BitSet.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 197 block B5 null  <||@
  Comment 197 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 197 -1 r10|DWORD = MOVE input: int[-13083|0xffffffffffffcce5]  <||@
  Comment 203 64 JUMP ~[] destination: B5 -> B6  <||@
  Comment 205 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 205 4  <||@
  Comment 211 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 211 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6358[java.util.BitSet.get(int)]"
  method "HotSpotCompilation-6358[java.util.BitSet.get(int)]"
  date 1527005171210
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1079e15e0 448b560849c1e203493bc20f856f48e2fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241085d20f8c730000008bcac1f9063b4e0c0f8d4d0000008b46143b0cc50c0000000f836f00000048c1e003488b44c81049c7c2010000008bca49d3e24985c2b80000000041ba01000000440f44d0418bc2488b6c24104883c418850597d9eafcc5f877c3b800000000488b6c24104883c41885057fd9eafcc5f877c341baeddaffff4589979c0200004d89a7a8020000e85a5fe2fe9041bae5ccffffebe4e86e8f26ff90e8485ee2fe90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@303d5965 slotKind: QWORD  <||@
  Comment 48 10 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 50 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 56 block B2 null  <||@
  Comment 56 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 56 16 rcx|DWORD = SAR rdx|DWORD y: 6 size: DWORD  <||@
  Comment 61 18 CMP (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 64 20 BRANCH trueDestinationProbability: 0.8333406599023692 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7  <||@
  Comment 70 block B3 null  <||@
  Comment 70 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 24 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 73 26 CMP (x: rcx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rsi:0]at java.util.BitSet.get(BitSet.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 28 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 86 block B4 null  <||@
  Comment 86 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 32 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68db2a32 encoding: base: 0 shift: 3  <||@
  Comment 90 34 rax|QWORD = MOV [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD  <||@
  Comment 95 36 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 102 38 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 104 40 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 107 42 TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 110 44 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 115 46 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 125 48 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 128 50 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 137 12  <||@
  Comment 147 block B7 null  <||@
  Comment 147 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 54 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 152 56 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 161 12  <||@
  Comment 171 block B1 null  <||@
  Comment 171 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 171 -1 r10|DWORD = MOVE input: int[-9491|0xffffffffffffdaed]  <||@
  Comment 177 60 JUMP ~[] destination: B1 -> B6  <||@
  Comment 177 block B6 null  <||@
  Comment 177 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 177 68 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 184 70 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 191 72 DEOPT info [bci:0]  <||@
  Comment 191 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 196 [rsi:0]at java.util.BitSet.get(BitSet.java:622) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 197 block B5 null  <||@
  Comment 197 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 197 -1 r10|DWORD = MOVE input: int[-13083|0xffffffffffffcce5]  <||@
  Comment 203 64 JUMP ~[] destination: B5 -> B6  <||@
  Comment 205 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 205 4  <||@
  Comment 211 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 211 5  <||@
  HexCodeFile>>> <|@
end_nmethod
